FACT TUPLE :
Coverage "test" "org.apache.commons.io.filefilter.AbstractFileFilter"
Coverage "test" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
Coverage "test" "org.apache.commons.io.FilenameUtils"
Coverage "test" "org.apache.commons.io.filefilter.AndFileFilter"
Coverage "test" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter"
Coverage "test" "org.apache.commons.io.FileUtils.listFilesAndDirs(3)"
Coverage "test" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
Coverage "test" "org.apache.commons.io.filefilter.NotFileFilter.accept(1)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
Coverage "test" "org.apache.commons.io.IOCase.INSENSITIVE"
Coverage "test" "org.apache.commons.io.IOCase"
Coverage "test" "org.apache.commons.io.output.StringBuilderWriter.close(0)"
Coverage "test" "org.apache.commons.io.IOUtils.DIR_SEPARATOR"
Coverage "test" "org.apache.commons.io.IOUtils.closeQuietly(1)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
Coverage "test" "org.apache.commons.io.filefilter.NotFileFilter"
Coverage "test" "org.apache.commons.io.IOCase.IOCase(2)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
Coverage "test" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
Coverage "test" "org.apache.commons.io.IOCase.checkIndexOf(3)"
Coverage "test" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)"
Coverage "test" "org.apache.commons.io.FileUtils"
Coverage "test" "org.apache.commons.io.filefilter.DirectoryFileFilter"
Coverage "test" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
Coverage "test" "org.apache.commons.io.filefilter.DirectoryFileFilter.accept(1)"
Coverage "test" "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
Coverage "test" "org.apache.commons.io.IOUtils"
Coverage "test" "org.apache.commons.io.FilenameUtils.splitOnTokens(1)"
Coverage "test" "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)"
Coverage "test" "org.apache.commons.io.FileUtils.ONE_YB"
Coverage "test" "org.apache.commons.io.FileUtils.isSymlink(1)"
Coverage "test" "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR"
Coverage "test" "org.apache.commons.io.FileUtils.UTF8"
Coverage "test" "org.apache.commons.io.output.StringBuilderWriter"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
Coverage "test" "org.apache.commons.io.filefilter.OrFileFilter"
Coverage "test" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
Coverage "test" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
Coverage "test" "org.apache.commons.io.filefilter.OrFileFilter.accept(1)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter"
Coverage "test" "org.apache.commons.io.DirectoryWalker"
Coverage "test" "org.apache.commons.io.IOUtils.closeQuietly(1)"
Coverage "test" "org.apache.commons.io.FileUtils.ONE_ZB"
Coverage "test" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
Coverage "test" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
Coverage "test" "org.apache.commons.io.IOCase.SENSITIVE"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils"
Coverage "test" "org.apache.commons.io.filefilter.AndFileFilter.accept(1)"
Coverage "test" "org.apache.commons.io.filefilter.NameFileFilter"
Coverage "test" "org.apache.commons.io.IOCase.SYSTEM"
Coverage "test" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
Coverage "test" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
Coverage "test" "org.apache.commons.io.output.StringBuilderWriter.write(1)"
Coverage "test" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
Coverage "test" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
Coverage "test" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
Coverage "test" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
Coverage "test" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
Coverage "test" "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)"
Coverage "test" "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)"
Coverage "test" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
Coverage "test" "org.apache.commons.io.FileUtils.innerListFiles(4)"
Coverage "test" "org.apache.commons.io.FileUtils.validateListFilesParameters(2)"
Coverage "test" "org.apache.commons.io.FileUtils.iterateFilesAndDirs(3)"
Coverage "test" "org.apache.commons.io.filefilter.WildcardFileFilter"
Coverage "test" "org.apache.commons.io.FileUtils.forceDelete(1)"
