FACT TUPLE :
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.Token"
call "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.values(0)"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.ordinal(0)"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.CSVParser.2.static {...}" "org.apache.commons.csv.Token.Type.COMMENT"
contain "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser.2.static {...}"
reference "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type" "int[]"
contain "org.apache.commons.csv.CSVParser.2" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVParser.1.{...}" "org.apache.commons.csv.CSVParser.1.this$0"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.{...}"
reference "org.apache.commons.csv.CSVParser.1.getNextRecord(0)" "org.apache.commons.csv.CSVParser.1.this$0"
call "org.apache.commons.csv.CSVParser.1.getNextRecord(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.getNextRecord(0)"
reference "org.apache.commons.csv.CSVParser.1.hasNext(0)" "org.apache.commons.csv.CSVParser.1.this$0"
call "org.apache.commons.csv.CSVParser.1.hasNext(0)" "org.apache.commons.csv.CSVParser.isClosed(0)"
reference "org.apache.commons.csv.CSVParser.1.hasNext(0)" "org.apache.commons.csv.CSVParser.1.current"
call "org.apache.commons.csv.CSVParser.1.hasNext(0)" "org.apache.commons.csv.CSVParser.1.getNextRecord(0)"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.hasNext(0)"
reference "org.apache.commons.csv.CSVParser.1.next(0)" "org.apache.commons.csv.CSVParser.1.this$0"
call "org.apache.commons.csv.CSVParser.1.next(0)" "org.apache.commons.csv.CSVParser.isClosed(0)"
reference "org.apache.commons.csv.CSVParser.1.next(0)" "org.apache.commons.csv.CSVParser.1.current"
call "org.apache.commons.csv.CSVParser.1.next(0)" "org.apache.commons.csv.CSVParser.1.getNextRecord(0)"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.next(0)"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.remove(0)"
reference "org.apache.commons.csv.CSVParser.1.current" "org.apache.commons.csv.CSVRecord"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.current"
reference "org.apache.commons.csv.CSVParser.1.this$0" "org.apache.commons.csv.CSVParser"
contain "org.apache.commons.csv.CSVParser.1" "org.apache.commons.csv.CSVParser.1.this$0"
reference "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined[]"
reference "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVFormat.Predefined.values(0)" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES"
call "org.apache.commons.csv.CSVFormat.Predefined.values(0)" "org.apache.commons.csv.CSVFormat.Predefined[].clone(0)"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.values(0)"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.valueOf(1)"
reference "org.apache.commons.csv.CSVFormat.Predefined.Predefined(2)" "org.apache.commons.csv.CSVFormat.Predefined.format"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Predefined(2)"
reference "org.apache.commons.csv.CSVFormat.Predefined.getFormat(0)" "org.apache.commons.csv.CSVFormat.Predefined.format"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.getFormat(0)"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Predefined(2)"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Default"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.EXCEL"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.Excel"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.MYSQL"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.MySQL"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.RFC4180"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.RFC4180"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.TDF"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.TDF"
reference "org.apache.commons.csv.CSVFormat.Predefined.static {...}" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.static {...}"
reference "org.apache.commons.csv.CSVFormat.Predefined.Default" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Default"
reference "org.apache.commons.csv.CSVFormat.Predefined.Excel" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.Excel"
reference "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload"
reference "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv"
reference "org.apache.commons.csv.CSVFormat.Predefined.MySQL" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.MySQL"
reference "org.apache.commons.csv.CSVFormat.Predefined.RFC4180" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.RFC4180"
reference "org.apache.commons.csv.CSVFormat.Predefined.TDF" "org.apache.commons.csv.CSVFormat.Predefined"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.TDF"
reference "org.apache.commons.csv.CSVFormat.Predefined.format" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.format"
reference "org.apache.commons.csv.CSVFormat.Predefined.$VALUES" "org.apache.commons.csv.CSVFormat.Predefined[]"
contain "org.apache.commons.csv.CSVFormat.Predefined" "org.apache.commons.csv.CSVFormat.Predefined.$VALUES"
reference "org.apache.commons.csv.CSVPrinter.1" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVPrinter.1" "org.apache.commons.csv.QuoteMode"
call "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.values(0)"
reference "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.CSVPrinter.1.$SwitchMap$org$apache$commons$csv$QuoteMode"
reference "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.ordinal(0)"
reference "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
reference "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.NONE"
reference "org.apache.commons.csv.CSVPrinter.1.static {...}" "org.apache.commons.csv.QuoteMode.MINIMAL"
contain "org.apache.commons.csv.CSVPrinter.1" "org.apache.commons.csv.CSVPrinter.1.static {...}"
reference "org.apache.commons.csv.CSVPrinter.1.$SwitchMap$org$apache$commons$csv$QuoteMode" "int[]"
contain "org.apache.commons.csv.CSVPrinter.1" "org.apache.commons.csv.CSVPrinter.1.$SwitchMap$org$apache$commons$csv$QuoteMode"
reference "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.Token.Token(0)" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.Token.Token(0)" "org.apache.commons.csv.Token.type"
reference "org.apache.commons.csv.Token.Token(0)" "org.apache.commons.csv.Token.content"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.Token(0)"
reference "org.apache.commons.csv.Token.reset(0)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.Token.reset(0)" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.Token.reset(0)" "org.apache.commons.csv.Token.type"
reference "org.apache.commons.csv.Token.reset(0)" "org.apache.commons.csv.Token.isReady"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.reset(0)"
reference "org.apache.commons.csv.Token.toString(0)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.Token.toString(0)" "org.apache.commons.csv.Token.Type.name(0)"
reference "org.apache.commons.csv.Token.toString(0)" "org.apache.commons.csv.Token.content"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.toString(0)"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.INITIAL_TOKEN_LENGTH"
reference "org.apache.commons.csv.Token.type" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.type"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.content"
contain "org.apache.commons.csv.Token" "org.apache.commons.csv.Token.isReady"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.Constants(0)"
reference "org.apache.commons.csv.Constants.static {...}" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.static {...}"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.BACKSLASH"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.BACKSPACE"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.COMMA"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.COMMENT"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.CR"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.CRLF"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.EMPTY"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.END_OF_STREAM"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.FF"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.LF"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.LINE_SEPARATOR"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.NEXT_LINE"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.PARAGRAPH_SEPARATOR"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.PIPE"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.RS"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.SP"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.TAB"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.UNDEFINED"
contain "org.apache.commons.csv.Constants" "org.apache.commons.csv.Constants.US"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.recordNumber"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.values"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.comment"
reference "org.apache.commons.csv.CSVRecord.CSVRecord(5)" "org.apache.commons.csv.CSVRecord.characterPosition"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.CSVRecord(5)"
call "org.apache.commons.csv.CSVRecord.get(1)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(1)"
reference "org.apache.commons.csv.CSVRecord.get(1)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(1)"
reference "org.apache.commons.csv.CSVRecord.get(1)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.get(1)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.get(1)"
reference "org.apache.commons.csv.CSVRecord.getCharacterPosition(0)" "org.apache.commons.csv.CSVRecord.characterPosition"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getCharacterPosition(0)"
reference "org.apache.commons.csv.CSVRecord.getComment(0)" "org.apache.commons.csv.CSVRecord.comment"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getComment(0)"
reference "org.apache.commons.csv.CSVRecord.getRecordNumber(0)" "org.apache.commons.csv.CSVRecord.recordNumber"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.getRecordNumber(0)"
reference "org.apache.commons.csv.CSVRecord.isConsistent(0)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.isConsistent(0)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isConsistent(0)"
reference "org.apache.commons.csv.CSVRecord.hasComment(0)" "org.apache.commons.csv.CSVRecord.comment"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.hasComment(0)"
reference "org.apache.commons.csv.CSVRecord.isMapped(1)" "org.apache.commons.csv.CSVRecord.mapping"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isMapped(1)"
call "org.apache.commons.csv.CSVRecord.isSet(1)" "org.apache.commons.csv.CSVRecord.isMapped(1)"
reference "org.apache.commons.csv.CSVRecord.isSet(1)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.isSet(1)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.isSet(1)"
call "org.apache.commons.csv.CSVRecord.iterator(0)" "org.apache.commons.csv.CSVRecord.toList(0)"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.iterator(0)"
reference "org.apache.commons.csv.CSVRecord.putIn(1)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.putIn(1)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.putIn(1)"
reference "org.apache.commons.csv.CSVRecord.size(0)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.size(0)"
reference "org.apache.commons.csv.CSVRecord.toList(0)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toList(0)"
reference "org.apache.commons.csv.CSVRecord.toMap(0)" "org.apache.commons.csv.CSVRecord.values"
call "org.apache.commons.csv.CSVRecord.toMap(0)" "org.apache.commons.csv.CSVRecord.putIn(1)"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toMap(0)"
reference "org.apache.commons.csv.CSVRecord.toString(0)" "org.apache.commons.csv.CSVRecord.comment"
reference "org.apache.commons.csv.CSVRecord.toString(0)" "org.apache.commons.csv.CSVRecord.mapping"
reference "org.apache.commons.csv.CSVRecord.toString(0)" "org.apache.commons.csv.CSVRecord.recordNumber"
reference "org.apache.commons.csv.CSVRecord.toString(0)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.toString(0)"
reference "org.apache.commons.csv.CSVRecord.values(0)" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.values(0)"
reference "org.apache.commons.csv.CSVRecord.static {...}" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.static {...}"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.serialVersionUID"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.characterPosition"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.comment"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.mapping"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.recordNumber"
contain "org.apache.commons.csv.CSVRecord" "org.apache.commons.csv.CSVRecord.values"
contain "org.apache.commons.csv.Assertions" "org.apache.commons.csv.Assertions.Assertions(0)"
contain "org.apache.commons.csv.Assertions" "org.apache.commons.csv.Assertions.notNull(2)"
reference "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode[]"
reference "org.apache.commons.csv.QuoteMode.values(0)" "org.apache.commons.csv.QuoteMode.$VALUES"
call "org.apache.commons.csv.QuoteMode.values(0)" "org.apache.commons.csv.QuoteMode[].clone(0)"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.values(0)"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.valueOf(1)"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.QuoteMode(2)"
call "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.QuoteMode(2)"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.ALL"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.MINIMAL"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.NONE"
reference "org.apache.commons.csv.QuoteMode.static {...}" "org.apache.commons.csv.QuoteMode.$VALUES"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.static {...}"
reference "org.apache.commons.csv.QuoteMode.ALL" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.ALL"
reference "org.apache.commons.csv.QuoteMode.MINIMAL" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.MINIMAL"
reference "org.apache.commons.csv.QuoteMode.NON_NUMERIC" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
reference "org.apache.commons.csv.QuoteMode.NONE" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.NONE"
reference "org.apache.commons.csv.QuoteMode.$VALUES" "org.apache.commons.csv.QuoteMode[]"
contain "org.apache.commons.csv.QuoteMode" "org.apache.commons.csv.QuoteMode.$VALUES"
reference "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type[]"
reference "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.Token.Type.values(0)" "org.apache.commons.csv.Token.Type.$VALUES"
call "org.apache.commons.csv.Token.Type.values(0)" "org.apache.commons.csv.Token.Type[].clone(0)"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.values(0)"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.valueOf(1)"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.Type(2)"
call "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.Type(2)"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.COMMENT"
reference "org.apache.commons.csv.Token.Type.static {...}" "org.apache.commons.csv.Token.Type.$VALUES"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.static {...}"
reference "org.apache.commons.csv.Token.Type.INVALID" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.Token.Type.TOKEN" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.Token.Type.EOF" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.Token.Type.EORECORD" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.Token.Type.COMMENT" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.COMMENT"
reference "org.apache.commons.csv.Token.Type.$VALUES" "org.apache.commons.csv.Token.Type[]"
contain "org.apache.commons.csv.Token.Type" "org.apache.commons.csv.Token.Type.$VALUES"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.Predefined"
reference "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
call "org.apache.commons.csv.CSVFormat.isLineBreak(1)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
call "org.apache.commons.csv.CSVFormat.newFormat(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormat.valueOf(1)" "org.apache.commons.csv.CSVFormat.Predefined.valueOf(1)"
call "org.apache.commons.csv.CSVFormat.valueOf(1)" "org.apache.commons.csv.CSVFormat.Predefined.getFormat(0)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.valueOf(1)"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.nullString"
call "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.toStringArray(1)"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
reference "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.trim"
call "org.apache.commons.csv.CSVFormat.CSVFormat(16)" "org.apache.commons.csv.CSVFormat.validate(0)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.equals(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.equals(1)"
call "org.apache.commons.csv.CSVFormat.format(1)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVFormat.format(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.format(1)"
reference "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames(0)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames(0)"
reference "org.apache.commons.csv.CSVFormat.getCommentMarker(0)" "org.apache.commons.csv.CSVFormat.commentMarker"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
reference "org.apache.commons.csv.CSVFormat.getDelimiter(0)" "org.apache.commons.csv.CSVFormat.delimiter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
reference "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
reference "org.apache.commons.csv.CSVFormat.getHeader(0)" "org.apache.commons.csv.CSVFormat.header"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getHeader(0)"
reference "org.apache.commons.csv.CSVFormat.getHeaderComments(0)" "org.apache.commons.csv.CSVFormat.headerComments"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getHeaderComments(0)"
reference "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(0)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(0)"
reference "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
reference "org.apache.commons.csv.CSVFormat.getNullString(0)" "org.apache.commons.csv.CSVFormat.nullString"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getNullString(0)"
reference "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
reference "org.apache.commons.csv.CSVFormat.getQuoteMode(0)" "org.apache.commons.csv.CSVFormat.quoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getQuoteMode(0)"
reference "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.recordSeparator"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
reference "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)"
reference "org.apache.commons.csv.CSVFormat.getTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter(0)"
reference "org.apache.commons.csv.CSVFormat.getTrim(0)" "org.apache.commons.csv.CSVFormat.trim"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.getTrim(0)"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.quoteMode"
call "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.QuoteMode.hashCode(0)"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.hashCode(0)" "org.apache.commons.csv.CSVFormat.header"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.hashCode(0)"
reference "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)" "org.apache.commons.csv.CSVFormat.commentMarker"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)"
reference "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
reference "org.apache.commons.csv.CSVFormat.isNullStringSet(0)" "org.apache.commons.csv.CSVFormat.nullString"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isNullStringSet(0)"
reference "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(0)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(0)"
call "org.apache.commons.csv.CSVFormat.parse(1)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVFormat.print(1)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.print(1)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.delimiter"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(0)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.commentMarker"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.isNullStringSet(0)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.recordSeparator"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(0)"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.toString(0)" "org.apache.commons.csv.CSVFormat.header"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.toString(0)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.toStringArray(1)"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.delimiter"
call "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.QuoteMode.NONE"
reference "org.apache.commons.csv.CSVFormat.validate(0)" "org.apache.commons.csv.CSVFormat.header"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.validate(0)"
call "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withCommentMarker(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withDelimiter(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withEscape(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(0)"
call "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(1)"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withHeader(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeader(1)"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withHeaderComments(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
call "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(0)" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(0)"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)"
call "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withNullString(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withQuote(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withQuoteMode(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
call "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(0)"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.trim"
call "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)"
call "org.apache.commons.csv.CSVFormat.withTrim(0)" "org.apache.commons.csv.CSVFormat.withTrim(1)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrim(0)"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.delimiter"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.quoteMode"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.commentMarker"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.escapeCharacter"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.recordSeparator"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.nullString"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.headerComments"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.header"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
reference "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
call "org.apache.commons.csv.CSVFormat.withTrim(1)" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.withTrim(1)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withNullString(1)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.MYSQL"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.RFC4180"
call "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
reference "org.apache.commons.csv.CSVFormat.static {...}" "org.apache.commons.csv.CSVFormat.TDF"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.static {...}"
reference "org.apache.commons.csv.CSVFormat.DEFAULT" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.DEFAULT"
reference "org.apache.commons.csv.CSVFormat.EXCEL" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.EXCEL"
reference "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD"
reference "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV"
reference "org.apache.commons.csv.CSVFormat.MYSQL" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.MYSQL"
reference "org.apache.commons.csv.CSVFormat.RFC4180" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.RFC4180"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.serialVersionUID"
reference "org.apache.commons.csv.CSVFormat.TDF" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.TDF"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.commentMarker"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.delimiter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.escapeCharacter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.header"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.headerComments"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.nullString"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.quoteCharacter"
reference "org.apache.commons.csv.CSVFormat.quoteMode" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.quoteMode"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.recordSeparator"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.trailingDelimiter"
contain "org.apache.commons.csv.CSVFormat" "org.apache.commons.csv.CSVFormat.trim"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.delimiter"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.mapNullToDisabled(1)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.escape"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.quoteChar"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.commentStart"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces"
call "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.Lexer.Lexer(2)" "org.apache.commons.csv.Lexer.ignoreEmptyLines"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.Lexer(2)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.readEndOfLine(1)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.ignoreEmptyLines"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isStartOfLine(1)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isEndOfFile(1)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isDelimiter(1)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isCommentStart(1)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.Type.COMMENT"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isWhitespace(1)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.Type.EORECORD"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.isQuoteChar(1)"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)"
reference "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Token.isReady"
call "org.apache.commons.csv.Lexer.nextToken(1)" "org.apache.commons.csv.Lexer.parseSimpleToken(2)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.readEndOfLine(1)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.isEndOfFile(1)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.isReady"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.isDelimiter(1)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.isEscape(1)"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.readEscape(0)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
reference "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces"
call "org.apache.commons.csv.Lexer.parseSimpleToken(2)" "org.apache.commons.csv.Lexer.trimTrailingSpaces(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.parseSimpleToken(2)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.isEscape(1)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.readEscape(0)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.content"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.isQuoteChar(1)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.isDelimiter(1)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.isEndOfFile(1)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.isReady"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.readEndOfLine(1)"
reference "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Token.Type.EORECORD"
call "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)" "org.apache.commons.csv.Lexer.isWhitespace(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.mapNullToDisabled(1)"
reference "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)"
reference "org.apache.commons.csv.Lexer.getCharacterPosition(0)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.getCharacterPosition(0)" "org.apache.commons.csv.ExtendedBufferedReader.getPosition(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.getCharacterPosition(0)"
reference "org.apache.commons.csv.Lexer.readEscape(0)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.readEscape(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.Lexer.readEscape(0)" "org.apache.commons.csv.Lexer.isMetaChar(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.readEscape(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.trimTrailingSpaces(1)"
reference "org.apache.commons.csv.Lexer.readEndOfLine(1)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.readEndOfLine(1)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
call "org.apache.commons.csv.Lexer.readEndOfLine(1)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.readEndOfLine(1)"
reference "org.apache.commons.csv.Lexer.isClosed(0)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.isClosed(0)" "org.apache.commons.csv.ExtendedBufferedReader.isClosed(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isClosed(0)"
call "org.apache.commons.csv.Lexer.isWhitespace(1)" "org.apache.commons.csv.Lexer.isDelimiter(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isWhitespace(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isStartOfLine(1)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isEndOfFile(1)"
reference "org.apache.commons.csv.Lexer.isDelimiter(1)" "org.apache.commons.csv.Lexer.delimiter"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isDelimiter(1)"
reference "org.apache.commons.csv.Lexer.isEscape(1)" "org.apache.commons.csv.Lexer.escape"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isEscape(1)"
reference "org.apache.commons.csv.Lexer.isQuoteChar(1)" "org.apache.commons.csv.Lexer.quoteChar"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isQuoteChar(1)"
reference "org.apache.commons.csv.Lexer.isCommentStart(1)" "org.apache.commons.csv.Lexer.commentStart"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isCommentStart(1)"
reference "org.apache.commons.csv.Lexer.isMetaChar(1)" "org.apache.commons.csv.Lexer.delimiter"
reference "org.apache.commons.csv.Lexer.isMetaChar(1)" "org.apache.commons.csv.Lexer.escape"
reference "org.apache.commons.csv.Lexer.isMetaChar(1)" "org.apache.commons.csv.Lexer.quoteChar"
reference "org.apache.commons.csv.Lexer.isMetaChar(1)" "org.apache.commons.csv.Lexer.commentStart"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.isMetaChar(1)"
reference "org.apache.commons.csv.Lexer.close(0)" "org.apache.commons.csv.Lexer.reader"
call "org.apache.commons.csv.Lexer.close(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.close(0)"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.DISABLED"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.delimiter"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.escape"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.quoteChar"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.commentStart"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.ignoreEmptyLines"
reference "org.apache.commons.csv.Lexer.reader" "org.apache.commons.csv.ExtendedBufferedReader"
contain "org.apache.commons.csv.Lexer" "org.apache.commons.csv.Lexer.reader"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Lexer"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Assertions"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.Token.Type"
call "org.apache.commons.csv.CSVParser.parse(3)" "org.apache.commons.csv.Assertions.notNull(2)"
call "org.apache.commons.csv.CSVParser.parse(3)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVParser.parse(2)" "org.apache.commons.csv.Assertions.notNull(2)"
call "org.apache.commons.csv.CSVParser.parse(2)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParser.parse(3)" "org.apache.commons.csv.Assertions.notNull(2)"
call "org.apache.commons.csv.CSVParser.parse(3)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVParser.CSVParser(2)" "org.apache.commons.csv.CSVParser.CSVParser(4)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.CSVParser(2)"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.record"
call "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.Token.Token(0)"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.reusableToken"
call "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.Assertions.notNull(2)"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.format"
call "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
call "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.Lexer.Lexer(2)"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.lexer"
call "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.initializeHeader(0)"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.headerMap"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.characterOffset"
reference "org.apache.commons.csv.CSVParser.CSVParser(4)" "org.apache.commons.csv.CSVParser.recordNumber"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.CSVParser(4)"
reference "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVParser.reusableToken"
reference "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVParser.format"
call "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVFormat.getTrim(0)"
call "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter(0)"
call "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVFormat.getNullString(0)"
reference "org.apache.commons.csv.CSVParser.addRecordValue(1)" "org.apache.commons.csv.CSVParser.record"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.addRecordValue(1)"
reference "org.apache.commons.csv.CSVParser.close(0)" "org.apache.commons.csv.CSVParser.lexer"
call "org.apache.commons.csv.CSVParser.close(0)" "org.apache.commons.csv.Lexer.close(0)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.close(0)"
reference "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)" "org.apache.commons.csv.CSVParser.lexer"
call "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)" "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)"
reference "org.apache.commons.csv.CSVParser.getHeaderMap(0)" "org.apache.commons.csv.CSVParser.headerMap"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getHeaderMap(0)"
reference "org.apache.commons.csv.CSVParser.getRecordNumber(0)" "org.apache.commons.csv.CSVParser.recordNumber"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParser.getRecords(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.getRecords(0)"
reference "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVParser.format"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(0)"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParser.initializeHeader(0)" "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames(0)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.initializeHeader(0)"
reference "org.apache.commons.csv.CSVParser.isClosed(0)" "org.apache.commons.csv.CSVParser.lexer"
call "org.apache.commons.csv.CSVParser.isClosed(0)" "org.apache.commons.csv.Lexer.isClosed(0)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.isClosed(0)"
call "org.apache.commons.csv.CSVParser.iterator(0)" "org.apache.commons.csv.CSVParser.1.{...}"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.iterator(0)"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.record"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.lexer"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Lexer.getCharacterPosition(0)"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.characterOffset"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.reusableToken"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.reset(0)"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.Type.ordinal(0)"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.addRecordValue(1)"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.isReady"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.recordNumber"
reference "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVParser.headerMap"
call "org.apache.commons.csv.CSVParser.nextRecord(0)" "org.apache.commons.csv.CSVRecord.CSVRecord(5)"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.nextRecord(0)"
reference "org.apache.commons.csv.CSVParser.format" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.format"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.headerMap"
reference "org.apache.commons.csv.CSVParser.lexer" "org.apache.commons.csv.Lexer"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.lexer"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.record"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.recordNumber"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.characterOffset"
reference "org.apache.commons.csv.CSVParser.reusableToken" "org.apache.commons.csv.Token"
contain "org.apache.commons.csv.CSVParser" "org.apache.commons.csv.CSVParser.reusableToken"
reference "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.ExtendedBufferedReader" "char[]"
reference "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(0)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(0)" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(0)" "org.apache.commons.csv.ExtendedBufferedReader.position"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(3)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(3)" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
reference "org.apache.commons.csv.ExtendedBufferedReader.read(3)" "org.apache.commons.csv.ExtendedBufferedReader.position"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.read(3)"
reference "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
reference "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
reference "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.getPosition(0)" "org.apache.commons.csv.ExtendedBufferedReader.position"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.getPosition(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.isClosed(0)" "org.apache.commons.csv.ExtendedBufferedReader.closed"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.isClosed(0)"
reference "org.apache.commons.csv.ExtendedBufferedReader.close(0)" "org.apache.commons.csv.ExtendedBufferedReader.closed"
reference "org.apache.commons.csv.ExtendedBufferedReader.close(0)" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.position"
contain "org.apache.commons.csv.ExtendedBufferedReader" "org.apache.commons.csv.ExtendedBufferedReader.closed"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.QuoteMode"
reference "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.Assertions"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVPrinter.newRecord"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.Assertions.notNull(2)"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVPrinter.out"
reference "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVFormat.getHeaderComments(0)"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVPrinter.printComment(1)"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
reference "org.apache.commons.csv.CSVPrinter.close(0)" "org.apache.commons.csv.CSVPrinter.out"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.close(0)"
reference "org.apache.commons.csv.CSVPrinter.flush(0)" "org.apache.commons.csv.CSVPrinter.out"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.flush(0)"
reference "org.apache.commons.csv.CSVPrinter.getOut(0)" "org.apache.commons.csv.CSVPrinter.out"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.getOut(0)"
reference "org.apache.commons.csv.CSVPrinter.print(1)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.print(1)" "org.apache.commons.csv.CSVFormat.getNullString(0)"
call "org.apache.commons.csv.CSVPrinter.print(1)" "org.apache.commons.csv.CSVFormat.getTrim(0)"
call "org.apache.commons.csv.CSVPrinter.print(1)" "org.apache.commons.csv.CSVPrinter.trim(1)"
call "org.apache.commons.csv.CSVPrinter.print(1)" "org.apache.commons.csv.CSVPrinter.print(4)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.print(1)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.trim(1)"
reference "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVPrinter.newRecord"
reference "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVPrinter.out"
reference "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(0)"
call "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVPrinter.printAndQuote(4)"
call "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
call "org.apache.commons.csv.CSVPrinter.print(4)" "org.apache.commons.csv.CSVPrinter.printAndEscape(3)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.print(4)"
reference "org.apache.commons.csv.CSVPrinter.printAndEscape(3)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.printAndEscape(3)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVPrinter.printAndEscape(3)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
reference "org.apache.commons.csv.CSVPrinter.printAndEscape(3)" "org.apache.commons.csv.CSVPrinter.out"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printAndEscape(3)"
reference "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
call "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVFormat.getQuoteMode(0)"
reference "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.QuoteMode.MINIMAL"
reference "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVPrinter.1.$SwitchMap$org$apache$commons$csv$QuoteMode"
call "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.QuoteMode.ordinal(0)"
call "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVPrinter.printAndEscape(3)"
reference "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVPrinter.newRecord"
reference "org.apache.commons.csv.CSVPrinter.printAndQuote(4)" "org.apache.commons.csv.CSVPrinter.out"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printAndQuote(4)"
reference "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)"
reference "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVPrinter.newRecord"
call "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVPrinter.println(0)"
reference "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVPrinter.out"
call "org.apache.commons.csv.CSVPrinter.printComment(1)" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printComment(1)"
reference "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVPrinter.format"
call "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVFormat.getTrailingDelimiter(0)"
reference "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVPrinter.out"
call "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
reference "org.apache.commons.csv.CSVPrinter.println(0)" "org.apache.commons.csv.CSVPrinter.newRecord"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.println(0)"
call "org.apache.commons.csv.CSVPrinter.printRecord(1)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinter.printRecord(1)" "org.apache.commons.csv.CSVPrinter.println(0)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinter.printRecord(1)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinter.printRecord(1)" "org.apache.commons.csv.CSVPrinter.println(0)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinter.printRecords(1)" "org.apache.commons.csv.CSVPrinter.println(0)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.out"
reference "org.apache.commons.csv.CSVPrinter.format" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.format"
contain "org.apache.commons.csv.CSVPrinter" "org.apache.commons.csv.CSVPrinter.newRecord"
reference "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.bugs.JiraCsv167Test.JiraCsv167Test(0)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput(0)"
reference "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)" "org.apache.commons.csv.CSVRecord.hasComment(0)"
contain "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)"
contain "org.apache.commons.csv.bugs.JiraCsv167Test" "org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput(0)"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.Stats"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.Lexer"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.PerformanceTest(0)"
reference "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.BIG_FILE"
call "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.io.IOUtils.copy(2)"
reference "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.max"
reference "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.PROPS"
call "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)"
call "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)"
call "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)"
call "org.apache.commons.csv.PerformanceTest.main(1)" "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.main(1)"
reference "org.apache.commons.csv.PerformanceTest.getReader(0)" "org.apache.commons.csv.PerformanceTest.BIG_FILE"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.getReader(0)"
reference "org.apache.commons.csv.PerformanceTest.show(3)" "org.apache.commons.csv.PerformanceTest.Stats.count"
reference "org.apache.commons.csv.PerformanceTest.show(3)" "org.apache.commons.csv.PerformanceTest.Stats.fields"
reference "org.apache.commons.csv.PerformanceTest.show(3)" "org.apache.commons.csv.PerformanceTest.elapsedTimes"
reference "org.apache.commons.csv.PerformanceTest.show(3)" "org.apache.commons.csv.PerformanceTest.num"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.show(3)"
reference "org.apache.commons.csv.PerformanceTest.show(0)" "org.apache.commons.csv.PerformanceTest.num"
reference "org.apache.commons.csv.PerformanceTest.show(0)" "org.apache.commons.csv.PerformanceTest.elapsedTimes"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.show(0)"
reference "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)" "org.apache.commons.csv.PerformanceTest.max"
call "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)" "org.apache.commons.csv.PerformanceTest.getReader(0)"
call "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)" "org.apache.commons.csv.PerformanceTest.readAll(2)"
call "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)" "org.apache.commons.csv.PerformanceTest.show(3)"
call "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)" "org.apache.commons.csv.PerformanceTest.show(0)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)"
call "org.apache.commons.csv.PerformanceTest.readAll(2)" "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.readAll(2)"
reference "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.PerformanceTest.max"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.PerformanceTest.getReader(0)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.PerformanceTest.show(3)"
call "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)" "org.apache.commons.csv.PerformanceTest.show(0)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)"
reference "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.max"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.getReader(0)"
reference "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.format"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.iterate(1)"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.show(3)"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.CSVParser.close(0)"
call "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)" "org.apache.commons.csv.PerformanceTest.show(0)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.getLexerCtor(1)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.Token(0)"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.max"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.getReader(0)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.getLexerCtor(1)"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.format"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Lexer.Lexer(2)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.reset(0)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.1.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.Type.ordinal(0)"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.content"
reference "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.Type.EOF"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.Token.Type.equals(1)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.show(3)"
call "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)" "org.apache.commons.csv.PerformanceTest.show(0)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)"
call "org.apache.commons.csv.PerformanceTest.iterate(1)" "org.apache.commons.csv.CSVRecord.size(0)"
call "org.apache.commons.csv.PerformanceTest.iterate(1)" "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.iterate(1)"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.PROPS"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.max"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.num"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.elapsedTimes"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.CSVFormat.EXCEL"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.format"
reference "org.apache.commons.csv.PerformanceTest.static {...}" "org.apache.commons.csv.PerformanceTest.BIG_FILE"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.static {...}"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.PROPS"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.max"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.num"
reference "org.apache.commons.csv.PerformanceTest.elapsedTimes" "long[]"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.elapsedTimes"
reference "org.apache.commons.csv.PerformanceTest.format" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.format"
contain "org.apache.commons.csv.PerformanceTest" "org.apache.commons.csv.PerformanceTest.BIG_FILE"
reference "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.TokenMatchers.2" "org.hamcrest.TypeSafeDiagnosingMatcher"
reference "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers"
reference "org.apache.commons.csv.TokenMatchers.2" "org.hamcrest.Description"
reference "org.apache.commons.csv.TokenMatchers.2.{...}" "org.apache.commons.csv.TokenMatchers.2.val$expectedContent"
call "org.apache.commons.csv.TokenMatchers.2.{...}" "org.hamcrest.TypeSafeDiagnosingMatcher.TypeSafeDiagnosingMatcher(0)"
contain "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers.2.{...}"
call "org.apache.commons.csv.TokenMatchers.2.describeTo(1)" "org.hamcrest.Description.appendText(1)"
reference "org.apache.commons.csv.TokenMatchers.2.describeTo(1)" "org.apache.commons.csv.TokenMatchers.2.val$expectedContent"
call "org.apache.commons.csv.TokenMatchers.2.describeTo(1)" "org.hamcrest.Description.appendValue(1)"
contain "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers.2.describeTo(1)"
call "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)" "org.hamcrest.Description.appendText(1)"
reference "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)" "org.apache.commons.csv.Token.content"
call "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)" "org.hamcrest.Description.appendValue(1)"
reference "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)" "org.apache.commons.csv.TokenMatchers.2.val$expectedContent"
contain "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)"
contain "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)"
contain "org.apache.commons.csv.TokenMatchers.2" "org.apache.commons.csv.TokenMatchers.2.val$expectedContent"
reference "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.TokenMatchers.3" "org.hamcrest.TypeSafeDiagnosingMatcher"
reference "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.TokenMatchers"
reference "org.apache.commons.csv.TokenMatchers.3" "org.hamcrest.Description"
call "org.apache.commons.csv.TokenMatchers.3.{...}" "org.hamcrest.TypeSafeDiagnosingMatcher.TypeSafeDiagnosingMatcher(0)"
contain "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.TokenMatchers.3.{...}"
call "org.apache.commons.csv.TokenMatchers.3.describeTo(1)" "org.hamcrest.Description.appendText(1)"
contain "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.TokenMatchers.3.describeTo(1)"
call "org.apache.commons.csv.TokenMatchers.3.matchesSafely(2)" "org.hamcrest.Description.appendText(1)"
reference "org.apache.commons.csv.TokenMatchers.3.matchesSafely(2)" "org.apache.commons.csv.Token.isReady"
contain "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.TokenMatchers.3.matchesSafely(2)"
contain "org.apache.commons.csv.TokenMatchers.3" "org.apache.commons.csv.TokenMatchers.3.matchesSafely(2)"
reference "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.TokenMatchers.1" "org.hamcrest.TypeSafeDiagnosingMatcher"
reference "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers"
reference "org.apache.commons.csv.TokenMatchers.1" "org.hamcrest.Description"
reference "org.apache.commons.csv.TokenMatchers.1.{...}" "org.apache.commons.csv.TokenMatchers.1.val$expectedType"
call "org.apache.commons.csv.TokenMatchers.1.{...}" "org.hamcrest.TypeSafeDiagnosingMatcher.TypeSafeDiagnosingMatcher(0)"
contain "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers.1.{...}"
call "org.apache.commons.csv.TokenMatchers.1.describeTo(1)" "org.hamcrest.Description.appendText(1)"
reference "org.apache.commons.csv.TokenMatchers.1.describeTo(1)" "org.apache.commons.csv.TokenMatchers.1.val$expectedType"
call "org.apache.commons.csv.TokenMatchers.1.describeTo(1)" "org.hamcrest.Description.appendValue(1)"
contain "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers.1.describeTo(1)"
call "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)" "org.hamcrest.Description.appendText(1)"
reference "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)" "org.apache.commons.csv.Token.type"
call "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)" "org.hamcrest.Description.appendValue(1)"
reference "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)" "org.apache.commons.csv.TokenMatchers.1.val$expectedType"
contain "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)"
contain "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)"
reference "org.apache.commons.csv.TokenMatchers.1.val$expectedType" "org.apache.commons.csv.Token.Type"
contain "org.apache.commons.csv.TokenMatchers.1" "org.apache.commons.csv.TokenMatchers.1.val$expectedType"
reference "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.perf.PerformanceTest.PerformanceTest(0)" "org.apache.commons.csv.perf.PerformanceTest.max"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.PerformanceTest(0)"
reference "org.apache.commons.csv.perf.PerformanceTest.setUpClass(0)" "org.apache.commons.csv.perf.PerformanceTest.BIG_FILE"
call "org.apache.commons.csv.perf.PerformanceTest.setUpClass(0)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.setUpClass(0)"
reference "org.apache.commons.csv.perf.PerformanceTest.getBufferedReader(0)" "org.apache.commons.csv.perf.PerformanceTest.BIG_FILE"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.getBufferedReader(0)"
reference "org.apache.commons.csv.perf.PerformanceTest.parse(2)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.perf.PerformanceTest.parse(2)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.perf.PerformanceTest.parse(2)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.perf.PerformanceTest.parse(2)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.perf.PerformanceTest.parse(2)" "org.apache.commons.csv.CSVRecord.iterator(0)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.parse(2)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.println(1)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.readAll(1)"
call "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)" "org.apache.commons.csv.perf.PerformanceTest.getBufferedReader(0)"
call "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)" "org.apache.commons.csv.perf.PerformanceTest.parse(2)"
call "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)" "org.apache.commons.csv.perf.PerformanceTest.println(1)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)"
call "org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat(0)" "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)"
call "org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat(0)" "org.apache.commons.csv.perf.PerformanceTest.println(1)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat(0)"
call "org.apache.commons.csv.perf.PerformanceTest.testReadBigFile(0)" "org.apache.commons.csv.perf.PerformanceTest.getBufferedReader(0)"
call "org.apache.commons.csv.perf.PerformanceTest.testReadBigFile(0)" "org.apache.commons.csv.perf.PerformanceTest.readAll(1)"
call "org.apache.commons.csv.perf.PerformanceTest.testReadBigFile(0)" "org.apache.commons.csv.perf.PerformanceTest.println(1)"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.testReadBigFile(0)"
reference "org.apache.commons.csv.perf.PerformanceTest.static {...}" "org.apache.commons.csv.perf.PerformanceTest.BIG_FILE"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.static {...}"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.max"
contain "org.apache.commons.csv.perf.PerformanceTest" "org.apache.commons.csv.perf.PerformanceTest.BIG_FILE"
reference "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormat.Predefined"
reference "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.CSVFormatPredefinedTest(0)"
call "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)" "org.apache.commons.csv.CSVFormat.Predefined.valueOf(1)"
call "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)" "org.apache.commons.csv.CSVFormat.Predefined.getFormat(0)"
call "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)" "org.apache.commons.csv.CSVFormat.valueOf(1)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
reference "org.apache.commons.csv.CSVFormatPredefinedTest.testDefault(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatPredefinedTest.testDefault(0)" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.testDefault(0)"
reference "org.apache.commons.csv.CSVFormatPredefinedTest.testExcel(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVFormatPredefinedTest.testExcel(0)" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.testExcel(0)"
reference "org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL(0)" "org.apache.commons.csv.CSVFormat.MYSQL"
call "org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL(0)" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL(0)"
reference "org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.RFC4180"
call "org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180(0)"
reference "org.apache.commons.csv.CSVFormatPredefinedTest.testTDF(0)" "org.apache.commons.csv.CSVFormat.TDF"
call "org.apache.commons.csv.CSVFormatPredefinedTest.testTDF(0)" "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
contain "org.apache.commons.csv.CSVFormatPredefinedTest" "org.apache.commons.csv.CSVFormatPredefinedTest.testTDF(0)"
reference "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.TokenMatchers" "org.hamcrest.core.AllOf"
reference "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.Token"
contain "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.TokenMatchers.TokenMatchers(0)"
call "org.apache.commons.csv.TokenMatchers.hasType(1)" "org.apache.commons.csv.TokenMatchers.1.{...}"
contain "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.TokenMatchers.hasType(1)"
call "org.apache.commons.csv.TokenMatchers.hasContent(1)" "org.apache.commons.csv.TokenMatchers.2.{...}"
contain "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
call "org.apache.commons.csv.TokenMatchers.isReady(0)" "org.apache.commons.csv.TokenMatchers.3.{...}"
contain "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.TokenMatchers.isReady(0)"
call "org.apache.commons.csv.TokenMatchers.matches(2)" "org.apache.commons.csv.TokenMatchers.hasType(1)"
call "org.apache.commons.csv.TokenMatchers.matches(2)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
call "org.apache.commons.csv.TokenMatchers.matches(2)" "org.hamcrest.core.AllOf.allOf(2)"
contain "org.apache.commons.csv.TokenMatchers" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.Header"
reference "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.EmptyEnum"
reference "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.QuoteMode"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.CSVFormatTest(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
call "org.apache.commons.csv.CSVFormatTest.copy(1)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVFormatTest.copy(1)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.copy(1)"
reference "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements(0)"
reference "org.apache.commons.csv.CSVFormatTest.testEquals(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testEquals(0)" "org.apache.commons.csv.CSVFormatTest.copy(1)"
call "org.apache.commons.csv.CSVFormatTest.testEquals(0)" "org.apache.commons.csv.CSVFormat.equals(1)"
call "org.apache.commons.csv.CSVFormatTest.testEquals(0)" "org.apache.commons.csv.CSVFormat.hashCode(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEquals(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.QuoteMode.MINIMAL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
reference "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
call "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)" "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)"
reference "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType(0)"
reference "org.apache.commons.csv.CSVFormatTest.testFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testFormat(0)" "org.apache.commons.csv.CSVFormat.format(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testFormat(0)"
reference "org.apache.commons.csv.CSVFormatTest.testGetHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testGetHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testGetHeader(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testGetHeader(0)"
call "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)" "org.apache.commons.csv.CSVFormat.format(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)"
reference "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType(0)"
reference "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException(0)"
call "org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
reference "org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException(0)" "org.apache.commons.csv.QuoteMode.NONE"
call "org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.RFC4180"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getQuoteMode(0)"
call "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)"
reference "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testSerialization(0)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testSerialization(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithCommentStart(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithCommentStart(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithCommentStart(0)" "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithCommentStart(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithDelimiter(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithDelimiter(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithDelimiter(0)" "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithDelimiter(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithEscape(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithEscape(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithEscape(0)" "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithEscape(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithHeader(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithHeader(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)" "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithNullString(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithNullString(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithNullString(0)" "org.apache.commons.csv.CSVFormat.getNullString(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithNullString(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithQuoteChar(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithQuoteChar(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithQuoteChar(0)" "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithQuoteChar(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
reference "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)" "org.apache.commons.csv.CSVFormat.getQuoteMode(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF(0)"
reference "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(0)"
call "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)" "org.apache.commons.csv.CSVFormat.getHeader(0)"
contain "org.apache.commons.csv.CSVFormatTest" "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.Lexer"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.TokenMatchers"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.LexerTest(0)"
reference "org.apache.commons.csv.LexerTest.setUp(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.setUp(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
reference "org.apache.commons.csv.LexerTest.setUp(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.setUp(0)"
call "org.apache.commons.csv.LexerTest.getLexer(2)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
call "org.apache.commons.csv.LexerTest.getLexer(2)" "org.apache.commons.csv.Lexer.Lexer(2)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.getLexer(2)"
reference "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)"
reference "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)"
reference "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Token.Type.COMMENT"
reference "org.apache.commons.csv.LexerTest.testComments(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testComments(0)"
reference "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Token.Type.COMMENT"
reference "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
call "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)"
reference "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testNextToken4(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testNextToken4(0)"
reference "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.LexerTest.testNextToken5(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testNextToken5(0)"
reference "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testNextToken6(0)" "org.apache.commons.csv.Token.Type.EORECORD"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testNextToken6(0)"
reference "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.CSVFormat.TDF"
call "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
reference "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)" "org.apache.commons.csv.Token.Type.EOF"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedCR(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedCR(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedCR(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedCR(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedCR(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedCR(0)"
reference "org.apache.commons.csv.LexerTest.testCR(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testCR(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testCR(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testCR(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testCR(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testCR(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedLF(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedLF(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedLF(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedLF(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedLF(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedLF(0)"
reference "org.apache.commons.csv.LexerTest.testLF(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testLF(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testLF(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testLF(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testLF(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testLF(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedTab(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedTab(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedTab(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedTab(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedTab(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedTab(0)"
reference "org.apache.commons.csv.LexerTest.testTab(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testTab(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testTab(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testTab(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testTab(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testTab(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)"
reference "org.apache.commons.csv.LexerTest.testBackspace(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testBackspace(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testBackspace(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testBackspace(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testBackspace(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testBackspace(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedFF(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedFF(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedFF(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedFF(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedFF(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedFF(0)"
reference "org.apache.commons.csv.LexerTest.testFF(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testFF(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testFF(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testFF(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testFF(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testFF(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)"
reference "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
call "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)"
reference "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)" "org.apache.commons.csv.LexerTest.formatWithEscaping"
call "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)" "org.apache.commons.csv.LexerTest.getLexer(2)"
call "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)" "org.apache.commons.csv.Token.Token(0)"
call "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)" "org.apache.commons.csv.Lexer.nextToken(1)"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)"
reference "org.apache.commons.csv.LexerTest.formatWithEscaping" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.LexerTest" "org.apache.commons.csv.LexerTest.formatWithEscaping"
reference "org.apache.commons.csv.PerformanceTest.1" "org.apache.commons.csv.PerformanceTest"
reference "org.apache.commons.csv.PerformanceTest.1" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.PerformanceTest.1" "org.apache.commons.csv.Token"
call "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.values(0)"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.PerformanceTest.1.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.EOF"
call "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.ordinal(0)"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.INVALID"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.PerformanceTest.1.static {...}" "org.apache.commons.csv.Token.Type.COMMENT"
contain "org.apache.commons.csv.PerformanceTest.1" "org.apache.commons.csv.PerformanceTest.1.static {...}"
reference "org.apache.commons.csv.PerformanceTest.1.$SwitchMap$org$apache$commons$csv$Token$Type" "int[]"
contain "org.apache.commons.csv.PerformanceTest.1" "org.apache.commons.csv.PerformanceTest.1.$SwitchMap$org$apache$commons$csv$Token$Type"
reference "org.apache.commons.csv.AssertionsTest" "org.apache.commons.csv.Assertions"
contain "org.apache.commons.csv.AssertionsTest" "org.apache.commons.csv.AssertionsTest.AssertionsTest(0)"
call "org.apache.commons.csv.AssertionsTest.testNotNull(0)" "org.apache.commons.csv.Assertions.notNull(2)"
contain "org.apache.commons.csv.AssertionsTest" "org.apache.commons.csv.AssertionsTest.testNotNull(0)"
call "org.apache.commons.csv.AssertionsTest.testNotNullNull(0)" "org.apache.commons.csv.Assertions.notNull(2)"
contain "org.apache.commons.csv.AssertionsTest" "org.apache.commons.csv.AssertionsTest.testNotNullNull(0)"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVPrinterTest" "char[]"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.Utils"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.lang3.ObjectUtils"
reference "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.QuoteMode"
reference "org.apache.commons.csv.CSVPrinterTest.CSVPrinterTest(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.CSVPrinterTest(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
reference "org.apache.commons.csv.CSVPrinterTest.CSVPrinterTest(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.CSVPrinterTest(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.printable(1)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinterTest.generateLines(2)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinter.flush(0)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVPrinterTest.printable(1)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.Utils.compare(3)"
call "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)"
call "org.apache.commons.csv.CSVPrinterTest.doRandom(2)" "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
call "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)" "org.apache.commons.csv.CSVFormat.getNullString(0)"
call "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)" "org.apache.commons.lang3.ObjectUtils.equals(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.geH2Connection(0)"
call "org.apache.commons.csv.CSVPrinterTest.generateLines(2)" "org.apache.commons.csv.CSVPrinterTest.randStr(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.generateLines(2)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.randStr(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.setUpTable(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.QuoteMode.NONE"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)" "org.apache.commons.csv.CSVPrinter.printComment(1)"
call "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testHeader(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testHeader(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel(0)" "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf(0)" "org.apache.commons.csv.CSVFormat.TDF"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf(0)" "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinterTest.geH2Connection(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinterTest.setUpTable(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVPrinterTest.geH2Connection(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVPrinterTest.setUpTable(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVPrinterTest.geH2Connection(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVPrinterTest.setUpTable(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVPrinter.printRecords(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
call "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVPrinter.printComment(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVFormat.MYSQL"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)" "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault(0)" "org.apache.commons.csv.CSVFormat.MYSQL"
call "org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault(0)" "org.apache.commons.csv.CSVFormat.getNullString(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault(0)"
call "org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrint(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrint(0)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPrint(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrint(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrint(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrint(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.QuoteMode.ALL"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testRandomDefault(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testRandomDefault(0)" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testRandomDefault(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testRandomExcel(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVPrinterTest.testRandomExcel(0)" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testRandomExcel(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testRandomMySql(0)" "org.apache.commons.csv.CSVFormat.MYSQL"
call "org.apache.commons.csv.CSVPrinterTest.testRandomMySql(0)" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testRandomMySql(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180(0)" "org.apache.commons.csv.CSVFormat.RFC4180"
call "org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180(0)" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testRandomTdf(0)" "org.apache.commons.csv.CSVFormat.TDF"
call "org.apache.commons.csv.CSVPrinterTest.testRandomTdf(0)" "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testRandomTdf(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVPrinter.printComment(1)"
reference "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
call "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)" "org.apache.commons.csv.CSVFormat.withTrim(0)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)" "org.apache.commons.csv.CSVFormat.withTrim(0)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(0)"
call "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)"
reference "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)" "org.apache.commons.csv.CSVFormat.withTrim(1)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)"
call "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)" "org.apache.commons.csv.CSVRecord.values(0)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.ITERATIONS_FOR_RANDOM_TEST"
contain "org.apache.commons.csv.CSVPrinterTest" "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
reference "org.apache.commons.csv.Utils" "org.apache.commons.csv.CSVRecord"
contain "org.apache.commons.csv.Utils" "org.apache.commons.csv.Utils.Utils(0)"
call "org.apache.commons.csv.Utils.compare(3)" "org.apache.commons.csv.CSVRecord.values(0)"
contain "org.apache.commons.csv.Utils" "org.apache.commons.csv.Utils.compare(3)"
reference "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum[]"
reference "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest"
reference "org.apache.commons.csv.CSVFormatTest.EmptyEnum.values(0)" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.$VALUES"
call "org.apache.commons.csv.CSVFormatTest.EmptyEnum.values(0)" "org.apache.commons.csv.CSVFormatTest.EmptyEnum[].clone(0)"
contain "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.values(0)"
contain "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.valueOf(1)"
contain "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.EmptyEnum(2)"
reference "org.apache.commons.csv.CSVFormatTest.EmptyEnum.static {...}" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.$VALUES"
contain "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.static {...}"
reference "org.apache.commons.csv.CSVFormatTest.EmptyEnum.$VALUES" "org.apache.commons.csv.CSVFormatTest.EmptyEnum[]"
contain "org.apache.commons.csv.CSVFormatTest.EmptyEnum" "org.apache.commons.csv.CSVFormatTest.EmptyEnum.$VALUES"
reference "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(1)" "org.apache.commons.csv.CSVFileParserTest.testName"
reference "org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(1)" "org.apache.commons.csv.CSVFileParserTest.testData"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(1)"
reference "org.apache.commons.csv.CSVFileParserTest.readTestData(0)" "org.apache.commons.csv.CSVFileParserTest.testData"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.readTestData(0)"
call "org.apache.commons.csv.CSVFileParserTest.generateData(0)" "org.apache.commons.csv.CSVFileParserTest.1.{...}"
reference "org.apache.commons.csv.CSVFileParserTest.generateData(0)" "org.apache.commons.csv.CSVFileParserTest.BASE"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.generateData(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFileParserTest.readTestData(0)"
reference "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFileParserTest.testName"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFormat.toString(0)"
reference "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVFileParserTest.BASE"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVRecord.getComment(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVRecord.size(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFileParserTest.readTestData(0)"
reference "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFileParserTest.testName"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVFormat.toString(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVRecord.getComment(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVRecord.size(0)"
call "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)"
reference "org.apache.commons.csv.CSVFileParserTest.static {...}" "org.apache.commons.csv.CSVFileParserTest.BASE"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.static {...}"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.BASE"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.testData"
contain "org.apache.commons.csv.CSVFileParserTest" "org.apache.commons.csv.CSVFileParserTest.testName"
reference "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.Token"
reference "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.Token.Type"
reference "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchers"
reference "org.apache.commons.csv.TokenMatchersTest" "org.hamcrest.Matcher"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.TokenMatchersTest(0)"
call "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.Token.Token(0)"
reference "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.TokenMatchersTest.token"
reference "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.Token.Type.TOKEN"
reference "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.Token.type"
reference "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.Token.isReady"
reference "org.apache.commons.csv.TokenMatchersTest.setUp(0)" "org.apache.commons.csv.Token.content"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.setUp(0)"
reference "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.Token.Type.COMMENT"
call "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.TokenMatchers.hasType(1)"
reference "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.TokenMatchersTest.token"
call "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.hamcrest.Matcher.matches(1)"
reference "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.Token.Type.EORECORD"
reference "org.apache.commons.csv.TokenMatchersTest.testHasType(0)" "org.apache.commons.csv.Token.Type.TOKEN"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.testHasType(0)"
call "org.apache.commons.csv.TokenMatchersTest.testHasContent(0)" "org.apache.commons.csv.TokenMatchers.hasContent(1)"
reference "org.apache.commons.csv.TokenMatchersTest.testHasContent(0)" "org.apache.commons.csv.TokenMatchersTest.token"
call "org.apache.commons.csv.TokenMatchersTest.testHasContent(0)" "org.hamcrest.Matcher.matches(1)"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.testHasContent(0)"
call "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)" "org.apache.commons.csv.TokenMatchers.isReady(0)"
reference "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)" "org.apache.commons.csv.TokenMatchersTest.token"
call "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)" "org.hamcrest.Matcher.matches(1)"
reference "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)" "org.apache.commons.csv.Token.isReady"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)"
reference "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.apache.commons.csv.Token.Type.TOKEN"
call "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.apache.commons.csv.TokenMatchers.matches(2)"
reference "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.apache.commons.csv.TokenMatchersTest.token"
call "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.hamcrest.Matcher.matches(1)"
reference "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.apache.commons.csv.Token.Type.EOF"
reference "org.apache.commons.csv.TokenMatchersTest.testMatches(0)" "org.apache.commons.csv.Token.Type.EORECORD"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.testMatches(0)"
reference "org.apache.commons.csv.TokenMatchersTest.token" "org.apache.commons.csv.Token"
contain "org.apache.commons.csv.TokenMatchersTest" "org.apache.commons.csv.TokenMatchersTest.token"
reference "org.apache.commons.csv.PerformanceTest.Stats" "org.apache.commons.csv.PerformanceTest"
reference "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)" "org.apache.commons.csv.PerformanceTest.Stats.count"
reference "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)" "org.apache.commons.csv.PerformanceTest.Stats.fields"
contain "org.apache.commons.csv.PerformanceTest.Stats" "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
contain "org.apache.commons.csv.PerformanceTest.Stats" "org.apache.commons.csv.PerformanceTest.Stats.count"
contain "org.apache.commons.csv.PerformanceTest.Stats" "org.apache.commons.csv.PerformanceTest.Stats.fields"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames[]"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.values(0)" "org.apache.commons.csv.FercGovTest.ContractColumnNames.$VALUES"
call "org.apache.commons.csv.FercGovTest.ContractColumnNames.values(0)" "org.apache.commons.csv.FercGovTest.ContractColumnNames[].clone(0)"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.values(0)"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.valueOf(1)"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.ContractColumnNames(2)"
call "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.ContractColumnNames(2)"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_id"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.seller_company_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_company_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_duns_number"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_affiliate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.FERC_tariff_reference"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_service_agreement_id"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_execution_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_commencement_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_termination_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.actual_termination_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.extension_provision_description"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.class_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.term_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_peaking_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_type_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.quantity"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_contract"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_minimum"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_maximum"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_description"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_rate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_control_area"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_specific_location"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_control_area"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_specific_location"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.begin_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.end_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.time_zone"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}" "org.apache.commons.csv.FercGovTest.ContractColumnNames.$VALUES"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_id" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_id"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.seller_company_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.seller_company_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_company_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_company_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_duns_number" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_duns_number"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_affiliate" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_affiliate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.FERC_tariff_reference" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.FERC_tariff_reference"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_service_agreement_id" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_service_agreement_id"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_execution_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_execution_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_commencement_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_commencement_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_termination_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_termination_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.actual_termination_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.actual_termination_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.extension_provision_description" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.extension_provision_description"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.class_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.class_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.term_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.term_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_peaking_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_peaking_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_type_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_type_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_name" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_name"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.quantity" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.quantity"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_contract" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_contract"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_minimum" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_minimum"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_maximum" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_maximum"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_description" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_description"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_rate" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_rate"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_control_area" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_control_area"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_specific_location" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_specific_location"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_control_area" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_control_area"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_specific_location" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_specific_location"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.begin_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.begin_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.end_date" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.end_date"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.time_zone" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.time_zone"
reference "org.apache.commons.csv.FercGovTest.ContractColumnNames.$VALUES" "org.apache.commons.csv.FercGovTest.ContractColumnNames[]"
contain "org.apache.commons.csv.FercGovTest.ContractColumnNames" "org.apache.commons.csv.FercGovTest.ContractColumnNames.$VALUES"
reference "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.EnumFixture"
reference "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVParser"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.CSVRecordTest(0)"
reference "org.apache.commons.csv.CSVRecordTest.setUp(0)" "org.apache.commons.csv.CSVRecordTest.values"
call "org.apache.commons.csv.CSVRecordTest.setUp(0)" "org.apache.commons.csv.CSVRecord.CSVRecord(5)"
reference "org.apache.commons.csv.CSVRecordTest.setUp(0)" "org.apache.commons.csv.CSVRecordTest.record"
reference "org.apache.commons.csv.CSVRecordTest.setUp(0)" "org.apache.commons.csv.CSVRecordTest.header"
reference "org.apache.commons.csv.CSVRecordTest.setUp(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.setUp(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetInt(0)" "org.apache.commons.csv.CSVRecordTest.values"
reference "org.apache.commons.csv.CSVRecordTest.testGetInt(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testGetInt(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetInt(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetString(0)" "org.apache.commons.csv.CSVRecordTest.values"
reference "org.apache.commons.csv.CSVRecordTest.testGetString(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testGetString(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetString(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(0)" "org.apache.commons.csv.CSVRecordTest.header"
reference "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
reference "org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum(0)" "org.apache.commons.csv.CSVRecordTest.EnumFixture.UNKNOWN_COLUMN"
call "org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetUnmappedName(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testGetUnmappedName(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetUnmappedName(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt(0)"
reference "org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)" "org.apache.commons.csv.CSVRecord.isConsistent(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
reference "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)" "org.apache.commons.csv.CSVRecordTest.header"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIsMapped(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testIsMapped(0)" "org.apache.commons.csv.CSVRecord.isMapped(1)"
reference "org.apache.commons.csv.CSVRecordTest.testIsMapped(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testIsMapped(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIsSet(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testIsSet(0)" "org.apache.commons.csv.CSVRecord.isSet(1)"
reference "org.apache.commons.csv.CSVRecordTest.testIsSet(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testIsSet(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIterator(0)" "org.apache.commons.csv.CSVRecordTest.record"
call "org.apache.commons.csv.CSVRecordTest.testIterator(0)" "org.apache.commons.csv.CSVRecord.iterator(0)"
reference "org.apache.commons.csv.CSVRecordTest.testIterator(0)" "org.apache.commons.csv.CSVRecordTest.values"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testIterator(0)"
reference "org.apache.commons.csv.CSVRecordTest.testPutInMap(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testPutInMap(0)" "org.apache.commons.csv.CSVRecord.putIn(1)"
call "org.apache.commons.csv.CSVRecordTest.testPutInMap(0)" "org.apache.commons.csv.CSVRecordTest.validateMap(2)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testPutInMap(0)"
reference "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
reference "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVRecord.toMap(0)"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVPrinter.getOut(0)"
call "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)"
reference "org.apache.commons.csv.CSVRecordTest.testToMap(0)" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
call "org.apache.commons.csv.CSVRecordTest.testToMap(0)" "org.apache.commons.csv.CSVRecord.toMap(0)"
call "org.apache.commons.csv.CSVRecordTest.testToMap(0)" "org.apache.commons.csv.CSVRecordTest.validateMap(2)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testToMap(0)"
reference "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)" "org.apache.commons.csv.CSVRecord.toMap(0)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)" "org.apache.commons.csv.CSVRecord.toMap(0)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.validateMap(2)"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.values"
reference "org.apache.commons.csv.CSVRecordTest.record" "org.apache.commons.csv.CSVRecord"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.record"
reference "org.apache.commons.csv.CSVRecordTest.recordWithHeader" "org.apache.commons.csv.CSVRecord"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
contain "org.apache.commons.csv.CSVRecordTest" "org.apache.commons.csv.CSVRecordTest.header"
reference "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header[]"
reference "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest"
reference "org.apache.commons.csv.CSVFormatTest.Header.values(0)" "org.apache.commons.csv.CSVFormatTest.Header.$VALUES"
call "org.apache.commons.csv.CSVFormatTest.Header.values(0)" "org.apache.commons.csv.CSVFormatTest.Header[].clone(0)"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.values(0)"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.valueOf(1)"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.Header(2)"
call "org.apache.commons.csv.CSVFormatTest.Header.static {...}" "org.apache.commons.csv.CSVFormatTest.Header.Header(2)"
reference "org.apache.commons.csv.CSVFormatTest.Header.static {...}" "org.apache.commons.csv.CSVFormatTest.Header.Name"
reference "org.apache.commons.csv.CSVFormatTest.Header.static {...}" "org.apache.commons.csv.CSVFormatTest.Header.Email"
reference "org.apache.commons.csv.CSVFormatTest.Header.static {...}" "org.apache.commons.csv.CSVFormatTest.Header.Phone"
reference "org.apache.commons.csv.CSVFormatTest.Header.static {...}" "org.apache.commons.csv.CSVFormatTest.Header.$VALUES"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.static {...}"
reference "org.apache.commons.csv.CSVFormatTest.Header.Name" "org.apache.commons.csv.CSVFormatTest.Header"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.Name"
reference "org.apache.commons.csv.CSVFormatTest.Header.Email" "org.apache.commons.csv.CSVFormatTest.Header"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.Email"
reference "org.apache.commons.csv.CSVFormatTest.Header.Phone" "org.apache.commons.csv.CSVFormatTest.Header"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.Phone"
reference "org.apache.commons.csv.CSVFormatTest.Header.$VALUES" "org.apache.commons.csv.CSVFormatTest.Header[]"
contain "org.apache.commons.csv.CSVFormatTest.Header" "org.apache.commons.csv.CSVFormatTest.Header.$VALUES"
reference "org.apache.commons.csv.CSVFileParserTest.1" "org.apache.commons.csv.CSVFileParserTest"
contain "org.apache.commons.csv.CSVFileParserTest.1" "org.apache.commons.csv.CSVFileParserTest.1.{...}"
contain "org.apache.commons.csv.CSVFileParserTest.1" "org.apache.commons.csv.CSVFileParserTest.1.accept(2)"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.io.input.BOMInputStream"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVPrinter"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.Utils"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.CSVParserTest(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.Utils.compare(3)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVFormat.withEscape(1)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.Utils.compare(3)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)"
reference "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)"
reference "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testBOM(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testBOM(0)"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
reference "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)"
reference "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)"
reference "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)"
reference "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testClose(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testClose(0)"
reference "org.apache.commons.csv.CSVParserTest.testCSV57(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testCSV57(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testCSV57(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testCSV57(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testCSV57(0)"
reference "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.Utils.compare(3)"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testDuplicateHeaders(0)" "org.apache.commons.csv.CSVParser.parse(2)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testDuplicateHeaders(0)"
reference "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)"
reference "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)"
reference "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)"
reference "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)"
reference "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)"
reference "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)"
reference "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)"
reference "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)"
reference "org.apache.commons.csv.CSVParserTest.testForEach(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testForEach(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testForEach(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testForEach(0)" "org.apache.commons.csv.CSVRecord.values(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testForEach(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVParser.getHeaderMap(0)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVParser.parse(2)"
reference "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVParserTest.RESULT"
call "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLine(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetLine(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR(0)" "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF(0)" "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF(0)"
call "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF(0)" "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVParserTest.RESULT"
call "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
call "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVParserTest.RESULT"
call "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR(0)" "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF(0)" "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF(0)" "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF(0)" "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(0)" "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVParserTest.RESULT"
call "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecords(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecords(0)"
reference "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVParser.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVRecord.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeader(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVFormat.withNullString(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)" "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)"
reference "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)"
reference "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(0)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)"
reference "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)"
reference "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
call "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testIterator(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testIterator(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testIterator(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testIterator(0)" "org.apache.commons.csv.CSVRecord.values(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testIterator(0)"
reference "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)"
reference "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVRecord.isMapped(1)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVRecord.isSet(1)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)" "org.apache.commons.csv.CSVRecord.isConsistent(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)"
reference "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)"
reference "org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(0)"
call "org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat(0)" "org.apache.commons.csv.CSVParser.CSVParser(2)"
call "org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)" "org.apache.commons.csv.CSVParser.getHeaderMap(0)"
call "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)"
call "org.apache.commons.csv.CSVParserTest.testParseFileNullFormat(0)" "org.apache.commons.csv.CSVParser.parse(3)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseFileNullFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testParseNullFileFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testParseNullFileFormat(0)" "org.apache.commons.csv.CSVParser.parse(3)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseNullFileFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testParseNullStringFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testParseNullStringFormat(0)" "org.apache.commons.csv.CSVParser.parse(2)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseNullStringFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat(0)" "org.apache.commons.csv.CSVParser.parse(3)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(0)"
call "org.apache.commons.csv.CSVParserTest.testParseStringNullFormat(0)" "org.apache.commons.csv.CSVParser.parse(2)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseStringNullFormat(0)"
call "org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat(0)"
reference "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVRecord.isMapped(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)"
reference "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVRecord.isMapped(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)"
reference "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
call "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVPrinter.printRecord(1)"
call "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)"
reference "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)"
reference "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)"
reference "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)"
reference "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)" "org.apache.commons.csv.CSVRecord.get(1)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)"
reference "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)" "org.apache.commons.csv.CSVRecord.values(0)"
call "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)"
reference "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(0)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)" "org.apache.commons.csv.CSVRecord.size(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)"
reference "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVFormat.withTrim(0)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVFormat.parse(1)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVParser.iterator(0)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.testTrim(0)" "org.apache.commons.csv.CSVRecord.size(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.testTrim(0)"
reference "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)"
call "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)"
reference "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVParser.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVRecord.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVFormat.newFormat(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVFormat.withQuote(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVParser.parse(2)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVParser.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVParser.nextRecord(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVRecord.getRecordNumber(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVRecord.getCharacterPosition(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVParser.close(0)"
call "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)" "org.apache.commons.csv.CSVParser.CSVParser(4)"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)"
reference "org.apache.commons.csv.CSVParserTest.static {...}" "org.apache.commons.csv.CSVParserTest.RESULT"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.static {...}"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.CSV_INPUT"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.CSV_INPUT_1"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.CSV_INPUT_2"
contain "org.apache.commons.csv.CSVParserTest" "org.apache.commons.csv.CSVParserTest.RESULT"
reference "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.CSVRecord"
reference "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.ContractColumnNames"
reference "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.CSVParser"
reference "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.CSVFormat"
contain "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.FercGovTest(0)"
reference "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.FercGovTest.US_ASCII"
reference "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
reference "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_id"
call "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVRecord.get(1)"
reference "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.FercGovTest.ContractColumnNames.seller_company_name"
reference "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.FercGovTest.ContractColumnNames.time_zone"
call "org.apache.commons.csv.FercGovTest.testContractFile(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.testContractFile(0)"
reference "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.FercGovTest.US_ASCII"
reference "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVFormat.DEFAULT"
call "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVParser.parse(3)"
call "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVParser.getRecords(0)"
call "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVRecord.get(1)"
call "org.apache.commons.csv.FercGovTest.testTransactionFile(0)" "org.apache.commons.csv.CSVParser.close(0)"
contain "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.testTransactionFile(0)"
reference "org.apache.commons.csv.FercGovTest.static {...}" "org.apache.commons.csv.FercGovTest.US_ASCII"
contain "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.static {...}"
contain "org.apache.commons.csv.FercGovTest" "org.apache.commons.csv.FercGovTest.US_ASCII"
reference "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.Constants"
reference "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReader"
reference "org.apache.commons.csv.ExtendedBufferedReaderTest" "char[]"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(3)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(3)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)" "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)" "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)" "org.apache.commons.csv.ExtendedBufferedReader.read(3)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)"
call "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)" "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
contain "org.apache.commons.csv.ExtendedBufferedReaderTest" "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
reference "org.apache.commons.csv.bugs.JiraCsv164Test" "org.apache.commons.csv.CSVFormat"
reference "org.apache.commons.csv.bugs.JiraCsv164Test" "org.apache.commons.csv.CSVPrinter"
contain "org.apache.commons.csv.bugs.JiraCsv164Test" "org.apache.commons.csv.bugs.JiraCsv164Test.JiraCsv164Test(0)"
reference "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.bugs.JiraCsv164Test" "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)"
reference "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVFormat.EXCEL"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVFormat.withHeader(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVFormat.print(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVPrinter.print(1)"
call "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)" "org.apache.commons.csv.CSVPrinter.close(0)"
contain "org.apache.commons.csv.bugs.JiraCsv164Test" "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture[]"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture.values(0)" "org.apache.commons.csv.CSVRecordTest.EnumFixture.$VALUES"
call "org.apache.commons.csv.CSVRecordTest.EnumFixture.values(0)" "org.apache.commons.csv.CSVRecordTest.EnumFixture[].clone(0)"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.values(0)"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.valueOf(1)"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.EnumFixture(2)"
call "org.apache.commons.csv.CSVRecordTest.EnumFixture.static {...}" "org.apache.commons.csv.CSVRecordTest.EnumFixture.EnumFixture(2)"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture.static {...}" "org.apache.commons.csv.CSVRecordTest.EnumFixture.UNKNOWN_COLUMN"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture.static {...}" "org.apache.commons.csv.CSVRecordTest.EnumFixture.$VALUES"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.static {...}"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture.UNKNOWN_COLUMN" "org.apache.commons.csv.CSVRecordTest.EnumFixture"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.UNKNOWN_COLUMN"
reference "org.apache.commons.csv.CSVRecordTest.EnumFixture.$VALUES" "org.apache.commons.csv.CSVRecordTest.EnumFixture[]"
contain "org.apache.commons.csv.CSVRecordTest.EnumFixture" "org.apache.commons.csv.CSVRecordTest.EnumFixture.$VALUES"
CGNodeType Method "org.apache.commons.csv.Token.Type.name(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.close(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.TokenMatchersTest(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.parse(2)"
CGNodeType Method "org.apache.commons.csv.Token.Type.ordinal(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.1.remove(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.parse(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.EnumFixture.values(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.2.describeTo(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsSkipHeaderRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(1)"
CGNodeType Method "org.apache.commons.csv.Utils.Utils(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.println(1)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testBackspace(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviourExcel(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.EnumFixture.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(0)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.QuoteMode(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsEscape(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testMySqlNullOutput(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testRemoveAndAddColumns(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsNullString(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithCRLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.toMap(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.iterate(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testEOLEscaped(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithFirstRecordAsHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withAllowMissingColumnNames(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedBackspace(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.mapNullToDisabled(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetUnmappedPositiveInt(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfArrays(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.isConsistent(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.2.{...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testEscapeBackslash(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.testReadBigFile(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.testMySQL(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.testHasContent(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter2(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.CSVPrinterTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJira135All(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.testTDF(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testNoHeaderMap(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testIsSet(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.1.matchesSafely(2)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.ordinal(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withSkipHeaderRecord(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testRoundtrip(0)"
CGNodeType Method "org.apache.commons.csv.AssertionsTest.AssertionsTest(0)"
CGNodeType Method "org.apache.commons.csv.Constants.Constants(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testIsMapped(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.validateRecordPosition(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithDelimiterLFThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.toFirstRecordValues(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfArrays(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testDelimiterPlain(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testClose(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testRandomMySql(0)"
CGNodeType Method "org.hamcrest.Matcher.matches(1)"
CGNodeType Method "org.apache.commons.csv.Lexer.parseSimpleToken(2)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedFF(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.testIsReady(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testBOM(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsQuoteChar(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.static {...}"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.1.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormat.isQuoteCharacterSet(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.CSVFormat(16)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testMultipleIterators(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testNewCSVParserReaderNullFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.EmptyEnum.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.setUpTable(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testToMap(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.Header.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeaderMissing(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testTrailingDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testBOMInputStream(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.close(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.matches(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter1(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testIterator(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.newFormat(1)"
CGNodeType Method "org.apache.commons.csv.CSVParser.1.next(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.validate(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParserUrlNullCharsetFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.1.describeTo(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testBackslashEscaping(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testCarriageReturnEndings(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.validateRecordNumbers(1)"
CGNodeType Method "org.apache.commons.csv.CSVParser.getRecords(0)"
CGNodeType Method "org.apache.commons.csv.Token.Type.values(0)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv167Test.getTestInput(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourCSV(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.println(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithEscapeCRThrowsExceptions(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testProvidedHeader(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.FercGovTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getQuoteCharacter(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testInvalidFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testQuoteNonNumeric(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testProvidedHeaderAuto(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.test(2)"
CGNodeType Method "org.apache.commons.csv.CSVParser.nextRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreEmptyLines(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordFalse(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.toString(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testMultiLineComment(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVParser.getRecordNumber(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withQuoteMode(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.geH2Connection(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withDelimiter(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testQuotePolicyNoneWithoutEscapeThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.3.describeTo(1)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.setUp(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getCommentMarker(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.testParseBigFileRepeat(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isQuoteChar(1)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.3.matchesSafely(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.assertNotEquals(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPlainEscaped(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.getHeaderMap(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.testRFC4180(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithIgnoreSurround(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.printComment(1)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.readTestData(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.testHasType(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.1.accept(2)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv167Test.JiraCsv167Test(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentExcel(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCRLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testDelimiterEscaped(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.isCommentMarkerSet(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testHeader(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.PerformanceTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testRandomDefault(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined.getFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.toList(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.isMapped(1)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead2(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testNextToken5(0)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv164Test.JiraCsv164Test(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllIterableOfLists(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter5(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.hasComment(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.getLastChar(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getIgnoreSurroundingSpaces(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithQuoteLFThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSet(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.ContractColumnNames.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getTrim(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreSurroundingSpaces(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.readEscape(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getQuoteMode(0)"
CGNodeType Method "org.hamcrest.Description.appendValue(1)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv167Test.parse(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testNextToken6(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.randStr(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testMySqlNullStringDefault(0)"
CGNodeType Method "org.apache.commons.csv.Token.Type.equals(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseNullUrlCharsetFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.CSVFormatPredefinedTest(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.getBufferedReader(1)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testFF(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testEmptyFile(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.trimTrailingSpaces(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testGetHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.EnumFixture.EnumFixture(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.printWithHeaderComments(3)"
CGNodeType Method "org.apache.commons.csv.Lexer.readEndOfLine(1)"
CGNodeType Method "org.apache.commons.csv.Token.Type.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.testExcel(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testMappedButNotSetAsOutlook2007ContactExport(0)"
CGNodeType Method "org.apache.commons.csv.Token.Type.Type(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testNullRecordSeparatorCsv106(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.equals(1)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedControlCharacter(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.generateData(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.CSVPrinter(2)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.testContractFile(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCRLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testTrim(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testTrailingDelimiterOnTwoColumns(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.1.static {...}"
CGNodeType Method "org.apache.commons.csv.LexerTest.testNextToken4(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.flush(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined.Predefined(2)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedCR(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.1.hasNext(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getEscapeCharacter(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter4(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.testCSVFile(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetOneLine(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.toStringArray(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatPredefinedTest.testDefault(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.close(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.printAndEscape(3)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.setUp(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testComments(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeader(0)"
CGNodeType Method "org.hamcrest.TypeSafeDiagnosingMatcher.TypeSafeDiagnosingMatcher(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testSerialization(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testDefaultFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testBackslashEscaping2(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testIterator(0)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withCommentMarker(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseNullStringFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetStringInconsistentRecord(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapingAtEOF(0)"
CGNodeType Method "org.apache.commons.csv.Constants.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordWithMultiLineValues(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEscapeSameAsCommentStartThrowsExceptionForWrapperType(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.toString(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.addRecordValue(1)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedLF(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.getBufferedReader(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testSingleLineComment(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testNewCSVParserNullReaderFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testSkipHeaderOverrideDuplicateHeaders(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsCommentStartThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedCharacter(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.EmptyEnum.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testTrimOffOneColumn(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrintNullValues(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoteNONE(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithQuotePolicy(0)"
CGNodeType Method "org.apache.commons.csv.AssertionsTest.testNotNull(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPlainQuoted(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testIgnoreCaseHeaderMapping(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testLineFeedEndings(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.iterator(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.static {...}"
CGNodeType Method "org.apache.commons.csv.Lexer.Lexer(2)"
CGNodeType Method "org.apache.commons.csv.Lexer.isCommentStart(1)"
CGNodeType Method "org.apache.commons.csv.Token.toString(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.ContractColumnNames.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.2.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testDuplicateHeaders(0)"
CGNodeType Method "org.apache.commons.csv.Token.reset(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter3(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.getCharacterPosition(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.isClosed(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.Header.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.validateLineNumbers(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testIsConsistent(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testLF(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedTab(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseUrlCharsetNullFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testSkipSetHeader(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.parseEncapsulatedToken(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.printRecords(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withRecordSeparator(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseStringNullFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeaderMissingWithNull(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJira135_part1(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withEscape(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithEmptyEnum(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testHeaderCommentTdf(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.testReadBigFile(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.doOneRandom(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.print(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.Predefined.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withTrim(1)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.1.{...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testDelimeterQuoted(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinter(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testPutInMap(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.ContractColumnNames[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testEmptyLineBehaviourExcel(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.size(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadChar(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrintAllArrayOfLists(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.copy(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getTrailingDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.ExtendedBufferedReaderTest(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.main(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testSingleQuoteQuoted(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecords(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithNullString(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.testCSVUrl(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.getCurrentLineNumber(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.getReader(0)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.static {...}"
CGNodeType Method "org.apache.commons.csv.Lexer.isDelimiter(1)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.TokenMatchers(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.testParseBigFile(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithEscape(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.getCurrentLineNumber(0)"
CGNodeType Method "org.apache.commons.csv.bugs.JiraCsv164Test.testJiraCsv154_withHeaderComments(0)"
CGNodeType Method "org.apache.commons.csv.Token.Type[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getSkipHeaderRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetUnmappedNegativeInt(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithCommentStartCRThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testEOLPlain(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.copy(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreSurroundingSpaces(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testBackslashWithEscaping(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.ContractColumnNames.ContractColumnNames(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter7(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.trim(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testEOLQuoted(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.get(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.print(4)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.generateLines(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testRandomRfc4180(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testEndOfFileBehaviorCSV(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.getPosition(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.EmptyEnum.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEquals(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.isEscapeCharacterSet(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCRLF(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.hasContent(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.printable(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getIgnoreHeaderCase(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetUnmappedName(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.2.matchesSafely(2)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.3.{...}"
CGNodeType Method "org.apache.commons.csv.LexerTest.LexerTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testRandomExcel(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.CSVParserTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testCarriageReturnLineFeedEndings(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withCommentMarker(1)"
CGNodeType Method "org.hamcrest.core.AllOf.allOf(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsRecordSeparator(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeadersMissingException(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testCSV57(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.testParseCommonsCSV(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testSkipAutoHeader(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.getLexer(2)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedMySqlNullValue(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.isClosed(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testBackslashEscapingOld(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJira135_part2(0)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.hashCode(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isMetaChar(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetString(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.isNullStringSet(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withFirstRecordAsHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.CSVRecordTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeadersMissing(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetStringNoHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withNullString(1)"
CGNodeType Method "org.apache.commons.csv.AssertionsTest.testNotNullNull(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.read(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testForEach(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsExceptionForWrapperType(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.Header.Header(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrinter6(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJdbcPrinterWithResultSetMetaData(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetHeaderMap(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testJira135_part3(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLine(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testDelimiterIsWhitespace(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getAllowMissingColumnNames(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.getComment(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.EmptyEnum[].clone(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.isReady(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchersTest.testMatches(0)"
CGNodeType Method "org.apache.commons.csv.QuoteMode.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testDelimiterSameAsEscapeThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.ContractColumnNames.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVParser.iterator(0)"
CGNodeType Method "org.apache.commons.csv.Assertions.Assertions(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testTab(0)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.readLine(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.format(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetLine(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseNullFileFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testToMapWithShortRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.print(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testQuoteAll(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testToMapWithNoHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.CSVParser(4)"
CGNodeType Method "org.apache.commons.csv.Utils.compare(3)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.CSVFileParserTest(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithDelimiter(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testExcelHeaderCountLessThanData(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.CSVRecord(5)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testRandomTdf(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.show(3)"
CGNodeType Method "org.apache.commons.lang3.ObjectUtils.equals(2)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.testCSVLexer(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithQuoteChar(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.getOut(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.setUpClass(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.Header[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.static {...}"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.read(3)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withHeader(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getRecordSeparator(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.close(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.printRecord(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.EmptyEnum.EmptyEnum(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testInvalidFormat(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testParseFileNullFormat(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testSurroundingSpacesAreDeleted(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testEscapedControlCharacter2(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithRecordSeparatorCR(0)"
CGNodeType Method "org.apache.commons.csv.Assertions.notNull(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testRFC4180(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.CSVParser(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testDisabledComment(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isEscape(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordPositionWithLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetUnmappedEnum(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testHeaderNotSet(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testNewCSVPrinterNullAppendableFormat(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isClosed(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrint(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testCR(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithCR(0)"
CGNodeType Method "org.apache.commons.csv.Token.Type.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsCommentStartThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithCommentStart(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withQuote(1)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.testExtendedBuffer(1)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.Stats.Stats(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.hashCode(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.show(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testParseCustomNullValues(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.1.{...}"
CGNodeType Method "org.apache.commons.csv.Lexer.isWhitespace(1)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.isSet(1)"
CGNodeType Method "org.apache.commons.csv.CSVParser.initializeHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPrintCustomNullValues(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getHeaderComments(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isStartOfLine(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testDuplicateHeaderElements(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testNewCsvPrinterAppendableNullFormat(0)"
CGNodeType Method "org.apache.commons.csv.FercGovTest.testTransactionFile(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testHeaderComment(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.EnumFixture.static {...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.doRandom(2)"
CGNodeType Method "org.apache.commons.csv.QuoteMode[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testSkipSetAltHeaders(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testQuoteCharSameAsDelimiterThrowsException(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.values(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetOneLineOneParser(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testWithHeaderEnum(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.expectNulls(2)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsQuotePolicy(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withIgnoreHeaderCase(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testPlainPlain(0)"
CGNodeType Method "org.apache.commons.csv.CSVFileParserTest.1.{...}"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter2(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getNullString(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.validateMap(2)"
CGNodeType Method "org.apache.commons.csv.Token.Token(0)"
CGNodeType Method "org.apache.commons.csv.perf.PerformanceTest.readAll(1)"
CGNodeType Method "org.apache.commons.csv.CSVPrinter.printAndQuote(4)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.getIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testExcelPrinter1(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsIgnoreEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.parse(3)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.getLexerCtor(1)"
CGNodeType Method "org.apache.commons.csv.Lexer.nextToken(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testExcelFormat1(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withHeaderComments(1)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.CSVFormatTest(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testCommentsAndEmptyLines(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.isEndOfFile(1)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.ExtendedBufferedReader(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testStartWithEmptyLinesThenHeaders(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsCommentStart(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withTrim(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testTrimOnOneColumn(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.withTrailingDelimiter(1)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testExcelFormat2(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetLineNumberWithCR(0)"
CGNodeType Method "org.apache.commons.csv.CSVParser.parse(2)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testSkipHeaderRecordTrue(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormat.isLineBreak(1)"
CGNodeType Method "org.apache.commons.csv.CSVParser.1.getNextRecord(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.getRecordNumber(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.testEqualsHeader(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.testGetInt(0)"
CGNodeType Method "org.apache.commons.csv.Lexer.getCurrentLineNumber(0)"
CGNodeType Method "org.apache.commons.csv.CSVFormatTest.Header.valueOf(1)"
CGNodeType Method "org.apache.commons.csv.ExtendedBufferedReader.lookAhead(0)"
CGNodeType Method "org.apache.commons.csv.LexerTest.setUp(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.getCharacterPosition(0)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.readAll(2)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(0)"
CGNodeType Method "org.apache.commons.csv.CSVParserTest.testGetRecordNumberWithLF(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecordTest.EnumFixture[].clone(0)"
CGNodeType Method "org.apache.commons.csv.CSVRecord.putIn(1)"
CGNodeType Method "org.apache.commons.csv.PerformanceTest.PerformanceTest(0)"
CGNodeType Method "org.apache.commons.csv.CSVPrinterTest.testTrimOnTwoColumns(0)"
CGNodeType Method "org.apache.commons.csv.TokenMatchers.hasType(1)"
CGNodeType Method "org.hamcrest.Description.appendText(1)"
CGNodeType Method "org.apache.commons.csv.LexerTest.testSurroundingTabsAreDeleted(0)"
CGNodeType Class "org.apache.commons.csv.CSVPrinter.1"
CGNodeType Class "org.apache.commons.csv.PerformanceTest"
CGNodeType Class "org.apache.commons.csv.TokenMatchers.2"
CGNodeType Class "org.apache.commons.csv.TokenMatchers.3"
CGNodeType Class "org.apache.commons.csv.Token"
CGNodeType Class "org.apache.commons.csv.CSVRecord"
CGNodeType Class "org.apache.commons.csv.Constants"
CGNodeType Class "org.apache.commons.csv.TokenMatchers.1"
CGNodeType Class "org.apache.commons.csv.Assertions"
CGNodeType Class "org.apache.commons.csv.perf.PerformanceTest"
CGNodeType Class "org.apache.commons.csv.Token.Type[]"
CGNodeType Class "org.apache.commons.csv.TokenMatchers"
CGNodeType Class "org.apache.commons.csv.CSVFormat"
CGNodeType Class "org.apache.commons.csv.CSVParser"
CGNodeType Class "org.apache.commons.io.input.BOMInputStream"
CGNodeType Class "org.apache.commons.csv.CSVFormatTest"
CGNodeType Class "org.apache.commons.csv.QuoteMode[]"
CGNodeType Class "org.apache.commons.csv.PerformanceTest.1"
CGNodeType Class "org.apache.commons.csv.CSVFileParserTest"
CGNodeType Class "org.apache.commons.csv.TokenMatchersTest"
CGNodeType Class "org.apache.commons.io.IOUtils"
CGNodeType Class "org.apache.commons.csv.Lexer"
CGNodeType Class "org.apache.commons.csv.CSVRecordTest"
CGNodeType Class "org.apache.commons.csv.CSVFileParserTest.1"
CGNodeType Class "org.apache.commons.csv.CSVParserTest"
CGNodeType Class "org.apache.commons.csv.CSVRecordTest.EnumFixture[]"
CGNodeType Class "org.apache.commons.csv.CSVPrinter"
CGNodeType Class "org.apache.commons.csv.FercGovTest"
CGNodeType Class "org.apache.commons.csv.CSVRecordTest.EnumFixture"
CGNodeType Class "org.apache.commons.csv.ExtendedBufferedReaderTest"
CGNodeType Class "org.apache.commons.csv.bugs.JiraCsv164Test"
CGNodeType Class "org.apache.commons.csv.bugs.JiraCsv167Test"
CGNodeType Class "long[]"
CGNodeType Class "org.apache.commons.csv.CSVFormatPredefinedTest"
CGNodeType Class "org.hamcrest.core.AllOf"
CGNodeType Class "org.hamcrest.TypeSafeDiagnosingMatcher"
CGNodeType Class "org.apache.commons.csv.CSVFormatTest.Header[]"
CGNodeType Class "org.apache.commons.csv.Token.Type"
CGNodeType Class "org.apache.commons.lang3.ObjectUtils"
CGNodeType Class "org.apache.commons.csv.CSVFormatTest.EmptyEnum[]"
CGNodeType Class "org.apache.commons.csv.LexerTest"
CGNodeType Class "org.apache.commons.csv.FercGovTest.ContractColumnNames[]"
CGNodeType Class "org.apache.commons.csv.ExtendedBufferedReader"
CGNodeType Class "org.apache.commons.csv.CSVParser.2"
CGNodeType Class "org.apache.commons.csv.CSVParser.1"
CGNodeType Class "org.apache.commons.csv.CSVFormat.Predefined"
CGNodeType Class "org.hamcrest.Description"
CGNodeType Class "org.apache.commons.csv.AssertionsTest"
CGNodeType Class "org.apache.commons.csv.CSVPrinterTest"
CGNodeType Class "org.apache.commons.csv.Utils"
CGNodeType Class "int[]"
CGNodeType Class "org.apache.commons.csv.CSVFormat.Predefined[]"
CGNodeType Class "org.apache.commons.csv.QuoteMode"
CGNodeType Class "org.apache.commons.csv.CSVFormatTest.EmptyEnum"
CGNodeType Class "char[]"
CGNodeType Class "org.apache.commons.csv.PerformanceTest.Stats"
CGNodeType Class "org.apache.commons.csv.FercGovTest.ContractColumnNames"
CGNodeType Class "org.hamcrest.Matcher"
CGNodeType Class "org.apache.commons.csv.CSVFormatTest.Header"
CGNodeType Field "org.apache.commons.csv.CSVRecord.recordNumber"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.format"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.$VALUES"
CGNodeType Field "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD"
CGNodeType Field "org.apache.commons.csv.ExtendedBufferedReader.eolCounter"
CGNodeType Field "org.apache.commons.csv.CSVFormat.skipHeaderRecord"
CGNodeType Field "org.apache.commons.csv.CSVFormat.delimiter"
CGNodeType Field "org.apache.commons.csv.Lexer.quoteChar"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_control_area"
CGNodeType Field "org.apache.commons.csv.Constants.FF"
CGNodeType Field "org.apache.commons.csv.CSVFileParserTest.testData"
CGNodeType Field "org.apache.commons.csv.CSVFormat.escapeCharacter"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_minimum"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.EnumFixture.$VALUES"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.TDF"
CGNodeType Field "org.apache.commons.csv.TokenMatchersTest.token"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.header"
CGNodeType Field "org.apache.commons.csv.CSVPrinter.1.$SwitchMap$org$apache$commons$csv$QuoteMode"
CGNodeType Field "org.apache.commons.csv.CSVFormatTest.EmptyEnum.$VALUES"
CGNodeType Field "org.apache.commons.csv.CSVParser.1.this$0"
CGNodeType Field "org.apache.commons.csv.CSVRecord.characterPosition"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.values"
CGNodeType Field "org.apache.commons.csv.Constants.COMMENT"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_description"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.PROPS"
CGNodeType Field "org.apache.commons.csv.CSVParser.format"
CGNodeType Field "org.apache.commons.csv.CSVFileParserTest.testName"
CGNodeType Field "org.apache.commons.csv.CSVParser.characterOffset"
CGNodeType Field "org.apache.commons.csv.Token.Type.INVALID"
CGNodeType Field "org.apache.commons.csv.Lexer.DISABLED"
CGNodeType Field "org.apache.commons.csv.Constants.BACKSPACE"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.term_name"
CGNodeType Field "org.apache.commons.csv.Constants.US"
CGNodeType Field "org.apache.commons.csv.CSVRecord.values"
CGNodeType Field "org.apache.commons.csv.CSVFormatTest.Header.Name"
CGNodeType Field "org.apache.commons.csv.CSVFormat.commentMarker"
CGNodeType Field "org.apache.commons.csv.QuoteMode.MINIMAL"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.$VALUES"
CGNodeType Field "org.apache.commons.csv.ExtendedBufferedReader.position"
CGNodeType Field "org.apache.commons.csv.Token.Type.EOF"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.MySQL"
CGNodeType Field "org.apache.commons.csv.CSVParserTest.CSV_INPUT_2"
CGNodeType Field "org.apache.commons.csv.CSVParserTest.CSV_INPUT_1"
CGNodeType Field "org.apache.commons.csv.Token.type"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.extension_provision_description"
CGNodeType Field "org.apache.commons.csv.Constants.CRLF"
CGNodeType Field "org.apache.commons.csv.CSVRecord.comment"
CGNodeType Field "org.apache.commons.csv.CSVFormat.TDF"
CGNodeType Field "org.apache.commons.csv.Constants.DOUBLE_QUOTE_CHAR"
CGNodeType Field "org.apache.commons.csv.Constants.COMMA"
CGNodeType Field "org.apache.commons.csv.CSVFormat.headerComments"
CGNodeType Field "org.apache.commons.csv.CSVParser.reusableToken"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_company_name"
CGNodeType Field "org.apache.commons.csv.CSVParser.2.$SwitchMap$org$apache$commons$csv$Token$Type"
CGNodeType Field "org.apache.commons.csv.Constants.LINE_SEPARATOR"
CGNodeType Field "org.apache.commons.csv.Constants.UNDEFINED"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.FERC_tariff_reference"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.record"
CGNodeType Field "org.apache.commons.csv.perf.PerformanceTest.BIG_FILE"
CGNodeType Field "org.apache.commons.csv.CSVFormat.MYSQL"
CGNodeType Field "org.apache.commons.csv.Lexer.ignoreEmptyLines"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.InformixUnload"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_specific_location"
CGNodeType Field "org.apache.commons.csv.QuoteMode.NONE"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.seller_company_name"
CGNodeType Field "org.apache.commons.csv.CSVFormat.DEFAULT"
CGNodeType Field "org.apache.commons.csv.ExtendedBufferedReader.closed"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.customer_duns_number"
CGNodeType Field "org.apache.commons.csv.Token.Type.EORECORD"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_delivery_control_area"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.class_name"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.begin_date"
CGNodeType Field "org.apache.commons.csv.Token.content"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.format"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.point_of_receipt_specific_location"
CGNodeType Field "org.apache.commons.csv.CSVParser.lexer"
CGNodeType Field "org.apache.commons.csv.CSVParser.1.current"
CGNodeType Field "org.apache.commons.csv.Lexer.ignoreSurroundingSpaces"
CGNodeType Field "org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces"
CGNodeType Field "org.apache.commons.csv.CSVFormat.ignoreEmptyLines"
CGNodeType Field "org.apache.commons.csv.perf.PerformanceTest.max"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_termination_date"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_peaking_name"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.end_date"
CGNodeType Field "org.apache.commons.csv.Token.INITIAL_TOKEN_LENGTH"
CGNodeType Field "org.apache.commons.csv.ExtendedBufferedReader.lastChar"
CGNodeType Field "org.apache.commons.csv.TokenMatchers.1.val$expectedType"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_rate"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.increment_name"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_name"
CGNodeType Field "org.apache.commons.csv.CSVParser.recordNumber"
CGNodeType Field "org.apache.commons.csv.Token.Type.$VALUES"
CGNodeType Field "org.apache.commons.csv.Lexer.commentStart"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.elapsedTimes"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_service_agreement_id"
CGNodeType Field "org.apache.commons.csv.CSVFormat.allowMissingColumnNames"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.max"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_id"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_affiliate"
CGNodeType Field "org.apache.commons.csv.Constants.PARAGRAPH_SEPARATOR"
CGNodeType Field "org.apache.commons.csv.CSVFormatTest.Header.Email"
CGNodeType Field "org.apache.commons.csv.CSVPrinterTest.ITERATIONS_FOR_RANDOM_TEST"
CGNodeType Field "org.apache.commons.csv.CSVFormat.trim"
CGNodeType Field "org.apache.commons.csv.Lexer.escape"
CGNodeType Field "org.apache.commons.csv.TokenMatchers.2.val$expectedContent"
CGNodeType Field "org.apache.commons.csv.Constants.RS"
CGNodeType Field "org.apache.commons.csv.CSVFormat.header"
CGNodeType Field "org.apache.commons.csv.LexerTest.formatWithEscaping"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_commencement_date"
CGNodeType Field "org.apache.commons.csv.CSVParser.record"
CGNodeType Field "org.apache.commons.csv.CSVRecord.serialVersionUID"
CGNodeType Field "org.apache.commons.csv.CSVFormat.recordSeparator"
CGNodeType Field "org.apache.commons.csv.CSVFormat.quoteCharacter"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.contract_execution_date"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.Stats.count"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.num"
CGNodeType Field "org.apache.commons.csv.CSVFormat.nullString"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate"
CGNodeType Field "org.apache.commons.csv.Constants.END_OF_STREAM"
CGNodeType Field "org.apache.commons.csv.Constants.PIPE"
CGNodeType Field "org.apache.commons.csv.CSVPrinter.format"
CGNodeType Field "org.apache.commons.csv.Token.isReady"
CGNodeType Field "org.apache.commons.csv.Constants.NEXT_LINE"
CGNodeType Field "org.apache.commons.csv.Lexer.reader"
CGNodeType Field "org.apache.commons.csv.CSVPrinterTest.recordSeparator"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.units_for_contract"
CGNodeType Field "org.apache.commons.csv.CSVFormat.ignoreHeaderCase"
CGNodeType Field "org.apache.commons.csv.CSVRecord.EMPTY_STRING_ARRAY"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.actual_termination_date"
CGNodeType Field "org.apache.commons.csv.Constants.BACKSLASH"
CGNodeType Field "org.apache.commons.csv.Constants.EMPTY"
CGNodeType Field "org.apache.commons.csv.Constants.TAB"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.BIG_FILE"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.Excel"
CGNodeType Field "org.apache.commons.csv.CSVFormat.RFC4180"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.quantity"
CGNodeType Field "org.apache.commons.csv.QuoteMode.$VALUES"
CGNodeType Field "org.apache.commons.csv.CSVFormat.EXCEL"
CGNodeType Field "org.apache.commons.csv.CSVFormatTest.Header.Phone"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.InformixUnloadCsv"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.rate_maximum"
CGNodeType Field "org.apache.commons.csv.Token.Type.TOKEN"
CGNodeType Field "org.apache.commons.csv.CSVPrinter.newRecord"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.Stats.fields"
CGNodeType Field "org.apache.commons.csv.Token.Type.COMMENT"
CGNodeType Field "org.apache.commons.csv.CSVFormat.trailingDelimiter"
CGNodeType Field "org.apache.commons.csv.CSVFormat.INFORMIX_UNLOAD_CSV"
CGNodeType Field "org.apache.commons.csv.CSVParser.headerMap"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.RFC4180"
CGNodeType Field "org.apache.commons.csv.CSVParserTest.CSV_INPUT"
CGNodeType Field "org.apache.commons.csv.FercGovTest.US_ASCII"
CGNodeType Field "org.apache.commons.csv.CSVFormatTest.Header.$VALUES"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.recordWithHeader"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.product_type_name"
CGNodeType Field "org.apache.commons.csv.CSVFormat.serialVersionUID"
CGNodeType Field "org.apache.commons.csv.Lexer.delimiter"
CGNodeType Field "org.apache.commons.csv.QuoteMode.ALL"
CGNodeType Field "org.apache.commons.csv.CSVFormat.quoteMode"
CGNodeType Field "org.apache.commons.csv.FercGovTest.ContractColumnNames.time_zone"
CGNodeType Field "org.apache.commons.csv.CSVPrinter.out"
CGNodeType Field "org.apache.commons.csv.QuoteMode.NON_NUMERIC"
CGNodeType Field "org.apache.commons.csv.CSVParserTest.RESULT"
CGNodeType Field "org.apache.commons.csv.Constants.SP"
CGNodeType Field "org.apache.commons.csv.Constants.LF"
CGNodeType Field "org.apache.commons.csv.CSVRecord.mapping"
CGNodeType Field "org.apache.commons.csv.CSVRecordTest.EnumFixture.UNKNOWN_COLUMN"
CGNodeType Field "org.apache.commons.csv.CSVFormat.Predefined.Default"
CGNodeType Field "org.apache.commons.csv.CSVFileParserTest.BASE"
CGNodeType Field "org.apache.commons.csv.PerformanceTest.1.$SwitchMap$org$apache$commons$csv$Token$Type"
CGNodeType Field "org.apache.commons.csv.Constants.CR"
