FACT TUPLE :
reference "org.apache.commons.io.LineIterator" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.LineIterator.LineIterator(1)" "org.apache.commons.io.LineIterator.finished"
reference "org.apache.commons.io.LineIterator.LineIterator(1)" "org.apache.commons.io.LineIterator.bufferedReader"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.LineIterator(1)"
reference "org.apache.commons.io.LineIterator.hasNext(0)" "org.apache.commons.io.LineIterator.cachedLine"
reference "org.apache.commons.io.LineIterator.hasNext(0)" "org.apache.commons.io.LineIterator.finished"
reference "org.apache.commons.io.LineIterator.hasNext(0)" "org.apache.commons.io.LineIterator.bufferedReader"
call "org.apache.commons.io.LineIterator.hasNext(0)" "org.apache.commons.io.LineIterator.isValidLine(1)"
call "org.apache.commons.io.LineIterator.hasNext(0)" "org.apache.commons.io.LineIterator.close(0)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.hasNext(0)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.isValidLine(1)"
call "org.apache.commons.io.LineIterator.next(0)" "org.apache.commons.io.LineIterator.nextLine(0)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIterator.nextLine(0)" "org.apache.commons.io.LineIterator.hasNext(0)"
reference "org.apache.commons.io.LineIterator.nextLine(0)" "org.apache.commons.io.LineIterator.cachedLine"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.nextLine(0)"
reference "org.apache.commons.io.LineIterator.close(0)" "org.apache.commons.io.LineIterator.finished"
reference "org.apache.commons.io.LineIterator.close(0)" "org.apache.commons.io.LineIterator.bufferedReader"
call "org.apache.commons.io.LineIterator.close(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.LineIterator.close(0)" "org.apache.commons.io.LineIterator.cachedLine"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.close(0)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.remove(0)"
call "org.apache.commons.io.LineIterator.closeQuietly(1)" "org.apache.commons.io.LineIterator.close(0)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.bufferedReader"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.cachedLine"
contain "org.apache.commons.io.LineIterator" "org.apache.commons.io.LineIterator.finished"
contain "org.apache.commons.io.comparator.AbstractFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
contain "org.apache.commons.io.comparator.AbstractFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.AbstractFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.AbstractFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
reference "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.reader"
reference "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.encoder"
reference "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.encoderIn"
reference "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.encoderOut"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
call "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(1)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(1)"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.endOfInput"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.lastCoderResult"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.encoderIn"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.reader"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.encoderOut"
reference "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)" "org.apache.commons.io.input.ReaderInputStream.encoder"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)"
reference "org.apache.commons.io.input.ReaderInputStream.read(3)" "org.apache.commons.io.input.ReaderInputStream.encoderOut"
call "org.apache.commons.io.input.ReaderInputStream.read(3)" "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)"
reference "org.apache.commons.io.input.ReaderInputStream.read(3)" "org.apache.commons.io.input.ReaderInputStream.endOfInput"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.read(3)"
call "org.apache.commons.io.input.ReaderInputStream.read(1)" "org.apache.commons.io.input.ReaderInputStream.read(3)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.read(1)"
reference "org.apache.commons.io.input.ReaderInputStream.read(0)" "org.apache.commons.io.input.ReaderInputStream.encoderOut"
call "org.apache.commons.io.input.ReaderInputStream.read(0)" "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)"
reference "org.apache.commons.io.input.ReaderInputStream.read(0)" "org.apache.commons.io.input.ReaderInputStream.endOfInput"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.read(0)"
reference "org.apache.commons.io.input.ReaderInputStream.close(0)" "org.apache.commons.io.input.ReaderInputStream.reader"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.close(0)"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.DEFAULT_BUFFER_SIZE"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.reader"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.encoder"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.encoderIn"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.encoderOut"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.lastCoderResult"
contain "org.apache.commons.io.input.ReaderInputStream" "org.apache.commons.io.input.ReaderInputStream.endOfInput"
call "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(4)" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(4)"
reference "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeMime"
reference "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeEncoding"
reference "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)" "org.apache.commons.io.input.XmlStreamReaderException.bomEncoding"
reference "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)" "org.apache.commons.io.input.XmlStreamReaderException.xmlGuessEncoding"
reference "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)" "org.apache.commons.io.input.XmlStreamReaderException.xmlEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)"
reference "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderException.bomEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)"
reference "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderException.xmlGuessEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)"
reference "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderException.xmlEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)"
reference "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(0)" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeMime"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(0)"
reference "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.serialVersionUID"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.bomEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.xmlGuessEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.xmlEncoding"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeMime"
contain "org.apache.commons.io.input.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException.contentTypeEncoding"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.EndianUtils(0)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.swapShort(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.swapInteger(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.swapLong(1)"
call "org.apache.commons.io.EndianUtils.swapFloat(1)" "org.apache.commons.io.EndianUtils.swapInteger(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.swapFloat(1)"
call "org.apache.commons.io.EndianUtils.swapDouble(1)" "org.apache.commons.io.EndianUtils.swapLong(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.swapDouble(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedShort(3)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedShort(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedInteger(3)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedInteger(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedLong(3)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
call "org.apache.commons.io.EndianUtils.writeSwappedFloat(3)" "org.apache.commons.io.EndianUtils.writeSwappedInteger(3)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedFloat(3)"
call "org.apache.commons.io.EndianUtils.readSwappedFloat(2)" "org.apache.commons.io.EndianUtils.readSwappedInteger(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedFloat(2)"
call "org.apache.commons.io.EndianUtils.writeSwappedDouble(3)" "org.apache.commons.io.EndianUtils.writeSwappedLong(3)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedDouble(3)"
call "org.apache.commons.io.EndianUtils.readSwappedDouble(2)" "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedDouble(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedShort(2)"
call "org.apache.commons.io.EndianUtils.readSwappedShort(1)" "org.apache.commons.io.EndianUtils.read(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedShort(1)"
call "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(1)" "org.apache.commons.io.EndianUtils.read(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedInteger(2)"
call "org.apache.commons.io.EndianUtils.readSwappedInteger(1)" "org.apache.commons.io.EndianUtils.read(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedInteger(1)"
call "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(1)" "org.apache.commons.io.EndianUtils.read(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedLong(2)"
call "org.apache.commons.io.EndianUtils.readSwappedLong(1)" "org.apache.commons.io.EndianUtils.read(1)"
call "org.apache.commons.io.EndianUtils.readSwappedLong(1)" "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedLong(1)"
call "org.apache.commons.io.EndianUtils.writeSwappedFloat(2)" "org.apache.commons.io.EndianUtils.writeSwappedInteger(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedFloat(2)"
call "org.apache.commons.io.EndianUtils.readSwappedFloat(1)" "org.apache.commons.io.EndianUtils.readSwappedInteger(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedFloat(1)"
call "org.apache.commons.io.EndianUtils.writeSwappedDouble(2)" "org.apache.commons.io.EndianUtils.writeSwappedLong(2)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.writeSwappedDouble(2)"
call "org.apache.commons.io.EndianUtils.readSwappedDouble(1)" "org.apache.commons.io.EndianUtils.readSwappedLong(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.readSwappedDouble(1)"
contain "org.apache.commons.io.EndianUtils" "org.apache.commons.io.EndianUtils.read(1)"
reference "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileDeleteStrategy"
reference "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)" "org.apache.commons.io.FileCleaningTracker.Tracker.path"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)" "org.apache.commons.io.FileCleaningTracker.Tracker.deleteStrategy"
contain "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.getPath(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.path"
contain "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker.Tracker.getPath(0)"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.deleteStrategy"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.path"
call "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)" "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)"
contain "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)"
contain "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker.Tracker.path"
reference "org.apache.commons.io.FileCleaningTracker.Tracker.deleteStrategy" "org.apache.commons.io.FileDeleteStrategy"
contain "org.apache.commons.io.FileCleaningTracker.Tracker" "org.apache.commons.io.FileCleaningTracker.Tracker.deleteStrategy"
reference "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
call "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.write(1)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.write(1)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.write(3)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.write(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.write(1)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.write(3)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.write(3)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.flush(0)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.flush(0)"
reference "org.apache.commons.io.output.FileWriterWithEncoding.close(0)" "org.apache.commons.io.output.FileWriterWithEncoding.out"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.close(0)"
contain "org.apache.commons.io.output.FileWriterWithEncoding" "org.apache.commons.io.output.FileWriterWithEncoding.out"
reference "org.apache.commons.io.input.CloseShieldInputStream" "org.apache.commons.io.input.ClosedInputStream"
reference "org.apache.commons.io.input.CloseShieldInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
contain "org.apache.commons.io.input.CloseShieldInputStream" "org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(1)"
call "org.apache.commons.io.input.CloseShieldInputStream.close(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
reference "org.apache.commons.io.input.CloseShieldInputStream.close(0)" "org.apache.commons.io.input.CloseShieldInputStream.in"
contain "org.apache.commons.io.input.CloseShieldInputStream" "org.apache.commons.io.input.CloseShieldInputStream.close(0)"
reference "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter(0)"
contain "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.EmptyFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}" "org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter(0)"
reference "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}" "org.apache.commons.io.filefilter.EmptyFileFilter.EMPTY"
call "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
reference "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}" "org.apache.commons.io.filefilter.EmptyFileFilter.NOT_EMPTY"
contain "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.EmptyFileFilter.EMPTY" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.EmptyFileFilter.EMPTY"
reference "org.apache.commons.io.filefilter.EmptyFileFilter.NOT_EMPTY" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.EmptyFileFilter" "org.apache.commons.io.filefilter.EmptyFileFilter.NOT_EMPTY"
reference "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.BOMInputStream"
reference "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReaderException"
reference "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.ByteOrderMark"
reference "org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding(0)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.BOMS"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.encoding"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.BOMS"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.encoding"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.BOMS"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.encoding"
reference "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)"
call "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
reference "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)" "org.apache.commons.io.input.XmlStreamReader.encoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
reference "org.apache.commons.io.input.XmlStreamReader.read(3)" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.read(3)"
reference "org.apache.commons.io.input.XmlStreamReader.close(0)" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.close(0)"
call "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)" "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)"
call "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)" "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(2)"
call "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)" "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)"
call "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)" "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)"
call "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)" "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)"
call "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)" "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(2)"
call "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)" "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)" "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)"
call "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)"
reference "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)"
reference "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
call "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(4)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(1)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.isAppXml(1)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.isTextXml(1)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)"
call "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)"
reference "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(1)"
reference "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)" "org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)"
reference "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(2)" "org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(2)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.isAppXml(1)"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.isTextXml(1)"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_8"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_16LE"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.input.XmlStreamReader.BOMS"
call "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN"
reference "org.apache.commons.io.input.XmlStreamReader.static {...}" "org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.static {...}"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.BUFFER_SIZE"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.UTF_8"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.US_ASCII"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.UTF_16BE"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.UTF_16LE"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.UTF_16"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.EBCDIC"
reference "org.apache.commons.io.input.XmlStreamReader.BOMS" "org.apache.commons.io.ByteOrderMark[]"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.BOMS"
reference "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES" "org.apache.commons.io.ByteOrderMark[]"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.reader"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.encoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.RAW_EX_1"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.RAW_EX_2"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_1"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_2"
contain "org.apache.commons.io.input.XmlStreamReader" "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_3"
reference "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
call "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)" "org.apache.commons.io.filefilter.NotFileFilter.filter"
contain "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
reference "org.apache.commons.io.filefilter.NotFileFilter.accept(1)" "org.apache.commons.io.filefilter.NotFileFilter.filter"
call "org.apache.commons.io.filefilter.NotFileFilter.accept(1)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.NotFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.NotFileFilter.accept(2)" "org.apache.commons.io.filefilter.NotFileFilter.filter"
call "org.apache.commons.io.filefilter.NotFileFilter.accept(2)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.NotFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.NotFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.NotFileFilter.toString(0)" "org.apache.commons.io.filefilter.NotFileFilter.filter"
contain "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.NotFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.NotFileFilter.filter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.NotFileFilter" "org.apache.commons.io.filefilter.NotFileFilter.filter"
reference "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter(0)"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.TrueFileFilter.static {...}" "org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter(0)"
reference "org.apache.commons.io.filefilter.TrueFileFilter.static {...}" "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
reference "org.apache.commons.io.filefilter.TrueFileFilter.static {...}" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.TrueFileFilter.TRUE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
reference "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.TrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
reference "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder"
reference "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.cutoff"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
call "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
reference "org.apache.commons.io.filefilter.AgeFileFilter.accept(1)" "org.apache.commons.io.filefilter.AgeFileFilter.cutoff"
call "org.apache.commons.io.filefilter.AgeFileFilter.accept(1)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
reference "org.apache.commons.io.filefilter.AgeFileFilter.accept(1)" "org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.AgeFileFilter.toString(0)" "org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder"
call "org.apache.commons.io.filefilter.AgeFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.AgeFileFilter.toString(0)" "org.apache.commons.io.filefilter.AgeFileFilter.cutoff"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.cutoff"
contain "org.apache.commons.io.filefilter.AgeFileFilter" "org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder"
call "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)" "org.apache.commons.io.IOExceptionWithCause.initCause(1)"
contain "org.apache.commons.io.IOExceptionWithCause" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
call "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(1)" "org.apache.commons.io.IOExceptionWithCause.initCause(1)"
contain "org.apache.commons.io.IOExceptionWithCause" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(1)"
contain "org.apache.commons.io.IOExceptionWithCause" "org.apache.commons.io.IOExceptionWithCause.serialVersionUID"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.CopyUtils(0)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtils.copy(2)" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtils.copy(3)" "org.apache.commons.io.CopyUtils.copy(3)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(3)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtils.copy(2)" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtils.copy(3)" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(3)"
call "org.apache.commons.io.CopyUtils.copy(2)" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtils.copy(2)" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.copy(2)"
contain "org.apache.commons.io.CopyUtils" "org.apache.commons.io.CopyUtils.DEFAULT_BUFFER_SIZE"
reference "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.filefilter.TrueFileFilter"
reference "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.filefilter.FileFilterUtils"
call "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
reference "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)" "org.apache.commons.io.DirectoryWalker.filter"
reference "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)" "org.apache.commons.io.DirectoryWalker.depthLimit"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
reference "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.DirectoryWalker.filter"
reference "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
call "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)"
call "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)"
call "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
reference "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)" "org.apache.commons.io.DirectoryWalker.depthLimit"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)"
call "org.apache.commons.io.DirectoryWalker.walk(2)" "org.apache.commons.io.DirectoryWalker.handleStart(2)"
call "org.apache.commons.io.DirectoryWalker.walk(2)" "org.apache.commons.io.DirectoryWalker.walk(3)"
call "org.apache.commons.io.DirectoryWalker.walk(2)" "org.apache.commons.io.DirectoryWalker.handleEnd(1)"
call "org.apache.commons.io.DirectoryWalker.walk(2)" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.walk(2)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.checkIfCancelled(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.handleDirectory(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.handleDirectoryStart(3)"
reference "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.depthLimit"
reference "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.filter"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.filterDirectoryContents(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.handleRestricted(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.walk(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.handleFile(3)"
call "org.apache.commons.io.DirectoryWalker.walk(3)" "org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.walk(3)"
call "org.apache.commons.io.DirectoryWalker.checkIfCancelled(3)" "org.apache.commons.io.DirectoryWalker.handleIsCancelled(3)"
call "org.apache.commons.io.DirectoryWalker.checkIfCancelled(3)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.checkIfCancelled(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleIsCancelled(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleStart(2)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleDirectory(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleDirectoryStart(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.filterDirectoryContents(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleFile(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleRestricted(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(3)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.handleEnd(1)"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.filter"
contain "org.apache.commons.io.DirectoryWalker" "org.apache.commons.io.DirectoryWalker.depthLimit"
reference "org.apache.commons.io.output.ByteArrayOutputStream" "byte[]"
reference "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.input.ClosedInputStream"
call "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
call "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex"
reference "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
reference "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(3)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(3)" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(3)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
call "org.apache.commons.io.output.ByteArrayOutputStream.write(3)" "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.write(3)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
call "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
call "org.apache.commons.io.output.ByteArrayOutputStream.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.size(0)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.close(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex"
reference "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
reference "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)"
call "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
call "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
call "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)" "org.apache.commons.io.output.ByteArrayOutputStream.count"
reference "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)" "org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY"
reference "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.output.ByteArrayOutputStream.toString(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.toString(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStream.static {...}" "org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.static {...}"
reference "org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY" "byte[]"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
reference "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer" "byte[]"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
contain "org.apache.commons.io.output.ByteArrayOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream.count"
contain "org.apache.commons.io.filefilter.ConditionalFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(1)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(1)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(1)"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.HexDump(0)"
call "org.apache.commons.io.HexDump.dump(4)" "org.apache.commons.io.HexDump.dump(2)"
call "org.apache.commons.io.HexDump.dump(4)" "org.apache.commons.io.HexDump.dump(2)"
reference "org.apache.commons.io.HexDump.dump(4)" "org.apache.commons.io.HexDump.EOL"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.dump(4)"
reference "org.apache.commons.io.HexDump.dump(2)" "org.apache.commons.io.HexDump._hexcodes"
reference "org.apache.commons.io.HexDump.dump(2)" "org.apache.commons.io.HexDump._shifts"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.dump(2)"
reference "org.apache.commons.io.HexDump.dump(2)" "org.apache.commons.io.HexDump._hexcodes"
reference "org.apache.commons.io.HexDump.dump(2)" "org.apache.commons.io.HexDump._shifts"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.dump(2)"
reference "org.apache.commons.io.HexDump.static {...}" "org.apache.commons.io.HexDump.EOL"
reference "org.apache.commons.io.HexDump.static {...}" "org.apache.commons.io.HexDump._hexcodes"
reference "org.apache.commons.io.HexDump.static {...}" "org.apache.commons.io.HexDump._shifts"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.static {...}"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump.EOL"
reference "org.apache.commons.io.HexDump._hexcodes" "char[]"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump._hexcodes"
reference "org.apache.commons.io.HexDump._shifts" "int[]"
contain "org.apache.commons.io.HexDump" "org.apache.commons.io.HexDump._shifts"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.ProxyReader(1)"
call "org.apache.commons.io.input.ProxyReader.read(0)" "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyReader.read(0)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.read(0)" "org.apache.commons.io.input.ProxyReader.afterRead(1)"
call "org.apache.commons.io.input.ProxyReader.read(0)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.read(0)"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.afterRead(1)"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.read(1)"
call "org.apache.commons.io.input.ProxyReader.read(3)" "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyReader.read(3)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.read(3)" "org.apache.commons.io.input.ProxyReader.afterRead(1)"
call "org.apache.commons.io.input.ProxyReader.read(3)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.read(3)"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.afterRead(1)"
call "org.apache.commons.io.input.ProxyReader.read(1)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.read(1)"
reference "org.apache.commons.io.input.ProxyReader.skip(1)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.skip(1)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.skip(1)"
reference "org.apache.commons.io.input.ProxyReader.ready(0)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.ready(0)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.ready(0)"
reference "org.apache.commons.io.input.ProxyReader.close(0)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.close(0)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.close(0)"
reference "org.apache.commons.io.input.ProxyReader.mark(1)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.mark(1)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.mark(1)"
reference "org.apache.commons.io.input.ProxyReader.reset(0)" "org.apache.commons.io.input.ProxyReader.in"
call "org.apache.commons.io.input.ProxyReader.reset(0)" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.reset(0)"
reference "org.apache.commons.io.input.ProxyReader.markSupported(0)" "org.apache.commons.io.input.ProxyReader.in"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.markSupported(0)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.afterRead(1)"
contain "org.apache.commons.io.input.ProxyReader" "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.FilenameUtils"
call "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)"
call "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)" "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)"
call "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)" "org.apache.commons.io.FilenameUtils.getExtension(1)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)" "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
call "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)" "org.apache.commons.io.IOCase.checkCompareTo(2)"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)"
call "org.apache.commons.io.comparator.ExtensionFileComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.toString(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)"
call "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
call "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE"
reference "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.comparator.ExtensionFileComparator" "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
reference "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)"
contain "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.DirectoryFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.DirectoryFileFilter.static {...}" "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)"
reference "org.apache.commons.io.filefilter.DirectoryFileFilter.static {...}" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
reference "org.apache.commons.io.filefilter.DirectoryFileFilter.static {...}" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
contain "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.DirectoryFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
reference "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.DirectoryFileFilter" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
reference "org.apache.commons.io.IOUtils" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.IOUtils" "org.apache.commons.io.output.StringBuilderWriter"
reference "org.apache.commons.io.IOUtils" "org.apache.commons.io.LineIterator"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.IOUtils(0)"
call "org.apache.commons.io.IOUtils.closeQuietly(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtils.closeQuietly(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtils.closeQuietly(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtils.closeQuietly(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtils.toBufferedInputStream(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toBufferedInputStream(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toBufferedReader(1)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtils.toByteArray(2)" "org.apache.commons.io.IOUtils.toByteArray(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.toByteArray(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtils.toByteArray(2)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtils.toByteArray(2)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtils.toByteArray(2)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtils.toCharArray(1)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toCharArray(1)"
call "org.apache.commons.io.IOUtils.toCharArray(2)" "org.apache.commons.io.IOUtils.copy(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toCharArray(2)"
call "org.apache.commons.io.IOUtils.toCharArray(1)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toCharArray(1)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtils.toString(2)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.IOUtils.toString(2)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtils.toString(2)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtils.toString(2)" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.IOUtils.toString(1)" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtils.toString(2)" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.IOUtils.readLines(1)" "org.apache.commons.io.IOUtils.readLines(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readLines(1)"
call "org.apache.commons.io.IOUtils.readLines(2)" "org.apache.commons.io.IOUtils.readLines(1)"
call "org.apache.commons.io.IOUtils.readLines(2)" "org.apache.commons.io.IOUtils.readLines(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readLines(2)"
call "org.apache.commons.io.IOUtils.readLines(1)" "org.apache.commons.io.IOUtils.toBufferedReader(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readLines(1)"
call "org.apache.commons.io.IOUtils.lineIterator(1)" "org.apache.commons.io.LineIterator.LineIterator(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.lineIterator(1)"
call "org.apache.commons.io.IOUtils.lineIterator(2)" "org.apache.commons.io.LineIterator.LineIterator(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.lineIterator(2)"
call "org.apache.commons.io.IOUtils.toInputStream(1)" "org.apache.commons.io.IOUtils.toInputStream(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toInputStream(1)"
call "org.apache.commons.io.IOUtils.toInputStream(2)" "org.apache.commons.io.IOUtils.toInputStream(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toInputStream(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toInputStream(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.toInputStream(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(3)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(3)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtils.write(2)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(2)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(3)" "org.apache.commons.io.IOUtils.write(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(3)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtils.write(3)" "org.apache.commons.io.IOUtils.write(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.write(3)"
reference "org.apache.commons.io.IOUtils.writeLines(3)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtils.writeLines(4)" "org.apache.commons.io.IOUtils.writeLines(3)"
reference "org.apache.commons.io.IOUtils.writeLines(4)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.writeLines(4)"
reference "org.apache.commons.io.IOUtils.writeLines(3)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtils.copy(2)" "org.apache.commons.io.IOUtils.copyLarge(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copyLarge(2)" "org.apache.commons.io.IOUtils.copyLarge(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(3)"
call "org.apache.commons.io.IOUtils.copyLarge(4)" "org.apache.commons.io.IOUtils.copyLarge(5)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtils.copyLarge(5)" "org.apache.commons.io.IOUtils.skipFully(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(5)"
call "org.apache.commons.io.IOUtils.copy(2)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copy(3)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copy(3)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtils.copy(2)" "org.apache.commons.io.IOUtils.copyLarge(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copyLarge(2)" "org.apache.commons.io.IOUtils.copyLarge(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(3)"
call "org.apache.commons.io.IOUtils.copyLarge(4)" "org.apache.commons.io.IOUtils.copyLarge(5)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtils.copyLarge(5)" "org.apache.commons.io.IOUtils.skipFully(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copyLarge(5)"
call "org.apache.commons.io.IOUtils.copy(2)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copy(3)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtils.copy(3)" "org.apache.commons.io.IOUtils.copy(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.copy(3)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.IOUtils.contentEquals(2)" "org.apache.commons.io.IOUtils.toBufferedReader(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(2)" "org.apache.commons.io.IOUtils.toBufferedReader(1)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(2)"
reference "org.apache.commons.io.IOUtils.skip(2)" "org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.skip(2)"
reference "org.apache.commons.io.IOUtils.skip(2)" "org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.skip(2)"
call "org.apache.commons.io.IOUtils.skipFully(2)" "org.apache.commons.io.IOUtils.skip(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.skipFully(2)"
call "org.apache.commons.io.IOUtils.skipFully(2)" "org.apache.commons.io.IOUtils.skip(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.skipFully(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.read(4)"
call "org.apache.commons.io.IOUtils.read(2)" "org.apache.commons.io.IOUtils.read(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.read(2)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.read(4)"
call "org.apache.commons.io.IOUtils.read(2)" "org.apache.commons.io.IOUtils.read(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.read(2)"
call "org.apache.commons.io.IOUtils.readFully(4)" "org.apache.commons.io.IOUtils.read(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtils.readFully(2)" "org.apache.commons.io.IOUtils.readFully(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readFully(2)"
call "org.apache.commons.io.IOUtils.readFully(4)" "org.apache.commons.io.IOUtils.read(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtils.readFully(2)" "org.apache.commons.io.IOUtils.readFully(4)"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.readFully(2)"
reference "org.apache.commons.io.IOUtils.static {...}" "org.apache.commons.io.IOUtils.DIR_SEPARATOR"
call "org.apache.commons.io.IOUtils.static {...}" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
call "org.apache.commons.io.IOUtils.static {...}" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
reference "org.apache.commons.io.IOUtils.static {...}" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.static {...}"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.EOF"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.DIR_SEPARATOR_UNIX"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.DIR_SEPARATOR_WINDOWS"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.DIR_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.LINE_SEPARATOR_UNIX"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.LINE_SEPARATOR_WINDOWS"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.DEFAULT_BUFFER_SIZE"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.SKIP_BUFFER_SIZE"
reference "org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER" "char[]"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER"
reference "org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER" "byte[]"
contain "org.apache.commons.io.IOUtils" "org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER"
reference "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.accept(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.accept(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.SuffixFileFilter.accept(1)" "org.apache.commons.io.IOCase.checkEndsWith(2)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.accept(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.accept(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.SuffixFileFilter.accept(2)" "org.apache.commons.io.IOCase.checkEndsWith(2)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.SuffixFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.toString(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
reference "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.filefilter.SuffixFileFilter" "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.append(1)"
call "org.apache.commons.io.output.ProxyWriter.append(3)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.append(3)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.append(3)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.append(3)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.append(3)"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.append(1)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.append(1)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.write(3)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.write(1)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
call "org.apache.commons.io.output.ProxyWriter.write(3)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.write(3)"
reference "org.apache.commons.io.output.ProxyWriter.flush(0)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.flush(0)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.flush(0)"
reference "org.apache.commons.io.output.ProxyWriter.close(0)" "org.apache.commons.io.output.ProxyWriter.out"
call "org.apache.commons.io.output.ProxyWriter.close(0)" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.close(0)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
contain "org.apache.commons.io.output.ProxyWriter" "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
reference "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy"
reference "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy(0)" "org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(1)"
contain "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy(0)"
call "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.doDelete(1)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.doDelete(1)"
call "org.apache.commons.io.input.NullInputStream.NullInputStream(1)" "org.apache.commons.io.input.NullInputStream.NullInputStream(3)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
reference "org.apache.commons.io.input.NullInputStream.NullInputStream(3)" "org.apache.commons.io.input.NullInputStream.mark"
reference "org.apache.commons.io.input.NullInputStream.NullInputStream(3)" "org.apache.commons.io.input.NullInputStream.size"
reference "org.apache.commons.io.input.NullInputStream.NullInputStream(3)" "org.apache.commons.io.input.NullInputStream.markSupported"
reference "org.apache.commons.io.input.NullInputStream.NullInputStream(3)" "org.apache.commons.io.input.NullInputStream.throwEofException"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.NullInputStream(3)"
reference "org.apache.commons.io.input.NullInputStream.getPosition(0)" "org.apache.commons.io.input.NullInputStream.position"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.getPosition(0)"
reference "org.apache.commons.io.input.NullInputStream.getSize(0)" "org.apache.commons.io.input.NullInputStream.size"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.getSize(0)"
reference "org.apache.commons.io.input.NullInputStream.available(0)" "org.apache.commons.io.input.NullInputStream.size"
reference "org.apache.commons.io.input.NullInputStream.available(0)" "org.apache.commons.io.input.NullInputStream.position"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.available(0)"
reference "org.apache.commons.io.input.NullInputStream.close(0)" "org.apache.commons.io.input.NullInputStream.eof"
reference "org.apache.commons.io.input.NullInputStream.close(0)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.close(0)" "org.apache.commons.io.input.NullInputStream.mark"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.close(0)"
reference "org.apache.commons.io.input.NullInputStream.mark(1)" "org.apache.commons.io.input.NullInputStream.markSupported"
reference "org.apache.commons.io.input.NullInputStream.mark(1)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.mark(1)" "org.apache.commons.io.input.NullInputStream.mark"
reference "org.apache.commons.io.input.NullInputStream.mark(1)" "org.apache.commons.io.input.NullInputStream.readlimit"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.mark(1)"
reference "org.apache.commons.io.input.NullInputStream.markSupported(0)" "org.apache.commons.io.input.NullInputStream.markSupported"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.markSupported(0)"
reference "org.apache.commons.io.input.NullInputStream.read(0)" "org.apache.commons.io.input.NullInputStream.eof"
reference "org.apache.commons.io.input.NullInputStream.read(0)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.read(0)" "org.apache.commons.io.input.NullInputStream.size"
call "org.apache.commons.io.input.NullInputStream.read(0)" "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)"
call "org.apache.commons.io.input.NullInputStream.read(0)" "org.apache.commons.io.input.NullInputStream.processByte(0)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.read(0)"
call "org.apache.commons.io.input.NullInputStream.read(1)" "org.apache.commons.io.input.NullInputStream.read(3)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.read(1)"
reference "org.apache.commons.io.input.NullInputStream.read(3)" "org.apache.commons.io.input.NullInputStream.eof"
reference "org.apache.commons.io.input.NullInputStream.read(3)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.read(3)" "org.apache.commons.io.input.NullInputStream.size"
call "org.apache.commons.io.input.NullInputStream.read(3)" "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)"
call "org.apache.commons.io.input.NullInputStream.read(3)" "org.apache.commons.io.input.NullInputStream.processBytes(3)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.read(3)"
reference "org.apache.commons.io.input.NullInputStream.reset(0)" "org.apache.commons.io.input.NullInputStream.markSupported"
reference "org.apache.commons.io.input.NullInputStream.reset(0)" "org.apache.commons.io.input.NullInputStream.mark"
reference "org.apache.commons.io.input.NullInputStream.reset(0)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.reset(0)" "org.apache.commons.io.input.NullInputStream.readlimit"
reference "org.apache.commons.io.input.NullInputStream.reset(0)" "org.apache.commons.io.input.NullInputStream.eof"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.reset(0)"
reference "org.apache.commons.io.input.NullInputStream.skip(1)" "org.apache.commons.io.input.NullInputStream.eof"
reference "org.apache.commons.io.input.NullInputStream.skip(1)" "org.apache.commons.io.input.NullInputStream.position"
reference "org.apache.commons.io.input.NullInputStream.skip(1)" "org.apache.commons.io.input.NullInputStream.size"
call "org.apache.commons.io.input.NullInputStream.skip(1)" "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.skip(1)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.processByte(0)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.processBytes(3)"
reference "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)" "org.apache.commons.io.input.NullInputStream.eof"
reference "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)" "org.apache.commons.io.input.NullInputStream.throwEofException"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.size"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.position"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.mark"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.readlimit"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.eof"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.throwEofException"
contain "org.apache.commons.io.input.NullInputStream" "org.apache.commons.io.input.NullInputStream.markSupported"
reference "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
call "org.apache.commons.io.comparator.LastModifiedFileComparator.LastModifiedFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.LastModifiedFileComparator(0)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.compare(2)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.compare(2)"
call "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}" "org.apache.commons.io.comparator.LastModifiedFileComparator.LastModifiedFileComparator(0)"
reference "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR"
call "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR"
contain "org.apache.commons.io.comparator.LastModifiedFileComparator" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE"
reference "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.IOExceptionWithCause"
reference "org.apache.commons.io.TaggedIOException.isTaggedWith(2)" "org.apache.commons.io.TaggedIOException.tag"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
call "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)" "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
call "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)" "org.apache.commons.io.TaggedIOException.getCause(0)"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)"
call "org.apache.commons.io.TaggedIOException.TaggedIOException(2)" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
reference "org.apache.commons.io.TaggedIOException.TaggedIOException(2)" "org.apache.commons.io.TaggedIOException.tag"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
reference "org.apache.commons.io.TaggedIOException.getTag(0)" "org.apache.commons.io.TaggedIOException.tag"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.getTag(0)"
call "org.apache.commons.io.TaggedIOException.getCause(0)" "org.apache.commons.io.IOExceptionWithCause.getCause(0)"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.getCause(0)"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.serialVersionUID"
contain "org.apache.commons.io.TaggedIOException" "org.apache.commons.io.TaggedIOException.tag"
reference "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileDeleteStrategy"
reference "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.Reaper"
reference "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.Tracker"
reference "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)" "org.apache.commons.io.FileCleaningTracker.q"
reference "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)" "org.apache.commons.io.FileCleaningTracker.trackers"
reference "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
reference "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)"
call "org.apache.commons.io.FileCleaningTracker.track(2)" "org.apache.commons.io.FileCleaningTracker.track(3)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTracker.track(3)" "org.apache.commons.io.FileCleaningTracker.addTracker(3)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.track(3)"
call "org.apache.commons.io.FileCleaningTracker.track(2)" "org.apache.commons.io.FileCleaningTracker.track(3)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTracker.track(3)" "org.apache.commons.io.FileCleaningTracker.addTracker(3)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.track(3)"
reference "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.reaper"
call "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)"
reference "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.trackers"
reference "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.q"
call "org.apache.commons.io.FileCleaningTracker.addTracker(3)" "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.addTracker(3)"
reference "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)" "org.apache.commons.io.FileCleaningTracker.trackers"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
reference "org.apache.commons.io.FileCleaningTracker.getDeleteFailures(0)" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.getDeleteFailures(0)"
reference "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.q"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.trackers"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
contain "org.apache.commons.io.FileCleaningTracker" "org.apache.commons.io.FileCleaningTracker.reaper"
reference "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
call "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.accept(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
call "org.apache.commons.io.filefilter.DelegateFileFilter.accept(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.accept(2)" "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
call "org.apache.commons.io.filefilter.DelegateFileFilter.accept(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.accept(2)"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.toString(0)" "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
reference "org.apache.commons.io.filefilter.DelegateFileFilter.toString(0)" "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
call "org.apache.commons.io.filefilter.DelegateFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
contain "org.apache.commons.io.filefilter.DelegateFileFilter" "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
reference "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.TailerListener"
reference "org.apache.commons.io.input.Tailer" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.input.Tailer" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.input.Tailer.Tailer(2)" "org.apache.commons.io.input.Tailer.Tailer(3)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.Tailer(2)"
call "org.apache.commons.io.input.Tailer.Tailer(3)" "org.apache.commons.io.input.Tailer.Tailer(4)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.Tailer(3)"
reference "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.Tailer.run"
reference "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.Tailer.file"
reference "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.Tailer.delay"
reference "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.Tailer.end"
reference "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.Tailer.listener"
call "org.apache.commons.io.input.Tailer.Tailer(4)" "org.apache.commons.io.input.TailerListener.init(1)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.Tailer(4)"
call "org.apache.commons.io.input.Tailer.create(4)" "org.apache.commons.io.input.Tailer.Tailer(4)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.create(4)"
call "org.apache.commons.io.input.Tailer.create(3)" "org.apache.commons.io.input.Tailer.create(4)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.create(3)"
call "org.apache.commons.io.input.Tailer.create(2)" "org.apache.commons.io.input.Tailer.create(4)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.create(2)"
reference "org.apache.commons.io.input.Tailer.getFile(0)" "org.apache.commons.io.input.Tailer.file"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.getFile(0)"
reference "org.apache.commons.io.input.Tailer.getDelay(0)" "org.apache.commons.io.input.Tailer.delay"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.getDelay(0)"
reference "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.run"
reference "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.file"
reference "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.listener"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.TailerListener.fileNotFound(0)"
reference "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.delay"
reference "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.end"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.TailerListener.fileRotated(0)"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.Tailer.readLines(1)"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.input.Tailer.run(0)" "org.apache.commons.io.input.TailerListener.handle(1)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.run(0)"
reference "org.apache.commons.io.input.Tailer.stop(0)" "org.apache.commons.io.input.Tailer.run"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.stop(0)"
call "org.apache.commons.io.input.Tailer.readLines(1)" "org.apache.commons.io.input.Tailer.readLine(1)"
reference "org.apache.commons.io.input.Tailer.readLines(1)" "org.apache.commons.io.input.Tailer.listener"
call "org.apache.commons.io.input.Tailer.readLines(1)" "org.apache.commons.io.input.TailerListener.handle(1)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.readLines(1)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.readLine(1)"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.file"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.delay"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.end"
reference "org.apache.commons.io.input.Tailer.listener" "org.apache.commons.io.input.TailerListener"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.listener"
contain "org.apache.commons.io.input.Tailer" "org.apache.commons.io.input.Tailer.run"
reference "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker"
call "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(3)"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
reference "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(3)" "org.apache.commons.io.DirectoryWalker.CancelException.file"
reference "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(3)" "org.apache.commons.io.DirectoryWalker.CancelException.depth"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(3)"
reference "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)" "org.apache.commons.io.DirectoryWalker.CancelException.file"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
reference "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)" "org.apache.commons.io.DirectoryWalker.CancelException.depth"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.serialVersionUID"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.file"
contain "org.apache.commons.io.DirectoryWalker.CancelException" "org.apache.commons.io.DirectoryWalker.CancelException.depth"
reference "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter"
call "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)"
call "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
call "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)" "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(1)"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
reference "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(1)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(1)"
reference "org.apache.commons.io.filefilter.AndFileFilter.getFileFilters(0)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.getFileFilters(0)"
reference "org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(1)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(1)"
reference "org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(1)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(1)"
reference "org.apache.commons.io.filefilter.AndFileFilter.accept(1)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.AndFileFilter.accept(1)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.AndFileFilter.accept(2)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.AndFileFilter.accept(2)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.AndFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.AndFileFilter.toString(0)" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.AndFileFilter" "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
reference "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.input.TeeInputStream.TeeInputStream(2)" "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.TeeInputStream(2)"
call "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
reference "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)" "org.apache.commons.io.input.TeeInputStream.branch"
reference "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)" "org.apache.commons.io.input.TeeInputStream.closeBranch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)"
call "org.apache.commons.io.input.TeeInputStream.close(0)" "org.apache.commons.io.input.ProxyInputStream.close(0)"
reference "org.apache.commons.io.input.TeeInputStream.close(0)" "org.apache.commons.io.input.TeeInputStream.closeBranch"
reference "org.apache.commons.io.input.TeeInputStream.close(0)" "org.apache.commons.io.input.TeeInputStream.branch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.close(0)"
call "org.apache.commons.io.input.TeeInputStream.read(0)" "org.apache.commons.io.input.ProxyInputStream.read(0)"
reference "org.apache.commons.io.input.TeeInputStream.read(0)" "org.apache.commons.io.input.TeeInputStream.branch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.read(0)"
call "org.apache.commons.io.input.TeeInputStream.read(3)" "org.apache.commons.io.input.ProxyInputStream.read(3)"
reference "org.apache.commons.io.input.TeeInputStream.read(3)" "org.apache.commons.io.input.TeeInputStream.branch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.read(3)"
call "org.apache.commons.io.input.TeeInputStream.read(1)" "org.apache.commons.io.input.ProxyInputStream.read(1)"
reference "org.apache.commons.io.input.TeeInputStream.read(1)" "org.apache.commons.io.input.TeeInputStream.branch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.read(1)"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.branch"
contain "org.apache.commons.io.input.TeeInputStream" "org.apache.commons.io.input.TeeInputStream.closeBranch"
reference "org.apache.commons.io.FileCleaningTracker.Reaper" "org.apache.commons.io.FileCleaningTracker.Tracker"
reference "org.apache.commons.io.FileCleaningTracker.Reaper" "org.apache.commons.io.FileCleaningTracker"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)" "org.apache.commons.io.FileCleaningTracker.Reaper.this$0"
call "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)" "org.apache.commons.io.FileCleaningTracker.Reaper.setPriority(1)"
call "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)" "org.apache.commons.io.FileCleaningTracker.Reaper.setDaemon(1)"
contain "org.apache.commons.io.FileCleaningTracker.Reaper" "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.Reaper.this$0"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.trackers"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.q"
call "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
call "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.getPath(0)"
call "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)" "org.apache.commons.io.FileCleaningTracker.Tracker.clear(0)"
contain "org.apache.commons.io.FileCleaningTracker.Reaper" "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)"
reference "org.apache.commons.io.FileCleaningTracker.Reaper.this$0" "org.apache.commons.io.FileCleaningTracker"
contain "org.apache.commons.io.FileCleaningTracker.Reaper" "org.apache.commons.io.FileCleaningTracker.Reaper.this$0"
reference "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)" "org.apache.commons.io.input.CharSequenceReader.charSequence"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
reference "org.apache.commons.io.input.CharSequenceReader.close(0)" "org.apache.commons.io.input.CharSequenceReader.idx"
reference "org.apache.commons.io.input.CharSequenceReader.close(0)" "org.apache.commons.io.input.CharSequenceReader.mark"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.close(0)"
reference "org.apache.commons.io.input.CharSequenceReader.mark(1)" "org.apache.commons.io.input.CharSequenceReader.idx"
reference "org.apache.commons.io.input.CharSequenceReader.mark(1)" "org.apache.commons.io.input.CharSequenceReader.mark"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.mark(1)"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.markSupported(0)"
reference "org.apache.commons.io.input.CharSequenceReader.read(0)" "org.apache.commons.io.input.CharSequenceReader.idx"
reference "org.apache.commons.io.input.CharSequenceReader.read(0)" "org.apache.commons.io.input.CharSequenceReader.charSequence"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.read(0)"
reference "org.apache.commons.io.input.CharSequenceReader.read(3)" "org.apache.commons.io.input.CharSequenceReader.idx"
reference "org.apache.commons.io.input.CharSequenceReader.read(3)" "org.apache.commons.io.input.CharSequenceReader.charSequence"
call "org.apache.commons.io.input.CharSequenceReader.read(3)" "org.apache.commons.io.input.CharSequenceReader.read(0)"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.read(3)"
reference "org.apache.commons.io.input.CharSequenceReader.reset(0)" "org.apache.commons.io.input.CharSequenceReader.mark"
reference "org.apache.commons.io.input.CharSequenceReader.reset(0)" "org.apache.commons.io.input.CharSequenceReader.idx"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.reset(0)"
reference "org.apache.commons.io.input.CharSequenceReader.skip(1)" "org.apache.commons.io.input.CharSequenceReader.idx"
reference "org.apache.commons.io.input.CharSequenceReader.skip(1)" "org.apache.commons.io.input.CharSequenceReader.charSequence"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.skip(1)"
reference "org.apache.commons.io.input.CharSequenceReader.toString(0)" "org.apache.commons.io.input.CharSequenceReader.charSequence"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.toString(0)"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.charSequence"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.idx"
contain "org.apache.commons.io.input.CharSequenceReader" "org.apache.commons.io.input.CharSequenceReader.mark"
reference "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
call "org.apache.commons.io.comparator.DefaultFileComparator.DefaultFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.DefaultFileComparator(0)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.compare(2)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.compare(2)"
call "org.apache.commons.io.comparator.DefaultFileComparator.static {...}" "org.apache.commons.io.comparator.DefaultFileComparator.DefaultFileComparator(0)"
reference "org.apache.commons.io.comparator.DefaultFileComparator.static {...}" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR"
call "org.apache.commons.io.comparator.DefaultFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.DefaultFileComparator.static {...}" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.static {...}"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR"
contain "org.apache.commons.io.comparator.DefaultFileComparator" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE"
reference "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
reference "org.apache.commons.io.filefilter.NameFileFilter.accept(1)" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.accept(1)" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.NameFileFilter.accept(1)" "org.apache.commons.io.IOCase.checkEquals(2)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.NameFileFilter.accept(2)" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.accept(2)" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.NameFileFilter.accept(2)" "org.apache.commons.io.IOCase.checkEquals(2)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.NameFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.NameFileFilter.toString(0)" "org.apache.commons.io.filefilter.NameFileFilter.names"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.names"
reference "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.filefilter.NameFileFilter" "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
reference "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
reference "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
reference "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
reference "org.apache.commons.io.output.StringBuilderWriter.append(1)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.append(1)"
reference "org.apache.commons.io.output.StringBuilderWriter.append(1)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.append(1)"
reference "org.apache.commons.io.output.StringBuilderWriter.append(3)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.append(3)"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.close(0)"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.flush(0)"
reference "org.apache.commons.io.output.StringBuilderWriter.write(1)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.write(1)"
reference "org.apache.commons.io.output.StringBuilderWriter.write(3)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.write(3)"
reference "org.apache.commons.io.output.StringBuilderWriter.getBuilder(0)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.getBuilder(0)"
reference "org.apache.commons.io.output.StringBuilderWriter.toString(0)" "org.apache.commons.io.output.StringBuilderWriter.builder"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
contain "org.apache.commons.io.output.StringBuilderWriter" "org.apache.commons.io.output.StringBuilderWriter.builder"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.no"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.access$300(1)"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.access$400(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.no"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.access$300(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.access$500(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.no"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.access$600(1)"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(2)"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.access$500(1)"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.access$700(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(2)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
call "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(2)" "org.apache.commons.io.input.ReversedLinesFileReader.access$800(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(4)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$100(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$200(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.no"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data" "byte[]"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver" "byte[]"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
reference "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReader.FilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
reference "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.ProxyOutputStream"
call "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
reference "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)"
call "org.apache.commons.io.output.TeeOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.write(1)"
reference "org.apache.commons.io.output.TeeOutputStream.write(1)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.write(1)"
call "org.apache.commons.io.output.TeeOutputStream.write(3)" "org.apache.commons.io.output.ProxyOutputStream.write(3)"
reference "org.apache.commons.io.output.TeeOutputStream.write(3)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.write(3)"
call "org.apache.commons.io.output.TeeOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.write(1)"
reference "org.apache.commons.io.output.TeeOutputStream.write(1)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.write(1)"
call "org.apache.commons.io.output.TeeOutputStream.flush(0)" "org.apache.commons.io.output.ProxyOutputStream.flush(0)"
reference "org.apache.commons.io.output.TeeOutputStream.flush(0)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.flush(0)"
call "org.apache.commons.io.output.TeeOutputStream.close(0)" "org.apache.commons.io.output.ProxyOutputStream.close(0)"
reference "org.apache.commons.io.output.TeeOutputStream.close(0)" "org.apache.commons.io.output.TeeOutputStream.branch"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.close(0)"
contain "org.apache.commons.io.output.TeeOutputStream" "org.apache.commons.io.output.TeeOutputStream.branch"
reference "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.input.XmlStreamReader"
call "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)"
reference "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)" "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
reference "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)" "org.apache.commons.io.output.XmlStreamWriter.out"
reference "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)" "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
call "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)"
call "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
reference "org.apache.commons.io.output.XmlStreamWriter.getEncoding(0)" "org.apache.commons.io.output.XmlStreamWriter.encoding"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.getEncoding(0)"
reference "org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding(0)" "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding(0)"
reference "org.apache.commons.io.output.XmlStreamWriter.close(0)" "org.apache.commons.io.output.XmlStreamWriter.writer"
reference "org.apache.commons.io.output.XmlStreamWriter.close(0)" "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
reference "org.apache.commons.io.output.XmlStreamWriter.close(0)" "org.apache.commons.io.output.XmlStreamWriter.encoding"
reference "org.apache.commons.io.output.XmlStreamWriter.close(0)" "org.apache.commons.io.output.XmlStreamWriter.out"
reference "org.apache.commons.io.output.XmlStreamWriter.close(0)" "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.close(0)"
reference "org.apache.commons.io.output.XmlStreamWriter.flush(0)" "org.apache.commons.io.output.XmlStreamWriter.writer"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.flush(0)"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.ENCODING_PATTERN"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.encoding"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.out"
reference "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)" "org.apache.commons.io.output.XmlStreamWriter.writer"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)"
reference "org.apache.commons.io.output.XmlStreamWriter.write(3)" "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
call "org.apache.commons.io.output.XmlStreamWriter.write(3)" "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)"
reference "org.apache.commons.io.output.XmlStreamWriter.write(3)" "org.apache.commons.io.output.XmlStreamWriter.writer"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.write(3)"
reference "org.apache.commons.io.output.XmlStreamWriter.static {...}" "org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN"
reference "org.apache.commons.io.output.XmlStreamWriter.static {...}" "org.apache.commons.io.output.XmlStreamWriter.ENCODING_PATTERN"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.static {...}"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.BUFFER_SIZE"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.out"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.writer"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.encoding"
contain "org.apache.commons.io.output.XmlStreamWriter" "org.apache.commons.io.output.XmlStreamWriter.ENCODING_PATTERN"
reference "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.ProxyOutputStream"
call "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
reference "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)" "org.apache.commons.io.output.CountingOutputStream.count"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)"
reference "org.apache.commons.io.output.CountingOutputStream.beforeWrite(1)" "org.apache.commons.io.output.CountingOutputStream.count"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.beforeWrite(1)"
call "org.apache.commons.io.output.CountingOutputStream.getCount(0)" "org.apache.commons.io.output.CountingOutputStream.getByteCount(0)"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.getCount(0)"
call "org.apache.commons.io.output.CountingOutputStream.resetCount(0)" "org.apache.commons.io.output.CountingOutputStream.resetByteCount(0)"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.resetCount(0)"
reference "org.apache.commons.io.output.CountingOutputStream.getByteCount(0)" "org.apache.commons.io.output.CountingOutputStream.count"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.getByteCount(0)"
reference "org.apache.commons.io.output.CountingOutputStream.resetByteCount(0)" "org.apache.commons.io.output.CountingOutputStream.count"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.resetByteCount(0)"
contain "org.apache.commons.io.output.CountingOutputStream" "org.apache.commons.io.output.CountingOutputStream.count"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onStart(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onFileChange(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(1)"
contain "org.apache.commons.io.monitor.FileAlterationListener" "org.apache.commons.io.monitor.FileAlterationListener.onStop(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
call "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.closed"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
call "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.currentOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.prefix"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.suffix"
reference "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)" "org.apache.commons.io.output.DeferredFileOutputStream.directory"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.getStream(0)" "org.apache.commons.io.output.DeferredFileOutputStream.currentOutputStream"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.getStream(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.prefix"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.suffix"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.directory"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
call "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.currentOutputStream"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)"
call "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isThresholdExceeded(0)"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)" "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
call "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)" "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)"
call "org.apache.commons.io.output.DeferredFileOutputStream.close(0)" "org.apache.commons.io.output.ThresholdingOutputStream.close(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.close(0)" "org.apache.commons.io.output.DeferredFileOutputStream.closed"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.output.DeferredFileOutputStream.closed"
call "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
call "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
call "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream" "org.apache.commons.io.output.ByteArrayOutputStream"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.currentOutputStream"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.prefix"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.suffix"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.directory"
contain "org.apache.commons.io.output.DeferredFileOutputStream" "org.apache.commons.io.output.DeferredFileOutputStream.closed"
reference "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
call "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.CompositeFileComparator.NO_COMPARATORS"
reference "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
call "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.CompositeFileComparator.NO_COMPARATORS"
reference "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)" "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparator.compare(2)" "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.compare(2)"
call "org.apache.commons.io.comparator.CompositeFileComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparator.toString(0)" "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.compare(2)"
reference "org.apache.commons.io.comparator.CompositeFileComparator.static {...}" "org.apache.commons.io.comparator.CompositeFileComparator.NO_COMPARATORS"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.static {...}"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.NO_COMPARATORS"
contain "org.apache.commons.io.comparator.CompositeFileComparator" "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.SuffixFileFilter"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.output.NullOutputStream"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileExistsException"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.FileFilterUtils"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.DirectoryFileFilter"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.FalseFileFilter"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.filefilter.TrueFileFilter"
reference "org.apache.commons.io.FileUtils" "org.apache.commons.io.FilenameUtils"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.FileUtils(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getFile(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getFile(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getTempDirectoryPath(0)"
call "org.apache.commons.io.FileUtils.getTempDirectory(0)" "org.apache.commons.io.FileUtils.getTempDirectoryPath(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getTempDirectory(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getUserDirectoryPath(0)"
call "org.apache.commons.io.FileUtils.getUserDirectory(0)" "org.apache.commons.io.FileUtils.getUserDirectoryPath(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.getUserDirectory(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtils.openOutputStream(1)" "org.apache.commons.io.FileUtils.openOutputStream(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.openOutputStream(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.openOutputStream(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.byteCountToDisplaySize(1)"
call "org.apache.commons.io.FileUtils.touch(1)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtils.touch(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.touch(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(1)"
call "org.apache.commons.io.FileUtils.innerListFiles(4)" "org.apache.commons.io.FileUtils.innerListFiles(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.innerListFiles(4)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.validateListFilesParameters(2)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.innerListFiles(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.listFiles(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.validateListFilesParameters(2)"
reference "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
call "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
call "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)"
reference "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
reference "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
call "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)"
call "org.apache.commons.io.FileUtils.listFilesAndDirs(3)" "org.apache.commons.io.FileUtils.validateListFilesParameters(2)"
call "org.apache.commons.io.FileUtils.listFilesAndDirs(3)" "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)"
call "org.apache.commons.io.FileUtils.listFilesAndDirs(3)" "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)"
call "org.apache.commons.io.FileUtils.listFilesAndDirs(3)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
call "org.apache.commons.io.FileUtils.listFilesAndDirs(3)" "org.apache.commons.io.FileUtils.innerListFiles(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.listFilesAndDirs(3)"
call "org.apache.commons.io.FileUtils.iterateFiles(3)" "org.apache.commons.io.FileUtils.listFiles(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.iterateFiles(3)"
call "org.apache.commons.io.FileUtils.iterateFilesAndDirs(3)" "org.apache.commons.io.FileUtils.listFilesAndDirs(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.iterateFilesAndDirs(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.toSuffixes(1)"
reference "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.toSuffixes(1)"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
reference "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.FileUtils.listFiles(3)" "org.apache.commons.io.FileUtils.listFiles(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.listFiles(3)"
call "org.apache.commons.io.FileUtils.iterateFiles(3)" "org.apache.commons.io.FileUtils.listFiles(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.iterateFiles(3)"
call "org.apache.commons.io.FileUtils.contentEquals(2)" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.FileUtils.contentEquals(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.contentEquals(2)"
call "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(3)" "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(2)"
call "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(3)"
call "org.apache.commons.io.FileUtils.toFile(1)" "org.apache.commons.io.FileUtils.decodeUrl(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.toFile(1)"
reference "org.apache.commons.io.FileUtils.decodeUrl(1)" "org.apache.commons.io.FileUtils.UTF8"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.decodeUrl(1)"
reference "org.apache.commons.io.FileUtils.toFiles(1)" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
call "org.apache.commons.io.FileUtils.toFiles(1)" "org.apache.commons.io.FileUtils.toFile(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.toFiles(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.toURLs(1)"
call "org.apache.commons.io.FileUtils.copyFileToDirectory(2)" "org.apache.commons.io.FileUtils.copyFileToDirectory(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyFileToDirectory(2)"
call "org.apache.commons.io.FileUtils.copyFileToDirectory(3)" "org.apache.commons.io.FileUtils.copyFile(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyFileToDirectory(3)"
call "org.apache.commons.io.FileUtils.copyFile(2)" "org.apache.commons.io.FileUtils.copyFile(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtils.copyFile(3)" "org.apache.commons.io.FileUtils.doCopyFile(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyFile(3)"
call "org.apache.commons.io.FileUtils.copyFile(2)" "org.apache.commons.io.IOUtils.copyLarge(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtils.doCopyFile(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtils.doCopyFile(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtils.doCopyFile(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.doCopyFile(3)"
call "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(2)" "org.apache.commons.io.FileUtils.copyDirectory(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(2)"
call "org.apache.commons.io.FileUtils.copyDirectory(2)" "org.apache.commons.io.FileUtils.copyDirectory(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtils.copyDirectory(3)" "org.apache.commons.io.FileUtils.copyDirectory(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyDirectory(3)"
call "org.apache.commons.io.FileUtils.copyDirectory(3)" "org.apache.commons.io.FileUtils.copyDirectory(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyDirectory(3)"
call "org.apache.commons.io.FileUtils.copyDirectory(4)" "org.apache.commons.io.FileUtils.doCopyDirectory(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyDirectory(4)"
call "org.apache.commons.io.FileUtils.doCopyDirectory(5)" "org.apache.commons.io.FileUtils.doCopyDirectory(5)"
call "org.apache.commons.io.FileUtils.doCopyDirectory(5)" "org.apache.commons.io.FileUtils.doCopyFile(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.doCopyDirectory(5)"
call "org.apache.commons.io.FileUtils.copyURLToFile(2)" "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyURLToFile(2)"
call "org.apache.commons.io.FileUtils.copyURLToFile(4)" "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyURLToFile(4)"
call "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)"
call "org.apache.commons.io.FileUtils.deleteDirectory(1)" "org.apache.commons.io.FileUtils.isSymlink(1)"
call "org.apache.commons.io.FileUtils.deleteDirectory(1)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtils.deleteQuietly(1)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.FileUtils.directoryContains(2)" "org.apache.commons.io.FilenameUtils.directoryContains(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtils.cleanDirectory(1)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.waitFor(2)"
call "org.apache.commons.io.FileUtils.readFileToString(2)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtils.readFileToString(2)" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.FileUtils.readFileToString(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtils.readFileToString(1)" "org.apache.commons.io.FileUtils.readFileToString(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtils.readFileToByteArray(1)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtils.readFileToByteArray(1)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.FileUtils.readFileToByteArray(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.readFileToByteArray(1)"
call "org.apache.commons.io.FileUtils.readLines(2)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtils.readLines(2)" "org.apache.commons.io.IOUtils.readLines(2)"
call "org.apache.commons.io.FileUtils.readLines(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.readLines(2)"
call "org.apache.commons.io.FileUtils.readLines(1)" "org.apache.commons.io.FileUtils.readLines(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.readLines(1)"
call "org.apache.commons.io.FileUtils.lineIterator(2)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtils.lineIterator(2)" "org.apache.commons.io.IOUtils.lineIterator(2)"
call "org.apache.commons.io.FileUtils.lineIterator(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.FileUtils.lineIterator(1)" "org.apache.commons.io.FileUtils.lineIterator(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.lineIterator(1)"
call "org.apache.commons.io.FileUtils.writeStringToFile(3)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtils.writeStringToFile(4)" "org.apache.commons.io.FileUtils.openOutputStream(2)"
call "org.apache.commons.io.FileUtils.writeStringToFile(4)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.FileUtils.writeStringToFile(4)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
call "org.apache.commons.io.FileUtils.writeStringToFile(2)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtils.writeStringToFile(3)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtils.write(2)" "org.apache.commons.io.FileUtils.write(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.commons.io.FileUtils.write(3)" "org.apache.commons.io.FileUtils.write(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtils.write(3)" "org.apache.commons.io.FileUtils.write(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtils.write(4)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.write(4)"
call "org.apache.commons.io.FileUtils.writeByteArrayToFile(2)" "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeByteArrayToFile(2)"
call "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)" "org.apache.commons.io.FileUtils.openOutputStream(2)"
call "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)"
call "org.apache.commons.io.FileUtils.writeLines(3)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(3)"
call "org.apache.commons.io.FileUtils.writeLines(4)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(4)"
call "org.apache.commons.io.FileUtils.writeLines(2)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(2)"
call "org.apache.commons.io.FileUtils.writeLines(3)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(3)"
call "org.apache.commons.io.FileUtils.writeLines(4)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(4)"
call "org.apache.commons.io.FileUtils.writeLines(5)" "org.apache.commons.io.FileUtils.openOutputStream(2)"
call "org.apache.commons.io.FileUtils.writeLines(5)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.FileUtils.writeLines(5)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(5)"
call "org.apache.commons.io.FileUtils.writeLines(3)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(3)"
call "org.apache.commons.io.FileUtils.writeLines(4)" "org.apache.commons.io.FileUtils.writeLines(5)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.writeLines(4)"
call "org.apache.commons.io.FileUtils.forceDelete(1)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.forceDelete(1)"
call "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)" "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
call "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(1)" "org.apache.commons.io.FileUtils.isSymlink(1)"
call "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(1)" "org.apache.commons.io.FileUtils.cleanDirectoryOnExit(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(1)"
call "org.apache.commons.io.FileUtils.cleanDirectoryOnExit(1)" "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.cleanDirectoryOnExit(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.forceMkdir(1)"
call "org.apache.commons.io.FileUtils.sizeOf(1)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.sizeOf(1)"
call "org.apache.commons.io.FileUtils.sizeOfDirectory(1)" "org.apache.commons.io.FileUtils.sizeOf(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtils.isFileNewer(2)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtils.isFileNewer(2)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileNewer(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtils.isFileOlder(2)" "org.apache.commons.io.FileUtils.isFileOlder(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileOlder(2)"
call "org.apache.commons.io.FileUtils.isFileOlder(2)" "org.apache.commons.io.FileUtils.isFileOlder(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileOlder(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isFileOlder(2)"
call "org.apache.commons.io.FileUtils.checksumCRC32(1)" "org.apache.commons.io.FileUtils.checksum(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.checksumCRC32(1)"
call "org.apache.commons.io.FileUtils.checksum(2)" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
call "org.apache.commons.io.FileUtils.checksum(2)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.FileUtils.checksum(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtils.moveDirectory(2)" "org.apache.commons.io.FileExistsException.FileExistsException(1)"
call "org.apache.commons.io.FileUtils.moveDirectory(2)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtils.moveDirectory(2)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.moveDirectory(2)"
call "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)" "org.apache.commons.io.FileUtils.moveDirectory(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtils.moveFile(2)" "org.apache.commons.io.FileExistsException.FileExistsException(1)"
call "org.apache.commons.io.FileUtils.moveFile(2)" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtils.moveFile(2)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.moveFile(2)"
call "org.apache.commons.io.FileUtils.moveFileToDirectory(3)" "org.apache.commons.io.FileUtils.moveFile(2)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.moveFileToDirectory(3)"
call "org.apache.commons.io.FileUtils.moveToDirectory(3)" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtils.moveToDirectory(3)" "org.apache.commons.io.FileUtils.moveFileToDirectory(3)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.moveToDirectory(3)"
call "org.apache.commons.io.FileUtils.isSymlink(1)" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.isSymlink(1)"
reference "org.apache.commons.io.FileUtils.static {...}" "org.apache.commons.io.FileUtils.ONE_ZB"
reference "org.apache.commons.io.FileUtils.static {...}" "org.apache.commons.io.FileUtils.ONE_YB"
reference "org.apache.commons.io.FileUtils.static {...}" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
reference "org.apache.commons.io.FileUtils.static {...}" "org.apache.commons.io.FileUtils.UTF8"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.static {...}"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_KB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_MB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.FILE_COPY_BUFFER_SIZE"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_GB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_TB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_PB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_EB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_ZB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.ONE_YB"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
contain "org.apache.commons.io.FileUtils" "org.apache.commons.io.FileUtils.UTF8"
reference "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)" "org.apache.commons.io.output.BrokenOutputStream.exception"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)"
call "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(0)" "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(0)"
reference "org.apache.commons.io.output.BrokenOutputStream.write(1)" "org.apache.commons.io.output.BrokenOutputStream.exception"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.write(1)"
reference "org.apache.commons.io.output.BrokenOutputStream.flush(0)" "org.apache.commons.io.output.BrokenOutputStream.exception"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.flush(0)"
reference "org.apache.commons.io.output.BrokenOutputStream.close(0)" "org.apache.commons.io.output.BrokenOutputStream.exception"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.close(0)"
contain "org.apache.commons.io.output.BrokenOutputStream" "org.apache.commons.io.output.BrokenOutputStream.exception"
reference "org.apache.commons.io.input.ReversedLinesFileReader.1" "org.apache.commons.io.input.ReversedLinesFileReader"
reference "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.ProxyInputStream"
reference "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.EndianUtils"
call "org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(1)"
call "org.apache.commons.io.input.SwappedDataInputStream.readBoolean(0)" "org.apache.commons.io.input.SwappedDataInputStream.readByte(0)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readBoolean(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readByte(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readByte(0)"
call "org.apache.commons.io.input.SwappedDataInputStream.readChar(0)" "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readChar(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readDouble(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readDouble(0)" "org.apache.commons.io.EndianUtils.readSwappedDouble(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readDouble(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readFloat(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readFloat(0)" "org.apache.commons.io.EndianUtils.readSwappedFloat(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readFloat(0)"
call "org.apache.commons.io.input.SwappedDataInputStream.readFully(1)" "org.apache.commons.io.input.SwappedDataInputStream.readFully(3)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readFully(1)"
call "org.apache.commons.io.input.SwappedDataInputStream.readFully(3)" "org.apache.commons.io.input.SwappedDataInputStream.read(3)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readFully(3)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)" "org.apache.commons.io.EndianUtils.readSwappedInteger(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readLine(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readLong(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readLong(0)" "org.apache.commons.io.EndianUtils.readSwappedLong(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readLong(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)" "org.apache.commons.io.EndianUtils.readSwappedShort(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(0)" "org.apache.commons.io.input.SwappedDataInputStream.in"
call "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(1)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(0)"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.readUTF(0)"
reference "org.apache.commons.io.input.SwappedDataInputStream.skipBytes(1)" "org.apache.commons.io.input.SwappedDataInputStream.in"
contain "org.apache.commons.io.input.SwappedDataInputStream" "org.apache.commons.io.input.SwappedDataInputStream.skipBytes(1)"
reference "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.TaggedIOException"
reference "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.ProxyOutputStream"
call "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
reference "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)" "org.apache.commons.io.output.TaggedOutputStream.tag"
contain "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)"
reference "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)" "org.apache.commons.io.output.TaggedOutputStream.tag"
call "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)" "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
contain "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)"
reference "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)" "org.apache.commons.io.output.TaggedOutputStream.tag"
call "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)" "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)"
contain "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)"
reference "org.apache.commons.io.output.TaggedOutputStream.handleIOException(1)" "org.apache.commons.io.output.TaggedOutputStream.tag"
call "org.apache.commons.io.output.TaggedOutputStream.handleIOException(1)" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
contain "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.TaggedOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.TaggedOutputStream" "org.apache.commons.io.output.TaggedOutputStream.tag"
reference "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(0)" "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(0)"
call "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(1)" "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(1)"
reference "org.apache.commons.io.comparator.SizeFileComparator.compare(2)" "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
call "org.apache.commons.io.comparator.SizeFileComparator.compare(2)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.compare(2)"
call "org.apache.commons.io.comparator.SizeFileComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.SizeFileComparator.toString(0)" "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.compare(2)"
call "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(0)"
reference "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
call "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE"
call "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(1)"
reference "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR"
reference "org.apache.commons.io.comparator.SizeFileComparator.static {...}" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.static {...}"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE"
contain "org.apache.commons.io.comparator.SizeFileComparator" "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
call "org.apache.commons.io.input.NullReader.NullReader(1)" "org.apache.commons.io.input.NullReader.NullReader(3)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.NullReader(1)"
reference "org.apache.commons.io.input.NullReader.NullReader(3)" "org.apache.commons.io.input.NullReader.mark"
reference "org.apache.commons.io.input.NullReader.NullReader(3)" "org.apache.commons.io.input.NullReader.size"
reference "org.apache.commons.io.input.NullReader.NullReader(3)" "org.apache.commons.io.input.NullReader.markSupported"
reference "org.apache.commons.io.input.NullReader.NullReader(3)" "org.apache.commons.io.input.NullReader.throwEofException"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.NullReader(3)"
reference "org.apache.commons.io.input.NullReader.getPosition(0)" "org.apache.commons.io.input.NullReader.position"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.getPosition(0)"
reference "org.apache.commons.io.input.NullReader.getSize(0)" "org.apache.commons.io.input.NullReader.size"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.getSize(0)"
reference "org.apache.commons.io.input.NullReader.close(0)" "org.apache.commons.io.input.NullReader.eof"
reference "org.apache.commons.io.input.NullReader.close(0)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.close(0)" "org.apache.commons.io.input.NullReader.mark"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.close(0)"
reference "org.apache.commons.io.input.NullReader.mark(1)" "org.apache.commons.io.input.NullReader.markSupported"
reference "org.apache.commons.io.input.NullReader.mark(1)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.mark(1)" "org.apache.commons.io.input.NullReader.mark"
reference "org.apache.commons.io.input.NullReader.mark(1)" "org.apache.commons.io.input.NullReader.readlimit"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.mark(1)"
reference "org.apache.commons.io.input.NullReader.markSupported(0)" "org.apache.commons.io.input.NullReader.markSupported"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.markSupported(0)"
reference "org.apache.commons.io.input.NullReader.read(0)" "org.apache.commons.io.input.NullReader.eof"
reference "org.apache.commons.io.input.NullReader.read(0)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.read(0)" "org.apache.commons.io.input.NullReader.size"
call "org.apache.commons.io.input.NullReader.read(0)" "org.apache.commons.io.input.NullReader.doEndOfFile(0)"
call "org.apache.commons.io.input.NullReader.read(0)" "org.apache.commons.io.input.NullReader.processChar(0)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.read(0)"
call "org.apache.commons.io.input.NullReader.read(1)" "org.apache.commons.io.input.NullReader.read(3)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.read(1)"
reference "org.apache.commons.io.input.NullReader.read(3)" "org.apache.commons.io.input.NullReader.eof"
reference "org.apache.commons.io.input.NullReader.read(3)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.read(3)" "org.apache.commons.io.input.NullReader.size"
call "org.apache.commons.io.input.NullReader.read(3)" "org.apache.commons.io.input.NullReader.doEndOfFile(0)"
call "org.apache.commons.io.input.NullReader.read(3)" "org.apache.commons.io.input.NullReader.processChars(3)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.read(3)"
reference "org.apache.commons.io.input.NullReader.reset(0)" "org.apache.commons.io.input.NullReader.markSupported"
reference "org.apache.commons.io.input.NullReader.reset(0)" "org.apache.commons.io.input.NullReader.mark"
reference "org.apache.commons.io.input.NullReader.reset(0)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.reset(0)" "org.apache.commons.io.input.NullReader.readlimit"
reference "org.apache.commons.io.input.NullReader.reset(0)" "org.apache.commons.io.input.NullReader.eof"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.reset(0)"
reference "org.apache.commons.io.input.NullReader.skip(1)" "org.apache.commons.io.input.NullReader.eof"
reference "org.apache.commons.io.input.NullReader.skip(1)" "org.apache.commons.io.input.NullReader.position"
reference "org.apache.commons.io.input.NullReader.skip(1)" "org.apache.commons.io.input.NullReader.size"
call "org.apache.commons.io.input.NullReader.skip(1)" "org.apache.commons.io.input.NullReader.doEndOfFile(0)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.skip(1)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.processChar(0)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.processChars(3)"
reference "org.apache.commons.io.input.NullReader.doEndOfFile(0)" "org.apache.commons.io.input.NullReader.eof"
reference "org.apache.commons.io.input.NullReader.doEndOfFile(0)" "org.apache.commons.io.input.NullReader.throwEofException"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.doEndOfFile(0)"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.size"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.position"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.mark"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.readlimit"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.eof"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.throwEofException"
contain "org.apache.commons.io.input.NullReader" "org.apache.commons.io.input.NullReader.markSupported"
reference "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.FilenameUtils"
call "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
call "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
call "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
reference "org.apache.commons.io.filefilter.WildcardFilter.accept(2)" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
call "org.apache.commons.io.filefilter.WildcardFilter.accept(2)" "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.accept(2)"
reference "org.apache.commons.io.filefilter.WildcardFilter.accept(1)" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
call "org.apache.commons.io.filefilter.WildcardFilter.accept(1)" "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.accept(1)"
contain "org.apache.commons.io.filefilter.WildcardFilter" "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.write(3)"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.write(1)"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.write(1)"
call "org.apache.commons.io.output.NullOutputStream.static {...}" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
reference "org.apache.commons.io.output.NullOutputStream.static {...}" "org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.static {...}"
reference "org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM" "org.apache.commons.io.output.NullOutputStream"
contain "org.apache.commons.io.output.NullOutputStream" "org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM"
reference "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.FileUtils.forceMkdir(1)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.output.LockableFileWriter.testLockDir(1)"
reference "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.output.LockableFileWriter.lockFile"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.output.LockableFileWriter.createLock(0)"
call "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.output.LockableFileWriter.initWriter(3)"
reference "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.testLockDir(1)"
reference "org.apache.commons.io.output.LockableFileWriter.createLock(0)" "org.apache.commons.io.output.LockableFileWriter.lockFile"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.createLock(0)"
call "org.apache.commons.io.output.LockableFileWriter.initWriter(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.LockableFileWriter.initWriter(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.LockableFileWriter.initWriter(3)" "org.apache.commons.io.output.LockableFileWriter.lockFile"
call "org.apache.commons.io.output.LockableFileWriter.initWriter(3)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.initWriter(3)"
reference "org.apache.commons.io.output.LockableFileWriter.close(0)" "org.apache.commons.io.output.LockableFileWriter.out"
reference "org.apache.commons.io.output.LockableFileWriter.close(0)" "org.apache.commons.io.output.LockableFileWriter.lockFile"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.close(0)"
reference "org.apache.commons.io.output.LockableFileWriter.write(1)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.write(1)"
reference "org.apache.commons.io.output.LockableFileWriter.write(1)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.write(1)"
reference "org.apache.commons.io.output.LockableFileWriter.write(3)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.write(3)"
reference "org.apache.commons.io.output.LockableFileWriter.write(1)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.write(1)"
reference "org.apache.commons.io.output.LockableFileWriter.write(3)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.write(3)"
reference "org.apache.commons.io.output.LockableFileWriter.flush(0)" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.flush(0)"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.LCK"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.out"
contain "org.apache.commons.io.output.LockableFileWriter" "org.apache.commons.io.output.LockableFileWriter.lockFile"
reference "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.FilenameUtils"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.accept(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.accept(2)" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.WildcardFileFilter.accept(2)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.accept(2)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.WildcardFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.toString(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
reference "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.filefilter.WildcardFileFilter" "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
reference "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
call "org.apache.commons.io.comparator.DirectoryFileComparator.DirectoryFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.DirectoryFileComparator(0)"
call "org.apache.commons.io.comparator.DirectoryFileComparator.compare(2)" "org.apache.commons.io.comparator.DirectoryFileComparator.getType(1)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.compare(2)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.getType(1)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.compare(2)"
call "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}" "org.apache.commons.io.comparator.DirectoryFileComparator.DirectoryFileComparator(0)"
reference "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR"
call "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR"
contain "org.apache.commons.io.comparator.DirectoryFileComparator" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
reference "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.decoderIn"
reference "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.writer"
reference "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.decoder"
reference "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.writeImmediately"
reference "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.decoderOut"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
call "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(1)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(1)"
reference "org.apache.commons.io.output.WriterOutputStream.write(3)" "org.apache.commons.io.output.WriterOutputStream.decoderIn"
call "org.apache.commons.io.output.WriterOutputStream.write(3)" "org.apache.commons.io.output.WriterOutputStream.processInput(1)"
reference "org.apache.commons.io.output.WriterOutputStream.write(3)" "org.apache.commons.io.output.WriterOutputStream.writeImmediately"
call "org.apache.commons.io.output.WriterOutputStream.write(3)" "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.write(3)"
call "org.apache.commons.io.output.WriterOutputStream.write(1)" "org.apache.commons.io.output.WriterOutputStream.write(3)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.write(1)"
call "org.apache.commons.io.output.WriterOutputStream.write(1)" "org.apache.commons.io.output.WriterOutputStream.write(3)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.write(1)"
call "org.apache.commons.io.output.WriterOutputStream.flush(0)" "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
reference "org.apache.commons.io.output.WriterOutputStream.flush(0)" "org.apache.commons.io.output.WriterOutputStream.writer"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.flush(0)"
call "org.apache.commons.io.output.WriterOutputStream.close(0)" "org.apache.commons.io.output.WriterOutputStream.processInput(1)"
call "org.apache.commons.io.output.WriterOutputStream.close(0)" "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
reference "org.apache.commons.io.output.WriterOutputStream.close(0)" "org.apache.commons.io.output.WriterOutputStream.writer"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.close(0)"
reference "org.apache.commons.io.output.WriterOutputStream.processInput(1)" "org.apache.commons.io.output.WriterOutputStream.decoderIn"
reference "org.apache.commons.io.output.WriterOutputStream.processInput(1)" "org.apache.commons.io.output.WriterOutputStream.decoder"
reference "org.apache.commons.io.output.WriterOutputStream.processInput(1)" "org.apache.commons.io.output.WriterOutputStream.decoderOut"
call "org.apache.commons.io.output.WriterOutputStream.processInput(1)" "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.processInput(1)"
reference "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)" "org.apache.commons.io.output.WriterOutputStream.decoderOut"
reference "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)" "org.apache.commons.io.output.WriterOutputStream.writer"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.DEFAULT_BUFFER_SIZE"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.writer"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.decoder"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.writeImmediately"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.decoderIn"
contain "org.apache.commons.io.output.WriterOutputStream" "org.apache.commons.io.output.WriterOutputStream.decoderOut"
contain "org.apache.commons.io.filefilter.IOFileFilter" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.IOFileFilter" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.serialVersionUID"
reference "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers" "byte[]"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
contain "org.apache.commons.io.filefilter.MagicNumberFileFilter" "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
reference "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)" "org.apache.commons.io.input.BoundedInputStream.mark"
reference "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)" "org.apache.commons.io.input.BoundedInputStream.propagateClose"
reference "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)" "org.apache.commons.io.input.BoundedInputStream.max"
reference "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)"
call "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(1)" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(1)"
reference "org.apache.commons.io.input.BoundedInputStream.read(0)" "org.apache.commons.io.input.BoundedInputStream.max"
reference "org.apache.commons.io.input.BoundedInputStream.read(0)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.read(0)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.read(0)"
call "org.apache.commons.io.input.BoundedInputStream.read(1)" "org.apache.commons.io.input.BoundedInputStream.read(3)"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.read(1)"
reference "org.apache.commons.io.input.BoundedInputStream.read(3)" "org.apache.commons.io.input.BoundedInputStream.max"
reference "org.apache.commons.io.input.BoundedInputStream.read(3)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.read(3)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.read(3)"
reference "org.apache.commons.io.input.BoundedInputStream.skip(1)" "org.apache.commons.io.input.BoundedInputStream.max"
reference "org.apache.commons.io.input.BoundedInputStream.skip(1)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.skip(1)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.skip(1)"
reference "org.apache.commons.io.input.BoundedInputStream.available(0)" "org.apache.commons.io.input.BoundedInputStream.max"
reference "org.apache.commons.io.input.BoundedInputStream.available(0)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.available(0)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.available(0)"
reference "org.apache.commons.io.input.BoundedInputStream.toString(0)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.toString(0)"
reference "org.apache.commons.io.input.BoundedInputStream.close(0)" "org.apache.commons.io.input.BoundedInputStream.propagateClose"
reference "org.apache.commons.io.input.BoundedInputStream.close(0)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.close(0)"
reference "org.apache.commons.io.input.BoundedInputStream.reset(0)" "org.apache.commons.io.input.BoundedInputStream.in"
reference "org.apache.commons.io.input.BoundedInputStream.reset(0)" "org.apache.commons.io.input.BoundedInputStream.mark"
reference "org.apache.commons.io.input.BoundedInputStream.reset(0)" "org.apache.commons.io.input.BoundedInputStream.pos"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.reset(0)"
reference "org.apache.commons.io.input.BoundedInputStream.mark(1)" "org.apache.commons.io.input.BoundedInputStream.in"
reference "org.apache.commons.io.input.BoundedInputStream.mark(1)" "org.apache.commons.io.input.BoundedInputStream.pos"
reference "org.apache.commons.io.input.BoundedInputStream.mark(1)" "org.apache.commons.io.input.BoundedInputStream.mark"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.mark(1)"
reference "org.apache.commons.io.input.BoundedInputStream.markSupported(0)" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.markSupported(0)"
reference "org.apache.commons.io.input.BoundedInputStream.isPropagateClose(0)" "org.apache.commons.io.input.BoundedInputStream.propagateClose"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.isPropagateClose(0)"
reference "org.apache.commons.io.input.BoundedInputStream.setPropagateClose(1)" "org.apache.commons.io.input.BoundedInputStream.propagateClose"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.setPropagateClose(1)"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.in"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.max"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.pos"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.mark"
contain "org.apache.commons.io.input.BoundedInputStream" "org.apache.commons.io.input.BoundedInputStream.propagateClose"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.append(1)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.append(3)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.append(1)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.write(1)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.write(1)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.write(3)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.write(1)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.write(3)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.flush(0)"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.close(0)"
call "org.apache.commons.io.output.NullWriter.static {...}" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
reference "org.apache.commons.io.output.NullWriter.static {...}" "org.apache.commons.io.output.NullWriter.NULL_WRITER"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.static {...}"
reference "org.apache.commons.io.output.NullWriter.NULL_WRITER" "org.apache.commons.io.output.NullWriter"
contain "org.apache.commons.io.output.NullWriter" "org.apache.commons.io.output.NullWriter.NULL_WRITER"
reference "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileEntry"
reference "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationListener"
reference "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.comparator.NameFileComparator"
reference "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileEntry.FileEntry(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
call "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.monitor.FileAlterationObserver.comparator"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
reference "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)" "org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
call "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter(0)" "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.addListener(1)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.addListener(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.removeListener(1)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.removeListener(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.getListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.getListeners(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
call "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileEntry.refresh(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
call "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)" "org.apache.commons.io.monitor.FileEntry.setChildren(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.destroy(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationListener.onStart(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileEntry.getChildren(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileEntry.isExists(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationListener.onStop(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.comparator"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileEntry.getChildren(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)" "org.apache.commons.io.monitor.FileEntry.setChildren(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)"
call "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileEntry.newChildInstance(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileEntry.refresh(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
call "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)"
call "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)" "org.apache.commons.io.monitor.FileEntry.setChildren(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileEntry.isDirectory(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileEntry.getChildren(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)" "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)" "org.apache.commons.io.monitor.FileEntry.refresh(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
call "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)" "org.apache.commons.io.monitor.FileEntry.isDirectory(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)" "org.apache.commons.io.monitor.FileAlterationListener.onFileChange(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
call "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)" "org.apache.commons.io.monitor.FileEntry.isDirectory(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)" "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)" "org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)" "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
reference "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)" "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
reference "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)" "org.apache.commons.io.monitor.FileAlterationObserver.comparator"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
call "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
reference "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
reference "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry" "org.apache.commons.io.monitor.FileEntry"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
contain "org.apache.commons.io.monitor.FileAlterationObserver" "org.apache.commons.io.monitor.FileAlterationObserver.comparator"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.PrefixFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.SuffixFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.NameFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.AndFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.OrFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.DelegateFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.AgeFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.SizeFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.MagicNumberFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.DirectoryFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.TrueFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FalseFileFilter"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils(0)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(3)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(3)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.filter(3)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.filter(3)"
call "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(1)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(2)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(2)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(2)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter(0)" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(2)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(2)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.and(1)" "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.and(1)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.or(1)" "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.or(1)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)" "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter(0)" "org.apache.commons.io.filefilter.FalseFileFilter.FALSE"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)" "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(1)" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(2)" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(2)" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(2)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)" "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter"
call "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)" "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter"
call "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
call "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
call "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
call "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
reference "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.static {...}"
reference "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter"
reference "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FileFilterUtils" "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter"
reference "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
call "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)" "org.apache.commons.io.comparator.ReverseComparator.delegate"
contain "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.ReverseComparator.compare(2)" "org.apache.commons.io.comparator.ReverseComparator.delegate"
contain "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.ReverseComparator.compare(2)"
call "org.apache.commons.io.comparator.ReverseComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.ReverseComparator.toString(0)" "org.apache.commons.io.comparator.ReverseComparator.delegate"
contain "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.ReverseComparator.toString(0)"
contain "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.ReverseComparator.compare(2)"
contain "org.apache.commons.io.comparator.ReverseComparator" "org.apache.commons.io.comparator.ReverseComparator.delegate"
reference "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.ByteOrderMark"
reference "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.ProxyInputStream"
reference "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
reference "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
call "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
call "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
reference "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)" "org.apache.commons.io.input.BOMInputStream.include"
reference "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)" "org.apache.commons.io.input.BOMInputStream.boms"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
call "org.apache.commons.io.input.BOMInputStream.hasBOM(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
reference "org.apache.commons.io.input.BOMInputStream.hasBOM(1)" "org.apache.commons.io.input.BOMInputStream.boms"
reference "org.apache.commons.io.input.BOMInputStream.hasBOM(1)" "org.apache.commons.io.input.BOMInputStream.byteOrderMark"
call "org.apache.commons.io.input.BOMInputStream.hasBOM(1)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStream.hasBOM(1)" "org.apache.commons.io.ByteOrderMark.equals(1)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.firstBytes"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.fbLength"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.boms"
call "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.ByteOrderMark.length(0)"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.in"
call "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.find(0)"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.byteOrderMark"
reference "org.apache.commons.io.input.BOMInputStream.getBOM(0)" "org.apache.commons.io.input.BOMInputStream.include"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
reference "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)" "org.apache.commons.io.input.BOMInputStream.byteOrderMark"
call "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)" "org.apache.commons.io.ByteOrderMark.getCharsetName(0)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)"
call "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
reference "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)" "org.apache.commons.io.input.BOMInputStream.fbIndex"
reference "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)" "org.apache.commons.io.input.BOMInputStream.fbLength"
reference "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)" "org.apache.commons.io.input.BOMInputStream.firstBytes"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)"
reference "org.apache.commons.io.input.BOMInputStream.find(0)" "org.apache.commons.io.input.BOMInputStream.boms"
call "org.apache.commons.io.input.BOMInputStream.find(0)" "org.apache.commons.io.input.BOMInputStream.matches(1)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.find(0)"
call "org.apache.commons.io.input.BOMInputStream.matches(1)" "org.apache.commons.io.ByteOrderMark.length(0)"
reference "org.apache.commons.io.input.BOMInputStream.matches(1)" "org.apache.commons.io.input.BOMInputStream.fbLength"
call "org.apache.commons.io.input.BOMInputStream.matches(1)" "org.apache.commons.io.ByteOrderMark.get(1)"
reference "org.apache.commons.io.input.BOMInputStream.matches(1)" "org.apache.commons.io.input.BOMInputStream.firstBytes"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.matches(1)"
call "org.apache.commons.io.input.BOMInputStream.read(0)" "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)"
reference "org.apache.commons.io.input.BOMInputStream.read(0)" "org.apache.commons.io.input.BOMInputStream.in"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStream.read(3)" "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)"
reference "org.apache.commons.io.input.BOMInputStream.read(3)" "org.apache.commons.io.input.BOMInputStream.in"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.read(3)"
call "org.apache.commons.io.input.BOMInputStream.read(1)" "org.apache.commons.io.input.BOMInputStream.read(3)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.read(1)"
reference "org.apache.commons.io.input.BOMInputStream.mark(1)" "org.apache.commons.io.input.BOMInputStream.fbIndex"
reference "org.apache.commons.io.input.BOMInputStream.mark(1)" "org.apache.commons.io.input.BOMInputStream.markFbIndex"
reference "org.apache.commons.io.input.BOMInputStream.mark(1)" "org.apache.commons.io.input.BOMInputStream.firstBytes"
reference "org.apache.commons.io.input.BOMInputStream.mark(1)" "org.apache.commons.io.input.BOMInputStream.markedAtStart"
reference "org.apache.commons.io.input.BOMInputStream.mark(1)" "org.apache.commons.io.input.BOMInputStream.in"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.mark(1)"
reference "org.apache.commons.io.input.BOMInputStream.reset(0)" "org.apache.commons.io.input.BOMInputStream.markFbIndex"
reference "org.apache.commons.io.input.BOMInputStream.reset(0)" "org.apache.commons.io.input.BOMInputStream.fbIndex"
reference "org.apache.commons.io.input.BOMInputStream.reset(0)" "org.apache.commons.io.input.BOMInputStream.markedAtStart"
reference "org.apache.commons.io.input.BOMInputStream.reset(0)" "org.apache.commons.io.input.BOMInputStream.firstBytes"
reference "org.apache.commons.io.input.BOMInputStream.reset(0)" "org.apache.commons.io.input.BOMInputStream.in"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.reset(0)"
call "org.apache.commons.io.input.BOMInputStream.skip(1)" "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)"
reference "org.apache.commons.io.input.BOMInputStream.skip(1)" "org.apache.commons.io.input.BOMInputStream.in"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.skip(1)"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.include"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.boms"
reference "org.apache.commons.io.input.BOMInputStream.byteOrderMark" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.byteOrderMark"
reference "org.apache.commons.io.input.BOMInputStream.firstBytes" "int[]"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.firstBytes"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.fbLength"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.fbIndex"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.markFbIndex"
contain "org.apache.commons.io.input.BOMInputStream" "org.apache.commons.io.input.BOMInputStream.markedAtStart"
reference "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.TaggedIOException"
reference "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
reference "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)" "org.apache.commons.io.input.TaggedInputStream.tag"
contain "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
reference "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)" "org.apache.commons.io.input.TaggedInputStream.tag"
call "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)" "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
contain "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)"
reference "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)" "org.apache.commons.io.input.TaggedInputStream.tag"
call "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)" "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)"
contain "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)"
reference "org.apache.commons.io.input.TaggedInputStream.handleIOException(1)" "org.apache.commons.io.input.TaggedInputStream.tag"
call "org.apache.commons.io.input.TaggedInputStream.handleIOException(1)" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
contain "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.TaggedInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.TaggedInputStream" "org.apache.commons.io.input.TaggedInputStream.tag"
reference "org.apache.commons.io.filefilter.AbstractFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.AbstractFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
call "org.apache.commons.io.filefilter.AbstractFileFilter.accept(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.AbstractFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.AbstractFileFilter.accept(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.AbstractFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.AbstractFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)" "org.apache.commons.io.ByteOrderMark.charsetName"
reference "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
reference "org.apache.commons.io.ByteOrderMark.getCharsetName(0)" "org.apache.commons.io.ByteOrderMark.charsetName"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.getCharsetName(0)"
reference "org.apache.commons.io.ByteOrderMark.length(0)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.length(0)"
reference "org.apache.commons.io.ByteOrderMark.get(1)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.get(1)"
reference "org.apache.commons.io.ByteOrderMark.getBytes(0)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.getBytes(0)"
reference "org.apache.commons.io.ByteOrderMark.equals(1)" "org.apache.commons.io.ByteOrderMark.bytes"
call "org.apache.commons.io.ByteOrderMark.equals(1)" "org.apache.commons.io.ByteOrderMark.length(0)"
call "org.apache.commons.io.ByteOrderMark.equals(1)" "org.apache.commons.io.ByteOrderMark.get(1)"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.equals(1)"
reference "org.apache.commons.io.ByteOrderMark.hashCode(0)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.hashCode(0)"
reference "org.apache.commons.io.ByteOrderMark.toString(0)" "org.apache.commons.io.ByteOrderMark.charsetName"
reference "org.apache.commons.io.ByteOrderMark.toString(0)" "org.apache.commons.io.ByteOrderMark.bytes"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.toString(0)"
call "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
reference "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_8"
reference "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
reference "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_16LE"
reference "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_32BE"
reference "org.apache.commons.io.ByteOrderMark.static {...}" "org.apache.commons.io.ByteOrderMark.UTF_32LE"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.static {...}"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.serialVersionUID"
reference "org.apache.commons.io.ByteOrderMark.UTF_8" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.UTF_8"
reference "org.apache.commons.io.ByteOrderMark.UTF_16BE" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
reference "org.apache.commons.io.ByteOrderMark.UTF_16LE" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.UTF_16LE"
reference "org.apache.commons.io.ByteOrderMark.UTF_32BE" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.UTF_32BE"
reference "org.apache.commons.io.ByteOrderMark.UTF_32LE" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.UTF_32LE"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.charsetName"
reference "org.apache.commons.io.ByteOrderMark.bytes" "int[]"
contain "org.apache.commons.io.ByteOrderMark" "org.apache.commons.io.ByteOrderMark.bytes"
reference "org.apache.commons.io.filefilter.FileFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.FileFileFilter" "org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter(0)"
contain "org.apache.commons.io.filefilter.FileFileFilter" "org.apache.commons.io.filefilter.FileFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.FileFileFilter.static {...}" "org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter(0)"
reference "org.apache.commons.io.filefilter.FileFileFilter.static {...}" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
contain "org.apache.commons.io.filefilter.FileFileFilter" "org.apache.commons.io.filefilter.FileFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.FileFileFilter.FILE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FileFileFilter" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.out"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.afterWrite(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.write(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.out"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.afterWrite(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(1)" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.write(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(3)" "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(1)"
reference "org.apache.commons.io.output.ProxyOutputStream.write(3)" "org.apache.commons.io.output.ProxyOutputStream.out"
call "org.apache.commons.io.output.ProxyOutputStream.write(3)" "org.apache.commons.io.output.ProxyOutputStream.afterWrite(1)"
call "org.apache.commons.io.output.ProxyOutputStream.write(3)" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.write(3)"
reference "org.apache.commons.io.output.ProxyOutputStream.flush(0)" "org.apache.commons.io.output.ProxyOutputStream.out"
call "org.apache.commons.io.output.ProxyOutputStream.flush(0)" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.flush(0)"
reference "org.apache.commons.io.output.ProxyOutputStream.close(0)" "org.apache.commons.io.output.ProxyOutputStream.out"
call "org.apache.commons.io.output.ProxyOutputStream.close(0)" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.close(0)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.afterWrite(1)"
contain "org.apache.commons.io.output.ProxyOutputStream" "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
reference "org.apache.commons.io.input.DemuxInputStream.DemuxInputStream(0)" "org.apache.commons.io.input.DemuxInputStream.m_streams"
contain "org.apache.commons.io.input.DemuxInputStream" "org.apache.commons.io.input.DemuxInputStream.DemuxInputStream(0)"
reference "org.apache.commons.io.input.DemuxInputStream.bindStream(1)" "org.apache.commons.io.input.DemuxInputStream.m_streams"
contain "org.apache.commons.io.input.DemuxInputStream" "org.apache.commons.io.input.DemuxInputStream.bindStream(1)"
reference "org.apache.commons.io.input.DemuxInputStream.close(0)" "org.apache.commons.io.input.DemuxInputStream.m_streams"
contain "org.apache.commons.io.input.DemuxInputStream" "org.apache.commons.io.input.DemuxInputStream.close(0)"
reference "org.apache.commons.io.input.DemuxInputStream.read(0)" "org.apache.commons.io.input.DemuxInputStream.m_streams"
contain "org.apache.commons.io.input.DemuxInputStream" "org.apache.commons.io.input.DemuxInputStream.read(0)"
contain "org.apache.commons.io.input.DemuxInputStream" "org.apache.commons.io.input.DemuxInputStream.m_streams"
reference "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter(0)"
contain "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.HiddenFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}" "org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter(0)"
reference "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}" "org.apache.commons.io.filefilter.HiddenFileFilter.HIDDEN"
call "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
reference "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}" "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE"
contain "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.HiddenFileFilter.HIDDEN" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.HiddenFileFilter.HIDDEN"
reference "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.HiddenFileFilter" "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE"
reference "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)"
call "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(0)" "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(0)"
reference "org.apache.commons.io.input.BrokenInputStream.read(0)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.read(0)"
reference "org.apache.commons.io.input.BrokenInputStream.available(0)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.available(0)"
reference "org.apache.commons.io.input.BrokenInputStream.skip(1)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.skip(1)"
reference "org.apache.commons.io.input.BrokenInputStream.reset(0)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.reset(0)"
reference "org.apache.commons.io.input.BrokenInputStream.close(0)" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.close(0)"
contain "org.apache.commons.io.input.BrokenInputStream" "org.apache.commons.io.input.BrokenInputStream.exception"
contain "org.apache.commons.io.FileExistsException" "org.apache.commons.io.FileExistsException.FileExistsException(0)"
contain "org.apache.commons.io.FileExistsException" "org.apache.commons.io.FileExistsException.FileExistsException(1)"
contain "org.apache.commons.io.FileExistsException" "org.apache.commons.io.FileExistsException.FileExistsException(1)"
contain "org.apache.commons.io.FileExistsException" "org.apache.commons.io.FileExistsException.serialVersionUID"
reference "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter(0)"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FalseFileFilter.static {...}" "org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter(0)"
reference "org.apache.commons.io.filefilter.FalseFileFilter.static {...}" "org.apache.commons.io.filefilter.FalseFileFilter.FALSE"
reference "org.apache.commons.io.filefilter.FalseFileFilter.static {...}" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.FalseFileFilter.FALSE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.FALSE"
reference "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.FalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
contain "org.apache.commons.io.input.TailerListener" "org.apache.commons.io.input.TailerListener.init(1)"
contain "org.apache.commons.io.input.TailerListener" "org.apache.commons.io.input.TailerListener.fileNotFound(0)"
contain "org.apache.commons.io.input.TailerListener" "org.apache.commons.io.input.TailerListener.fileRotated(0)"
contain "org.apache.commons.io.input.TailerListener" "org.apache.commons.io.input.TailerListener.handle(1)"
contain "org.apache.commons.io.input.TailerListener" "org.apache.commons.io.input.TailerListener.handle(1)"
reference "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.AndFileFilter"
reference "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter"
call "org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter(0)"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter(0)"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ"
call "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.CanReadFileFilter.CANNOT_READ"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE"
call "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}" "org.apache.commons.io.filefilter.CanReadFileFilter.READ_ONLY"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.CANNOT_READ" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.CANNOT_READ"
reference "org.apache.commons.io.filefilter.CanReadFileFilter.READ_ONLY" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.CanReadFileFilter" "org.apache.commons.io.filefilter.CanReadFileFilter.READ_ONLY"
reference "org.apache.commons.io.output.DemuxOutputStream.DemuxOutputStream(0)" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.DemuxOutputStream(0)"
reference "org.apache.commons.io.output.DemuxOutputStream.bindStream(1)" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.bindStream(1)"
reference "org.apache.commons.io.output.DemuxOutputStream.close(0)" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.close(0)"
reference "org.apache.commons.io.output.DemuxOutputStream.flush(0)" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.flush(0)"
reference "org.apache.commons.io.output.DemuxOutputStream.write(1)" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.write(1)"
contain "org.apache.commons.io.output.DemuxOutputStream" "org.apache.commons.io.output.DemuxOutputStream.m_streams"
reference "org.apache.commons.io.FilenameUtils" "int[]"
reference "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.FilenameUtils(0)"
reference "org.apache.commons.io.FilenameUtils.isSystemWindows(0)" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.isSeparator(1)"
reference "org.apache.commons.io.FilenameUtils.normalize(1)" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
call "org.apache.commons.io.FilenameUtils.normalize(1)" "org.apache.commons.io.FilenameUtils.doNormalize(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.normalize(1)"
call "org.apache.commons.io.FilenameUtils.normalize(2)" "org.apache.commons.io.FilenameUtils.doNormalize(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.normalize(2)"
reference "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(1)" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
call "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(1)" "org.apache.commons.io.FilenameUtils.doNormalize(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(2)" "org.apache.commons.io.FilenameUtils.doNormalize(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(2)"
call "org.apache.commons.io.FilenameUtils.doNormalize(3)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
reference "org.apache.commons.io.FilenameUtils.doNormalize(3)" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
reference "org.apache.commons.io.FilenameUtils.doNormalize(3)" "org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.doNormalize(3)"
call "org.apache.commons.io.FilenameUtils.concat(2)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
call "org.apache.commons.io.FilenameUtils.concat(2)" "org.apache.commons.io.FilenameUtils.normalize(1)"
call "org.apache.commons.io.FilenameUtils.concat(2)" "org.apache.commons.io.FilenameUtils.isSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.concat(2)"
reference "org.apache.commons.io.FilenameUtils.directoryContains(2)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtils.directoryContains(2)" "org.apache.commons.io.IOCase.checkEquals(2)"
call "org.apache.commons.io.FilenameUtils.directoryContains(2)" "org.apache.commons.io.IOCase.checkStartsWith(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.directoryContains(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.separatorsToUnix(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.separatorsToWindows(1)"
call "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
call "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)" "org.apache.commons.io.FilenameUtils.separatorsToWindows(1)"
call "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)" "org.apache.commons.io.FilenameUtils.separatorsToUnix(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)"
call "org.apache.commons.io.FilenameUtils.getPrefixLength(1)" "org.apache.commons.io.FilenameUtils.isSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
call "org.apache.commons.io.FilenameUtils.indexOfExtension(1)" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
call "org.apache.commons.io.FilenameUtils.getPrefix(1)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getPrefix(1)"
call "org.apache.commons.io.FilenameUtils.getPath(1)" "org.apache.commons.io.FilenameUtils.doGetPath(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getPath(1)"
call "org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(1)" "org.apache.commons.io.FilenameUtils.doGetPath(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtils.doGetPath(2)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
call "org.apache.commons.io.FilenameUtils.doGetPath(2)" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.doGetPath(2)"
call "org.apache.commons.io.FilenameUtils.getFullPath(1)" "org.apache.commons.io.FilenameUtils.doGetFullPath(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getFullPath(1)"
call "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(1)" "org.apache.commons.io.FilenameUtils.doGetFullPath(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtils.doGetFullPath(2)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
call "org.apache.commons.io.FilenameUtils.doGetFullPath(2)" "org.apache.commons.io.FilenameUtils.getPrefix(1)"
call "org.apache.commons.io.FilenameUtils.doGetFullPath(2)" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.doGetFullPath(2)"
call "org.apache.commons.io.FilenameUtils.getName(1)" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getName(1)"
call "org.apache.commons.io.FilenameUtils.getBaseName(1)" "org.apache.commons.io.FilenameUtils.getName(1)"
call "org.apache.commons.io.FilenameUtils.getBaseName(1)" "org.apache.commons.io.FilenameUtils.removeExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getBaseName(1)"
call "org.apache.commons.io.FilenameUtils.getExtension(1)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.getExtension(1)"
call "org.apache.commons.io.FilenameUtils.removeExtension(1)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.removeExtension(1)"
reference "org.apache.commons.io.FilenameUtils.equals(2)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtils.equals(2)" "org.apache.commons.io.FilenameUtils.equals(4)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.equals(2)"
reference "org.apache.commons.io.FilenameUtils.equalsOnSystem(2)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtils.equalsOnSystem(2)" "org.apache.commons.io.FilenameUtils.equals(4)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.equalsOnSystem(2)"
reference "org.apache.commons.io.FilenameUtils.equalsNormalized(2)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtils.equalsNormalized(2)" "org.apache.commons.io.FilenameUtils.equals(4)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.equalsNormalized(2)"
reference "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)" "org.apache.commons.io.FilenameUtils.equals(4)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)"
call "org.apache.commons.io.FilenameUtils.equals(4)" "org.apache.commons.io.FilenameUtils.normalize(1)"
reference "org.apache.commons.io.FilenameUtils.equals(4)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtils.equals(4)" "org.apache.commons.io.IOCase.checkEquals(2)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.equals(4)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.getExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.isExtension(2)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.getExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.isExtension(2)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
call "org.apache.commons.io.FilenameUtils.isExtension(2)" "org.apache.commons.io.FilenameUtils.getExtension(1)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.isExtension(2)"
reference "org.apache.commons.io.FilenameUtils.wildcardMatch(2)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtils.wildcardMatch(2)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
reference "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(2)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(2)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(2)"
reference "org.apache.commons.io.FilenameUtils.wildcardMatch(3)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtils.wildcardMatch(3)" "org.apache.commons.io.FilenameUtils.splitOnTokens(1)"
call "org.apache.commons.io.FilenameUtils.wildcardMatch(3)" "org.apache.commons.io.IOCase.checkIndexOf(3)"
call "org.apache.commons.io.FilenameUtils.wildcardMatch(3)" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.splitOnTokens(1)"
reference "org.apache.commons.io.FilenameUtils.static {...}" "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR"
reference "org.apache.commons.io.FilenameUtils.static {...}" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
call "org.apache.commons.io.FilenameUtils.static {...}" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
reference "org.apache.commons.io.FilenameUtils.static {...}" "org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.static {...}"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.UNIX_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.WINDOWS_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
contain "org.apache.commons.io.FilenameUtils" "org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR"
call "org.apache.commons.io.monitor.FileEntry.FileEntry(1)" "org.apache.commons.io.monitor.FileEntry.FileEntry(2)"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.FileEntry(1)"
reference "org.apache.commons.io.monitor.FileEntry.FileEntry(2)" "org.apache.commons.io.monitor.FileEntry.file"
reference "org.apache.commons.io.monitor.FileEntry.FileEntry(2)" "org.apache.commons.io.monitor.FileEntry.parent"
reference "org.apache.commons.io.monitor.FileEntry.FileEntry(2)" "org.apache.commons.io.monitor.FileEntry.name"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.FileEntry(2)"
reference "org.apache.commons.io.monitor.FileEntry.refresh(1)" "org.apache.commons.io.monitor.FileEntry.exists"
reference "org.apache.commons.io.monitor.FileEntry.refresh(1)" "org.apache.commons.io.monitor.FileEntry.lastModified"
reference "org.apache.commons.io.monitor.FileEntry.refresh(1)" "org.apache.commons.io.monitor.FileEntry.directory"
reference "org.apache.commons.io.monitor.FileEntry.refresh(1)" "org.apache.commons.io.monitor.FileEntry.length"
reference "org.apache.commons.io.monitor.FileEntry.refresh(1)" "org.apache.commons.io.monitor.FileEntry.name"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.refresh(1)"
call "org.apache.commons.io.monitor.FileEntry.newChildInstance(1)" "org.apache.commons.io.monitor.FileEntry.FileEntry(2)"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.newChildInstance(1)"
reference "org.apache.commons.io.monitor.FileEntry.getParent(0)" "org.apache.commons.io.monitor.FileEntry.parent"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getParent(0)"
reference "org.apache.commons.io.monitor.FileEntry.getLevel(0)" "org.apache.commons.io.monitor.FileEntry.parent"
call "org.apache.commons.io.monitor.FileEntry.getLevel(0)" "org.apache.commons.io.monitor.FileEntry.getLevel(0)"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getLevel(0)"
reference "org.apache.commons.io.monitor.FileEntry.getChildren(0)" "org.apache.commons.io.monitor.FileEntry.children"
reference "org.apache.commons.io.monitor.FileEntry.getChildren(0)" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getChildren(0)"
reference "org.apache.commons.io.monitor.FileEntry.setChildren(1)" "org.apache.commons.io.monitor.FileEntry.children"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setChildren(1)"
reference "org.apache.commons.io.monitor.FileEntry.getFile(0)" "org.apache.commons.io.monitor.FileEntry.file"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getFile(0)"
reference "org.apache.commons.io.monitor.FileEntry.getName(0)" "org.apache.commons.io.monitor.FileEntry.name"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getName(0)"
reference "org.apache.commons.io.monitor.FileEntry.setName(1)" "org.apache.commons.io.monitor.FileEntry.name"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setName(1)"
reference "org.apache.commons.io.monitor.FileEntry.getLastModified(0)" "org.apache.commons.io.monitor.FileEntry.lastModified"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getLastModified(0)"
reference "org.apache.commons.io.monitor.FileEntry.setLastModified(1)" "org.apache.commons.io.monitor.FileEntry.lastModified"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setLastModified(1)"
reference "org.apache.commons.io.monitor.FileEntry.getLength(0)" "org.apache.commons.io.monitor.FileEntry.length"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.getLength(0)"
reference "org.apache.commons.io.monitor.FileEntry.setLength(1)" "org.apache.commons.io.monitor.FileEntry.length"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setLength(1)"
reference "org.apache.commons.io.monitor.FileEntry.isExists(0)" "org.apache.commons.io.monitor.FileEntry.exists"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.isExists(0)"
reference "org.apache.commons.io.monitor.FileEntry.setExists(1)" "org.apache.commons.io.monitor.FileEntry.exists"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setExists(1)"
reference "org.apache.commons.io.monitor.FileEntry.isDirectory(0)" "org.apache.commons.io.monitor.FileEntry.directory"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.isDirectory(0)"
reference "org.apache.commons.io.monitor.FileEntry.setDirectory(1)" "org.apache.commons.io.monitor.FileEntry.directory"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.setDirectory(1)"
reference "org.apache.commons.io.monitor.FileEntry.static {...}" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.static {...}"
reference "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES" "org.apache.commons.io.monitor.FileEntry[]"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
reference "org.apache.commons.io.monitor.FileEntry.parent" "org.apache.commons.io.monitor.FileEntry"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.parent"
reference "org.apache.commons.io.monitor.FileEntry.children" "org.apache.commons.io.monitor.FileEntry[]"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.children"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.file"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.name"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.exists"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.directory"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.lastModified"
contain "org.apache.commons.io.monitor.FileEntry" "org.apache.commons.io.monitor.FileEntry.length"
reference "org.apache.commons.io.IOCase" "org.apache.commons.io.FilenameUtils"
reference "org.apache.commons.io.IOCase.forName(1)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.IOCase.forName(1)" "org.apache.commons.io.IOCase.name"
reference "org.apache.commons.io.IOCase.forName(1)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCase.forName(1)" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.forName(1)"
reference "org.apache.commons.io.IOCase.IOCase(2)" "org.apache.commons.io.IOCase.name"
reference "org.apache.commons.io.IOCase.IOCase(2)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.IOCase(2)"
reference "org.apache.commons.io.IOCase.readResolve(0)" "org.apache.commons.io.IOCase.name"
call "org.apache.commons.io.IOCase.readResolve(0)" "org.apache.commons.io.IOCase.forName(1)"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.readResolve(0)"
reference "org.apache.commons.io.IOCase.getName(0)" "org.apache.commons.io.IOCase.name"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.getName(0)"
reference "org.apache.commons.io.IOCase.isCaseSensitive(0)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.isCaseSensitive(0)"
reference "org.apache.commons.io.IOCase.checkCompareTo(2)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkCompareTo(2)"
reference "org.apache.commons.io.IOCase.checkEquals(2)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkEquals(2)"
reference "org.apache.commons.io.IOCase.checkStartsWith(2)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkStartsWith(2)"
reference "org.apache.commons.io.IOCase.checkEndsWith(2)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkEndsWith(2)"
call "org.apache.commons.io.IOCase.checkIndexOf(3)" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkIndexOf(3)"
reference "org.apache.commons.io.IOCase.checkRegionMatches(3)" "org.apache.commons.io.IOCase.sensitive"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
reference "org.apache.commons.io.IOCase.toString(0)" "org.apache.commons.io.IOCase.name"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.toString(0)"
call "org.apache.commons.io.IOCase.static {...}" "org.apache.commons.io.IOCase.IOCase(2)"
reference "org.apache.commons.io.IOCase.static {...}" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.IOCase.static {...}" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.IOCase.static {...}" "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
reference "org.apache.commons.io.IOCase.static {...}" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.static {...}"
reference "org.apache.commons.io.IOCase.SENSITIVE" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.IOCase.INSENSITIVE" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCase.SYSTEM" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.serialVersionUID"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.name"
contain "org.apache.commons.io.IOCase" "org.apache.commons.io.IOCase.sensitive"
reference "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy"
reference "org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(1)" "org.apache.commons.io.FileDeleteStrategy.name"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(1)"
call "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)" "org.apache.commons.io.FileDeleteStrategy.doDelete(1)"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)"
call "org.apache.commons.io.FileDeleteStrategy.delete(1)" "org.apache.commons.io.FileDeleteStrategy.doDelete(1)"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.delete(1)"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.doDelete(1)"
reference "org.apache.commons.io.FileDeleteStrategy.toString(0)" "org.apache.commons.io.FileDeleteStrategy.name"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.toString(0)"
call "org.apache.commons.io.FileDeleteStrategy.static {...}" "org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(1)"
reference "org.apache.commons.io.FileDeleteStrategy.static {...}" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileDeleteStrategy.static {...}" "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy(0)"
reference "org.apache.commons.io.FileDeleteStrategy.static {...}" "org.apache.commons.io.FileDeleteStrategy.FORCE"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.static {...}"
reference "org.apache.commons.io.FileDeleteStrategy.NORMAL" "org.apache.commons.io.FileDeleteStrategy"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
reference "org.apache.commons.io.FileDeleteStrategy.FORCE" "org.apache.commons.io.FileDeleteStrategy"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.FORCE"
contain "org.apache.commons.io.FileDeleteStrategy" "org.apache.commons.io.FileDeleteStrategy.name"
reference "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.IOExceptionWithCause"
reference "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FilenameUtils"
reference "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.ThreadMonitor"
reference "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.IOUtils"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
reference "org.apache.commons.io.FileSystemUtils.freeSpace(1)" "org.apache.commons.io.FileSystemUtils.INSTANCE"
reference "org.apache.commons.io.FileSystemUtils.freeSpace(1)" "org.apache.commons.io.FileSystemUtils.OS"
call "org.apache.commons.io.FileSystemUtils.freeSpace(1)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpace(1)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)"
reference "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)" "org.apache.commons.io.FileSystemUtils.INSTANCE"
reference "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)" "org.apache.commons.io.FileSystemUtils.OS"
call "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceKb(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(0)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)" "org.apache.commons.io.FilenameUtils.normalize(2)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)" "org.apache.commons.io.FileSystemUtils.performCommand(3)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)" "org.apache.commons.io.FileSystemUtils.parseDir(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtils.parseDir(2)" "org.apache.commons.io.FileSystemUtils.parseBytes(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.parseDir(2)"
reference "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)" "org.apache.commons.io.FileSystemUtils.DF"
call "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)" "org.apache.commons.io.FileSystemUtils.performCommand(3)"
call "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)" "org.apache.commons.io.FileSystemUtils.parseBytes(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
reference "org.apache.commons.io.FileSystemUtils.parseBytes(2)" "org.apache.commons.io.FileSystemUtils.DF"
call "org.apache.commons.io.FileSystemUtils.parseBytes(2)" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.parseBytes(2)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.ThreadMonitor.start(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.FileSystemUtils.openProcess(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.ThreadMonitor.stop(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileSystemUtils.performCommand(3)" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.performCommand(3)"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.openProcess(1)"
call "org.apache.commons.io.FileSystemUtils.static {...}" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
reference "org.apache.commons.io.FileSystemUtils.static {...}" "org.apache.commons.io.FileSystemUtils.INSTANCE"
reference "org.apache.commons.io.FileSystemUtils.static {...}" "org.apache.commons.io.FileSystemUtils.OS"
reference "org.apache.commons.io.FileSystemUtils.static {...}" "org.apache.commons.io.FileSystemUtils.DF"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.static {...}"
reference "org.apache.commons.io.FileSystemUtils.INSTANCE" "org.apache.commons.io.FileSystemUtils"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.INSTANCE"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.INIT_PROBLEM"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.OTHER"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.WINDOWS"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.UNIX"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.POSIX_UNIX"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.OS"
contain "org.apache.commons.io.FileSystemUtils" "org.apache.commons.io.FileSystemUtils.DF"
reference "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(1)" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(1)"
call "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)" "org.apache.commons.io.filefilter.SizeFileFilter.size"
reference "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)" "org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)"
reference "org.apache.commons.io.filefilter.SizeFileFilter.accept(1)" "org.apache.commons.io.filefilter.SizeFileFilter.size"
reference "org.apache.commons.io.filefilter.SizeFileFilter.accept(1)" "org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.SizeFileFilter.toString(0)" "org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger"
call "org.apache.commons.io.filefilter.SizeFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.SizeFileFilter.toString(0)" "org.apache.commons.io.filefilter.SizeFileFilter.size"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.size"
contain "org.apache.commons.io.filefilter.SizeFileFilter" "org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger"
reference "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart"
reference "org.apache.commons.io.input.ReversedLinesFileReader" "byte[]"
call "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(1)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.blockSize"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.encoding"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.totalByteLength"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.totalBlockCount"
call "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(4)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.byteDecrement"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences"
reference "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)" "org.apache.commons.io.input.ReversedLinesFileReader.avoidNewlineSplitBufferSize"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart"
call "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$100(1)"
call "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$200(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped"
call "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReader.close(0)" "org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.close(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$300(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$400(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$500(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$600(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$700(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.access$800(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.blockSize"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.encoding"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.totalByteLength"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.totalBlockCount"
reference "org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences" "byte[][]"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.avoidNewlineSplitBufferSize"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.byteDecrement"
reference "org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart" "org.apache.commons.io.input.ReversedLinesFileReader.FilePart"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart"
contain "org.apache.commons.io.input.ReversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped"
reference "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)" "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)"
call "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)" "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)"
reference "org.apache.commons.io.comparator.PathFileComparator.compare(2)" "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
call "org.apache.commons.io.comparator.PathFileComparator.compare(2)" "org.apache.commons.io.IOCase.checkCompareTo(2)"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.compare(2)"
call "org.apache.commons.io.comparator.PathFileComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.PathFileComparator.toString(0)" "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.compare(2)"
call "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR"
call "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR"
reference "org.apache.commons.io.comparator.PathFileComparator.static {...}" "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.static {...}"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE"
reference "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.comparator.PathFileComparator" "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
reference "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListener"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.FileAlterationListenerAdaptor(0)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStart(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryCreate(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryChange(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryDelete(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileCreate(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileChange(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileDelete(1)"
contain "org.apache.commons.io.monitor.FileAlterationListenerAdaptor" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStop(1)"
reference "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.ConditionalFileFilter"
call "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
call "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
call "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)" "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(1)"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
reference "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(1)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(1)"
reference "org.apache.commons.io.filefilter.OrFileFilter.getFileFilters(0)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.getFileFilters(0)"
reference "org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(1)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(1)"
reference "org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(1)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(1)"
reference "org.apache.commons.io.filefilter.OrFileFilter.accept(1)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.OrFileFilter.accept(1)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.OrFileFilter.accept(2)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
call "org.apache.commons.io.filefilter.OrFileFilter.accept(2)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.OrFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.OrFileFilter.toString(0)" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.OrFileFilter" "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
reference "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListener"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.TailerListenerAdapter(0)"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.init(1)"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.fileNotFound(0)"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.fileRotated(0)"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.handle(1)"
contain "org.apache.commons.io.input.TailerListenerAdapter" "org.apache.commons.io.input.TailerListenerAdapter.handle(1)"
reference "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)"
call "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
call "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)" "org.apache.commons.io.IOCase.isCaseSensitive(0)"
reference "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)"
call "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)"
call "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)"
reference "org.apache.commons.io.filefilter.RegexFileFilter.accept(2)" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.RegexFileFilter" "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
contain "org.apache.commons.io.output.ClosedOutputStream" "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
contain "org.apache.commons.io.output.ClosedOutputStream" "org.apache.commons.io.output.ClosedOutputStream.write(1)"
call "org.apache.commons.io.output.ClosedOutputStream.static {...}" "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
reference "org.apache.commons.io.output.ClosedOutputStream.static {...}" "org.apache.commons.io.output.ClosedOutputStream.CLOSED_OUTPUT_STREAM"
contain "org.apache.commons.io.output.ClosedOutputStream" "org.apache.commons.io.output.ClosedOutputStream.static {...}"
reference "org.apache.commons.io.output.ClosedOutputStream.CLOSED_OUTPUT_STREAM" "org.apache.commons.io.output.ClosedOutputStream"
contain "org.apache.commons.io.output.ClosedOutputStream" "org.apache.commons.io.output.ClosedOutputStream.CLOSED_OUTPUT_STREAM"
reference "org.apache.commons.io.output.CloseShieldOutputStream" "org.apache.commons.io.output.ClosedOutputStream"
reference "org.apache.commons.io.output.CloseShieldOutputStream" "org.apache.commons.io.output.ProxyOutputStream"
call "org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(1)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
contain "org.apache.commons.io.output.CloseShieldOutputStream" "org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(1)"
call "org.apache.commons.io.output.CloseShieldOutputStream.close(0)" "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
reference "org.apache.commons.io.output.CloseShieldOutputStream.close(0)" "org.apache.commons.io.output.CloseShieldOutputStream.out"
contain "org.apache.commons.io.output.CloseShieldOutputStream" "org.apache.commons.io.output.CloseShieldOutputStream.close(0)"
contain "org.apache.commons.io.input.ClosedInputStream" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
contain "org.apache.commons.io.input.ClosedInputStream" "org.apache.commons.io.input.ClosedInputStream.read(0)"
call "org.apache.commons.io.input.ClosedInputStream.static {...}" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
reference "org.apache.commons.io.input.ClosedInputStream.static {...}" "org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM"
contain "org.apache.commons.io.input.ClosedInputStream" "org.apache.commons.io.input.ClosedInputStream.static {...}"
reference "org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM" "org.apache.commons.io.input.ClosedInputStream"
contain "org.apache.commons.io.input.ClosedInputStream" "org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM"
reference "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStream.skip(1)" "org.apache.commons.io.input.ProxyInputStream.skip(1)"
reference "org.apache.commons.io.input.CountingInputStream.skip(1)" "org.apache.commons.io.input.CountingInputStream.count"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.skip(1)"
reference "org.apache.commons.io.input.CountingInputStream.afterRead(1)" "org.apache.commons.io.input.CountingInputStream.count"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.afterRead(1)"
call "org.apache.commons.io.input.CountingInputStream.getCount(0)" "org.apache.commons.io.input.CountingInputStream.getByteCount(0)"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
call "org.apache.commons.io.input.CountingInputStream.resetCount(0)" "org.apache.commons.io.input.CountingInputStream.resetByteCount(0)"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.resetCount(0)"
reference "org.apache.commons.io.input.CountingInputStream.getByteCount(0)" "org.apache.commons.io.input.CountingInputStream.count"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.getByteCount(0)"
reference "org.apache.commons.io.input.CountingInputStream.resetByteCount(0)" "org.apache.commons.io.input.CountingInputStream.count"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.resetByteCount(0)"
contain "org.apache.commons.io.input.CountingInputStream" "org.apache.commons.io.input.CountingInputStream.count"
reference "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationObserver"
call "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.thread"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.running"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)" "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.threadFactory"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.getObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.getObservers(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.running"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
call "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)" "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.threadFactory"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.thread"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
call "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.running"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.thread"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
call "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)" "org.apache.commons.io.monitor.FileAlterationObserver.destroy(0)"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.running"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
call "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.thread"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.threadFactory"
contain "org.apache.commons.io.monitor.FileAlterationMonitor" "org.apache.commons.io.monitor.FileAlterationMonitor.running"
call "org.apache.commons.io.ThreadMonitor.start(1)" "org.apache.commons.io.ThreadMonitor.start(2)"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.start(1)"
call "org.apache.commons.io.ThreadMonitor.start(2)" "org.apache.commons.io.ThreadMonitor.ThreadMonitor(2)"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.start(2)"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.stop(1)"
reference "org.apache.commons.io.ThreadMonitor.ThreadMonitor(2)" "org.apache.commons.io.ThreadMonitor.thread"
reference "org.apache.commons.io.ThreadMonitor.ThreadMonitor(2)" "org.apache.commons.io.ThreadMonitor.timeout"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.ThreadMonitor(2)"
reference "org.apache.commons.io.ThreadMonitor.run(0)" "org.apache.commons.io.ThreadMonitor.timeout"
reference "org.apache.commons.io.ThreadMonitor.run(0)" "org.apache.commons.io.ThreadMonitor.thread"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.run(0)"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.thread"
contain "org.apache.commons.io.ThreadMonitor" "org.apache.commons.io.ThreadMonitor.timeout"
reference "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaningTracker"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.FileCleaner(0)"
reference "org.apache.commons.io.FileCleaner.track(2)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.track(2)" "org.apache.commons.io.FileCleaningTracker.track(2)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.track(2)"
reference "org.apache.commons.io.FileCleaner.track(3)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.track(3)" "org.apache.commons.io.FileCleaningTracker.track(3)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.track(3)"
reference "org.apache.commons.io.FileCleaner.track(2)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.track(2)" "org.apache.commons.io.FileCleaningTracker.track(2)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.track(2)"
reference "org.apache.commons.io.FileCleaner.track(3)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.track(3)" "org.apache.commons.io.FileCleaningTracker.track(3)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.track(3)"
reference "org.apache.commons.io.FileCleaner.getTrackCount(0)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.getTrackCount(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.getTrackCount(0)"
reference "org.apache.commons.io.FileCleaner.exitWhenFinished(0)" "org.apache.commons.io.FileCleaner.theInstance"
call "org.apache.commons.io.FileCleaner.exitWhenFinished(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.exitWhenFinished(0)"
reference "org.apache.commons.io.FileCleaner.getInstance(0)" "org.apache.commons.io.FileCleaner.theInstance"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.getInstance(0)"
call "org.apache.commons.io.FileCleaner.static {...}" "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)"
reference "org.apache.commons.io.FileCleaner.static {...}" "org.apache.commons.io.FileCleaner.theInstance"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.static {...}"
reference "org.apache.commons.io.FileCleaner.theInstance" "org.apache.commons.io.FileCleaningTracker"
contain "org.apache.commons.io.FileCleaner" "org.apache.commons.io.FileCleaner.theInstance"
reference "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)" "org.apache.commons.io.input.CharSequenceInputStream.encoder"
reference "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)" "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
reference "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
reference "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)" "org.apache.commons.io.input.CharSequenceInputStream.mark"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
call "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
call "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
call "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
reference "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)" "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
reference "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)" "org.apache.commons.io.input.CharSequenceInputStream.encoder"
reference "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)"
reference "org.apache.commons.io.input.CharSequenceInputStream.read(3)" "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
reference "org.apache.commons.io.input.CharSequenceInputStream.read(3)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
call "org.apache.commons.io.input.CharSequenceInputStream.read(3)" "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.read(3)"
reference "org.apache.commons.io.input.CharSequenceInputStream.read(0)" "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
call "org.apache.commons.io.input.CharSequenceInputStream.read(0)" "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)"
reference "org.apache.commons.io.input.CharSequenceInputStream.read(0)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.read(0)"
call "org.apache.commons.io.input.CharSequenceInputStream.read(1)" "org.apache.commons.io.input.CharSequenceInputStream.read(3)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.read(1)"
reference "org.apache.commons.io.input.CharSequenceInputStream.skip(1)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.skip(1)"
reference "org.apache.commons.io.input.CharSequenceInputStream.available(0)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.available(0)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.close(0)"
reference "org.apache.commons.io.input.CharSequenceInputStream.mark(1)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
reference "org.apache.commons.io.input.CharSequenceInputStream.mark(1)" "org.apache.commons.io.input.CharSequenceInputStream.mark"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.mark(1)"
reference "org.apache.commons.io.input.CharSequenceInputStream.reset(0)" "org.apache.commons.io.input.CharSequenceInputStream.mark"
reference "org.apache.commons.io.input.CharSequenceInputStream.reset(0)" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.reset(0)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.markSupported(0)"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.encoder"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
contain "org.apache.commons.io.input.CharSequenceInputStream" "org.apache.commons.io.input.CharSequenceInputStream.mark"
reference "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
reference "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.accept(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.accept(1)" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.PrefixFileFilter.accept(1)" "org.apache.commons.io.IOCase.checkStartsWith(2)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.accept(1)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.accept(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.accept(2)" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
call "org.apache.commons.io.filefilter.PrefixFileFilter.accept(2)" "org.apache.commons.io.IOCase.checkStartsWith(2)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.PrefixFileFilter.toString(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.toString(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.toString(0)"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
reference "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.filefilter.PrefixFileFilter" "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
reference "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)" "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)"
call "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)" "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
reference "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)" "org.apache.commons.io.IOCase.SENSITIVE"
reference "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)" "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)"
reference "org.apache.commons.io.comparator.NameFileComparator.compare(2)" "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
call "org.apache.commons.io.comparator.NameFileComparator.compare(2)" "org.apache.commons.io.IOCase.checkCompareTo(2)"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.compare(2)"
call "org.apache.commons.io.comparator.NameFileComparator.toString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
reference "org.apache.commons.io.comparator.NameFileComparator.toString(0)" "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.toString(0)"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.sort(1)"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.compare(2)"
call "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR"
call "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR"
reference "org.apache.commons.io.comparator.NameFileComparator.static {...}" "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.static {...}"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE"
reference "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity" "org.apache.commons.io.IOCase"
contain "org.apache.commons.io.comparator.NameFileComparator" "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
reference "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.ClosedInputStream"
reference "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
contain "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(1)"
reference "org.apache.commons.io.input.AutoCloseInputStream.close(0)" "org.apache.commons.io.input.AutoCloseInputStream.in"
call "org.apache.commons.io.input.AutoCloseInputStream.close(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
contain "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.AutoCloseInputStream.close(0)"
call "org.apache.commons.io.input.AutoCloseInputStream.afterRead(1)" "org.apache.commons.io.input.AutoCloseInputStream.close(0)"
contain "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.AutoCloseInputStream.afterRead(1)"
call "org.apache.commons.io.input.AutoCloseInputStream.finalize(0)" "org.apache.commons.io.input.AutoCloseInputStream.close(0)"
contain "org.apache.commons.io.input.AutoCloseInputStream" "org.apache.commons.io.input.AutoCloseInputStream.finalize(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(1)" "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.write(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.write(1)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.write(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(3)" "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)"
call "org.apache.commons.io.output.ThresholdingOutputStream.write(3)" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.write(3)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.write(3)"
call "org.apache.commons.io.output.ThresholdingOutputStream.flush(0)" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.flush(0)"
call "org.apache.commons.io.output.ThresholdingOutputStream.close(0)" "org.apache.commons.io.output.ThresholdingOutputStream.flush(0)"
call "org.apache.commons.io.output.ThresholdingOutputStream.close(0)" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.close(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.getThreshold(0)" "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.getThreshold(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.getByteCount(0)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.getByteCount(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded(0)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
reference "org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded(0)" "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded(0)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)" "org.apache.commons.io.output.ThresholdingOutputStream.thresholdExceeded"
reference "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
reference "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)" "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
call "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)" "org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)"
reference "org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount(0)" "org.apache.commons.io.output.ThresholdingOutputStream.thresholdExceeded"
reference "org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount(0)" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached(0)"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.written"
contain "org.apache.commons.io.output.ThresholdingOutputStream" "org.apache.commons.io.output.ThresholdingOutputStream.thresholdExceeded"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
call "org.apache.commons.io.input.ProxyInputStream.read(0)" "org.apache.commons.io.input.ProxyInputStream.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyInputStream.read(0)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.read(0)" "org.apache.commons.io.input.ProxyInputStream.afterRead(1)"
call "org.apache.commons.io.input.ProxyInputStream.read(0)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.read(0)"
call "org.apache.commons.io.input.ProxyInputStream.read(1)" "org.apache.commons.io.input.ProxyInputStream.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyInputStream.read(1)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.read(1)" "org.apache.commons.io.input.ProxyInputStream.afterRead(1)"
call "org.apache.commons.io.input.ProxyInputStream.read(1)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.read(1)"
call "org.apache.commons.io.input.ProxyInputStream.read(3)" "org.apache.commons.io.input.ProxyInputStream.beforeRead(1)"
reference "org.apache.commons.io.input.ProxyInputStream.read(3)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.read(3)" "org.apache.commons.io.input.ProxyInputStream.afterRead(1)"
call "org.apache.commons.io.input.ProxyInputStream.read(3)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.read(3)"
reference "org.apache.commons.io.input.ProxyInputStream.skip(1)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.skip(1)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.skip(1)"
call "org.apache.commons.io.input.ProxyInputStream.available(0)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.available(0)"
reference "org.apache.commons.io.input.ProxyInputStream.close(0)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.close(0)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.close(0)"
reference "org.apache.commons.io.input.ProxyInputStream.mark(1)" "org.apache.commons.io.input.ProxyInputStream.in"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.mark(1)"
reference "org.apache.commons.io.input.ProxyInputStream.reset(0)" "org.apache.commons.io.input.ProxyInputStream.in"
call "org.apache.commons.io.input.ProxyInputStream.reset(0)" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.reset(0)"
reference "org.apache.commons.io.input.ProxyInputStream.markSupported(0)" "org.apache.commons.io.input.ProxyInputStream.in"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.markSupported(0)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.beforeRead(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.afterRead(1)"
contain "org.apache.commons.io.input.ProxyInputStream" "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
reference "org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(2)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.classLoader"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStream" "org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(2)"
reference "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(1)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.classLoader"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStream" "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(1)"
reference "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(1)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.classLoader"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStream" "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(1)"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStream" "org.apache.commons.io.input.ClassLoaderObjectInputStream.classLoader"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.AbstractFileFilter"
call "org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter(0)" "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
contain "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter(0)"
contain "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}" "org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter(0)"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}" "org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE"
call "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}" "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE"
contain "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE"
reference "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.filefilter.CanWriteFileFilter" "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(1)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(1)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(1)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)" "org.apache.commons.io.FileUtils.isSymlink(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtils.isSymlink(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)"
reference "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)" "org.apache.commons.io.FileUtils.isSymlink(1)"
call "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
contain "org.apache.commons.io.FileUtilsCleanSymlinksTestCase" "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
reference "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest"
contain "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(0)"
contain "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.close(0)"
contain "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(1)"
reference "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIterator"
reference "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase(1)"
call "org.apache.commons.io.LineIteratorTestCase.assertLines(2)" "org.apache.commons.io.LineIterator.nextLine(0)"
call "org.apache.commons.io.LineIteratorTestCase.assertLines(2)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.assertLines(2)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.assertLines(2)" "org.apache.commons.io.LineIteratorTestCase.assertFalse(2)"
call "org.apache.commons.io.LineIteratorTestCase.assertLines(2)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.assertLines(2)"
call "org.apache.commons.io.LineIteratorTestCase.createLinesFile(2)" "org.apache.commons.io.LineIteratorTestCase.createStringLines(1)"
call "org.apache.commons.io.LineIteratorTestCase.createLinesFile(2)" "org.apache.commons.io.FileUtils.writeLines(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(2)"
call "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)" "org.apache.commons.io.LineIteratorTestCase.createStringLines(1)"
call "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)" "org.apache.commons.io.FileUtils.writeLines(3)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.createStringLines(1)"
call "org.apache.commons.io.LineIteratorTestCase.setUp(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.setUp(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.setUp(0)"
call "org.apache.commons.io.LineIteratorTestCase.tearDown(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.tearDown(0)"
call "org.apache.commons.io.LineIteratorTestCase.testConstructor(0)" "org.apache.commons.io.LineIterator.LineIterator(1)"
call "org.apache.commons.io.LineIteratorTestCase.testConstructor(0)" "org.apache.commons.io.LineIteratorTestCase.fail(0)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testConstructor(0)"
call "org.apache.commons.io.LineIteratorTestCase.testZeroLines(0)" "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testZeroLines(0)"
call "org.apache.commons.io.LineIteratorTestCase.testOneLines(0)" "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testOneLines(0)"
call "org.apache.commons.io.LineIteratorTestCase.testTwoLines(0)" "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testTwoLines(0)"
call "org.apache.commons.io.LineIteratorTestCase.testThreeLines(0)" "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testThreeLines(0)"
call "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)" "org.apache.commons.io.LineIteratorTestCase.fail(1)"
call "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.assertNotNull(1)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(2)"
call "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)"
call "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.fail(1)"
call "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(2)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)" "org.apache.commons.io.FileUtils.lineIterator(1)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.assertLines(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)" "org.apache.commons.io.LineIteratorTestCase.assertLines(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)" "org.apache.commons.io.LineIteratorTestCase.assertLines(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)" "org.apache.commons.io.LineIteratorTestCase.1.{...}"
call "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)" "org.apache.commons.io.LineIterator.LineIterator(1)"
call "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)" "org.apache.commons.io.LineIteratorTestCase.fail(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.assertNotNull(2)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.assertTrue(2)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIterator.close(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.assertFalse(2)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIteratorTestCase.fail(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIterator.nextLine(0)"
call "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.FileUtils.lineIterator(2)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIterator.remove(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.fail(1)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.assertTrue(2)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIterator.nextLine(0)"
call "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(0)" "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(0)" "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(0)" "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
call "org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(0)" "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIteratorTestCase.2.{...}"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIterator.remove(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIteratorTestCase.fail(1)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIterator.hasNext(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIterator.next(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIteratorTestCase.assertTrue(2)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIterator.nextLine(0)"
call "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)" "org.apache.commons.io.LineIterator.closeQuietly(1)"
contain "org.apache.commons.io.LineIteratorTestCase" "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)"
reference "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStream"
reference "org.apache.commons.io.output.WriterOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.WriterOutputStreamTest.WriterOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.io.output.WriterOutputStreamTest.WriterOutputStreamTest(0)" "org.apache.commons.io.output.WriterOutputStreamTest.random"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.WriterOutputStreamTest(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)" "org.apache.commons.io.output.WriterOutputStream.write(1)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)" "org.apache.commons.io.output.WriterOutputStream.close(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)" "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
reference "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)" "org.apache.commons.io.output.WriterOutputStreamTest.random"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)" "org.apache.commons.io.output.WriterOutputStream.write(3)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)" "org.apache.commons.io.output.WriterOutputStream.close(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)" "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(0)"
reference "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite(0)"
reference "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite(0)" "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.WriterOutputStream.write(1)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.WriterOutputStream.flush(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(0)" "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(0)" "org.apache.commons.io.output.WriterOutputStream.write(1)"
call "org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(0)" "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(0)"
reference "org.apache.commons.io.output.WriterOutputStreamTest.static {...}" "org.apache.commons.io.output.WriterOutputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.static {...}"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.TEST_STRING"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.output.WriterOutputStreamTest" "org.apache.commons.io.output.WriterOutputStreamTest.random"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "junit.framework.AssertionFailedError"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.output.ProxyOutputStream"
call "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForFlush"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForClose"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForFlush"
call "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)" "junit.framework.AssertionFailedError.AssertionFailedError(1)"
call "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)" "org.apache.commons.io.output.ProxyOutputStream.flush(0)"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForClose"
call "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(0)" "junit.framework.AssertionFailedError.AssertionFailedError(1)"
call "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(0)" "org.apache.commons.io.output.ProxyOutputStream.close(0)"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(0)"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForFlush"
reference "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForClose"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForFlush"
contain "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForClose"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.filefilter.NameFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.filefilter.OrFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.filefilter.FileFilterUtils"
call "org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.setUp(0)" "junit.framework.TestCase.setUp(0)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.setUp(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.tearDown(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.outputFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCase.orgDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.orgDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.apacheDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCase.commonsDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCase.current"
call "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCase.fail(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.TestFalseFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCase.current"
call "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(3)" "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.fail(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.fail(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.results"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.TestFileFinderString(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.outputFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)" "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.current"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.orgDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.apacheDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.commonsDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.ioDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.outputDir"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.filenameUtils"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.ioUtils"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.proxyWriter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.nullStream"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.outputFiles"
call "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.outputFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.ioDirAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.static {...}" "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.static {...}"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.current"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.orgDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.apacheDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.commonsDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.ioDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.outputDir"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.filenameUtils"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.ioUtils"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.proxyWriter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.nullStream"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.outputFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.outputFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.outputFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.ioDirAndFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.ioDirAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCase" "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)" "org.apache.commons.io.FileUtilsFileNewerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.createFile(2)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(0)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(0)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtilsFileNewerTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtilsFileNewerTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(0)"
reference "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(0)" "org.apache.commons.io.FileUtilsFileNewerTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(0)"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.FILE1_SIZE"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.FILE2_SIZE"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
contain "org.apache.commons.io.FileUtilsFileNewerTestCase" "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.1" "org.apache.commons.io.input.AutoCloseInputStreamTest"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.1.{...}" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.this$0"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest.1" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.{...}"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.1.close(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.this$0"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.1.close(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.access$002(2)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest.1" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.close(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.1.this$0" "org.apache.commons.io.input.AutoCloseInputStreamTest"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest.1" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.this$0"
reference "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReader"
reference "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReaderTest"
call "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(1)" "org.apache.commons.io.input.NullReader.NullReader(1)"
contain "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(1)"
call "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)" "org.apache.commons.io.input.NullReader.NullReader(3)"
contain "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
call "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChar(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.getPosition(0)"
contain "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChar(0)"
call "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChars(3)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.getPosition(0)"
contain "org.apache.commons.io.input.NullReaderTest.TestNullReader" "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChars(3)"
reference "org.apache.commons.io.TaggedIOExceptionTest" "org.apache.commons.io.TaggedIOException"
reference "org.apache.commons.io.TaggedIOExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.io.TaggedIOExceptionTest.TaggedIOExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.TaggedIOExceptionTest" "org.apache.commons.io.TaggedIOExceptionTest.TaggedIOExceptionTest(0)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOExceptionTest.assertTrue(1)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOExceptionTest.assertFalse(1)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOException.getCause(0)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOExceptionTest.assertEquals(2)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOException.getMessage(0)"
call "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)" "org.apache.commons.io.TaggedIOExceptionTest.assertEquals(2)"
contain "org.apache.commons.io.TaggedIOExceptionTest" "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "junit.framework.Assert"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelFileName"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.results"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.walk(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelled"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "junit.framework.Assert.assertFalse(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelled"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(3)" "junit.framework.Assert.assertFalse(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleIsCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelled"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleIsCancelled(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.suppressCancel"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelled"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.results"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparator"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest(1)"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.reverse"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.getTestDirectory(0)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerDir"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.largerDir"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerFile"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.largerFile"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.createFile(2)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.assertFalse(1)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.moreFile"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)" "org.apache.commons.io.comparator.AbstractFileComparator.compare(2)"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.assertTrue(2)"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerDir"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.largerDir"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.AbstractFileComparator.compare(2)"
call "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparatorTest.assertEquals(3)"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR"
reference "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerDir"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.largerDir"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerFile"
contain "org.apache.commons.io.comparator.SizeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparatorTest.largerFile"
reference "org.apache.commons.io.testtools.YellOnCloseInputStream" "junit.framework.AssertionFailedError"
reference "org.apache.commons.io.testtools.YellOnCloseInputStream" "org.apache.commons.io.input.ProxyInputStream"
call "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)" "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
contain "org.apache.commons.io.testtools.YellOnCloseInputStream" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.testtools.YellOnCloseInputStream.close(0)" "junit.framework.AssertionFailedError.AssertionFailedError(1)"
contain "org.apache.commons.io.testtools.YellOnCloseInputStream" "org.apache.commons.io.testtools.YellOnCloseInputStream.close(0)"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStream"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest.CharSequenceInputStreamTest(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.random"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.CharSequenceInputStreamTest(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)" "org.apache.commons.io.input.CharSequenceInputStreamTest.random"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead(0)"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead(0)"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead(0)" "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZeroEmptyString(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZeroEmptyString(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(0)"
call "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported(0)" "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported(0)"
reference "org.apache.commons.io.input.CharSequenceInputStreamTest.static {...}" "org.apache.commons.io.input.CharSequenceInputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.static {...}"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.TEST_STRING"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.input.CharSequenceInputStreamTest" "org.apache.commons.io.input.CharSequenceInputStreamTest.random"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.TaggedOutputStream"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStream"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.ClosedOutputStream"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.TaggedIOException"
reference "org.apache.commons.io.output.TaggedOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.TaggedOutputStreamTest.TaggedOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.TaggedOutputStreamTest.TaggedOutputStreamTest(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.fail(1)"
contain "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.write(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.flush(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)" "org.apache.commons.io.output.TaggedOutputStream.close(0)"
contain "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)"
call "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)" "org.apache.commons.io.output.TaggedOutputStreamTest.fail(1)"
contain "org.apache.commons.io.output.TaggedOutputStreamTest" "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileSystemUtilsTestCase" "junit.framework.Assert"
reference "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.setUp(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.tearDown(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)" "junit.framework.Assert.assertNotNull(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)" "org.apache.commons.io.FileSystemUtils.freeSpace(1)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(0)" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(0)" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(0)" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(0)" "org.apache.commons.io.FileSystemUtilsTestCase.1.{...}"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(0)" "org.apache.commons.io.FileSystemUtilsTestCase.2.{...}"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(0)" "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(0)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(0)" "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
call "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(0)" "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase" "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(0)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.XmlStreamReaderException"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(5)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(5)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)" "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.is"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream(0)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.is"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream(0)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.serialVersionUID"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderException" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.is"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparator"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.ReverseComparator"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.SizeFileComparator"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.ExtensionFileComparator"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.CompositeFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparatorTest.CompositeFileComparatorTest(1)"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.comparator"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.reverse"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.getTestDirectory(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.moreFile"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.createFile(2)"
contain "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile2"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.moreFile"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertTrue(2)"
contain "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.moreFile"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
contain "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)" "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.moreFile"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
call "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)" "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
contain "org.apache.commons.io.comparator.CompositeFileComparatorTest" "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStream"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.AutoCloseInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.AutoCloseInputStreamTest(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.1.{...}"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)" "org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(1)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertTrue(2)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertFalse(2)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertTrue(2)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertFalse(2)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertTrue(2)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertFalse(2)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)" "org.apache.commons.io.input.AutoCloseInputStreamTest.assertTrue(2)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.access$002(2)"
reference "org.apache.commons.io.input.AutoCloseInputStreamTest.data" "byte[]"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
contain "org.apache.commons.io.input.AutoCloseInputStreamTest" "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.filefilter.NameFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.filefilter.OrFileFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "junit.framework.TestCase"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.filefilter.FileFilterUtils"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.DirectoryWalkerTestCaseJava4(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.DirectoryWalkerTestCaseJava4(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp(0)" "junit.framework.TestCase.setUp(0)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.orgDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.orgDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.apacheDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.commonsDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.current"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.fail(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.TestFalseFileFinder(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.current"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(1)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.fail(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(1)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.fail(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.results"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.current"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.orgDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.apacheDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.commonsDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputDir"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filenameUtils"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioUtils"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.proxyWriter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.nullStream"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFiles"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDirAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.current"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.orgDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.apacheDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.commonsDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputDir"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filenameUtils"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioUtils"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.proxyWriter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.nullStream"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFiles"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDirAndFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDirAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN" "org.apache.commons.io.filefilter.IOFileFilter"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testString"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(1)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNotNull(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNotNull(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(0)" "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(0)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(0)"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
call "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)" "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testString"
reference "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes" "byte[]"
contain "org.apache.commons.io.output.DeferredFileOutputStreamTest" "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.TestFalseFileFinder(2)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.TestFalseFileFinder(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.handleDirectory(3)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(1)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtils"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase(1)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(0)" "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(1)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(0)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)" "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(2)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(1)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.WINDOWS"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(1)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.WINDOWS"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(0)" "org.apache.commons.io.FilenameUtils.splitOnTokens(1)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(2)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(0)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(2)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(2)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(2)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(2)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)" "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(3)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2(0)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246(0)"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(0)" "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(2)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(0)" "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(0)"
reference "org.apache.commons.io.FilenameUtilsWildcardTestCase.static {...}" "org.apache.commons.io.FilenameUtilsWildcardTestCase.WINDOWS"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.static {...}"
contain "org.apache.commons.io.FilenameUtilsWildcardTestCase" "org.apache.commons.io.FilenameUtilsWildcardTestCase.WINDOWS"
reference "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategy"
call "org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.setUp(0)" "org.apache.commons.io.testtools.FileBasedTestCase.setUp(0)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.setUp(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.tearDown(0)" "org.apache.commons.io.testtools.FileBasedTestCase.tearDown(0)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.tearDown(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertTrue(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.createFile(2)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategy.delete(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.fail(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertTrue(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.createFile(2)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertTrue(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.createFile(2)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategy.FORCE"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategy.delete(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)" "org.apache.commons.io.FileDeleteStrategy.delete(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.fail(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)" "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)" "org.apache.commons.io.FileDeleteStrategy.toString(0)"
call "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)" "org.apache.commons.io.FileDeleteStrategyTestCase.assertEquals(2)"
reference "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)" "org.apache.commons.io.FileDeleteStrategy.FORCE"
contain "org.apache.commons.io.FileDeleteStrategyTestCase" "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)"
reference "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl"
reference "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader"
reference "org.apache.commons.io.input.ProxyReaderTest" "char[]"
reference "org.apache.commons.io.input.ProxyReaderTest" "junit.framework.TestCase"
reference "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReader"
call "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderTest(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)" "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)" "org.apache.commons.io.input.ProxyReader.read(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)" "org.apache.commons.io.input.ProxyReaderTest.fail(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)" "org.apache.commons.io.input.ProxyReader.read(3)"
contain "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)" "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)" "org.apache.commons.io.input.ProxyReader.read(1)"
call "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)" "org.apache.commons.io.input.ProxyReaderTest.fail(1)"
contain "org.apache.commons.io.input.ProxyReaderTest" "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.cancelFileName"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.walk(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.cancelFileName"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleDirectoryEnd(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.cancelFileName"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleFile(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.suppressCancel"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.suppressCancel"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.TestFalseFileFinder(2)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.TestFalseFileFinder(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.handleDirectory(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "junit.framework.Assert"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelFileName"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.results"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.walk(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelled"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "junit.framework.Assert.assertFalse(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelled"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(3)" "junit.framework.Assert.assertFalse(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleIsCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelled"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleIsCancelled(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.suppressCancel"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelled"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.results"
reference "org.apache.commons.io.output.NullWriterTest" "org.apache.commons.io.output.NullWriter"
reference "org.apache.commons.io.output.NullWriterTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.NullWriterTest.NullWriterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.NullWriterTest" "org.apache.commons.io.output.NullWriterTest.NullWriterTest(1)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.write(1)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.write(1)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.write(3)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.write(1)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.write(3)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.flush(0)"
call "org.apache.commons.io.output.NullWriterTest.testNull(0)" "org.apache.commons.io.output.NullWriter.close(0)"
contain "org.apache.commons.io.output.NullWriterTest" "org.apache.commons.io.output.NullWriterTest.testNull(0)"
reference "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriter"
reference "org.apache.commons.io.output.XmlStreamWriterTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.XmlStreamWriterTest.XmlStreamWriterTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.XmlStreamWriterTest(0)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(2)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriter.write(1)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriter.close(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriter.getEncoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriterTest.assertEquals(2)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)" "org.apache.commons.io.output.XmlStreamWriterTest.assertTrue(1)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)" "org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(2)"
call "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)" "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)" "org.apache.commons.io.output.XmlStreamWriter.flush(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)" "org.apache.commons.io.output.XmlStreamWriter.write(1)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)" "org.apache.commons.io.output.XmlStreamWriter.close(0)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding(0)"
call "org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(0)" "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(0)"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN1"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN7"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN15"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_EUC_JP"
contain "org.apache.commons.io.output.XmlStreamWriterTest" "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_UNICODE"
reference "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtils"
reference "org.apache.commons.io.EndianUtilsTest" "junit.framework.TestCase"
call "org.apache.commons.io.EndianUtilsTest.EndianUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.EndianUtilsTest(1)"
call "org.apache.commons.io.EndianUtilsTest.testCtor(0)" "org.apache.commons.io.EndianUtils.EndianUtils(0)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testCtor(0)"
call "org.apache.commons.io.EndianUtilsTest.testEOFException(0)" "org.apache.commons.io.EndianUtils.readSwappedDouble(1)"
call "org.apache.commons.io.EndianUtilsTest.testEOFException(0)" "org.apache.commons.io.EndianUtilsTest.fail(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testEOFException(0)"
call "org.apache.commons.io.EndianUtilsTest.testSwapShort(0)" "org.apache.commons.io.EndianUtils.swapShort(1)"
call "org.apache.commons.io.EndianUtilsTest.testSwapShort(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSwapShort(0)"
call "org.apache.commons.io.EndianUtilsTest.testSwapInteger(0)" "org.apache.commons.io.EndianUtils.swapInteger(1)"
call "org.apache.commons.io.EndianUtilsTest.testSwapInteger(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSwapInteger(0)"
call "org.apache.commons.io.EndianUtilsTest.testSwapLong(0)" "org.apache.commons.io.EndianUtils.swapLong(1)"
call "org.apache.commons.io.EndianUtilsTest.testSwapLong(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSwapLong(0)"
call "org.apache.commons.io.EndianUtilsTest.testSwapFloat(0)" "org.apache.commons.io.EndianUtils.swapFloat(1)"
call "org.apache.commons.io.EndianUtilsTest.testSwapFloat(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSwapFloat(0)"
call "org.apache.commons.io.EndianUtilsTest.testSwapDouble(0)" "org.apache.commons.io.EndianUtils.swapDouble(1)"
call "org.apache.commons.io.EndianUtilsTest.testSwapDouble(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSwapDouble(0)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtils.swapShort(1)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtils.swapInteger(1)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtils.swapLong(1)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtils.swapFloat(1)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)" "org.apache.commons.io.EndianUtils.swapDouble(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(0)" "org.apache.commons.io.EndianUtils.readSwappedShort(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(0)" "org.apache.commons.io.EndianUtils.readSwappedShort(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(0)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(0)" "org.apache.commons.io.EndianUtils.writeSwappedShort(3)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(0)" "org.apache.commons.io.EndianUtils.writeSwappedShort(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(0)" "org.apache.commons.io.EndianUtils.readSwappedInteger(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(0)" "org.apache.commons.io.EndianUtils.readSwappedInteger(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(0)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(0)" "org.apache.commons.io.EndianUtils.writeSwappedInteger(3)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(0)" "org.apache.commons.io.EndianUtils.writeSwappedInteger(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(0)" "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(0)" "org.apache.commons.io.EndianUtils.readSwappedLong(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(0)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(0)" "org.apache.commons.io.EndianUtils.writeSwappedLong(3)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(0)" "org.apache.commons.io.EndianUtils.writeSwappedLong(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(0)" "org.apache.commons.io.EndianUtils.readSwappedFloat(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(0)" "org.apache.commons.io.EndianUtils.readSwappedFloat(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(0)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(0)" "org.apache.commons.io.EndianUtils.writeSwappedFloat(3)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(0)" "org.apache.commons.io.EndianUtils.writeSwappedFloat(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(0)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(0)" "org.apache.commons.io.EndianUtils.readSwappedDouble(2)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
call "org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(0)" "org.apache.commons.io.EndianUtils.readSwappedDouble(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(0)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(0)" "org.apache.commons.io.EndianUtils.writeSwappedDouble(3)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(0)" "org.apache.commons.io.EndianUtils.writeSwappedDouble(2)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(0)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtils.writeSwappedLong(3)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtils.writeSwappedDouble(3)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtils.readSwappedDouble(2)"
call "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)"
call "org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(2)"
call "org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(0)" "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
call "org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(0)" "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(1)"
contain "org.apache.commons.io.EndianUtilsTest" "org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "junit.framework.Assert"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.walk(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleDirectoryEnd(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleFile(3)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase(1)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(1)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase(1)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(1)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(1)" "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(1)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(1)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(1)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(1)"
call "org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter(0)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter(0)"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFalseResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFileResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilenameResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilters"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testTrueResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilters"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testTrueResults"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFalseResults"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFileResults"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilenameResults"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.trueFilters"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.OrFileFilterTestCase.falseFilters"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)"
reference "org.apache.commons.io.filefilter.OrFileFilterTestCase.static {...}" "org.apache.commons.io.filefilter.OrFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.static {...}"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.DEFAULT_WORKING_PATH"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilters"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testTrueResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFalseResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFileResults"
contain "org.apache.commons.io.filefilter.OrFileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilenameResults"
reference "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.ReaderThread"
reference "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.WriterThread"
reference "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.output.DemuxOutputStream"
reference "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.input.DemuxInputStream"
reference "org.apache.commons.io.DemuxTestCase" "junit.framework.TestCase"
call "org.apache.commons.io.DemuxTestCase.DemuxTestCase(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.io.DemuxTestCase.DemuxTestCase(1)" "org.apache.commons.io.DemuxTestCase.m_outputMap"
reference "org.apache.commons.io.DemuxTestCase.DemuxTestCase(1)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.DemuxTestCase(1)"
reference "org.apache.commons.io.DemuxTestCase.getOutput(1)" "org.apache.commons.io.DemuxTestCase.m_outputMap"
call "org.apache.commons.io.DemuxTestCase.getOutput(1)" "org.apache.commons.io.DemuxTestCase.assertNotNull(2)"
call "org.apache.commons.io.DemuxTestCase.getOutput(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.getOutput(1)"
reference "org.apache.commons.io.DemuxTestCase.getInput(1)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
call "org.apache.commons.io.DemuxTestCase.getInput(1)" "org.apache.commons.io.DemuxTestCase.assertNotNull(2)"
call "org.apache.commons.io.DemuxTestCase.getInput(1)" "org.apache.commons.io.DemuxTestCase.ReaderThread.getData(0)"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.getInput(1)"
reference "org.apache.commons.io.DemuxTestCase.doStart(0)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.doStart(0)"
reference "org.apache.commons.io.DemuxTestCase.doJoin(0)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.doJoin(0)"
call "org.apache.commons.io.DemuxTestCase.startWriter(3)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
reference "org.apache.commons.io.DemuxTestCase.startWriter(3)" "org.apache.commons.io.DemuxTestCase.m_outputMap"
call "org.apache.commons.io.DemuxTestCase.startWriter(3)" "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)"
reference "org.apache.commons.io.DemuxTestCase.startWriter(3)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.startWriter(3)"
call "org.apache.commons.io.DemuxTestCase.startReader(3)" "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)"
reference "org.apache.commons.io.DemuxTestCase.startReader(3)" "org.apache.commons.io.DemuxTestCase.m_threadMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.startReader(3)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.output.DemuxOutputStream.DemuxOutputStream(0)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.DemuxTestCase.startWriter(3)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.DemuxTestCase.doStart(0)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.DemuxTestCase.doJoin(0)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.DemuxTestCase.getOutput(1)"
call "org.apache.commons.io.DemuxTestCase.testOutputStream(0)" "org.apache.commons.io.DemuxTestCase.assertEquals(3)"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.testOutputStream(0)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.input.DemuxInputStream.DemuxInputStream(0)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.DemuxTestCase.startReader(3)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.DemuxTestCase.doStart(0)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.DemuxTestCase.doJoin(0)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.DemuxTestCase.getInput(1)"
call "org.apache.commons.io.DemuxTestCase.testInputStream(0)" "org.apache.commons.io.DemuxTestCase.assertEquals(3)"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.testInputStream(0)"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.access$000(0)"
reference "org.apache.commons.io.DemuxTestCase.static {...}" "org.apache.commons.io.DemuxTestCase.c_random"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.static {...}"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.T1"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.T2"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.T3"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.T4"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.DATA1"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.DATA2"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.DATA3"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.DATA4"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.c_random"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.m_outputMap"
contain "org.apache.commons.io.DemuxTestCase" "org.apache.commons.io.DemuxTestCase.m_threadMap"
reference "org.apache.commons.io.FileUtilsTestCase.3" "org.apache.commons.io.FileUtilsTestCase"
reference "org.apache.commons.io.FileUtilsTestCase.3.{...}" "org.apache.commons.io.FileUtilsTestCase.3.this$0"
contain "org.apache.commons.io.FileUtilsTestCase.3" "org.apache.commons.io.FileUtilsTestCase.3.{...}"
contain "org.apache.commons.io.FileUtilsTestCase.3" "org.apache.commons.io.FileUtilsTestCase.3.renameTo(1)"
reference "org.apache.commons.io.FileUtilsTestCase.3.this$0" "org.apache.commons.io.FileUtilsTestCase"
contain "org.apache.commons.io.FileUtilsTestCase.3" "org.apache.commons.io.FileUtilsTestCase.3.this$0"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.testtools.YellOnCloseInputStream"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.input.NullInputStream"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.output.NullOutputStream"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.input.NullReader"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.output.NullWriter"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(1)" "org.apache.commons.io.IOUtilsCopyTestCase.generateTestData(1)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(1)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(1)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.setUp(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.tearDown(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.IOUtils.copyLarge(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtils.copy(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)"
reference "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)" "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.input.NullReader.NullReader(1)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.IOUtils.copy(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.IOUtils.copyLarge(2)"
call "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)" "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.FILE_SIZE"
reference "org.apache.commons.io.IOUtilsCopyTestCase.inData" "byte[]"
contain "org.apache.commons.io.IOUtilsCopyTestCase" "org.apache.commons.io.IOUtilsCopyTestCase.inData"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.blockSizes(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ReversedLinesFileReaderTestParamBlockSize(1)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ReversedLinesFileReaderTestParamBlockSize(1)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReader.close(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(3)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.UTF_8"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ISO_8859_1"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE_SHIFT_JIS1"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE_SHIFT_JIS2"
reference "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStream"
reference "org.apache.commons.io.output.BrokenOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.BrokenOutputStreamTest.BrokenOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.BrokenOutputStreamTest(0)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.setUp(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
call "org.apache.commons.io.output.BrokenOutputStreamTest.setUp(0)" "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.setUp(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.setUp(0)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.fail(1)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.fail(1)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.fail(1)"
reference "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
call "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)" "org.apache.commons.io.output.BrokenOutputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
contain "org.apache.commons.io.output.BrokenOutputStreamTest" "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
reference "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.StringBuilderWriter"
reference "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriter"
reference "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.NullWriter"
reference "org.apache.commons.io.output.ProxyWriterTest" "char[]"
reference "org.apache.commons.io.output.ProxyWriterTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.ProxyWriterTest.ProxyWriterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.ProxyWriterTest(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.ProxyWriter.append(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)" "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.ProxyWriter.write(3)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)" "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.ProxyWriter.write(3)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)" "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)" "org.apache.commons.io.output.ProxyWriter.write(3)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)" "org.apache.commons.io.output.ProxyWriter.write(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)" "org.apache.commons.io.output.ProxyWriter.write(3)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)" "org.apache.commons.io.output.NullWriter.NullWriter(0)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)" "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)" "org.apache.commons.io.output.ProxyWriter.append(1)"
call "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)" "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
contain "org.apache.commons.io.output.ProxyWriterTest" "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)"
reference "org.apache.commons.io.ThreadMonitorTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.ThreadMonitorTestCase" "org.apache.commons.io.ThreadMonitor"
call "org.apache.commons.io.ThreadMonitorTestCase.ThreadMonitorTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.ThreadMonitorTestCase" "org.apache.commons.io.ThreadMonitorTestCase.ThreadMonitorTestCase(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testTimeout(0)" "org.apache.commons.io.ThreadMonitor.start(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testTimeout(0)" "org.apache.commons.io.ThreadMonitor.stop(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testTimeout(0)" "org.apache.commons.io.ThreadMonitorTestCase.fail(1)"
contain "org.apache.commons.io.ThreadMonitorTestCase" "org.apache.commons.io.ThreadMonitorTestCase.testTimeout(0)"
call "org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(0)" "org.apache.commons.io.ThreadMonitor.start(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(0)" "org.apache.commons.io.ThreadMonitor.stop(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(0)" "org.apache.commons.io.ThreadMonitorTestCase.fail(1)"
contain "org.apache.commons.io.ThreadMonitorTestCase" "org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(0)"
call "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)" "org.apache.commons.io.ThreadMonitor.start(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)" "org.apache.commons.io.ThreadMonitorTestCase.assertNull(2)"
call "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)" "org.apache.commons.io.ThreadMonitor.stop(1)"
call "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)" "org.apache.commons.io.ThreadMonitorTestCase.fail(1)"
contain "org.apache.commons.io.ThreadMonitorTestCase" "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)"
reference "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.filefilter.FileFilterUtils"
call "org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.setUp(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.setUp(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.setUp(0)" "org.apache.commons.io.FileUtils.touch(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.setUp(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.tearDown(0)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtils.iterateFiles(3)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtils.listFiles(3)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtils.listFiles(3)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(1)"
call "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsListFilesTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsListFilesTestCase" "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.input.DemuxInputStream"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_buffer"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_input"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_demux"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.getData(0)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_buffer"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.getData(0)"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_demux"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_input"
call "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.input.DemuxInputStream.bindStream(1)"
call "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.input.DemuxInputStream.read(0)"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_buffer"
call "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)" "org.apache.commons.io.DemuxTestCase.access$000(0)"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_buffer"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_input"
reference "org.apache.commons.io.DemuxTestCase.ReaderThread.m_demux" "org.apache.commons.io.input.DemuxInputStream"
contain "org.apache.commons.io.DemuxTestCase.ReaderThread" "org.apache.commons.io.DemuxTestCase.ReaderThread.m_demux"
reference "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriter"
reference "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.getTestDirectory(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
reference "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockDir"
reference "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
reference "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.altLockDir"
reference "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)" "org.apache.commons.io.output.LockableFileWriterTest.altLockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.tearDown(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
reference "org.apache.commons.io.output.LockableFileWriterTest.tearDown(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
reference "org.apache.commons.io.output.LockableFileWriterTest.tearDown(0)" "org.apache.commons.io.output.LockableFileWriterTest.altLockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.tearDown(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(2)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
reference "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.altLockDir"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.altLockFile"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(2)"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriterTest.getTestDirectory(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.fail(0)"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.file"
call "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
reference "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.file"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.lockDir"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.altLockDir"
contain "org.apache.commons.io.output.LockableFileWriterTest" "org.apache.commons.io.output.LockableFileWriterTest.altLockFile"
reference "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.PathFileComparator"
reference "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
call "org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest(1)"
call "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.reverse"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)"
call "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile2"
call "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.assertTrue(2)"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.PathFileComparatorTest" "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.1" "org.apache.commons.io.FileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase.1" "org.apache.commons.io.FileSystemUtilsTestCase"
reference "org.apache.commons.io.FileSystemUtilsTestCase.1.{...}" "org.apache.commons.io.FileSystemUtilsTestCase.1.this$0"
call "org.apache.commons.io.FileSystemUtilsTestCase.1.{...}" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.1" "org.apache.commons.io.FileSystemUtilsTestCase.1.{...}"
contain "org.apache.commons.io.FileSystemUtilsTestCase.1" "org.apache.commons.io.FileSystemUtilsTestCase.1.freeSpaceWindows(2)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.1.this$0" "org.apache.commons.io.FileSystemUtilsTestCase"
contain "org.apache.commons.io.FileSystemUtilsTestCase.1" "org.apache.commons.io.FileSystemUtilsTestCase.1.this$0"
reference "org.apache.commons.io.output.ClosedOutputStreamTest" "org.apache.commons.io.output.ClosedOutputStream"
reference "org.apache.commons.io.output.ClosedOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.ClosedOutputStreamTest.ClosedOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.ClosedOutputStreamTest" "org.apache.commons.io.output.ClosedOutputStreamTest.ClosedOutputStreamTest(0)"
call "org.apache.commons.io.output.ClosedOutputStreamTest.testRead(0)" "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
call "org.apache.commons.io.output.ClosedOutputStreamTest.testRead(0)" "org.apache.commons.io.output.ClosedOutputStream.write(1)"
call "org.apache.commons.io.output.ClosedOutputStreamTest.testRead(0)" "org.apache.commons.io.output.ClosedOutputStreamTest.fail(1)"
contain "org.apache.commons.io.output.ClosedOutputStreamTest" "org.apache.commons.io.output.ClosedOutputStreamTest.testRead(0)"
reference "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReader"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.CharSequenceReaderTest(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testClose(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testClose(0)" "org.apache.commons.io.input.CharSequenceReaderTest.checkRead(2)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testClose(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testMark(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testMark(0)" "org.apache.commons.io.input.CharSequenceReaderTest.checkRead(2)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testMark(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testSkip(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testSkip(0)" "org.apache.commons.io.input.CharSequenceReaderTest.checkRead(2)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testSkip(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testRead(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testRead(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.CharSequenceReaderTest.checkArray(2)"
reference "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.CharSequenceReaderTest.NONE"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(0)"
call "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(0)" "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
reference "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(0)" "org.apache.commons.io.input.CharSequenceReaderTest.NONE"
call "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(0)" "org.apache.commons.io.input.CharSequenceReaderTest.checkArray(2)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(0)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.checkRead(2)"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.checkArray(2)"
reference "org.apache.commons.io.input.CharSequenceReaderTest.static {...}" "org.apache.commons.io.input.CharSequenceReaderTest.NONE"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.static {...}"
contain "org.apache.commons.io.input.CharSequenceReaderTest" "org.apache.commons.io.input.CharSequenceReaderTest.NONE"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilter"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase(1)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown(0)" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown(0)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertEquals(3)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)"
reference "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)"
call "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.RegexFileFilterTestCase" "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)"
reference "org.apache.commons.io.FileCleanerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase"
reference "org.apache.commons.io.FileCleanerTestCase" "org.apache.commons.io.FileCleaner"
call "org.apache.commons.io.FileCleanerTestCase.newInstance(0)" "org.apache.commons.io.FileCleaner.getInstance(0)"
contain "org.apache.commons.io.FileCleanerTestCase" "org.apache.commons.io.FileCleanerTestCase.newInstance(0)"
call "org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase(1)" "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)"
contain "org.apache.commons.io.FileCleanerTestCase" "org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase(1)"
reference "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.TestTailerListener"
reference "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.Tailer"
reference "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.input.TailerTest.TailerTest(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.TailerTest(1)"
reference "org.apache.commons.io.input.TailerTest.tearDown(0)" "org.apache.commons.io.input.TailerTest.tailer"
call "org.apache.commons.io.input.TailerTest.tearDown(0)" "org.apache.commons.io.input.Tailer.stop(0)"
call "org.apache.commons.io.input.TailerTest.tearDown(0)" "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
call "org.apache.commons.io.input.TailerTest.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.tearDown(0)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.createFile(2)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.Tailer.Tailer(4)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.writeString(2)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(0)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.clear(0)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.input.Tailer.stop(0)"
call "org.apache.commons.io.input.TailerTest.testTailerEof(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.testTailerEof(0)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.createFile(2)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.Tailer.Tailer(4)"
reference "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.tailer"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.write(2)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(0)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.clear(0)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.FileUtils.readLines(1)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.assertFalse(2)"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.Tailer.stop(0)"
reference "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
call "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.assertNull(2)"
reference "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
reference "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
reference "org.apache.commons.io.input.TailerTest.testTailer(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.testTailer(0)"
call "org.apache.commons.io.input.TailerTest.createFile(2)" "org.apache.commons.io.testtools.FileBasedTestCase.createFile(2)"
call "org.apache.commons.io.input.TailerTest.createFile(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.createFile(2)"
call "org.apache.commons.io.input.TailerTest.write(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.write(2)"
call "org.apache.commons.io.input.TailerTest.writeString(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.writeString(2)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.assertFalse(2)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.Tailer.create(4)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.tailer"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.Tailer.stop(0)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.assertNull(2)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.assertTrue(2)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.assertFalse(2)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.Tailer.Tailer(4)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.tailer"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.Tailer.stop(0)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.assertNull(2)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.assertEquals(3)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
call "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.assertTrue(2)"
reference "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)"
reference "org.apache.commons.io.input.TailerTest.tailer" "org.apache.commons.io.input.Tailer"
contain "org.apache.commons.io.input.TailerTest" "org.apache.commons.io.input.TailerTest.tailer"
reference "org.apache.commons.io.FileUtilsTestCase.1" "org.apache.commons.io.FileUtilsTestCase"
reference "org.apache.commons.io.FileUtilsTestCase.1.{...}" "org.apache.commons.io.FileUtilsTestCase.1.this$0"
contain "org.apache.commons.io.FileUtilsTestCase.1" "org.apache.commons.io.FileUtilsTestCase.1.{...}"
contain "org.apache.commons.io.FileUtilsTestCase.1" "org.apache.commons.io.FileUtilsTestCase.1.renameTo(1)"
reference "org.apache.commons.io.FileUtilsTestCase.1.this$0" "org.apache.commons.io.FileUtilsTestCase"
contain "org.apache.commons.io.FileUtilsTestCase.1" "org.apache.commons.io.FileUtilsTestCase.1.this$0"
reference "org.apache.commons.io.FileUtilsTestCase.2" "org.apache.commons.io.FileUtilsTestCase"
reference "org.apache.commons.io.FileUtilsTestCase.2.{...}" "org.apache.commons.io.FileUtilsTestCase.2.this$0"
contain "org.apache.commons.io.FileUtilsTestCase.2" "org.apache.commons.io.FileUtilsTestCase.2.{...}"
contain "org.apache.commons.io.FileUtilsTestCase.2" "org.apache.commons.io.FileUtilsTestCase.2.renameTo(1)"
contain "org.apache.commons.io.FileUtilsTestCase.2" "org.apache.commons.io.FileUtilsTestCase.2.delete(0)"
reference "org.apache.commons.io.FileUtilsTestCase.2.this$0" "org.apache.commons.io.FileUtilsTestCase"
contain "org.apache.commons.io.FileUtilsTestCase.2" "org.apache.commons.io.FileUtilsTestCase.2.this$0"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest"
reference "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.compatibility.XmlStreamReader"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.XmlStreamReaderUtilitiesCompatibilityTest(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.XmlStreamReaderUtilitiesTest(0)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.XmlStreamReaderUtilitiesCompatibilityTest(0)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.calculateRawEncoding(4)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(4)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.calculateHttpEncoding(7)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest" "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStream"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest" "junit.framework.TestCase"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.ByteArrayOutputStream"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.CloseShieldOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.CloseShieldOutputStreamTest(0)"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.{...}"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.original"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)" "org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(1)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.shielded"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.closed"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.shielded"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.closed"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.assertFalse(2)"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.fail(1)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.original"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.access$002(2)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.original" "org.apache.commons.io.output.ByteArrayOutputStream"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.original"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.shielded"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest" "org.apache.commons.io.output.CloseShieldOutputStreamTest.closed"
reference "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStream"
reference "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.NullInputStream"
reference "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.output.NullOutputStream"
reference "org.apache.commons.io.input.CountingInputStreamTest" "junit.framework.TestCase"
reference "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStream.read(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStream.read(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStream.read(3)"
call "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.IOUtils.copyLarge(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStreamTest.fail(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStream.resetCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.NullInputStream.close(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStream.getByteCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.CountingInputStream.resetByteCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)" "org.apache.commons.io.input.CountingInputStream.read(3)"
call "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)" "org.apache.commons.io.input.CountingInputStream.resetCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)" "org.apache.commons.io.input.CountingInputStream.read(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)" "org.apache.commons.io.input.CountingInputStream.read(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)" "org.apache.commons.io.input.CountingInputStream.read(3)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)" "org.apache.commons.io.input.CountingInputStream.read(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)" "org.apache.commons.io.input.CountingInputStream.read(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)" "org.apache.commons.io.input.CountingInputStream.read(3)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStream.skip(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStream.getCount(0)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStream.read(1)"
call "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)" "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.CountingInputStreamTest" "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReader"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.ReversedLinesFileReaderTestSimple(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReader.close(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16(0)"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.reversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple" "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.reversedLinesFileReader"
reference "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
call "org.apache.commons.io.IOCaseTestCase.IOCaseTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.IOCaseTestCase(1)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.setUp(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.tearDown(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCase.forName(1)"
call "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
reference "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.IOCaseTestCase.test_forName(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_forName(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_serialization(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_serialization(0)" "org.apache.commons.io.IOCaseTestCase.serialize(1)"
call "org.apache.commons.io.IOCaseTestCase.test_serialization(0)" "org.apache.commons.io.IOCaseTestCase.assertSame(2)"
reference "org.apache.commons.io.IOCaseTestCase.test_serialization(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_serialization(0)" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_serialization(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_getName(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_getName(0)" "org.apache.commons.io.IOCase.getName(0)"
call "org.apache.commons.io.IOCaseTestCase.test_getName(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
reference "org.apache.commons.io.IOCaseTestCase.test_getName(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_getName(0)" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_getName(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_toString(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_toString(0)" "org.apache.commons.io.IOCase.toString(0)"
call "org.apache.commons.io.IOCaseTestCase.test_toString(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
reference "org.apache.commons.io.IOCaseTestCase.test_toString(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_toString(0)" "org.apache.commons.io.IOCase.SYSTEM"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_toString(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCase.isCaseSensitive(0)"
call "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
reference "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)" "org.apache.commons.io.IOCase.checkCompareTo(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCase.checkCompareTo(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
call "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)" "org.apache.commons.io.IOCase.checkEquals(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCase.checkEquals(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
call "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)" "org.apache.commons.io.IOCase.checkStartsWith(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCase.checkStartsWith(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
call "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)" "org.apache.commons.io.IOCase.checkEndsWith(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCase.checkEndsWith(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
call "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)" "org.apache.commons.io.IOCase.checkIndexOf(3)"
call "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
call "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCase.checkIndexOf(3)"
call "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)" "org.apache.commons.io.IOCaseTestCase.fail(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCase.checkRegionMatches(3)"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
reference "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
call "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)" "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.serialize(1)"
reference "org.apache.commons.io.IOCaseTestCase.static {...}" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.static {...}"
contain "org.apache.commons.io.IOCaseTestCase" "org.apache.commons.io.IOCaseTestCase.WINDOWS"
reference "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStream"
reference "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStreamTest"
call "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(1)" "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
contain "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(1)"
call "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)" "org.apache.commons.io.input.NullInputStream.NullInputStream(3)"
contain "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
call "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processByte(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.getPosition(0)"
contain "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processByte(0)"
call "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processBytes(3)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.getPosition(0)"
contain "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processBytes(3)"
reference "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader" "org.apache.commons.io.input.NullReader"
reference "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader" "org.apache.commons.io.input.ProxyReaderTest"
call "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(1)" "org.apache.commons.io.input.NullReader.NullReader(1)"
contain "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(1)"
call "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(1)" "org.apache.commons.io.input.NullReader.read(1)"
contain "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(1)"
call "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(1)" "org.apache.commons.io.input.NullReader.read(1)"
contain "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader" "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(1)"
reference "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream"
reference "org.apache.commons.io.input.NullInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest(1)"
call "org.apache.commons.io.input.NullInputStreamTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.setUp(0)"
call "org.apache.commons.io.input.NullInputStreamTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.tearDown(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testRead(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testRead(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testRead(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testRead(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testRead(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testEOFException(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testEOFException(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testEOFException(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testEOFException(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullInputStreamTest.assertTrue(2)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullInputStreamTest.assertFalse(2)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)"
call "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)" "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)" "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
call "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)" "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullInputStreamTest" "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.2" "org.apache.commons.io.FileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase.2" "org.apache.commons.io.FileSystemUtilsTestCase"
reference "org.apache.commons.io.FileSystemUtilsTestCase.2.{...}" "org.apache.commons.io.FileSystemUtilsTestCase.2.this$0"
call "org.apache.commons.io.FileSystemUtilsTestCase.2.{...}" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.2" "org.apache.commons.io.FileSystemUtilsTestCase.2.{...}"
contain "org.apache.commons.io.FileSystemUtilsTestCase.2" "org.apache.commons.io.FileSystemUtilsTestCase.2.freeSpaceUnix(4)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.2.this$0" "org.apache.commons.io.FileSystemUtilsTestCase"
contain "org.apache.commons.io.FileSystemUtilsTestCase.2" "org.apache.commons.io.FileSystemUtilsTestCase.2.this$0"
reference "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream"
reference "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream"
reference "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStream"
reference "org.apache.commons.io.output.TeeOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)" "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)" "org.apache.commons.io.output.TeeOutputStream.close(0)"
reference "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.closed"
contain "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)" "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)" "org.apache.commons.io.output.TeeOutputStream.close(0)"
reference "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.closed"
contain "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.write(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(3)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.write(1)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.write(3)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.flush(0)"
call "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)" "org.apache.commons.io.output.TeeOutputStream.close(0)"
contain "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)"
call "org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(3)" "org.apache.commons.io.output.TeeOutputStreamTest.assertEquals(3)"
call "org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(3)" "org.apache.commons.io.output.TeeOutputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.output.TeeOutputStreamTest" "org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(3)"
reference "org.apache.commons.io.input.ClosedInputStreamTest" "org.apache.commons.io.input.ClosedInputStream"
reference "org.apache.commons.io.input.ClosedInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.ClosedInputStreamTest.ClosedInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.ClosedInputStreamTest" "org.apache.commons.io.input.ClosedInputStreamTest.ClosedInputStreamTest(0)"
call "org.apache.commons.io.input.ClosedInputStreamTest.testRead(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
call "org.apache.commons.io.input.ClosedInputStreamTest.testRead(0)" "org.apache.commons.io.input.ClosedInputStream.read(0)"
call "org.apache.commons.io.input.ClosedInputStreamTest.testRead(0)" "org.apache.commons.io.input.ClosedInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.ClosedInputStreamTest" "org.apache.commons.io.input.ClosedInputStreamTest.testRead(0)"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" "org.apache.commons.io.comparator.LastModifiedFileComparator"
call "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest(1)"
call "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.reverse"
call "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.getTestDirectory(0)"
call "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.createFile(2)"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.LastModifiedFileComparatorTest" "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.FalseFileFilter"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.TesterFalseFileFilter(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.this$0"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.TesterFalseFileFilter(0)" "org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.TesterFalseFileFilter(0)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(1)" "org.apache.commons.io.filefilter.FalseFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(2)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(2)" "org.apache.commons.io.filefilter.FalseFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(2)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.isInvoked(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.invoked"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.isInvoked(0)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.invoked"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.reset(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.reset(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.invoked"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.this$0" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.this$0"
reference "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest"
contain "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(0)"
reference "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.close(0)" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.closed"
contain "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.close(0)"
contain "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(1)"
contain "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream" "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.closed"
reference "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReader"
reference "org.apache.commons.io.input.XmlStreamReaderTest" "int[]"
reference "org.apache.commons.io.input.XmlStreamReaderTest" "junit.framework.TestCase"
reference "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.input.XmlStreamReaderTest.XmlStreamReaderTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XmlStreamReaderTest(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.fail(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.assertTrue(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)" "org.apache.commons.io.input.XmlStreamReaderTest.fail(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)" "org.apache.commons.io.input.XmlStreamReaderTest.assertTrue(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)" "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)" "org.apache.commons.io.IOUtils.toString(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)" "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)" "org.apache.commons.io.IOUtils.toString(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)" "org.apache.commons.io.input.XmlStreamReaderTest.fail(1)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)" "org.apache.commons.io.input.XmlStreamReaderTest.assertTrue(1)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(0)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(0)" "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(0)" "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(0)"
reference "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)" "org.apache.commons.io.input.XmlStreamReaderTest.BOMs"
call "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)" "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
reference "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)" "org.apache.commons.io.input.XmlStreamReaderTest.XMLs"
reference "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)" "org.apache.commons.io.input.XmlStreamReaderTest.INFO"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.NO_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16BE_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16LE_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_8_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.BOMs"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XML"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_DOUBLE_QUOTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SINGLE_QUOTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SPACED_SINGLE_QUOTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.INFO"
reference "org.apache.commons.io.input.XmlStreamReaderTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderTest.XMLs"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.static {...}"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML5"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML4"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML3"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML2"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML1"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.ENCODING_ATTRIBUTE_XML"
reference "org.apache.commons.io.input.XmlStreamReaderTest.NO_BOM_BYTES" "int[]"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.NO_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16BE_BOM_BYTES" "int[]"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16BE_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16LE_BOM_BYTES" "int[]"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16LE_BOM_BYTES"
reference "org.apache.commons.io.input.XmlStreamReaderTest.UTF_8_BOM_BYTES" "int[]"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.UTF_8_BOM_BYTES"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.BOMs"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_DOUBLE_QUOTES"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SINGLE_QUOTES"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SPACED_SINGLE_QUOTES"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.INFO"
contain "org.apache.commons.io.input.XmlStreamReaderTest" "org.apache.commons.io.input.XmlStreamReaderTest.XMLs"
reference "org.apache.commons.io.input.BOMInputStreamTest.1" "org.apache.commons.io.input.BOMInputStreamTest"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.blockSizes(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(3)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.fileName"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(3)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.encoding"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(3)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.buffSize"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.fileName"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.buffSize"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.encoding"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.reversedLinesFileReader"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.bufferedReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)" "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.bufferedReader"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.reversedLinesFileReader"
call "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(0)" "org.apache.commons.io.input.ReversedLinesFileReader.close(0)"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(0)"
reference "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.reversedLinesFileReader" "org.apache.commons.io.input.ReversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.reversedLinesFileReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.bufferedReader"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.fileName"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.encoding"
contain "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile" "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.buffSize"
reference "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStream"
reference "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.ClosedInputStream"
reference "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.BrokenInputStream"
reference "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.TaggedIOException"
reference "org.apache.commons.io.input.TaggedInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.TaggedInputStreamTest.TaggedInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStreamTest.TaggedInputStreamTest(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)" "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(0)" "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.available(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.fail(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.assertTrue(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.read(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)" "org.apache.commons.io.input.TaggedInputStream.close(0)"
contain "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.TaggedInputStreamTest.assertFalse(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)"
call "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)" "org.apache.commons.io.input.TaggedInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.TaggedInputStreamTest" "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest" "org.apache.commons.io.comparator.DefaultFileComparator"
call "org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.DefaultFileComparatorTest" "org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest(1)"
call "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.reverse"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.DefaultFileComparatorTest" "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)"
reference "org.apache.commons.io.IOExceptionWithCauseTestCase" "org.apache.commons.io.IOExceptionWithCause"
reference "org.apache.commons.io.IOExceptionWithCauseTestCase" "junit.framework.TestCase"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.IOExceptionWithCauseTestCase(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.IOExceptionWithCauseTestCase" "org.apache.commons.io.IOExceptionWithCauseTestCase.IOExceptionWithCauseTestCase(0)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable(0)" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable(0)" "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)"
contain "org.apache.commons.io.IOExceptionWithCauseTestCase" "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable(0)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable(0)" "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(1)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable(0)" "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)"
contain "org.apache.commons.io.IOExceptionWithCauseTestCase" "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable(0)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)" "org.apache.commons.io.IOExceptionWithCauseTestCase.assertEquals(2)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)" "org.apache.commons.io.IOExceptionWithCauseTestCase.assertEquals(2)"
call "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)" "org.apache.commons.io.IOExceptionWithCauseTestCase.assertSame(2)"
contain "org.apache.commons.io.IOExceptionWithCauseTestCase" "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderException"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "junit.framework.TestCase"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReader"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.XmlStreamReaderUtilitiesTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.XmlStreamReaderUtilitiesTest(0)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.setUp(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(2)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(2)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(2)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(2)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(2)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(2)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(2)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(2)" "org.apache.commons.io.input.XmlStreamReader.isAppXml(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(2)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(2)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(2)" "org.apache.commons.io.input.XmlStreamReader.isTextXml(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(2)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(2)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS2"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS1"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS1"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(4)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(4)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(4)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.calculateRawEncoding(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(4)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.fail(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getMessage(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertTrue(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertNull(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(0)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS3"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.TXTXML"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16LE"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16BE"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS1"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS2"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF8"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(6)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(6)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.calculateHttpEncoding(5)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(6)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.fail(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getMessage(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertTrue(2)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(1)"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)" "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(0)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS1"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS2"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS1"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS2"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS3"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF8"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16BE"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16LE"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.TXTXML"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS1"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS2"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS1"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS2"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS3"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF8"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16BE"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16LE"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.TXTXML"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerListener"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.handle(1)" "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.handle(1)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(0)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.clear(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.clear(0)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.handle(1)" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.handle(1)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.init(1)" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.init(1)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.fileNotFound(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.fileNotFound(0)"
reference "org.apache.commons.io.input.TailerTest.TestTailerListener.fileRotated(0)" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.fileRotated(0)"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
contain "org.apache.commons.io.input.TailerTest.TestTailerListener" "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.1" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.1" "org.apache.commons.io.output.ProxyOutputStreamTest"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.1.{...}" "org.apache.commons.io.output.ProxyOutputStreamTest.1.this$0"
call "org.apache.commons.io.output.ProxyOutputStreamTest.1.{...}" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
contain "org.apache.commons.io.output.ProxyOutputStreamTest.1" "org.apache.commons.io.output.ProxyOutputStreamTest.1.{...}"
call "org.apache.commons.io.output.ProxyOutputStreamTest.1.write(1)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
contain "org.apache.commons.io.output.ProxyOutputStreamTest.1" "org.apache.commons.io.output.ProxyOutputStreamTest.1.write(1)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.1.this$0" "org.apache.commons.io.output.ProxyOutputStreamTest"
contain "org.apache.commons.io.output.ProxyOutputStreamTest.1" "org.apache.commons.io.output.ProxyOutputStreamTest.1.this$0"
reference "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.input.BoundedInputStream"
reference "org.apache.commons.io.input.BoundedInputStreamTest" "junit.framework.TestCase"
reference "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.input.BoundedInputStreamTest.BoundedInputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.input.BoundedInputStreamTest.BoundedInputStreamTest(1)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(0)" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(0)" "org.apache.commons.io.input.BoundedInputStream.read(0)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(0)" "org.apache.commons.io.input.BoundedInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(0)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(1)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)" "org.apache.commons.io.input.BoundedInputStreamTest.compare(3)"
call "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)" "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)"
contain "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)"
call "org.apache.commons.io.input.BoundedInputStreamTest.compare(3)" "org.apache.commons.io.input.BoundedInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.BoundedInputStreamTest.compare(3)" "org.apache.commons.io.input.BoundedInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.BoundedInputStreamTest" "org.apache.commons.io.input.BoundedInputStreamTest.compare(3)"
reference "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" "org.apache.commons.io.input.ClassLoaderObjectInputStream"
reference "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest(1)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(2)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.readObject(0)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.assertTrue(1)"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(0)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(2)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(1)"
call "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(0)" "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.assertTrue(2)"
contain "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest" "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(0)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReaderException"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding(0)" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding(0)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(3)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(3)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream(0)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getXmlEncoding(0)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getContentTypeEncoding(0)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding(0)" "org.apache.commons.io.input.compatibility.XmlStreamReader.encoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding(0)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.read(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.reader"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.read(3)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.close(0)" "org.apache.commons.io.input.compatibility.XmlStreamReader.reader"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.close(0)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(2)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)" "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.reader"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.encoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_1"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(5)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_2"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(1)"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_1"
call "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_2"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_3"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(1)" "org.apache.commons.io.input.compatibility.XmlStreamReader.CHARSET_PATTERN"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(1)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(1)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(2)" "org.apache.commons.io.input.compatibility.XmlStreamReader.ENCODING_PATTERN"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(2)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(1)"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(1)"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.CHARSET_PATTERN"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.ENCODING_PATTERN"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_1"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_2"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_1"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_2"
reference "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_3"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.BUFFER_SIZE"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_8"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.US_ASCII"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16BE"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16LE"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.EBCDIC"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.reader"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.encoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.CHARSET_PATTERN"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.ENCODING_PATTERN"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_1"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_2"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_1"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_2"
contain "org.apache.commons.io.input.compatibility.XmlStreamReader" "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_3"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalker.CancelException"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.cancelFileName"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.suppressCancel"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.find(1)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.walk(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.find(1)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.cancelFileName"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleDirectoryEnd(3)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleDirectoryEnd(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.cancelFileName"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleFile(3)" "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleFile(3)"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.suppressCancel"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleCancelled(3)" "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleCancelled(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.cancelFileName"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.suppressCancel"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "junit.framework.Assert"
reference "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "org.apache.commons.io.DirectoryWalkerTestCase"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.TestFileFinderString(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.TestFileFinderString(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(1)" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.walk(2)"
call "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(1)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString" "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.handleFile(3)"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.filefilter.NameFileFilter"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.filefilter.WildcardFileFilter"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileExistsException"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
reference "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.FileUtilsTestCase.testFile2"
reference "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
reference "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)"
call "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
reference "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
call "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2"
reference "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
call "org.apache.commons.io.FileUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.setUp(0)"
call "org.apache.commons.io.FileUtilsTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.tearDown(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile(0)" "org.apache.commons.io.FileUtils.getFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(0)" "org.apache.commons.io.FileUtils.getFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(0)" "org.apache.commons.io.FileUtils.getTempDirectoryPath(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(0)" "org.apache.commons.io.FileUtils.getTempDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(0)" "org.apache.commons.io.FileUtils.getUserDirectoryPath(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(0)" "org.apache.commons.io.FileUtils.getUserDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)" "org.apache.commons.io.FileUtils.openInputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)"
call "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)" "org.apache.commons.io.FileUtilsTestCase.assertNull(1)"
call "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)" "org.apache.commons.io.FileUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(0)" "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile(0)" "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
call "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)"
call "org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(0)" "org.apache.commons.io.FileUtils.byteCountToDisplaySize(1)"
call "org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile1(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile1(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFile1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile2(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile2(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFile2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile3(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile3(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFile3(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile4(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile4(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFile4(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile5(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFile5(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFile5(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(0)" "org.apache.commons.io.FileUtils.toFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrl(0)" "org.apache.commons.io.FileUtils.decodeUrl(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrl(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDecodeUrl(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(0)" "org.apache.commons.io.FileUtils.decodeUrl(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe(0)" "org.apache.commons.io.FileUtils.decodeUrl(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe(0)" "org.apache.commons.io.FileUtilsTestCase.assertNull(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(0)" "org.apache.commons.io.FileUtils.decodeUrl(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles1(0)" "org.apache.commons.io.FileUtils.toFiles(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFiles1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)" "org.apache.commons.io.FileUtils.toFiles(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles3(0)" "org.apache.commons.io.FileUtils.toFiles(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles3(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFiles3(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles4(0)" "org.apache.commons.io.FileUtils.toFiles(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToFiles4(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToFiles4(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)" "org.apache.commons.io.FileUtils.toURLs(1)"
call "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtils.contentEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtils.copyURLToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(3)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.FileUtils.contentEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)" "org.apache.commons.io.FileUtils.copyURLToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)" "org.apache.commons.io.FileUtils.copyURLToFile(4)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)" "org.apache.commons.io.FileUtils.forceMkdir(1)"
call "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.getName(0)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtils.sizeOf(1)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
reference "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileNewer(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileOlder(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileOlder(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)" "org.apache.commons.io.FileUtils.isFileOlder(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)" "org.apache.commons.io.FileUtils.copyFile(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)" "org.apache.commons.io.FileUtils.readFileToByteArray(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)"
call "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)" "org.apache.commons.io.FileUtils.copyFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtils.copyFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtils.copyDirectory(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtils.copyDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)" "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)"
call "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)" "org.apache.commons.io.FileUtils.copyDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtils.copyFileToDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtils.copyFileToDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
reference "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
call "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
call "org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(0)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)"
call "org.apache.commons.io.FileUtilsTestCase.testTouch(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testTouch(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testTouch(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsTestCase.testTouch(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.FileUtilsTestCase.testTouch(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testTouch(0)"
call "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)" "org.apache.commons.io.FileUtils.listFiles(3)"
call "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.FileUtils.listFilesAndDirs(3)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)" "org.apache.commons.io.FileUtils.iterateFiles(3)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.FileUtils.iterateFilesAndDirs(3)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(0)" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(0)" "org.apache.commons.io.FileUtils.readFileToByteArray(1)"
call "org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(0)"
call "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)" "org.apache.commons.io.FileUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)" "org.apache.commons.io.FileUtils.readLines(2)"
call "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)" "org.apache.commons.io.FileUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(0)" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(0)" "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(0)" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(0)" "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(0)" "org.apache.commons.io.FileUtils.writeByteArrayToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(0)" "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)" "org.apache.commons.io.FileUtils.writeLines(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)" "org.apache.commons.io.FileUtils.readFileToString(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(5)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(5)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(4)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeLines(3)"
reference "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.write(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.write(4)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.write(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeStringToFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtils.readFileToString(1)"
call "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)" "org.apache.commons.io.FileUtils.checksumCRC32(1)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)" "org.apache.commons.io.FileUtilsTestCase.assertSame(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(0)" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory(0)" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.fail(0)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)" "org.apache.commons.io.FileUtils.writeStringToFile(3)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)" "org.apache.commons.io.FileUtils.checksum(2)"
call "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)" "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)" "org.apache.commons.io.FileUtils.moveFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.1.{...}"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)" "org.apache.commons.io.FileUtils.moveFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtilsTestCase.2.{...}"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtils.moveFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)" "org.apache.commons.io.FileUtils.moveFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.testFile1"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)" "org.apache.commons.io.FileUtils.moveFileToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)" "org.apache.commons.io.FileUtils.moveFileToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)" "org.apache.commons.io.FileUtils.moveDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.3.{...}"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtils.moveDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)" "org.apache.commons.io.FileUtils.moveDirectory(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)" "org.apache.commons.io.FileUtils.moveToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)" "org.apache.commons.io.FileUtils.moveToDirectory(3)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIO300(0)" "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIO300(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsTestCase.testIO300(0)" "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
call "org.apache.commons.io.FileUtilsTestCase.testIO300(0)" "org.apache.commons.io.FileUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testIO300(0)"
call "org.apache.commons.io.FileUtilsTestCase.testIO276(0)" "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsTestCase.testIO276(0)" "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testIO276(0)"
call "org.apache.commons.io.FileUtilsTestCase.static {...}" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.ListDirectoryWalker(0)"
reference "org.apache.commons.io.FileUtilsTestCase.static {...}" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.static {...}"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.TEST_DIRECTORY_SIZE"
reference "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testFile1"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testFile2"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
contain "org.apache.commons.io.FileUtilsTestCase" "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
reference "org.apache.commons.io.input.TailerTest.1" "org.apache.commons.io.input.TailerTest"
reference "org.apache.commons.io.IOUtilsTestCase.4" "org.apache.commons.io.SelectorAdapter"
reference "org.apache.commons.io.IOUtilsTestCase.4" "org.apache.commons.io.IOUtilsTestCase"
reference "org.apache.commons.io.IOUtilsTestCase.4.{...}" "org.apache.commons.io.IOUtilsTestCase.4.this$0"
call "org.apache.commons.io.IOUtilsTestCase.4.{...}" "org.apache.commons.io.SelectorAdapter.SelectorAdapter(0)"
contain "org.apache.commons.io.IOUtilsTestCase.4" "org.apache.commons.io.IOUtilsTestCase.4.{...}"
contain "org.apache.commons.io.IOUtilsTestCase.4" "org.apache.commons.io.IOUtilsTestCase.4.close(0)"
reference "org.apache.commons.io.IOUtilsTestCase.4.this$0" "org.apache.commons.io.IOUtilsTestCase"
contain "org.apache.commons.io.IOUtilsTestCase.4" "org.apache.commons.io.IOUtilsTestCase.4.this$0"
reference "org.apache.commons.io.IOUtilsTestCase.3" "org.apache.commons.io.IOUtilsTestCase"
reference "org.apache.commons.io.IOUtilsTestCase.3.{...}" "org.apache.commons.io.IOUtilsTestCase.3.this$0"
contain "org.apache.commons.io.IOUtilsTestCase.3" "org.apache.commons.io.IOUtilsTestCase.3.{...}"
contain "org.apache.commons.io.IOUtilsTestCase.3" "org.apache.commons.io.IOUtilsTestCase.3.close(0)"
reference "org.apache.commons.io.IOUtilsTestCase.3.this$0" "org.apache.commons.io.IOUtilsTestCase"
contain "org.apache.commons.io.IOUtilsTestCase.3" "org.apache.commons.io.IOUtilsTestCase.3.this$0"
reference "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriter"
reference "org.apache.commons.io.output.StringBuilderWriterTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriter.append(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriter.getBuilder(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertSame(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testClose(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testClose(0)" "org.apache.commons.io.output.StringBuilderWriterTest.fail(1)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testClose(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testClose(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
reference "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(0)" "org.apache.commons.io.output.StringBuilderWriterTest.FOOBAR_CHARS"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(0)" "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
call "org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(0)" "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(0)"
reference "org.apache.commons.io.output.StringBuilderWriterTest.static {...}" "org.apache.commons.io.output.StringBuilderWriterTest.FOOBAR_CHARS"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.static {...}"
reference "org.apache.commons.io.output.StringBuilderWriterTest.FOOBAR_CHARS" "char[]"
contain "org.apache.commons.io.output.StringBuilderWriterTest" "org.apache.commons.io.output.StringBuilderWriterTest.FOOBAR_CHARS"
reference "org.apache.commons.io.IOUtilsTestCase.2" "org.apache.commons.io.IOUtilsTestCase"
reference "org.apache.commons.io.IOUtilsTestCase.2.{...}" "org.apache.commons.io.IOUtilsTestCase.2.this$0"
contain "org.apache.commons.io.IOUtilsTestCase.2" "org.apache.commons.io.IOUtilsTestCase.2.{...}"
contain "org.apache.commons.io.IOUtilsTestCase.2" "org.apache.commons.io.IOUtilsTestCase.2.close(0)"
reference "org.apache.commons.io.IOUtilsTestCase.2.this$0" "org.apache.commons.io.IOUtilsTestCase"
contain "org.apache.commons.io.IOUtilsTestCase.2" "org.apache.commons.io.IOUtilsTestCase.2.this$0"
reference "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStream"
reference "org.apache.commons.io.input.ReaderInputStreamTest.ReaderInputStreamTest(0)" "org.apache.commons.io.input.ReaderInputStreamTest.random"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.ReaderInputStreamTest(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)" "org.apache.commons.io.input.ReaderInputStream.read(0)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
reference "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)" "org.apache.commons.io.input.ReaderInputStreamTest.random"
call "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)" "org.apache.commons.io.input.ReaderInputStream.read(3)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(0)"
reference "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(0)"
reference "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.LARGE_TEST_STRING"
call "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(0)" "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(0)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(1)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(0)" "org.apache.commons.io.input.ReaderInputStream.read(3)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(0)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(1)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(0)" "org.apache.commons.io.input.ReaderInputStream.read(3)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(0)" "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(0)" "org.apache.commons.io.input.ReaderInputStream.read(0)"
call "org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(0)" "org.apache.commons.io.input.ReaderInputStream.close(0)"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(0)"
reference "org.apache.commons.io.input.ReaderInputStreamTest.static {...}" "org.apache.commons.io.input.ReaderInputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.static {...}"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.TEST_STRING"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.LARGE_TEST_STRING"
contain "org.apache.commons.io.input.ReaderInputStreamTest" "org.apache.commons.io.input.ReaderInputStreamTest.random"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.SelectorAdapter(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.isOpen(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.provider(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.keys(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.selectedKeys(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.selectNow(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.select(1)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.select(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.wakeup(0)"
contain "org.apache.commons.io.SelectorAdapter" "org.apache.commons.io.SelectorAdapter.close(0)"
reference "org.apache.commons.io.IOUtilsTestCase.1" "org.apache.commons.io.IOUtilsTestCase"
reference "org.apache.commons.io.IOUtilsTestCase.1.{...}" "org.apache.commons.io.IOUtilsTestCase.1.this$0"
contain "org.apache.commons.io.IOUtilsTestCase.1" "org.apache.commons.io.IOUtilsTestCase.1.{...}"
contain "org.apache.commons.io.IOUtilsTestCase.1" "org.apache.commons.io.IOUtilsTestCase.1.close(0)"
reference "org.apache.commons.io.IOUtilsTestCase.1.this$0" "org.apache.commons.io.IOUtilsTestCase"
contain "org.apache.commons.io.IOUtilsTestCase.1" "org.apache.commons.io.IOUtilsTestCase.1.this$0"
reference "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.NameFileComparator"
reference "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
call "org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest(1)"
call "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.reverse"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)"
call "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile2"
call "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.assertTrue(2)"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.NameFileComparatorTest" "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)"
reference "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "junit.framework.Assert"
reference "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.ExpectCloseInputStream(0)"
reference "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.close(0)" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream._closeCalled"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.close(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.read(0)"
reference "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(0)" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream._closeCalled"
call "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.ExpectCloseInputStream(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream._closeCalled"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStream"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.CloseShieldInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.CloseShieldInputStreamTest(0)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.data"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.{...}"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.original"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(1)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.shielded"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.closed"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.shielded"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.closed"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.assertFalse(2)"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.assertEquals(3)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.data"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.original"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.access$002(2)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.data" "byte[]"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.data"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.original"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.shielded"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest" "org.apache.commons.io.input.CloseShieldInputStreamTest.closed"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.CollectionFileListener"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitor"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationObserver"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(1)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDirName"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.getObservers(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.CollectionFileListener.clear(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.observer"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.CollectionFileListener.clear(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.observer"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)"
reference "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.pauseTime"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.sleepHandleInterruped(1)"
call "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)"
reference "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.HexDumpTest" "junit.framework.TestCase"
reference "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.HexDump"
call "org.apache.commons.io.HexDumpTest.HexDumpTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.HexDumpTest.HexDumpTest(1)"
contain "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.HexDumpTest.toHex(1)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDump.dump(4)"
reference "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDump.EOL"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDumpTest.toHex(1)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDumpTest.toAscii(1)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDumpTest.assertEquals(3)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDumpTest.assertEquals(3)"
call "org.apache.commons.io.HexDumpTest.testDump(0)" "org.apache.commons.io.HexDumpTest.fail(1)"
contain "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.HexDumpTest.testDump(0)"
contain "org.apache.commons.io.HexDumpTest" "org.apache.commons.io.HexDumpTest.toAscii(1)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(1)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(1)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(3)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(3)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)"
reference "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(3)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.fail(1)"
call "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(3)"
contain "org.apache.commons.io.FileUtilsCleanDirectoryTestCase" "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncoding"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest" "junit.framework.AssertionFailedError"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest(1)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.getTestDirectory(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file2"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.getTestDirectory(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file2"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertTrue(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.flush(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.checkFile(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file2"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertTrue(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.flush(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.checkFile(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertFalse(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.getTestDirectory(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertFalse(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertFalse(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
reference "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
call "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)" "org.apache.commons.io.output.FileWriterWithEncodingTest.assertFalse(1)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.file2"
contain "org.apache.commons.io.output.FileWriterWithEncodingTest" "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
reference "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTracker"
reference "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileDeleteStrategy"
reference "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileCleaningTrackerTestCase.newInstance(0)" "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.newInstance(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.setUp(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.newInstance(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.setUp(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.setUp(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.setUp(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTracker.q"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTracker.trackers"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertFalse(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.createFile(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.createFile(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTracker.track(3)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.createFile(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileDeleteStrategy.FORCE"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTracker.track(3)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.fail(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileDeleteStrategy.NORMAL"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTracker.track(3)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)" "org.apache.commons.io.FileCleaningTracker.track(3)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertFalse(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertFalse(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.fail(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertFalse(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTracker.track(2)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTracker.reaper"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
call "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)" "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)" "org.apache.commons.io.FileCleaningTracker.deleteFailures"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
call "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)" "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
reference "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance" "org.apache.commons.io.FileCleaningTracker"
contain "org.apache.commons.io.FileCleaningTrackerTestCase" "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
reference "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.CountingOutputStream"
reference "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.input.NullInputStream"
reference "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.NullOutputStream"
reference "org.apache.commons.io.output.CountingOutputStreamTest" "junit.framework.TestCase"
reference "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.write(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(4)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.getCount(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStreamTest.assertEquals(3)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.write(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.write(3)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)" "org.apache.commons.io.output.CountingOutputStream.resetCount(0)"
contain "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.IOUtils.copyLarge(2)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStream.getCount(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStreamTest.fail(1)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStream.resetCount(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.input.NullInputStream.close(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStream.getByteCount(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStreamTest.assertEquals(3)"
call "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)" "org.apache.commons.io.output.CountingOutputStream.resetByteCount(0)"
contain "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)"
call "org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(4)" "org.apache.commons.io.output.CountingOutputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.output.CountingOutputStreamTest" "org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(4)"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.ExtensionFileComparator"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
call "org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest(1)"
call "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.reverse"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)"
call "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile2"
call "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.assertTrue(2)"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)" "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR"
contain "org.apache.commons.io.comparator.ExtensionFileComparatorTest" "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)"
reference "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.testtools.FileBasedTestCase" "junit.framework.AssertionFailedError"
reference "org.apache.commons.io.testtools.FileBasedTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
reference "org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory(0)" "org.apache.commons.io.testtools.FileBasedTestCase.testDir"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory(0)"
call "org.apache.commons.io.testtools.FileBasedTestCase.createFile(2)" "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.createFile(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.createFile(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(1)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(1)" "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(1)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(2)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.newFile(1)" "org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory(0)"
call "org.apache.commons.io.testtools.FileBasedTestCase.newFile(1)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.newFile(1)"
call "org.apache.commons.io.testtools.FileBasedTestCase.checkFile(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertTrue(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.checkFile(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.checkFile(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertTrue(2)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertEquals(3)"
call "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertEquals(3)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertEquals(3)"
call "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)" "org.apache.commons.io.testtools.FileBasedTestCase.assertEquals(3)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)"
call "org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(1)" "junit.framework.AssertionFailedError.AssertionFailedError(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(1)"
call "org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(1)" "junit.framework.AssertionFailedError.AssertionFailedError(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(1)"
call "org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(1)" "org.apache.commons.io.testtools.FileBasedTestCase.assertTrue(2)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(1)"
contain "org.apache.commons.io.testtools.FileBasedTestCase" "org.apache.commons.io.testtools.FileBasedTestCase.testDir"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationObserver"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.filefilter.FileFilterUtils"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.filefilter.HiddenFileFilter"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.CollectionFileListener"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDirName"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.pauseTime"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDirName"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDir"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.FileUtils.cleanDirectory(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.observer"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.listener"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.FileAlterationObserver.addListener(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.FileAlterationListenerAdaptor(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.fail(1)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDir"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.listener"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.assertEquals(3)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)" "org.apache.commons.io.FileUtils.touch(1)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.pauseTime"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(1)"
call "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.fail(1)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(1)"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.observer" "org.apache.commons.io.monitor.FileAlterationObserver"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.observer"
reference "org.apache.commons.io.monitor.AbstractMonitorTestCase.listener" "org.apache.commons.io.monitor.CollectionFileListener"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.listener"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDirName"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDir"
contain "org.apache.commons.io.monitor.AbstractMonitorTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase.pauseTime"
reference "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtils"
reference "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream"
reference "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.testtools.YellOnCloseInputStream"
reference "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.testtools.FileBasedTestCase"
call "org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(1)" "org.apache.commons.io.CopyUtilsTest.generateTestData(1)"
reference "org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(1)" "org.apache.commons.io.CopyUtilsTest.inData"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(1)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.setUp(0)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.tearDown(0)"
call "org.apache.commons.io.CopyUtilsTest.testCtor(0)" "org.apache.commons.io.CopyUtils.CopyUtils(0)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCtor(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(0)" "org.apache.commons.io.CopyUtils.copy(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding(0)" "org.apache.commons.io.CopyUtils.copy(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)"
reference "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.CopyUtilsTest.inData"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)" "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.FILE_SIZE"
reference "org.apache.commons.io.CopyUtilsTest.inData" "byte[]"
contain "org.apache.commons.io.CopyUtilsTest" "org.apache.commons.io.CopyUtilsTest.inData"
reference "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMark"
reference "org.apache.commons.io.ByteOrderMarkTestCase" "int[]"
reference "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
call "org.apache.commons.io.ByteOrderMarkTestCase.ByteOrderMarkTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.ByteOrderMarkTestCase(1)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)" "org.apache.commons.io.ByteOrderMark.getCharsetName(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
call "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)" "org.apache.commons.io.ByteOrderMark.getCharsetName(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertNotNull(1)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)" "org.apache.commons.io.ByteOrderMark.UTF_16LE"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)" "org.apache.commons.io.ByteOrderMark.length(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)" "org.apache.commons.io.ByteOrderMark.get(1)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)" "org.apache.commons.io.ByteOrderMark.getBytes(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertTrue(2)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMark.equals(1)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertTrue(2)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
call "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertFalse(2)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)" "org.apache.commons.io.ByteOrderMark.hashCode(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testErrors(0)" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testErrors(0)" "org.apache.commons.io.ByteOrderMarkTestCase.fail(1)"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testErrors(0)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
call "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)" "org.apache.commons.io.ByteOrderMark.toString(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)" "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)"
call "org.apache.commons.io.ByteOrderMarkTestCase.static {...}" "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
reference "org.apache.commons.io.ByteOrderMarkTestCase.static {...}" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
reference "org.apache.commons.io.ByteOrderMarkTestCase.static {...}" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.static {...}" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.static {...}"
reference "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
reference "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
reference "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3" "org.apache.commons.io.ByteOrderMark"
contain "org.apache.commons.io.ByteOrderMarkTestCase" "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
reference "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStream"
reference "org.apache.commons.io.input.TeeInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.TeeInputStreamTest.TeeInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.TeeInputStreamTest(0)" "org.apache.commons.io.input.TeeInputStreamTest.ASCII"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.TeeInputStreamTest(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.setUp(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.setUp(0)" "org.apache.commons.io.input.TeeInputStream.TeeInputStream(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.setUp(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.setUp(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadNothing(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadNothing(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testReadNothing(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)" "org.apache.commons.io.input.TeeInputStreamTest.tee"
call "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
reference "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)" "org.apache.commons.io.input.TeeInputStreamTest.output"
call "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)" "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.ASCII"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.tee"
contain "org.apache.commons.io.input.TeeInputStreamTest" "org.apache.commons.io.input.TeeInputStreamTest.output"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.DirectoryFileComparator"
call "org.apache.commons.io.comparator.DirectoryFileComparatorTest.DirectoryFileComparatorTest(1)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
contain "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.DirectoryFileComparatorTest(1)"
call "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.comparator"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.reverse"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.equalFile1"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.equalFile2"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.lessFile"
reference "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.moreFile"
contain "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)"
contain "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray(0)"
contain "org.apache.commons.io.comparator.DirectoryFileComparatorTest" "org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList(0)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStream"
reference "org.apache.commons.io.output.ProxyOutputStreamTest" "junit.framework.TestCase"
reference "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ByteArrayOutputStream"
call "org.apache.commons.io.output.ProxyOutputStreamTest.ProxyOutputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.ProxyOutputStreamTest(0)"
call "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.1.{...}"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.original"
call "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)" "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.proxied"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.proxied"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.original"
call "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.assertEquals(2)"
call "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.original"
call "org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(0)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(0)" "org.apache.commons.io.output.ProxyOutputStreamTest.proxied"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(0)"
reference "org.apache.commons.io.output.ProxyOutputStreamTest.original" "org.apache.commons.io.output.ByteArrayOutputStream"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.original"
contain "org.apache.commons.io.output.ProxyOutputStreamTest" "org.apache.commons.io.output.ProxyOutputStreamTest.proxied"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "boolean[]"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilter"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(1)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(1)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.determineWorkingDirectoryPath(2)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.workingPath"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.file"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.TesterFalseFileFilter(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertEquals(3)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(1)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrue(2)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(1)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrue(2)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertEquals(3)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter(0)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.workingPath"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFileFiltering(4)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFilenameFiltering(4)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetTrueFilters(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetFalseFilters(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.file"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFileFiltering(4)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFilenameFiltering(4)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults(0)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetTrueFilters(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetFalseFilters(1)"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.file"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFileFiltering(4)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)"
call "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFilenameFiltering(4)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(1)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(1)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath(0)"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.TEST_FILE_NAME_PREFIX"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.TEST_FILE_TYPE"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter[]"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters"
reference "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter[]"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.file"
contain "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.workingPath"
reference "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase(1)"
call "org.apache.commons.io.FileUtilsWaitForTestCase.setUp(0)" "org.apache.commons.io.FileUtilsWaitForTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.FileUtilsWaitForTestCase.setUp(0)"
call "org.apache.commons.io.FileUtilsWaitForTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsWaitForTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FileUtilsWaitForTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.FileUtilsWaitForTestCase.tearDown(0)"
call "org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(0)" "org.apache.commons.io.FileUtils.waitFor(2)"
contain "org.apache.commons.io.FileUtilsWaitForTestCase" "org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStream"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest(1)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(0)" "org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(1)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)" "org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(1)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)" "org.apache.commons.io.input.SwappedDataInputStream.readBoolean(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(0)" "org.apache.commons.io.input.SwappedDataInputStream.readByte(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(0)" "org.apache.commons.io.input.SwappedDataInputStream.readChar(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(0)" "org.apache.commons.io.input.SwappedDataInputStream.readDouble(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(0)" "org.apache.commons.io.input.SwappedDataInputStream.readFloat(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)" "org.apache.commons.io.input.SwappedDataInputStream.readFully(1)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(0)" "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(0)" "org.apache.commons.io.input.SwappedDataInputStream.readLine(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(0)" "org.apache.commons.io.input.SwappedDataInputStream.readLong(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(0)" "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(0)" "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(0)" "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(0)" "org.apache.commons.io.input.SwappedDataInputStream.readUTF(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)" "org.apache.commons.io.input.SwappedDataInputStream.skipBytes(1)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)" "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)"
call "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)" "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis" "org.apache.commons.io.input.SwappedDataInputStream"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
reference "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes" "byte[]"
contain "org.apache.commons.io.input.SwappedDataInputStreamTest" "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes"
reference "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStream"
reference "org.apache.commons.io.input.BrokenInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.BrokenInputStreamTest.BrokenInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.BrokenInputStreamTest(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.setUp(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.setUp(0)" "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.setUp(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.setUp(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
call "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)" "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)" "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
call "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)" "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)" "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
call "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)" "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)" "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
call "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)" "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)" "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
call "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)" "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
reference "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
call "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)" "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.exception"
contain "org.apache.commons.io.input.BrokenInputStreamTest" "org.apache.commons.io.input.BrokenInputStreamTest.stream"
reference "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl" "org.apache.commons.io.input.ProxyReader"
reference "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl" "org.apache.commons.io.input.ProxyReaderTest"
call "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(1)" "org.apache.commons.io.input.ProxyReader.ProxyReader(1)"
contain "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl" "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(1)"
reference "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.FileUtilsTestCase"
call "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.ListDirectoryWalker(0)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
contain "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.ListDirectoryWalker(0)"
call "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.walk(2)"
contain "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
contain "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleDirectoryStart(3)"
contain "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker" "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleFile(3)"
reference "org.apache.commons.io.LineIteratorTestCase.2" "org.apache.commons.io.LineIterator"
reference "org.apache.commons.io.LineIteratorTestCase.2" "org.apache.commons.io.LineIteratorTestCase"
reference "org.apache.commons.io.LineIteratorTestCase.2.{...}" "org.apache.commons.io.LineIteratorTestCase.2.this$0"
call "org.apache.commons.io.LineIteratorTestCase.2.{...}" "org.apache.commons.io.LineIterator.LineIterator(1)"
contain "org.apache.commons.io.LineIteratorTestCase.2" "org.apache.commons.io.LineIteratorTestCase.2.{...}"
contain "org.apache.commons.io.LineIteratorTestCase.2" "org.apache.commons.io.LineIteratorTestCase.2.isValidLine(1)"
reference "org.apache.commons.io.LineIteratorTestCase.2.this$0" "org.apache.commons.io.LineIteratorTestCase"
contain "org.apache.commons.io.LineIteratorTestCase.2" "org.apache.commons.io.LineIteratorTestCase.2.this$0"
reference "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.output.DemuxOutputStream"
reference "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_output"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_demux"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_data"
contain "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_demux"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_output"
call "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.output.DemuxOutputStream.bindStream(1)"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.DemuxTestCase.WriterThread.m_data"
call "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.output.DemuxOutputStream.write(1)"
call "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)" "org.apache.commons.io.DemuxTestCase.access$000(0)"
contain "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.m_data" "byte[]"
contain "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase.WriterThread.m_data"
contain "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase.WriterThread.m_output"
reference "org.apache.commons.io.DemuxTestCase.WriterThread.m_demux" "org.apache.commons.io.output.DemuxOutputStream"
contain "org.apache.commons.io.DemuxTestCase.WriterThread" "org.apache.commons.io.DemuxTestCase.WriterThread.m_demux"
reference "org.apache.commons.io.LineIteratorTestCase.1" "org.apache.commons.io.LineIteratorTestCase"
reference "org.apache.commons.io.LineIteratorTestCase.1.{...}" "org.apache.commons.io.LineIteratorTestCase.1.this$0"
contain "org.apache.commons.io.LineIteratorTestCase.1" "org.apache.commons.io.LineIteratorTestCase.1.{...}"
contain "org.apache.commons.io.LineIteratorTestCase.1" "org.apache.commons.io.LineIteratorTestCase.1.readLine(0)"
reference "org.apache.commons.io.LineIteratorTestCase.1.this$0" "org.apache.commons.io.LineIteratorTestCase"
contain "org.apache.commons.io.LineIteratorTestCase.1" "org.apache.commons.io.LineIteratorTestCase.1.this$0"
reference "org.apache.commons.io.output.NullOutputStreamTest" "org.apache.commons.io.output.NullOutputStream"
reference "org.apache.commons.io.output.NullOutputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.NullOutputStreamTest" "org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest(1)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.write(1)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.write(3)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.write(1)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.flush(0)"
call "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)" "org.apache.commons.io.output.NullOutputStream.close(0)"
contain "org.apache.commons.io.output.NullOutputStreamTest" "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.SuffixFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.DirectoryFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.PrefixFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.NameFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.IOCase"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.NotFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.OrFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.WildcardFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.WildcardFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.DelegateFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.MagicNumberFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "byte[]"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterUtils"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.TrueFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FalseFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.HiddenFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.CanReadFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.CanWriteFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.EmptyFileFilter"
reference "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.tearDown(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.tearDown(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)" "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)" "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFiles(0)" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFiles(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFiles(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)" "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.WINDOWS"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(1)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(0)" "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)" "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)" "org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)" "org.apache.commons.io.filefilter.FalseFileFilter.FALSE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)" "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)" "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.AndFileFilter.getFileFilters(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.AndFileFilter.toString(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.getFileFilters(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.OrFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)" "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)" "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)" "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.IOCase.SYSTEM"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.WINDOWS"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)" "org.apache.commons.io.filefilter.HiddenFileFilter.HIDDEN"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)" "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.CanReadFileFilter.CANNOT_READ"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)" "org.apache.commons.io.filefilter.CanReadFileFilter.READ_ONLY"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)" "org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)" "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.filefilter.EmptyFileFilter.EMPTY"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.filefilter.EmptyFileFilter.NOT_EMPTY"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFileFilter.FILE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.generateTestData(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.FileUtils.touch(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.generateTestData(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.generateTestData(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.FileUtils.openOutputStream(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.generateTestData(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)" "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(0)" "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFalse(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFalse(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFalse(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertFalse(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage(0)" "org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage(0)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters(0)" "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.fail(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)" "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)" "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)" "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
call "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)" "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)"
reference "org.apache.commons.io.filefilter.FileFilterTestCase.static {...}" "org.apache.commons.io.filefilter.FileFilterTestCase.WINDOWS"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.static {...}"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.SVN_DIR_NAME"
contain "org.apache.commons.io.filefilter.FileFilterTestCase" "org.apache.commons.io.filefilter.FileFilterTestCase.WINDOWS"
reference "org.apache.commons.io.output.TeeOutputStreamTest.1" "org.apache.commons.io.output.TeeOutputStreamTest"
reference "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "junit.framework.TestCase"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase(1)"
reference "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.DATA"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)" "org.apache.commons.io.output.ByteArrayOutputStream.write(3)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(2)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(2)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.fail(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(2)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(2)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(2)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertEquals(3)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(2)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertEquals(2)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(1)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertEquals(3)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertSame(2)"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)"
reference "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.static {...}" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.DATA"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.static {...}"
reference "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.DATA" "byte[]"
contain "org.apache.commons.io.output.ByteArrayOutputStreamTestCase" "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.DATA"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.1" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.1" "org.apache.commons.io.output.CloseShieldOutputStreamTest"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.{...}" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.this$0"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.{...}" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest.1" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.{...}"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.close(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.this$0"
call "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.close(0)" "org.apache.commons.io.output.CloseShieldOutputStreamTest.access$002(2)"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest.1" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.close(0)"
reference "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.this$0" "org.apache.commons.io.output.CloseShieldOutputStreamTest"
contain "org.apache.commons.io.output.CloseShieldOutputStreamTest.1" "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.this$0"
reference "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStream"
reference "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.ByteOrderMark"
reference "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.ByteOrderMark[]"
reference "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream"
reference "org.apache.commons.io.input.BOMInputStreamTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.BOMInputStreamTest.BOMInputStreamTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.BOMInputStreamTest(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertFalse(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertNull(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertFalse(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertNull(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertFalse(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertNull(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.ByteOrderMark.UTF_16BE"
reference "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.ByteOrderMark.UTF_8"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStream.read(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertFalse(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(0)" "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
call "org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
call "org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(0)" "org.apache.commons.io.input.BOMInputStreamTest.fail(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM(0)" "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM(0)"
call "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)" "org.apache.commons.io.input.BOMInputStream.mark(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)" "org.apache.commons.io.input.BOMInputStreamTest.readFile(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)" "org.apache.commons.io.input.BOMInputStream.reset(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.readFile(1)" "org.apache.commons.io.input.BOMInputStream.read(1)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.readFile(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testClose(0)" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.ExpectCloseInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testClose(0)" "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
call "org.apache.commons.io.input.BOMInputStreamTest.testClose(0)" "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(0)"
contain "org.apache.commons.io.input.BOMInputStreamTest" "org.apache.commons.io.input.BOMInputStreamTest.testClose(0)"
reference "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.TestNullReader"
reference "org.apache.commons.io.input.NullReaderTest" "junit.framework.TestCase"
call "org.apache.commons.io.input.NullReaderTest.NullReaderTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.NullReaderTest(1)"
call "org.apache.commons.io.input.NullReaderTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.setUp(0)"
call "org.apache.commons.io.input.NullReaderTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.tearDown(0)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(1)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.read(0)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(2)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.close(0)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.getPosition(0)"
call "org.apache.commons.io.input.NullReaderTest.testRead(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testRead(0)"
call "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(1)"
call "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
call "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(2)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)"
call "org.apache.commons.io.input.NullReaderTest.testEOFException(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
call "org.apache.commons.io.input.NullReaderTest.testEOFException(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testEOFException(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testEOFException(0)"
call "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
call "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullReaderTest.assertTrue(2)"
call "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
call "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)"
call "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
call "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullReaderTest.assertFalse(2)"
call "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
call "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)"
call "org.apache.commons.io.input.NullReaderTest.testSkip(0)" "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
call "org.apache.commons.io.input.NullReaderTest.testSkip(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testSkip(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
call "org.apache.commons.io.input.NullReaderTest.testSkip(0)" "org.apache.commons.io.input.NullReaderTest.fail(1)"
call "org.apache.commons.io.input.NullReaderTest.testSkip(0)" "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
contain "org.apache.commons.io.input.NullReaderTest" "org.apache.commons.io.input.NullReaderTest.testSkip(0)"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader" "org.apache.commons.io.input.XmlStreamReader"
reference "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest"
call "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(1)" "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)"
contain "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader" "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(1)"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.output.ByteArrayOutputStream"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "byte[]"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "char[]"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtils"
call "org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(1)" "org.apache.commons.io.IOUtilsWriteTestCase.generateTestData(1)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(1)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(1)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.setUp(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.tearDown(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtils.write(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.write(2)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(1)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtils.writeLines(4)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
reference "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)" "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(0)" "org.apache.commons.io.IOUtils.writeLines(3)"
call "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(0)" "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(0)"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.FILE_SIZE"
reference "org.apache.commons.io.IOUtilsWriteTestCase.inData" "byte[]"
contain "org.apache.commons.io.IOUtilsWriteTestCase" "org.apache.commons.io.IOUtilsWriteTestCase.inData"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase(1)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(1)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase(1)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp(0)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(1)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(1)" "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(1)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(1)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(1)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(1)"
call "org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter(0)" "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter(0)"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFalseResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFileResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilenameResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilters"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testTrueResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilters"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testTrueResults"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFalseResults"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFileResults"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilenameResults"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.trueFilters"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)" "org.apache.commons.io.filefilter.AndFileFilterTestCase.falseFilters"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)"
reference "org.apache.commons.io.filefilter.AndFileFilterTestCase.static {...}" "org.apache.commons.io.filefilter.AndFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.static {...}"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.DEFAULT_WORKING_PATH"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilters"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testTrueResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFalseResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFileResults"
contain "org.apache.commons.io.filefilter.AndFileFilterTestCase" "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilenameResults"
reference "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.FileAlterationListener"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
reference "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)" "org.apache.commons.io.monitor.CollectionFileListener.clearOnStart"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onStart(1)" "org.apache.commons.io.monitor.CollectionFileListener.clearOnStart"
call "org.apache.commons.io.monitor.CollectionFileListener.onStart(1)" "org.apache.commons.io.monitor.CollectionFileListener.clear(0)"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onStart(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
reference "org.apache.commons.io.monitor.CollectionFileListener.clear(0)" "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.clear(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories(0)" "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)" "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(0)" "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)" "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(0)" "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)" "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(1)" "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(1)" "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(1)" "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(1)" "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onFileChange(1)" "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onFileChange(1)"
reference "org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(1)" "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(1)"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.onStop(1)"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.clearOnStart"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
contain "org.apache.commons.io.monitor.CollectionFileListener" "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "junit.framework.TestCase"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilter"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(4)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(4)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(4)" "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(4)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.isInvoked(0)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.isInvoked(0)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(2)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.reset(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.reset(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(1)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.1" "org.apache.commons.io.input.CloseShieldInputStreamTest"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.1.{...}" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.this$0"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest.1" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.{...}"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.1.close(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.this$0"
call "org.apache.commons.io.input.CloseShieldInputStreamTest.1.close(0)" "org.apache.commons.io.input.CloseShieldInputStreamTest.access$002(2)"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest.1" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.close(0)"
reference "org.apache.commons.io.input.CloseShieldInputStreamTest.1.this$0" "org.apache.commons.io.input.CloseShieldInputStreamTest"
contain "org.apache.commons.io.input.CloseShieldInputStreamTest.1" "org.apache.commons.io.input.CloseShieldInputStreamTest.1.this$0"
reference "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtils"
reference "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.CopyUtils"
call "org.apache.commons.io.IOUtilsTestCase.setUp(0)" "org.apache.commons.io.IOUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.IOUtilsTestCase.setUp(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.setUp(0)" "org.apache.commons.io.IOUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.IOUtilsTestCase.setUp(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
reference "org.apache.commons.io.IOUtilsTestCase.setUp(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.setUp(0)"
reference "org.apache.commons.io.IOUtilsTestCase.tearDown(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
reference "org.apache.commons.io.IOUtilsTestCase.tearDown(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.tearDown(0)" "org.apache.commons.io.IOUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.IOUtilsTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.tearDown(0)"
call "org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
reference "org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(1)" "org.apache.commons.io.IOUtilsTestCase.iarr"
reference "org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(1)" "org.apache.commons.io.IOUtilsTestCase.carr"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlyNullSelector(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlyNullSelector(0)"
call "org.apache.commons.io.IOUtilsTestCase.testCloseableCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtilsTestCase.1.{...}"
call "org.apache.commons.io.IOUtilsTestCase.testCloseableCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCloseableCloseQuietlyOnException(0)"
call "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtilsTestCase.2.{...}"
call "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietlyOnException(0)"
call "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtilsTestCase.3.{...}"
call "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietlyOnException(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietlyOnException(0)"
call "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietly(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietly(0)"
call "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietly(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietly(0)"
call "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelector(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelector(0)"
call "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorIOException(0)" "org.apache.commons.io.IOUtilsTestCase.4.{...}"
call "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorIOException(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorIOException(0)"
call "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorTwice(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorTwice(0)"
call "org.apache.commons.io.IOUtilsTestCase.testConstants(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testConstants(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
reference "org.apache.commons.io.IOUtilsTestCase.testConstants(0)" "org.apache.commons.io.IOUtilsTestCase.WINDOWS"
reference "org.apache.commons.io.IOUtilsTestCase.testConstants(0)" "org.apache.commons.io.IOUtils.DIR_SEPARATOR"
reference "org.apache.commons.io.IOUtilsTestCase.testConstants(0)" "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testConstants(0)"
call "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.checkFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.checkWrite(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.checkFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.checkWrite(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)" "org.apache.commons.io.IOUtils.toByteArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtils.toBufferedInputStream(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.checkFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.checkWrite(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)" "org.apache.commons.io.IOUtils.toInputStream(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)" "org.apache.commons.io.IOUtils.toInputStream(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)" "org.apache.commons.io.IOUtils.toInputStream(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
call "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)" "org.apache.commons.io.IOUtils.toInputStream(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtils.toByteArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.CopyUtils.copy(2)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.checkFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.checkWrite(1)"
call "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)" "org.apache.commons.io.IOUtils.toCharArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)" "org.apache.commons.io.IOUtils.toCharArray(2)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)" "org.apache.commons.io.IOUtils.toCharArray(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
call "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)" "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtils.readLines(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtils.readLines(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtilsTestCase.createLineBasedFile(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtils.readLines(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)" "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipStream(0)" "org.apache.commons.io.IOUtils.skipFully(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipStream(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipStream(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkipStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipReader(0)" "org.apache.commons.io.IOUtils.skipFully(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipReader(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipReader(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkipReader(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testSkipFileReader(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testSkipFileReader(0)" "org.apache.commons.io.IOUtils.skip(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipFileReader(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkipFileReader(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(0)" "org.apache.commons.io.IOUtils.skip(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding(0)"
call "org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)" "org.apache.commons.io.IOUtils.toString(2)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)"
reference "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
call "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)" "org.apache.commons.io.IOUtils.toString(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding(0)"
call "org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding(0)" "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding(0)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(2)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(0)" "org.apache.commons.io.IOUtilsTestCase.assertFalse(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(0)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader(0)" "org.apache.commons.io.IOUtils.contentEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader(0)" "org.apache.commons.io.IOUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader(0)" "org.apache.commons.io.IOUtilsTestCase.assertFalse(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStream(0)" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStream(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStream(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadStream(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReader(0)" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReader(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReader(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadReader(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset(0)" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset(0)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset(0)" "org.apache.commons.io.IOUtils.readFully(4)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkip(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.iarr"
call "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)" "org.apache.commons.io.IOUtilsTestCase.fail(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)"
reference "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.carr"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtils.copyLarge(4)"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
call "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)" "org.apache.commons.io.IOUtils.closeQuietly(1)"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)"
reference "org.apache.commons.io.IOUtilsTestCase.static {...}" "org.apache.commons.io.IOUtilsTestCase.WINDOWS"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.static {...}"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.WINDOWS"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.FILE_SIZE"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.m_testFile"
reference "org.apache.commons.io.IOUtilsTestCase.iarr" "byte[]"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.iarr"
reference "org.apache.commons.io.IOUtilsTestCase.carr" "char[]"
contain "org.apache.commons.io.IOUtilsTestCase" "org.apache.commons.io.IOUtilsTestCase.carr"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.AbstractFileComparator"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.DefaultFileComparator"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)" "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile2"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.getTestDirectory(0)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile2"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.AbstractFileComparator.compare(2)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertEquals(3)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertTrue(2)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile2"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertEquals(3)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertTrue(2)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(0)" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertNull(1)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertSame(3)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertSame(3)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(0)" "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertNull(1)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)" "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertNotNull(2)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
call "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertTrue(2)"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)"
reference "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator" "org.apache.commons.io.comparator.AbstractFileComparator"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile2"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
contain "org.apache.commons.io.comparator.ComparatorAbstractTestCase" "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtils"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(1)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(1)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory3"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file3"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1ByRelativeDirectory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2ByRelativeDirectory1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)" "org.apache.commons.io.FileUtils.touch(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1ByRelativeDirectory2"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2ByRelativeDirectory1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory3"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file3"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory3"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.fail(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(0)"
reference "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(0)" "org.apache.commons.io.FileUtils.directoryContains(2)"
call "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(0)" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(0)"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory3"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1ByRelativeDirectory2"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2ByRelativeDirectory1"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file3"
contain "org.apache.commons.io.FileUtilsDirectoryContainsTestCase" "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.{...}" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.{...}"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getErrorStream(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getInputStream(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getInputStream(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$000(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getInputStream(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getOutputStream(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.waitFor(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.waitFor(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$100(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.waitFor(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.exitValue(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.exitValue(0)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$100(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.exitValue(0)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.destroy(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
reference "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.testtools.FileBasedTestCase"
reference "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtils"
reference "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.IOCase"
call "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.FilenameUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.FilenameUtilsTestCase.testFile1"
reference "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.FilenameUtilsTestCase.testFile2"
reference "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.FilenameUtilsTestCase.testFile1Size"
reference "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)" "org.apache.commons.io.FilenameUtilsTestCase.testFile2Size"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.getTestDirectory(0)"
reference "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.testFile1"
reference "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.testFile1Size"
call "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.createFile(2)"
reference "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.testFile2"
reference "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FilenameUtilsTestCase.testFile2Size"
call "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.tearDown(0)" "org.apache.commons.io.FilenameUtilsTestCase.getTestDirectory(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.tearDown(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.tearDown(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalize(0)" "org.apache.commons.io.FilenameUtils.normalize(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalize(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testNormalize(0)" "org.apache.commons.io.FilenameUtilsTestCase.SEP"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testNormalize(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(0)" "org.apache.commons.io.FilenameUtils.normalize(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(0)" "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(0)" "org.apache.commons.io.FilenameUtilsTestCase.SEP"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(0)" "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testConcat(0)" "org.apache.commons.io.FilenameUtils.concat(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testConcat(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testConcat(0)" "org.apache.commons.io.FilenameUtilsTestCase.SEP"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testConcat(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(0)" "org.apache.commons.io.FilenameUtils.separatorsToUnix(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(0)" "org.apache.commons.io.FilenameUtils.separatorsToWindows(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(0)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(0)" "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(0)" "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(0)" "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(0)" "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(0)" "org.apache.commons.io.FilenameUtils.getPrefix(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPath(0)" "org.apache.commons.io.FilenameUtils.getPath(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPath(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetPath(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(0)" "org.apache.commons.io.FilenameUtils.getPath(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(0)" "org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(0)" "org.apache.commons.io.FilenameUtils.getFullPath(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(0)" "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(0)" "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetName(0)" "org.apache.commons.io.FilenameUtils.getName(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetName(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetName(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(0)" "org.apache.commons.io.FilenameUtils.getBaseName(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(0)" "org.apache.commons.io.FilenameUtils.getExtension(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(0)" "org.apache.commons.io.FilenameUtils.removeExtension(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals(0)" "org.apache.commons.io.FilenameUtils.equals(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEquals(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)" "org.apache.commons.io.FilenameUtils.equalsOnSystem(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(0)" "org.apache.commons.io.FilenameUtils.equalsNormalized(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)" "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(0)" "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(0)" "org.apache.commons.io.FilenameUtilsTestCase.fail(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(0)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.IOCase.SENSITIVE"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.FilenameUtils.equals(4)"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.IOCase.INSENSITIVE"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
reference "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.IOCase.SYSTEM"
call "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(0)" "org.apache.commons.io.FilenameUtils.isExtension(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(0)" "org.apache.commons.io.FilenameUtils.isExtension(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(0)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(0)" "org.apache.commons.io.FilenameUtils.isExtension(2)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
call "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(0)" "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(0)"
reference "org.apache.commons.io.FilenameUtilsTestCase.static {...}" "org.apache.commons.io.FilenameUtilsTestCase.SEP"
reference "org.apache.commons.io.FilenameUtilsTestCase.static {...}" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.static {...}"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.SEP"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testFile1"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testFile2"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testFile1Size"
contain "org.apache.commons.io.FilenameUtilsTestCase" "org.apache.commons.io.FilenameUtilsTestCase.testFile2Size"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.CollectionFileListener"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserver"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.AbstractMonitorTestCase"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.filefilter.CanReadFileFilter"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.FileUtils"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.filefilter.FileFilterUtils"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(1)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(1)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirName"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp(0)" "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp(0)" "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserver.addListener(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserver.getListeners(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserver.removeListener(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.FileAlterationListenerAdaptor(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertEquals(3)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertEquals(2)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertEquals(2)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.FileUtils.deleteDirectory(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.createObserver(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.FileUtils.deleteQuietly(1)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)"
reference "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.observer"
call "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)" "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)"
contain "org.apache.commons.io.monitor.FileAlterationObserverTestCase" "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.TrueFileFilter"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.this$0"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)" "org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(1)" "org.apache.commons.io.filefilter.TrueFileFilter.accept(1)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(2)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(2)" "org.apache.commons.io.filefilter.TrueFileFilter.accept(2)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(2)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.isInvoked(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.invoked"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.isInvoked(0)"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.invoked"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)"
call "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.reset(0)" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.reset(0)"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.invoked"
reference "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.this$0" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
contain "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter" "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.this$0"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalker"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "junit.framework.Assert"
reference "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)" "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.walk(2)"
call "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleDirectoryEnd(3)"
contain "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder" "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleFile(3)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtils"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "junit.framework.Assert"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)" "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.exitCode"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.bytes"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.cmd"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(1)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.cmd"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(1)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(1)" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.{...}"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$000(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$100(1)"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.exitCode"
reference "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.bytes" "byte[]"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.bytes"
contain "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils" "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.cmd"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.parent"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.currentBufferIndex"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.m_outputMap"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML2"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirName"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML3"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.dirsFilter"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML4"
CGNodeType Field "org.apache.commons.io.input.BoundedInputStream.propagateClose"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_PB"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.WriterThread.m_data"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML5"
CGNodeType Field "org.apache.commons.io.FileCleaningTrackerTestCase.testFile"
CGNodeType Field "org.apache.commons.io.HexDump._hexcodes"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.fbLength"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDirName"
CGNodeType Field "org.apache.commons.io.input.TeeInputStreamTest.ASCII"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilter.fileFilters"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.caseSensitivity"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
CGNodeType Field "org.apache.commons.io.input.SwappedDataInputStreamTest.bytes"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.results"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.encoding"
CGNodeType Field "org.apache.commons.io.input.Tailer.file"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.invoked"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.currentFilePart"
CGNodeType Field "org.apache.commons.io.filefilter.NameFileFilter.names"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.eof"
CGNodeType Field "org.apache.commons.io.input.SwappedDataInputStream.in"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.ENCODING_PATTERN"
CGNodeType Field "org.apache.commons.io.IOCaseTestCase.WINDOWS"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.clearOnStart"
CGNodeType Field "org.apache.commons.io.HexDump._shifts"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.caseSensitivity"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.writer"
CGNodeType Field "org.apache.commons.io.FileUtils.UTF8"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XMLs"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.DEFAULT_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.UTF_16BE"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.input.BoundedInputStream.in"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.3.this$0"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.contentTypeMime"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.markFbIndex"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.trackers"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.falseFilters"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.input.TaggedInputStream.tag"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.DF"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStreamTest.original"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_REVERSE"
CGNodeType Field "org.apache.commons.io.filefilter.FileFileFilter.FILE"
CGNodeType Field "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.top"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilter.fileFilters"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_REVERSE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFilesFilter"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparator.SIZE_COMPARATOR"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparator.delegates"
CGNodeType Field "org.apache.commons.io.IOUtils.LINE_SEPARATOR"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.xmlPrologWriter"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStream.cbuf"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.dirs"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN15"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.largerDir"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.currentLastBytePos"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStreamTest.data"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.reader"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriter.LCK"
CGNodeType Field "org.apache.commons.io.IOCase.INSENSITIVE"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.directory"
CGNodeType Field "org.apache.commons.io.filefilter.FalseFileFilter.INSTANCE"
CGNodeType Field "org.apache.commons.io.output.CloseShieldOutputStreamTest.original"
CGNodeType Field "org.apache.commons.io.IOUtils.SKIP_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.input.Tailer.end"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitor.threadFactory"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.markSupported"
CGNodeType Field "org.apache.commons.io.filefilter.MagicNumberFileFilter.serialVersionUID"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.q"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.testFile2Size"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.writeImmediately"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.commonsDir"
CGNodeType Field "org.apache.commons.io.input.NullReader.size"
CGNodeType Field "org.apache.commons.io.filefilter.TrueFileFilter.TRUE"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.output.NullWriter.NULL_WRITER"
CGNodeType Field "org.apache.commons.io.input.TailerTest.TestTailerListener.rotated"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.UTF_32LE"
CGNodeType Field "org.apache.commons.io.FileUtilsFileNewerTestCase.FILE1_SIZE"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.ReaderThread.m_demux"
CGNodeType Field "org.apache.commons.io.filefilter.NameFileFilter.caseSensitivity"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.LineIterator.finished"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.c_random"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.buffers"
CGNodeType Field "org.apache.commons.io.filefilter.DelegateFileFilter.filenameFilter"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.changedFiles"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsFilter"
CGNodeType Field "org.apache.commons.io.monitor.AbstractMonitorTestCase.pauseTime"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.Tracker.deleteStrategy"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_MB"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.current"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.SEP"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG"
CGNodeType Field "org.apache.commons.io.filefilter.HiddenFileFilter.VISIBLE"
CGNodeType Field "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.invoked"
CGNodeType Field "org.apache.commons.io.input.CharSequenceReaderTest.NONE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.suppressCancel"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.encoderOut"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.falseFilters"
CGNodeType Field "org.apache.commons.io.filefilter.WildcardFilter.wildcards"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.boms"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.moreFile"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.DEFAULT_WORKING_PATH"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.encoding"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.count"
CGNodeType Field "org.apache.commons.io.FileDeleteStrategy.FORCE"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.include"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.testFile1Size"
CGNodeType Field "org.apache.commons.io.IOExceptionWithCause.serialVersionUID"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.input.AutoCloseInputStreamTest.stream"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.workingPath"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.bufferedReader"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.defaultEncoding"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16BE_BOM_BYTES"
CGNodeType Field "org.apache.commons.io.input.ClassLoaderObjectInputStream.classLoader"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.closed"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_REVERSE"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStreamTest.random"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriterTest.lockDir"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.pauseTime"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparator.DIRECTORY_COMPARATOR"
CGNodeType Field "org.apache.commons.io.IOUtils.LINE_SEPARATOR_UNIX"
CGNodeType Field "org.apache.commons.io.FileUtilsFileNewerTestCase.FILE2_SIZE"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStreamTest.random"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.commonsDir"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.no"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.lessFile"
CGNodeType Field "org.apache.commons.io.filefilter.AgeFileFilter.cutoff"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriterTest.altLockDir"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_COMPARATOR"
CGNodeType Field "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForFlush"
CGNodeType Field "org.apache.commons.io.DirectoryWalker.filter"
CGNodeType Field "org.apache.commons.io.input.TailerTest.TestTailerListener.exception"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStreamTest.TEST_STRING"
CGNodeType Field "org.apache.commons.io.input.ProxyReader.in"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitor.interval"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.POSIX_UNIX"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDir"
CGNodeType Field "org.apache.commons.io.IOUtilsCopyTestCase.inData"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilters"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.proxyWriter"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_1"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.RAW_EX_2"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.listener"
CGNodeType Field "org.apache.commons.io.output.ThresholdingOutputStream.thresholdExceeded"
CGNodeType Field "org.apache.commons.io.IOUtils.LINE_SEPARATOR_WINDOWS"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.WINDOWS"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.writer"
CGNodeType Field "org.apache.commons.io.input.CharSequenceReader.idx"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.dirsAndFilesFilter"
CGNodeType Field "org.apache.commons.io.filefilter.NotFileFilter.filter"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStreamTest.LARGE_TEST_STRING"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirsAndFilesFilter"
CGNodeType Field "org.apache.commons.io.ThreadMonitor.thread"
CGNodeType Field "org.apache.commons.io.input.AutoCloseInputStreamTest.1.this$0"
CGNodeType Field "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDir"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.memoryOutputStream"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file3"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStream.encoder"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2"
CGNodeType Field "org.apache.commons.io.output.StringBuilderWriterTest.FOOBAR_CHARS"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ISO_8859_1"
CGNodeType Field "org.apache.commons.io.input.TeeInputStreamTest.tee"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.this$0"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.cancelFileName"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_UNICODE"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.trueFilters"
CGNodeType Field "org.apache.commons.io.input.CountingInputStream.count"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.XML_GUESS_BYTES"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.outputFile"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.DATA2"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.DATA1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.NO_BOM_BYTES"
CGNodeType Field "org.apache.commons.io.output.FileWriterWithEncodingTest.file2"
CGNodeType Field "org.apache.commons.io.TaggedIOException.serialVersionUID"
CGNodeType Field "org.apache.commons.io.output.FileWriterWithEncodingTest.file1"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitor.thread"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.DATA4"
CGNodeType Field "org.apache.commons.io.input.AutoCloseInputStream.in"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.DATA3"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_REVERSE"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN1"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioFiles"
CGNodeType Field "org.apache.commons.io.CopyUtils.DEFAULT_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.IOCase.SENSITIVE"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16"
CGNodeType Field "org.apache.commons.io.output.ProxyOutputStreamTest.original"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.encoding"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.CHARSET_PATTERN"
CGNodeType Field "org.apache.commons.io.DirectoryWalker.CancelException.serialVersionUID"
CGNodeType Field "org.apache.commons.io.input.ProxyInputStream.in"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.WORKING_PATH_NAME_PROPERTY_KEY"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.serialVersionUID"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_INSENSITIVE_COMPARATOR"
CGNodeType Field "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.this$0"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.length"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_LATIN7"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.markedAtStart"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerDir"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.out"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_REVERSE"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.staticDefaultEncoding"
CGNodeType Field "org.apache.commons.io.FilenameUtils.UNIX_SEPARATOR"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.createdFiles"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.bytes"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriter.lockFile"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioUtils"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.encoding"
CGNodeType Field "org.apache.commons.io.CopyUtilsTest.inData"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_KB"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.orgDir"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.ioDirAndFilesFilter"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory1"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.name"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory2"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.directory3"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.trueFilters"
CGNodeType Field "org.apache.commons.io.IOUtils.DIR_SEPARATOR"
CGNodeType Field "org.apache.commons.io.input.BrokenInputStreamTest.stream"
CGNodeType Field "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.closed"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.RAW_EX_2"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.carr"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.RAW_EX_1"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.suppressCancel"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.TXTXML"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_COMPARATOR"
CGNodeType Field "org.apache.commons.io.DirectoryWalker.depthLimit"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.US_ASCII"
CGNodeType Field "org.apache.commons.io.filefilter.FalseFileFilter.FALSE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.current"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.reversedLinesFileReader"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.EBCDIC"
CGNodeType Field "org.apache.commons.io.filefilter.HiddenFileFilter.HIDDEN"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.trailingNewlineOfFileSkipped"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.reaper"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE_SHIFT_JIS2"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.testFile2"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.EBCDIC"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.testFile1"
CGNodeType Field "org.apache.commons.io.input.DemuxInputStream.m_streams"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputDir"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.testTrueResults"
CGNodeType Field "org.apache.commons.io.FilenameUtils.OTHER_SEPARATOR"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE_SHIFT_JIS1"
CGNodeType Field "org.apache.commons.io.filefilter.PrefixFileFilter.caseSensitivity"
CGNodeType Field "org.apache.commons.io.output.DemuxOutputStream.m_streams"
CGNodeType Field "org.apache.commons.io.input.BrokenInputStreamTest.exception"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.DATA"
CGNodeType Field "org.apache.commons.io.filefilter.EmptyFileFilter.EMPTY"
CGNodeType Field "org.apache.commons.io.output.CloseShieldOutputStream.out"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.UTF_16BE"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_EB"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.totalBlockCount"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.largerFile"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_REVERSE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.outputFiles"
CGNodeType Field "org.apache.commons.io.input.NullReader.position"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.UTF_16LE"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.comparator"
CGNodeType Field "org.apache.commons.io.filefilter.SuffixFileFilter.caseSensitivity"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.TEST_FILE_TYPE"
CGNodeType Field "org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.IOUtilsWriteTestCase.inData"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.BOMS"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReaderException.is"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelled"
CGNodeType Field "org.apache.commons.io.input.CharSequenceReader.mark"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.TEST_DIRECTORY_SIZE"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.reader"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16BE"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.4.this$0"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS2"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.RAWMGS1"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_COMPARATOR"
CGNodeType Field "org.apache.commons.io.filefilter.FileFilterUtils.cvsFilter"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.contentTypeEncoding"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.nullStream"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.reverse"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.INSTANCE"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.readlimit"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.NOT_SVN"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.randomAccessFile"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.INFO"
CGNodeType Field "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR_STR"
CGNodeType Field "org.apache.commons.io.DirectoryWalker.CancelException.depth"
CGNodeType Field "org.apache.commons.io.filefilter.EmptyFileFilter.NOT_EMPTY"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_GB"
CGNodeType Field "org.apache.commons.io.FileUtils.EMPTY_FILE_ARRAY"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16"
CGNodeType Field "org.apache.commons.io.output.ThresholdingOutputStream.written"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.changedDirectories"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDir"
CGNodeType Field "org.apache.commons.io.FilenameUtilsWildcardTestCase.WINDOWS"
CGNodeType Field "org.apache.commons.io.input.TeeInputStream.branch"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_REVERSE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.outputFiles"
CGNodeType Field "org.apache.commons.io.input.BoundedInputStream.pos"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparator.LASTMODIFIED_COMPARATOR"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.outputFilesFilter"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.smallerFile"
CGNodeType Field "org.apache.commons.io.LineIteratorTestCase.1.this$0"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.nullStream"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.WriterThread.m_demux"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelFileName"
CGNodeType Field "org.apache.commons.io.IOUtils.SKIP_CHAR_BUFFER"
CGNodeType Field "org.apache.commons.io.IOCase.SYSTEM"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.TEST_FILE_NAME_PREFIX"
CGNodeType Field "org.apache.commons.io.monitor.AbstractMonitorTestCase.testDirName"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserver.rootEntry"
CGNodeType Field "org.apache.commons.io.input.TailerTest.TestTailerListener.lines"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriter.out"
CGNodeType Field "org.apache.commons.io.filefilter.CanReadFileFilter.READ_ONLY"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_3"
CGNodeType Field "org.apache.commons.io.ThreadMonitor.timeout"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.output.ProxyOutputStream.out"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.HTTP_EX_2"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.suffix"
CGNodeType Field "org.apache.commons.io.IOUtils.DIR_SEPARATOR_UNIX"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.UTF_8"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.lastModified"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.children"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.decoderOut"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFalseResults"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_COMPARATOR"
CGNodeType Field "org.apache.commons.io.output.BrokenOutputStreamTest.exception"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.file"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.IOUtils.SKIP_BYTE_BUFFER"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testParamBlockSize"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStreamTest.shielded"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparator.SIZE_REVERSE"
CGNodeType Field "org.apache.commons.io.filefilter.PrefixFileFilter.prefixes"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.top"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filenameUtils"
CGNodeType Field "org.apache.commons.io.output.BrokenOutputStreamTest.stream"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.cancelFileName"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.UTF_8_BOM_BYTES"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_REVERSE"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.this$0"
CGNodeType Field "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.file"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.ENCODING_PATTERN"
CGNodeType Field "org.apache.commons.io.filefilter.WildcardFileFilter.caseSensitivity"
CGNodeType Field "org.apache.commons.io.output.TaggedOutputStream.tag"
CGNodeType Field "org.apache.commons.io.FileUtils.FILE_COPY_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparator.NAME_SYSTEM_REVERSE"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16BE"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.iofilesFilter"
CGNodeType Field "org.apache.commons.io.input.Tailer.listener"
CGNodeType Field "org.apache.commons.io.output.BrokenOutputStream.exception"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.bytes"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.caseSensitivity"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML"
CGNodeType Field "org.apache.commons.io.input.TeeInputStreamTest.output"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.xmlEncoding"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.fbIndex"
CGNodeType Field "org.apache.commons.io.output.TeeOutputStream.branch"
CGNodeType Field "org.apache.commons.io.testtools.FileBasedTestCase.testDir"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.ioDirAndFilesFilter"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.endOfInput"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.UTF_16LE_BOM_BYTES"
CGNodeType Field "org.apache.commons.io.FileExistsException.serialVersionUID"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.ioDir"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.createdDirectories"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.ENCODING_ATTRIBUTE_XML"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.trueFilters"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.fileName"
CGNodeType Field "org.apache.commons.io.input.NullReader.mark"
CGNodeType Field "org.apache.commons.io.filefilter.FileFilterUtils.svnFilter"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.suppressCancel"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS3"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS2"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.HTTPMGS1"
CGNodeType Field "org.apache.commons.io.output.ClosedOutputStream.CLOSED_OUTPUT_STREAM"
CGNodeType Field "org.apache.commons.io.input.Tailer.delay"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.DEFAULT_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.totalByteLength"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.encoder"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.ReaderThread.m_buffer"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.prefix"
CGNodeType Field "org.apache.commons.io.LineIterator.cachedLine"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.filefilter.SizeFileFilter.size"
CGNodeType Field "org.apache.commons.io.filefilter.CanWriteFileFilter.CANNOT_WRITE"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.1.this$0"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.2.this$0"
CGNodeType Field "org.apache.commons.io.input.NullReader.throwEofException"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF8"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.javaDir"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReaderException.serialVersionUID"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.defaultEncoding"
CGNodeType Field "org.apache.commons.io.filefilter.RegexFileFilter.pattern"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.in"
CGNodeType Field "org.apache.commons.io.input.NullReader.eof"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.byteDecrement"
CGNodeType Field "org.apache.commons.io.CopyUtilsTest.FILE_SIZE"
CGNodeType Field "org.apache.commons.io.comparator.CompositeFileComparator.NO_COMPARATORS"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserver.fileFilter"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.EMPTY_ENTRIES"
CGNodeType Field "org.apache.commons.io.output.ThresholdingOutputStream.threshold"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.filledBufferSum"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.newLineSequences"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriterTest.lockFile"
CGNodeType Field "org.apache.commons.io.IOUtils.DIR_SEPARATOR_WINDOWS"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStream.in"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStreamTest.TEST_STRING"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.UTF_8"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFilenameResults"
CGNodeType Field "org.apache.commons.io.IOUtilsWriteTestCase.FILE_SIZE"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_16LE"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.lastCoderResult"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparator.SIZE_SUMDIR_REVERSE"
CGNodeType Field "org.apache.commons.io.DirectoryWalker.CancelException.file"
CGNodeType Field "org.apache.commons.io.filefilter.FileFilterTestCase.SVN_DIR_NAME"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.deleteFailures"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.proxyWriter"
CGNodeType Field "org.apache.commons.io.LineIteratorTestCase.2.this$0"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.encoderIn"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.input.Tailer.run"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file1ByRelativeDirectory2"
CGNodeType Field "org.apache.commons.io.input.TeeInputStream.closeBranch"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.decoderIn"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SINGLE_QUOTES"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.UTF_16"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFileResults"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.cmd"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.WINDOWS"
CGNodeType Field "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.this$0"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserverTestCase.listener"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.testFile1Size"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile2"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparatorTest.moreFile"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.equalFile1"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.3.this$0"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitor.running"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_REVERSE"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_2"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.testFile1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.HTTP_EX_3"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.testFile2"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.xmlGuessEncoding"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_INSENSITIVE_COMPARATOR"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.mark"
CGNodeType Field "org.apache.commons.io.input.BoundedInputStream.max"
CGNodeType Field "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile2"
CGNodeType Field "org.apache.commons.io.FileUtilsFileNewerTestCase.m_testFile1"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.cancelled"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.deletedFiles"
CGNodeType Field "org.apache.commons.io.filefilter.AgeFileFilter.acceptOlder"
CGNodeType Field "org.apache.commons.io.output.ProxyOutputStreamTest.1.this$0"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.outputDir"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.orgDir"
CGNodeType Field "org.apache.commons.io.input.AutoCloseInputStreamTest.closed"
CGNodeType Field "org.apache.commons.io.monitor.CollectionFileListener.deletedDirectories"
CGNodeType Field "org.apache.commons.io.input.SwappedDataInputStreamTest.sdis"
CGNodeType Field "org.apache.commons.io.FilenameUtilsTestCase.WINDOWS"
CGNodeType Field "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.file2ByRelativeDirectory1"
CGNodeType Field "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.this$0"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.suppressCancel"
CGNodeType Field "org.apache.commons.io.comparator.SizeFileComparator.sumDirectoryContents"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.serialVersionUID"
CGNodeType Field "org.apache.commons.io.filefilter.SuffixFileFilter.suffixes"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_COMPARATOR"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.WriterThread.m_output"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStreamTest.LARGE_TEST_STRING"
CGNodeType Field "org.apache.commons.io.comparator.DirectoryFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.position"
CGNodeType Field "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.APPXML_UTF16LE"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.throwEofException"
CGNodeType Field "org.apache.commons.io.TaggedIOException.tag"
CGNodeType Field "org.apache.commons.io.monitor.AbstractMonitorTestCase.listener"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.NOT_SVN"
CGNodeType Field "org.apache.commons.io.filefilter.MagicNumberFileFilter.magicNumbers"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.TEST_LINE"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.FILE_SIZE"
CGNodeType Field "org.apache.commons.io.FileCleaner.theInstance"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.apacheDir"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.ioFiles"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserver.comparator"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparator.DEFAULT_COMPARATOR"
CGNodeType Field "org.apache.commons.io.FilenameUtils.WINDOWS_SEPARATOR"
CGNodeType Field "org.apache.commons.io.input.NullReader.markSupported"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.DEFAULT_WORKING_PATH"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.leftOver"
CGNodeType Field "org.apache.commons.io.input.TailerTest.tailer"
CGNodeType Field "org.apache.commons.io.filefilter.CanReadFileFilter.CAN_READ"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.defaultEncoding"
CGNodeType Field "org.apache.commons.io.filefilter.MagicNumberFileFilter.byteOffset"
CGNodeType Field "org.apache.commons.io.filefilter.FileFilterTestCase.WINDOWS"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.Tracker.path"
CGNodeType Field "org.apache.commons.io.IOUtils.EOF"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserver.listeners"
CGNodeType Field "org.apache.commons.io.FileDeleteStrategy.name"
CGNodeType Field "org.apache.commons.io.comparator.ReverseComparator.delegate"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilenameResults"
CGNodeType Field "org.apache.commons.io.FileDeleteStrategy.NORMAL"
CGNodeType Field "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.yellForClose"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.iarr"
CGNodeType Field "org.apache.commons.io.IOCase.serialVersionUID"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_YB"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.blockSize"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.directory"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.m_testFile"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.Reaper.this$0"
CGNodeType Field "org.apache.commons.io.output.StringBuilderWriter.builder"
CGNodeType Field "org.apache.commons.io.IOUtilsCopyTestCase.FILE_SIZE"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_REVERSE"
CGNodeType Field "org.apache.commons.io.filefilter.CanReadFileFilter.CANNOT_READ"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.data"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.buffSize"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFileResults"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStream.currentOutputStream"
CGNodeType Field "org.apache.commons.io.input.AutoCloseInputStreamTest.data"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.2.this$0"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_DOUBLE_QUOTES"
CGNodeType Field "org.apache.commons.io.IOCase.name"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.T4"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.T3"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.1.this$0"
CGNodeType Field "org.apache.commons.io.input.CharSequenceReader.charSequence"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.filenameUtils"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.INIT_PROBLEM"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.iofilesFilter"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriterTest.altLockFile"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.testFile2Size"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_ZB"
CGNodeType Field "org.apache.commons.io.filefilter.DelegateFileFilter.fileFilter"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.UTF_16LE"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStreamTest.testString"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.T2"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStream.reader"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.T1"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReader.avoidNewlineSplitBufferSize"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.currentBuffer"
CGNodeType Field "org.apache.commons.io.filefilter.DirectoryFileFilter.DIRECTORY"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.OTHER"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReader.UTF_8"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.byteOrderMark"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.LIST_WALKER"
CGNodeType Field "org.apache.commons.io.output.NullOutputStream.NULL_OUTPUT_STREAM"
CGNodeType Field "org.apache.commons.io.monitor.AbstractMonitorTestCase.observer"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderException.bomEncoding"
CGNodeType Field "org.apache.commons.io.filefilter.WildcardFileFilter.wildcards"
CGNodeType Field "org.apache.commons.io.output.WriterOutputStream.decoder"
CGNodeType Field "org.apache.commons.io.comparator.ComparatorAbstractTestCase.comparator"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.m_threadMap"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.testTrueResults"
CGNodeType Field "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.exitCode"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStreamTest.LARGE_TEST_STRING"
CGNodeType Field "org.apache.commons.io.output.LockableFileWriterTest.file"
CGNodeType Field "org.apache.commons.io.HexDump.EOL"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.ENCODING_PATTERN"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.falseFilters"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.reversedLinesFileReader"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.UTF_8"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStream.bbuf"
CGNodeType Field "org.apache.commons.io.output.ProxyOutputStreamTest.proxied"
CGNodeType Field "org.apache.commons.io.input.BOMInputStream.firstBytes"
CGNodeType Field "org.apache.commons.io.input.CharSequenceInputStream.mark"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.US_ASCII"
CGNodeType Field "org.apache.commons.io.output.ProxyWriter.out"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.ioUtils"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.UNIX"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.input.NullInputStream.size"
CGNodeType Field "org.apache.commons.io.FileUtils.ONE_TB"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparatorTest.lessFile"
CGNodeType Field "org.apache.commons.io.input.NullReader.readlimit"
CGNodeType Field "org.apache.commons.io.filefilter.DirectoryFileFilter.INSTANCE"
CGNodeType Field "org.apache.commons.io.IOCase.sensitive"
CGNodeType Field "org.apache.commons.io.LineIterator.bufferedReader"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitor.observers"
CGNodeType Field "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.reversedLinesFileReader"
CGNodeType Field "org.apache.commons.io.input.TailerTest.TestTailerListener.initialised"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.observer"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStreamTest.1.this$0"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.apacheDir"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.charsetName"
CGNodeType Field "org.apache.commons.io.IOUtils.DEFAULT_BUFFER_SIZE"
CGNodeType Field "org.apache.commons.io.FileSystemUtils.OS"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_COMPARATOR"
CGNodeType Field "org.apache.commons.io.filefilter.AndFileFilterTestCase.testFalseResults"
CGNodeType Field "org.apache.commons.io.DemuxTestCase.ReaderThread.m_input"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile1"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.cancelFileName"
CGNodeType Field "org.apache.commons.io.comparator.NameFileComparatorTest.equalFile2"
CGNodeType Field "org.apache.commons.io.output.CountingOutputStream.count"
CGNodeType Field "org.apache.commons.io.comparator.ExtensionFileComparator.EXTENSION_SYSTEM_COMPARATOR"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserverTestCase.observer"
CGNodeType Field "org.apache.commons.io.FileCleaningTrackerTestCase.theInstance"
CGNodeType Field "org.apache.commons.io.monitor.FileEntry.exists"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.javaDir"
CGNodeType Field "org.apache.commons.io.input.CloseShieldInputStreamTest.closed"
CGNodeType Field "org.apache.commons.io.IOUtilsTestCase.1.this$0"
CGNodeType Field "org.apache.commons.io.output.CloseShieldOutputStreamTest.shielded"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriter.encoding"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCaseJava4.dirs"
CGNodeType Field "org.apache.commons.io.FileUtilsTestCase.2.this$0"
CGNodeType Field "org.apache.commons.io.input.BrokenInputStream.exception"
CGNodeType Field "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.results"
CGNodeType Field "org.apache.commons.io.input.BoundedInputStream.mark"
CGNodeType Field "org.apache.commons.io.output.CloseShieldOutputStreamTest.closed"
CGNodeType Field "org.apache.commons.io.output.XmlStreamWriterTest.TEXT_EUC_JP"
CGNodeType Field "org.apache.commons.io.input.TailerTest.TestTailerListener.notFound"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML"
CGNodeType Field "org.apache.commons.io.filefilter.OrFileFilterTestCase.testFilters"
CGNodeType Field "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.top"
CGNodeType Field "org.apache.commons.io.output.FileWriterWithEncoding.out"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.XML_WITH_PROLOG_AND_ENCODING_SPACED_SINGLE_QUOTES"
CGNodeType Field "org.apache.commons.io.filefilter.CanWriteFileFilter.CAN_WRITE"
CGNodeType Field "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDir"
CGNodeType Field "org.apache.commons.io.ByteOrderMark.UTF_32BE"
CGNodeType Field "org.apache.commons.io.filefilter.SizeFileFilter.acceptLarger"
CGNodeType Field "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream._closeCalled"
CGNodeType Field "org.apache.commons.io.output.FileWriterWithEncodingTest.textContent"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStreamTest.random"
CGNodeType Field "org.apache.commons.io.input.ReaderInputStreamTest.TEST_STRING"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_INSENSITIVE_REVERSE"
CGNodeType Field "org.apache.commons.io.FilenameUtils.EXTENSION_SEPARATOR"
CGNodeType Field "org.apache.commons.io.comparator.DefaultFileComparatorTest.reverse"
CGNodeType Field "org.apache.commons.io.input.ClosedInputStream.CLOSED_INPUT_STREAM"
CGNodeType Field "org.apache.commons.io.output.FileWriterWithEncodingTest.defaultEncoding"
CGNodeType Field "org.apache.commons.io.FilenameUtils.SYSTEM_SEPARATOR"
CGNodeType Field "org.apache.commons.io.comparator.PathFileComparator.PATH_SYSTEM_COMPARATOR"
CGNodeType Field "org.apache.commons.io.input.compatibility.XmlStreamReader.CHARSET_PATTERN"
CGNodeType Field "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_3"
CGNodeType Field "org.apache.commons.io.output.ByteArrayOutputStream.EMPTY_BYTE_ARRAY"
CGNodeType Field "org.apache.commons.io.FileCleaningTracker.exitWhenFinished"
CGNodeType Field "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBytes"
CGNodeType Field "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_2"
CGNodeType Field "org.apache.commons.io.input.XmlStreamReaderTest.BOMs"
CGNodeType Field "org.apache.commons.io.ByteOrderMarkTestCase.TEST_BOM_1"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStreamTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.skipFully(2)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitA(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testFiltering(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testUTF8Encoding(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.assertCloseCalled(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.CharSequenceReaderTest(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.fail(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.destroy(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSwapInteger(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getLocalTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullStream(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.FileWriterWithEncoding(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToChild(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testCleanEmpty(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.openProcess(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeFileOnly(0)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparatorTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.start(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testBelowThreshold(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterable(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.toString(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFile1ToDir(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryChange(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkFile(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testWriteChar(0)"
CGNodeType Method "org.apache.commons.io.input.DemuxInputStream.bindStream(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DelegateFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkFile(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUTF(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.removeListener(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_ParseCommaFormatBytes(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NoSuchDirectoryResponse(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence1(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyPath(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyFileToDirectory(3)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.close(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomInvalid(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertNull(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCorrectlyIdentifySymlinkWithParentSymLink(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedFloat(2)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.ReaderInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testThresholdReached(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getPath(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testIO300(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.processBytes(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.doRawStream(3)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.2.freeSpaceUnix(4)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.openInputStream(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.createFileEntry(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray(0)"
CGNodeType Method "org.apache.commons.io.output.DemuxOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadChar(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.AndFileFilterTestCase(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharNoSkip(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.afterWrite(1)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedFloat(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequencePortion(0)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionsEmpty(1)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.CountingInputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.clear(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$500(1)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.EndianUtils.swapLong(1)"
CGNodeType Method "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadBoolean(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.TestFileFinderString(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_CopyDelete(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.getContentTypeEncoding(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.get(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.getOutput(1)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.FileWriterWithEncodingTest(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SizeFileFilter.SizeFileFilter(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.static {...}"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.assertByteArrayEquals(4)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(1)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testToString(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(5)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToNonExistingDest(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkipStream(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.normalize(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertNotNull(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testWithBufferedWrite(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.ProxyOutputStream(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToUnix(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.testCloseBranchIOException(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.doLenientDetection(2)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testWriteSwappedInteger(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.beforeRead(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharSkipInvalid(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.ByteArrayOutputStream(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.read(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURIToStringUsAciiEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteForce(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullIn(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.createFile(2)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedInteger(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytesOffset(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.normalize(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStreamTest.testReadArray(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.assertNotNull(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.beforeRead(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyFile(2)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNull(0)"
CGNodeType Method "org.apache.commons.io.TaggedIOExceptionTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToGrandChild(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenRead(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadReaderWithOffset(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testComparator(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Rename(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.flush(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyFile(3)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThreshold(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithBufferedRead(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparator.DefaultFileComparator(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.setThreadFactory(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.getPosition(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyDirectoryToDirectory(2)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.getStream(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.orFileFilter(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FalseFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.walk(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(4)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetFalseFilters(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.asFileFilter(1)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.read(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.close(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.swapInteger(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArgument(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testEOFException(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.MockXmlStreamReader(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toBufferedInputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.getUserDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetBeforeReadWithBOM(0)"
CGNodeType Method "org.apache.commons.io.IOCase.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testReadFileToByteArray(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.3.close(0)"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStream.ClosedInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.Tailer.run(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testMarkAndReset(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.DirectoryWalkerTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.FileUtils(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readByte(0)"
CGNodeType Method "org.apache.commons.io.filefilter.MagicNumberFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_NormalResponse(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testHttpValid(4)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.handle(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.2.isValidLine(1)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStream.ClassLoaderObjectInputStream(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TailerTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlLenient(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpError(7)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.selectNow(0)"
CGNodeType Method "org.apache.commons.io.filefilter.EmptyFileFilter.EmptyFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.1.close(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.delete(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getPrefix(1)"
CGNodeType Method "org.apache.commons.io.FileCleaner.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtils.moveFileToDirectory(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURIToString(1)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.assertByteArrayEquals(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.skipBytes(1)"
CGNodeType Method "org.apache.commons.io.output.DemuxOutputStream.bindStream(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_InitError(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEqualsOnSystem(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSetNullParameters(0)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.write(3)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceOS(4)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToBufferedInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithBOM(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.CharSequenceReader(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.convertFileCollectionToFileArray(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testZeroLines(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.getDirectory(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.createXmlContent(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefixLength(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.IOUtilsTestCase(1)"
CGNodeType Method "org.apache.commons.io.filefilter.CanReadFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testIsExtension(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onFileChange(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.listFilesAndDirs(3)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStream.AutoCloseInputStream(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testTwoLines(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.toString(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveDirectory_Errors(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Tracker.getPath(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testRemoveExtension(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.or(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArrayPartial(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullData(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpace(1)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getName(0)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.off(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedLong(2)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile4(0)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullIn(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DelegateFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleCancelled(3)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.calculateHttpEncoding(7)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyNonExistent(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.handleFile(3)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.find(1)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.write(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtils.directoryContains(2)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithBufferedWrite(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFiles1(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DelegateFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.testListFilesByExtension(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.parseBytes(2)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.ExtensionFileComparator(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedLong(3)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyFileToDirectory(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.testTailer(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentCreateFile(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBuffer(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.IOCase.checkEndsWith(2)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testWithBufferedRead(2)"
CGNodeType Method "org.apache.commons.io.filefilter.AgeFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.LastModifiedFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testExtraLength(0)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.isThresholdExceeded(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsWaitForTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readDouble(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testSameFile(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.testListFiles(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.write(3)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkHttpEncoding(7)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testByteArrayToWriter(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.trueFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.Tailer.stop(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReaderToString(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile2(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertEqualContent(2)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFileToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FalseFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.write(4)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertMatch(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.createNameFilter(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testMissingStartDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFiles(0)"
CGNodeType Method "org.apache.commons.io.IOCase.readResolve(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparator.CompositeFileComparator(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExistsCannotCreate(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.prepareReader(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArrayNull(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.lineIterator(2)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_readerToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterStringOffset(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.DirectoryWalkerTestCaseJava4(1)"
CGNodeType Method "org.apache.commons.io.IOCase.isCaseSensitive(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchOnSystem(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.splitOnTokens(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch(0)"
CGNodeType Method "org.apache.commons.io.filefilter.TrueFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_functionality(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testHttp(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyForNull(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.2.close(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testAddRemoveObservers(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testWriteSwappedFloat(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.lineIterator(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.testNormalStream(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.checkFile(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.write(2)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertSame(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.1.freeSpaceWindows(2)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.TaggedIOException(2)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.close(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processBytes(3)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setExists(1)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedShort(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testSizeFilter(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.testCompareDirectorySizes(0)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.deleteQuietly(1)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterBytes(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.EndianUtilsTest(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithBufferedRead(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeDirectoryOnly(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.static {...}"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.isExists(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceUnix(4)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.afterRead(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.testCloseMainIOException(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.input.TailerListener.handle(1)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnCloseInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.TeeInputStream(3)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.getDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FalseFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.find(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toCharArray(2)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryCreate(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFile2(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefix(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.isDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.filterSet(2)"
CGNodeType Method "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(2)"
CGNodeType Method "org.apache.commons.io.input.Tailer.getDelay(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.processChar(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_NullPath(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.TeeInputStream(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.concat(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.static {...}"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testWriteStringPartial(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.DirectoryFileComparator(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.indexOfLastSeparator(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.generateTestData(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.walk(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalized(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.2.renameTo(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testEmptyFile(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMBufferedRead(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getDeletedDirectories(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithBufferedWrite(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.comparator.ReverseComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyDir(0)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.{...}"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(1)"
CGNodeType Method "junit.framework.Assert.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.provider(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.contentEquals(2)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testEOF2(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFileWithTimeout(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.markSupported(0)"
CGNodeType Method "org.apache.commons.io.FileCleaner.exitWhenFinished(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.directoryFileFilter(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile1(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.filefilter.HiddenFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Reaper.setDaemon(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toCharArray(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.fail(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.needNewBuffer(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingNoBOM(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyNullEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingBig5(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.closeReader(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.doGetPath(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testByteCountToDisplaySize(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFileResults(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionSizes(7)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getName(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testDefaultConstructor(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedFloat(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.getFile(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.sizeOfDirectory(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedOnSystem(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetExtension(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.getDeleteFailures(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.TaggedOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.input.TailerListener.fileNotFound(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFilenameFiltering(4)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.length(0)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.IOCase.toString(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.deleteDirectoryOnExit(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.list(1)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedFloat(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.getFile(1)"
CGNodeType Method "junit.framework.TestCase.TestCase(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.FileAlterationObserverTestCase(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.magicNumberFileFilter(2)"
CGNodeType Method "org.apache.commons.io.filefilter.TrueFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getContentTypeEncoding(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeEncoding(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testHttpContent(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkAndNotify(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DirectoryFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.close(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getParent(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesNested(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkStreams(2)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFiltering(4)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.createLineBasedFile(2)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.throwIfCauseOf(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.FileFilterUtils(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietlyOnException(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.closeReader(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.DeferredFileOutputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.1.{...}"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.assertSame(2)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.createLineBasedFile(2)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileCRBreaks(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.isSymlink(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.flushOutput(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.static {...}"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.1.{...}"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_StripDrive(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testExpected(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegateFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testUTF16WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFilenameResults(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleCancelled(3)"
CGNodeType Method "org.apache.commons.io.output.NullWriterTest.testNull(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.comparator.ReverseComparator.ReverseComparator(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteNormal(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.writeLines(4)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testCounting(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.toInputStream(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testLimitToCurrent(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFile3(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.assertEqualContent(2)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnCloseInputStream.YellOnCloseInputStream(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse3(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.input.TailerListenerAdapter.TailerListenerAdapter(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadUnsignedByte(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithBOM(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testEOFException(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.IOUtils.toInputStream(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.writeLines(3)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testSplitOnTokens(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.fillBuffer(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.resetCount(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory_Errors(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testNoBoms(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testHttpLenient(5)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparatorTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.sleepHandleInterruped(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.doRawStream(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullStream(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.Tailer.readLine(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getBaseName(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.deleteFile(1)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.CanReadFileFilter.CanReadFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testWithSingleByteRead(2)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFalseResults(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.remove(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.isInMemory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.MagicNumberFileFilter.MagicNumberFileFilter(1)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.writeTo(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getPrefixLength(1)"
CGNodeType Method "org.apache.commons.io.FileExistsException.FileExistsException(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete_Failed(0)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.reset(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFalseResults(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorTwice(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedShort(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding(0)"
CGNodeType Method "org.apache.commons.io.output.DemuxOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStream.afterRead(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.2.{...}"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertFiltering(3)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testReverseComparator(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.close(0)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.wakeup(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testCharsetName(0)"
CGNodeType Method "org.apache.commons.io.FileExistsException.FileExistsException(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkAppXml(2)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryChange(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.cleanDirectoryOnExit(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testPrefixCaseInsensitive(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitor.ThreadMonitor(2)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setLastModified(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtils.moveDirectory(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testObserveSingleFile(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.CharSequenceInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.setUpTestFilters(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testTrue(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.filefilter.CanWriteFileFilter.CanWriteFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.1.close(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testMultiThreadCancel(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength2(0)"
CGNodeType Method "org.apache.commons.io.input.Tailer.getFile(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testToString(0)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.testStopWithNoFile(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkContentTypeMime(2)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriter(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.StringBuilderWriter(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.fileNotFound(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getLastModified(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.touch(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.readFileToByteArray(1)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.getThreshold(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullOut(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AbstractFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.filefilter.DirectoryFileFilter.DirectoryFileFilter(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullOut(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.testReadBufferOffsetLength(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleStart(2)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.FileCleaningTracker(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectoryPath(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparatorTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.doGetFullPath(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getFullPath(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURLToStringNullEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_nullSeparator(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AbstractFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.falseFileFilter(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStreamTest.compare(3)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getErrorStream(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.getCount(0)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStream.CloseShieldOutputStream(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_LongSize(0)"
CGNodeType Method "org.apache.commons.io.filefilter.NameFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testWriteSwappedShort(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharSequenceToInputStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.3.{...}"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingConstructor(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(3)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(5)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.ReaderThread.getData(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.getInterval(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToExistingDest(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.ByteArrayOutputStreamTestCase(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.lineIterator(1)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparatorTest.DirectoryFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.doStart(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.read(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadByte(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithBufferedWrite(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_notExists(0)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.getByteCount(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.addTracker(3)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainFile(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(4)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitA(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testReadNothing(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testCharsetMismatchInfiniteLoop(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testWriteImmediately(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.find(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.ProxyReader(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.isTextXml(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.lineIterator(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleIsCancelled(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFully(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharSkip(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.ByteOrderMark(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.filefilter.NotFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(1)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCause.initCause(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingUTF16(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.TesterTrueFileFilter(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testUnsignedOverrun(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.FilenameUtilsTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.skip(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.NullWriter(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.swapShort(1)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStreamTest.BoundedInputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotContainsDirectory(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(2)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testLargeFiles_IO84(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.read(1)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.checkThreshold(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.pauseForDeleteToComplete(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(2)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortList(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceKb(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.ReversedLinesFileReader(3)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testFileSizeIsExactMultipleOfBlockSize(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testCanRead(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.getNewLineMatchByteCount(2)"
CGNodeType Method "junit.framework.Assert.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileCreate(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.filefilter.SuffixFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryCreate(1)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.ForceFileDeleteStrategy(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.find(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.indexOfExtension(1)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerFile(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedShort(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testLargeUTF8WithSingleByteWrite(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getDeletedFiles(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeCVSAware(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.sleepHandleInterruped(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceKb(1)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.1.close(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(4)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCause.IOExceptionWithCause(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.close(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testListFilesWithDirs(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.clear(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(5)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.getXmlProlog(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(0)"
CGNodeType Method "org.apache.commons.io.input.TailerListenerAdapter.fileNotFound(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.waitUntilTrackCount(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.matches(1)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.thresholdReached(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getInputStream(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedShort(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFileToDirectory(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToString(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg_Writer_nullData(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.deleteFile(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceKb(2)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTestFilters(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStreamTest.NullOutputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyURLToFile(4)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.FileAlterationMonitor(1)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_stringToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testReadCharArray(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullOut(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.read(3)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.WriterThread.run(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testReadOneByte(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.deleteQuietly(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingAdd(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFilenameFiltering(4)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.read(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.CancelException.getDepth(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleFile(3)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.getInput(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testContentEquals(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.newFile(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFileWithEncoding_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleDirectory(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.flush(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadLines_Reader(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.writeString(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkCompare_case(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.TestFalseFileFinder(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullStream(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.filefilter.CanWriteFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArrayWithEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetFalseFilters(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.startReader(3)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSwapShort(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyURLToFile(2)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.testWrite(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.doNormalize(3)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.calculateRawEncoding(4)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.testWrite(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTestFilters(0)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionStringThrowable(0)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveProxyClass(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.createNameFilter(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.size(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStop(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.IOUtils.toBufferedReader(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkEndsWith_case(0)"
CGNodeType Method "org.apache.commons.io.FileCleaner.track(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetUserDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.AndFileFilter(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.testAvailable(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.static {...}"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testOneLines(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.IOUtils.contentEqualsIgnoreEOL(2)"
CGNodeType Method "org.apache.commons.io.TaggedIOExceptionTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.readLines(1)"
CGNodeType Method "org.apache.commons.io.ThreadMonitor.start(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.IOCase.checkStartsWith(2)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.SwappedDataInputStream(1)"
CGNodeType Method "org.apache.commons.io.FileCleaner.track(2)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.fillBuffer(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlContent(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testForceDeleteDir(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharFullLength(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.toString(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_IO84(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile1(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.readLines(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.assertSame(2)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.setUpTestFilters(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.toString(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testFileLocked(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlEncodingUtf8(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullData(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.forceMkdir(1)"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.BrokenInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedDouble(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testSkipBytes(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingStandard(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.equalsNormalizedOnSystem(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testIterateFilesAndDirs(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedUnsignedInteger(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8File(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader.MockXmlStreamReader(1)"
CGNodeType Method "org.apache.commons.io.EndianUtils.EndianUtils(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDecodeUrl(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readUTF(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFile2ToDir(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.getEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.isAppXml(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.BrokenOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.cleanDirectory(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterString(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$000(1)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.selectedKeys(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onFileDelete(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileBelowThreshold(0)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.startWriter(3)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertArrayEquals(2)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.CloseShieldOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.writeData(3)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(3)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.byteCmp(2)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.addFileFilter(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString.find(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToLarge(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.LineIterator(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksumCRC32(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(1)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_stringToWriter(0)"
CGNodeType Method "org.apache.commons.io.comparator.ReverseComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.2.delete(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetPrefix(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.newChildInstance(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateHttpEncoding(6)"
CGNodeType Method "org.apache.commons.io.filefilter.NotFileFilter.NotFileFilter(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(4)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleCancelled(3)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.FileDeleteStrategy(1)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.TestTailerListener(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetFile(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.beforeWrite(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$200(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.IOFileFilterAbstractTestCase(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReaderToCharArray(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.swapFloat(1)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.YellOnFlushAndCloseOutputStream(3)"
CGNodeType Method "org.apache.commons.io.filefilter.CanWriteFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatchCaseSpecified(0)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.close(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onDirectoryDelete(1)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.testDump(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.doHttpStream(4)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleEnd(1)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.testNoTimeout(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testWithSingleByteRead(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoDate(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryPreserveDates(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCloseableCloseQuietlyOnException(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(2)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.read(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.doCopyFile(3)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.OrFileFilter(1)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testSkipping(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkipFileInput(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_forName(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16WithSingleByteWrite(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testEncodingAttributeXML(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.XmlStreamReader(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testShiftJISFile(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitor.start(2)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.testTee(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteCharSequence2(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder.handleDirectory(3)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.XmlStreamWriter(2)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinishedFirst(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DelegateFileFilter.DelegateFileFilter(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.reset(0)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.flush(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testMatch2(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getFilenameResults(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.directoryContains(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.notFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFiles2(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testStringToWriter(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.LockableFileWriterTest(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToWindows(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.CountingInputStream(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFile1(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietlyOnException(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.input.Tailer.Tailer(4)"
CGNodeType Method "org.apache.commons.io.CopyUtils.copy(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.write(3)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileChange(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.checkContainsFiles(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkipFileReader(0)"
CGNodeType Method "org.apache.commons.io.input.Tailer.Tailer(3)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeByteArrayToFile(2)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_NullStrategy(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testConstructor(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile1(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.separatorsToSystem(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_case(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.DemuxInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.CopyUtils.copy(3)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onDirectoryDelete(1)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.resetByteCount(0)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.IOExceptionWithCauseTestCase(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testByteArrayToString(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.write(1)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testMarkReset(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryChange(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeByteArrayToFile(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished_NoTrackAfter(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.getSize(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.FileUtilsCleanSymlinksTestCase(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.TestFileFinder(3)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.toString(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_isCaseSensitive(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.getTrackCount(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_nullWriter(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onStart(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkRegionMatches_functionality(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkipInvalid(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.filefilter.AbstractFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.testStopWithNoFileUsingExecutor(0)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.HexDumpTest(1)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.createLock(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getBOMEncoding(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.addListener(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.write(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.exitValue(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readInt(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExistBug(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.run(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testEUC_JPEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF16WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testReadByteArray(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriterWithEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.addFileFilter(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEquals(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortList(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.write(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onStop(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.4.{...}"
CGNodeType Method "org.apache.commons.io.input.Tailer.Tailer(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.createDataStream(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile1(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.SwappedDataInputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullData(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testNextOnly(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerImaginaryFile(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.doCreate(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.1.{...}"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testNoFilters(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testDirectory(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testWriteSwappedLong(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeUnixWin(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.isCauseOf(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.testDataIntegrityWithBufferedReader(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testCanonicalPath(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4arg(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.equals(2)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testEmpty(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.2.{...}"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilter.RegexFileFilter(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.getEncoding(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse2(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksum(0)"
CGNodeType Method "org.apache.commons.io.filefilter.HiddenFileFilter.HiddenFileFilter(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16LEFile(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getLength(0)"
CGNodeType Method "org.apache.commons.io.comparator.AbstractFileComparator.AbstractFileComparator(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullSeparator(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FalseFileFilter.FalseFileFilter(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.resetCount(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.getName(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testNullString(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.doCopyDirectory(5)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullArrayArgument(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.FileEntry(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.TestFalseFileFinder(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile2(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.ConditionalFileFilterAbstractTestCase(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Errors(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.testFlush(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.assertNull(2)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.PathFileComparator(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyMultiLineResponse(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.access$002(2)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateRawEncodingAdditonalkUTF16(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.FileEntry(2)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNot(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.getBuilder(0)"
CGNodeType Method "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithBufferedWrite(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.PrefixFileFilter.PrefixFileFilter(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.init(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testMonitor(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.input.DemuxInputStream.DemuxInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testReadZero(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_Encoding_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.equals(4)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFileFiltering(4)"
CGNodeType Method "org.apache.commons.io.FileCleaner.FileCleaner(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullData(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Unix(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readBoolean(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitD(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleIsCancelled(3)"
CGNodeType Method "org.apache.commons.io.input.TailerListener.init(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.read(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.getXmlStream(4)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStreamTest.ClosedOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleCancelled(3)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.testOtherException(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.createLineBasedFile(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.copyLarge(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream_nullData(0)"
CGNodeType Method "org.apache.commons.io.input.DemuxInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseLinux(0)"
CGNodeType Method "org.apache.commons.io.filefilter.EmptyFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSwapLong(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOCase.checkCompareTo(2)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFileFilter.WildcardFileFilter(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testIO276(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateRawEncoding(4)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChar(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.mark(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZero(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.DirectoryWalker(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.copyLarge(4)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.directoriesOnly(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullOut(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testEOF3(0)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.fail(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testNextWithException(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_nullFile(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.getXML(4)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArray(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffixCaseInsensitive(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.FileUtilsListFilesTestCase(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkEquals_functionality(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.StringBuilderWriterTest(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(1)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparatorTest.testCaseSensitivity(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPathNoEndSeparator_IO_248(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilter.removeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_functionality(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArray_fromList(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.CharSequenceInputStream(3)"
CGNodeType Method "org.apache.commons.io.filefilter.MagicNumberFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.FilePart(3)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.testIOExceptionThrowable(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArrayPortion(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.touch(1)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.deleteFile(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_notExists(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_fileName_nullFile(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16LEWithSingleByteWrite(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.determineWorkingDirectoryPath(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.FileSystemUtils(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testAppXml(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.copyLarge(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomInvalid(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.track(2)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.CountingOutputStream(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilter(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.TestFileFinder(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.DirectoryWalker(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.toBufferedInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testMarkNotSupported(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.getListeners(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testIdentifiesSymlinkDir(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testAlternateLockDir(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.TestNullReader(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.1.renameTo(1)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testMarkAndReset(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.CollectionFileListener(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.getFileFilter(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.track(3)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.WriterOutputStream(4)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.mark(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.getBOMCharsetName(0)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.getTag(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(3)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.reset(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.write(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.tearDown(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileDefaults(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyInputStreamToFile(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitB(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.ReversedLinesFileReaderTestSimple(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testSkipWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.isOpen(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyFile2WithoutFileDatePreservation(0)"
CGNodeType Method "junit.framework.AssertionFailedError.AssertionFailedError(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.resetByteCount(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertEqualContent(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getFile(0)"
CGNodeType Method "junit.framework.TestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.mark(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.FileAlterationObserver(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilter(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertSame(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testForceMkdir(0)"
CGNodeType Method "org.apache.commons.io.FileCleanerTestCase.newInstance(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsWaitForTestCase.testWaitFor(0)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.createObserver(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getExtension(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.XmlStreamWriterTest(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkTextXml(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.isInvoked(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.copyLarge(5)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readLong(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.blockSizes(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderException.getXmlEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksumOnDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.rollOver(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToDirectory_NonExistingDest(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.fail(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.static {...}"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelector(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.TestNullInputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.NameFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.static {...}"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetBaseName(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.write(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$700(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.getData(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.skip(1)"
CGNodeType Method "org.apache.commons.io.IOCase.forName(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.assertLines(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.calculateHttpEncoding(5)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNullFilters(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTestFilters(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.IOCase.getName(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.1.{...}"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testGet(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.flush(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.setPropagateClose(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testMarkSupported(0)"
CGNodeType Method "org.apache.commons.io.output.DemuxOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.getPosition(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadInt(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.filter(3)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparatorUnixWin(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.getLines(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithSingleByteWrite(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLine(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.write(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.filter(2)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.testOtherException(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testMark(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength1(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.afterWrite(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseFreeBSD(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbSolaris(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onStart(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEquals_fullControl(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.sizeOf(1)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.FileCleaningTrackerTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.readFully(4)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testCancel(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertNotNull(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.doMatch(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.testTailerEof(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getTrueResults(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SizeFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.static {...}"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testSuffix(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.contentEquals(2)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerNull(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleFile(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testReadZeroEmptyString(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testCloseEarly(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMultiThreadCancel(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.TestCancelWalker(2)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16BEEncoding(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.removeObserver(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toByteArray(1)"
CGNodeType Method "org.apache.commons.io.IOCase.checkEquals(2)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_getName(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.createFile(2)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadFloat(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.checkCollectionSizes(7)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getLevel(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.separatorsToWindows(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkIndexOf_case(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectoryPath(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.ready(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFileFiltering(4)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.getFileFilters(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16LEEncoding(0)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStreamTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.setFileFilters(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toByteArray(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.filesOnly(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullFile(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.isTextXml(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.checkIfCancelled(3)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileCreate(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_toString(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStreamTest.testReadSingle(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.isFileNewer(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFileUtf8(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.checksum(2)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.testInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testCalculateHttpEncoding(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_Size(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.walk(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Tracker.clear(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileAboveThresholdPrefixOnly(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testUTF8WithBufferedRead(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.filefilter.TrueFileFilter.TrueFileFilter(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(2)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readFully(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.ReaderThread.run(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_nullFile(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testStillClearsIfGivenDirectoryIsASymlink(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.checkCollectionsEmpty(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFalse(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertNull(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.doDelete(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeStringToFile(2)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getFullPathNoEndSeparator(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlySelectorIOException(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.checksumCRC32(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.append(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.newFile(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onFileCreate(1)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedInteger(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_exists(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLinesEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testAgeFilter(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeStringToFile(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.1.{...}"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer_nullSeparator(0)"
CGNodeType Method "org.apache.commons.io.comparator.AbstractFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testToString(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.FileSystemUtilsTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeEncoding(1)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.processInput(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.WriterOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_readerToWriter(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testRawBom(0)"
CGNodeType Method "org.apache.commons.io.IOUtils.readLines(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.detectEncoding(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.contentEqualsIgnoreEOL(3)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.isThresholdExceeded(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.determineWorkingDirectoryPath(2)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedInteger(3)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.newFile(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.DirectoryWalker(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.writeTo(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testWriteCharArray(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.write(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.wildcardMatchOnSystem(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFile_CopyDelete(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFile2(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.checkFile(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeStringToFile(4)"
CGNodeType Method "org.apache.commons.io.IOUtils.readFully(2)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.waitFor(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_and(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testNoSkip(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.1.{...}"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.suffixFileFilter(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.mark(1)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.TeeOutputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$400(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Reaper.setPriority(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.sizeFileFilter(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.setUpEffectiveDirFilter(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.makeSVNAware(1)"
CGNodeType Method "org.apache.commons.io.CopyUtils.CopyUtils(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.toFiles(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkip(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.TestNullReader.processChars(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile4(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFileResults(0)"
CGNodeType Method "org.apache.commons.io.FileCleanerTestCase.FileCleanerTestCase(1)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testHttpInvalid(4)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.testRegex(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.afterRead(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testReadZeroEmptyString(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setChildren(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testIsoFileManyWindowsBreaksSmallBlockSize2VerifyBlockSpanningNewLines(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.NullReader(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testInvalidEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetTempDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.PrefixFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testEquals(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.listFiles(1)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertSame(3)"
CGNodeType Method "org.apache.commons.io.filefilter.AgeFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testContentEqualsIgnoreEOL(0)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.AbstractMonitorTestCase(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadStreamWithOffset(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullData(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyPath(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.NullInputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.SizeFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList_fromArray(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.getLocalTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.ExpectCloseInputStream(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.destroy(0)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getEncoding(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleRestricted(3)"
CGNodeType Method "org.apache.commons.io.FileCleaner.getTrackCount(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(1)"
CGNodeType Method "org.apache.commons.io.input.TailerListener.fileRotated(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testRawContent(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.decodeUrl(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testFilterBuiltUsingAdd(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.NullReader(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.walk(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsWaitForTestCase.FileUtilsWaitForTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkReset(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.ExpectCloseInputStream(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.flush(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testCancel(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_ZeroSize(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.NullInputStream(3)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStream.ClosedOutputStream(0)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream.ExceptionOnCloseByteArrayOutputStream(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testMarkSupported(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.isInvoked(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.2.{...}"
CGNodeType Method "junit.framework.TestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetPathNoEndSeparator(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_encoding_badEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy.doDelete(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.checkWrite(1)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF8WithSingleByteWrite(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFileResults(0)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.ReaderThread.ReaderThread(3)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.readBOMInputStreamTwice(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.closeReader(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.createLeftOver(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategy.doDelete(1)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.markSupported(0)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.keys(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getDefaultWorkingPath(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.find(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.close(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.3.renameTo(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.performCommand(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile2(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.filefilter.NameFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.checkCollectionsEmpty(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$600(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.openOutputStream(1)"
CGNodeType Method "org.apache.commons.io.ThreadMonitor.stop(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithSymlinkFile(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testAppendCharSequence(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testHandleStartDirectoryFalse(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getTrueResults(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testIsFileNewerOlder(0)"
CGNodeType Method "org.apache.commons.io.input.Tailer.readLines(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testLatin15Encoding(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.1.readLine(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURLToStringNoEncoding(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.filefilter.EmptyFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testLargeUTF8WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testRawNoBomValid(1)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToURLs1(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.openOutputStream(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.createStringLines(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.getObservers(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testFlush(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.IOCaseTestCase(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testEnsureTestCoverage(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.doEndOfFile(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStreamTest.testNull(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_3arg_nullSeparator(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.getPosition(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testFileUtils(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.static {...}"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished2(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_IllegalSize(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.processChars(3)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparatorTest.NameFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.isAppXml(1)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.RecordCloseByteArrayOutputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testNameFilterNullListArgument(0)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparatorTest.ExtensionFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.input.TailerListenerAdapter.fileRotated(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedFloat(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.getCause(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.NameFileComparator(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet_fromArray(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.testEOFException(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingAdd(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.write(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.moveFile(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF16BEFile(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.testNullCharArray(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testGetFile_Parent(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.walk(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyURLToFile(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse1(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onFileChange(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToCharArray(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testDeprecatedWildcard(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.testRead(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedShort(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder.handleDirectory(3)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(3)"
CGNodeType Method "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getConditionalFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.filesToFilenames(1)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testConcat(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.testLargeFiles_IO84(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.read(1)"
CGNodeType Method "junit.framework.Assert.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithBOM(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AgeFileFilter.AgeFileFilter(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryDelete(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.moveToDirectory(3)"
CGNodeType Method "org.apache.commons.io.IOUtils.copy(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.ProxyWriterTest(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURLToString(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAtThreshold(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFileFilterUtils_or(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedInteger(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSwapFloat(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.checkRead(2)"
CGNodeType Method "org.apache.commons.io.FileUtils.toFile(1)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadLong(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.setDefaultEncoding(1)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testReadToArrayWithOffset(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.getByteCount(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_fileName_nullFile(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(1)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.testToString(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparatorTest.PathFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.copy(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFiles3(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Reaper.run(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.mark(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.LineIteratorTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.reset(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileDelete(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.toList(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.onFileDelete(1)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStream.readObject(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.markSupported(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorArrayNull(0)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCauseTestCase.validate(3)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_directory(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.TaggedInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.doJoin(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testMissingFile(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.IGNOREtestCopyFileLarge(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testAboveThreshold(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSkipReader(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_EmptyResponse(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testAdd(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testSmallBufferWithBOM(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getChangedFiles(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.getTempDirectoryPath(0)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.sizeRangeFileFilter(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbFreeBSD(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.mark(1)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getCreatedFiles(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testEmpty(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testAnd(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testConstants(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.flush(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getCreatedDirectories(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyToSelf(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.FileUtilsCleanDirectoryTestCase(1)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.IOCase.IOCase(2)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.checkXmlWriter(3)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.NullReaderTest(1)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.isFileOlder(2)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.testResolveProxyClass(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(2)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.removeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryFiltered(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SuffixFileFilter.SuffixFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.throwIfCauseOf(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparatorTest.testCaseSensitivity(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.IOUtilsCopyTestCase(1)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader.calculateRawEncoding(3)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.IOUtilsWriteTestCase(1)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testFileSizeIsExactMultipleOfBlockSize(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testStringToByteArray(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedByte(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testNullCharSequencec(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.makeDirectoryOnly(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.ProxyWriter(1)"
CGNodeType Method "org.apache.commons.io.input.NullReader.getSize(0)"
CGNodeType Method "org.apache.commons.io.input.TailerListenerAdapter.init(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteStringToFile2(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_NormalResponseKbLinux(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Windows(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStream.static {...}"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.testLockDir(1)"
CGNodeType Method "org.apache.commons.io.filefilter.HiddenFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.SelectorAdapter(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testGetBytes(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setLength(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openInputStream_existsButIsDirectory(0)"
CGNodeType Method "org.apache.commons.io.IOCase.checkIndexOf(3)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.readLine(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.SizeFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testWriteStringPortion(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testSizeOfDirectory(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testAddRemoveListeners(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.setFileFilters(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.ListDirectoryWalker(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullData(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedDouble(2)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSwapDouble(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadWithMultipleBOM(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.read(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testCanWrite(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.iterateFilesAndDirs(3)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.calculateRawEncoding(4)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setDirectory(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.toString(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.ByteOrderMarkTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.BOMInputStream(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertTrueFiltersInvoked(3)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithBufferedRead(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.testFileUpdate(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserver.initialize(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.isExtension(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testServerSocketCloseQuietly(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.makeFileOnly(1)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendChar(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedDouble(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToWriter_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testReadLines(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.toURLs(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitC(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.next(0)"
CGNodeType Method "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.IOExceptionWithCause.getCause(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.toString(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFileReference(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderException.XmlStreamReaderException(7)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.BOMInputStream(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.and(1)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURIToStringNullEncoding(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.getPosition(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testTouch(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.TesterFalseFileFilter(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.directoriesOnly(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitC(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.fail(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.BOMInputStream(3)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.FileAlterationMonitorTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile.ReversedLinesFileReaderTestParamFile(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortArray(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.append(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testContentEqualsReaderReader(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testHandleStartDirectoryFalse(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.generateTestData(2)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilter.getFileFilters(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.find(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.toString(1)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.select(1)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.toHex(1)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testEBCDICEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterArrayNullParameters(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Reaper.Reaper(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder.find(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadReader(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.openProcess(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToWriter(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testErrors(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.processByte(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.initWriter(3)"
CGNodeType Method "org.apache.commons.io.SelectorAdapter.select(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilter.setFileFilters(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.ReversedLinesFileReaderTestParamBlockSize(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.testWriteNullBaSucceeds(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.toString(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.markSupported(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testAlternateDefaultEncoding(5)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFile5(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.getByteCount(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_exists(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.testTimeout(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilter(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullIn(0)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparatorTest.testCaseSensitivity(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testDifferentEncoding(0)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.blockSizes(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListenerAdaptor.FileAlterationListenerAdaptor(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.testReadCharArray(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetPath(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReader.reset(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_quoted(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(2)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.markSupported(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.getChildren(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStream.TaggedInputStream(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfExtension(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.createFile(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.output.NullOutputStream.NullOutputStream(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.testNullCharBuffer(0)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testConstructor_File_encoding_badEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.getFileFilters(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsString(3)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.find(1)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.testEmptyStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToWriter_nullIn(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.prefixFileFilter(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testConstantCharsetNames(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.nextLine(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.DeferredFileOutputStream(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterSet(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testStringToInputStream(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readChar(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.CountingOutputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.3.{...}"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.LockableFileWriter(4)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getMessage(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFile1(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStream.TeeOutputStream(2)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(1)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.assertSame(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToWriter_Encoding_nullData(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.touch(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.createLinesFile(3)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingConstructor(1)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFilter.WildcardFilter(1)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.testDeleteQuietlyNormal(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testLatin1Encoding(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.monitor.AbstractMonitorTestCase.touch(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.getOutputStream(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.doHttpStream(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveDirectoryToDirectory_Errors(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryDoesNotExist(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testSocketCloseQuietly(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testDeletesRegular(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.createLinesFile(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testValidEncoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewerNoFile(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.XmlStreamReaderUtilitiesCompatibilityTest(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.removeExtension(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testEmptyBufferWithBOM(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleFile(3)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparatorTest.DefaultFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCloseQuietlyNullSelector(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.testIterateFilesByExtension(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksumOnNullChecksum(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testIterateFiles(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationObserverTestCase.createObserver(2)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$800(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.markSupported(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(3)"
CGNodeType Method "org.apache.commons.io.IOUtils.read(2)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.static {...}"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.static {...}"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.generateTestData(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.isSeparator(1)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.AutoCloseInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceWindows_String_InvalidTextResponse(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple.testUnsupportedEncodingBig5(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.buildFilterUsingAdd(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilter.addFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.filefilter.TrueFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readFloat(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertNull(2)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.assertEquals(3)"
CGNodeType Method "junit.framework.Assert.fail(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.doEndOfFile(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedLong(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest.ClassLoaderObjectInputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.output.NullWriterTest.NullWriterTest(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.testMarkNotSupported(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_nullOut(0)"
CGNodeType Method "junit.framework.Assert.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.skip(2)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.FileBasedTestCase(1)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.CopyUtilsTest(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMakeSVNAware(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.testStream(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOMInclude(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructStringBuilder(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.handleDirectoryStart(3)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriter.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.TaggedOutputStream(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testWildcard(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitor.run(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.createFilesForTestCopyDirectory(3)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.read(4)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.testRemove(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.BOMInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedDouble(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testLargeBufferWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.TaggedIOExceptionTest.TaggedIOExceptionTest(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.createFile(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testSeparatorsToSystem(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.append(1)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.checkWrite(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithASymlinkDir(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.comparator.AbstractFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.static {...}"
CGNodeType Method "org.apache.commons.io.FilenameUtils.equalsOnSystem(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterListNullParameters(0)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.available(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.resetByteCount(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURIToStringNoEncoding(0)"
CGNodeType Method "org.apache.commons.io.HexDump.dump(4)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadStream(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.mark(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.4.close(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.FileFilterTestCase(1)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.getChangedDirectories(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.write(1)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStream.isCauseOf(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader.CustomNullReader(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.generateTestData(1)"
CGNodeType Method "org.apache.commons.io.input.ClassLoaderObjectInputStream.resolveClass(1)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testWriteCharArrayPortion(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.calculateHttpEncoding(6)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testStringToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSymmetryOfLong(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_existsButIsDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertNotNull(1)"
CGNodeType Method "org.apache.commons.io.HexDump.dump(2)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.ComparatorAbstractTestCase(1)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawEncoding(5)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testSupportCode(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_functionality(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.access$100(1)"
CGNodeType Method "org.apache.commons.io.input.NullReader.skip(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.FileUtilsFileNewerTestCase(1)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.testSortListNull(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Tracker.delete(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStreamTest.CloseShieldInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.setName(1)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getDefaultWorkingPath(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.readLine(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testMissingStartDirectory(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(2)"
CGNodeType Method "org.apache.commons.io.input.TailerListenerAdapter.handle(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testFullLength(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testResetting(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.separatorsToUnix(1)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.doTestFileWithSpecifiedLines(1)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.getMessage(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.assertFalseFiltersInvoked(3)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriter.write(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.getTempDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteByteArrayToFile_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(2)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.resetTrueFilters(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testHashCode(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadSmall(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readLine(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUTF8FileWindowsBreaks(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getContentTypeMime(1)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getXmlProlog(2)"
CGNodeType Method "junit.framework.TestCase.TestCase(0)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationListener.onStop(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.getBytes(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(0)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.access$002(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.FilenameUtils(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(3)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparatorTest.testNonexistantFile(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testUnrealizedContainment(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.1.write(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.read(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.test_IO_246(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtils.IOUtils(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStream.BrokenOutputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getDefaultWorkingPath(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponse(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testWriteToSmall(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest._testRawBomValid(1)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.doLenientDetection(2)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getFilenameResults(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeLines(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker.TestMultiThreadCancelWalker(2)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.stop(1)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.throwCauseIfTaggedWith(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.FileUtilsTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testAvailableWithoutBOM(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.buildFilterUsingConstructor(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_byteArrayToWriter_Encoding_nullWriter(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charSequenceToOutputStream_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.append(3)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeLines(3)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testFilteringBufferedReader(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.equalsNormalized(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryToItself(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.verifyResultFile(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.static {...}"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_inputStreamToWriterWithEncoding(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testNullCharArray(0)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.tearDown(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterDirAndFile3(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testInputStreamToByteArray_NegativeSize(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testGetBOMFirstThenReadInclude(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.TestCancelWalker(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertNull(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.getDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.getPathNoEndSeparator(1)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.RegexFileFilterTestCase(1)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.checkContainsFiles(3)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testNoXmlHeader(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.access$002(2)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerExitWhenFinished1(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.byteCountToDisplaySize(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.FileUtilsDirectoryContainsTestCase(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeLines(4)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testLargeUTF8WithBufferedRead(0)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparatorTest.testSortArray(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testURLToStringUsAciiEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.RegexFileFilterTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_5argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_nullOut(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getWorkingPathNamePropertyKey(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStream.beforeWrite(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.find(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_EmptyResponse(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.static {...}"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding_nullEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getFalseResults(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testSizeOf(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SuffixFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1.{...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.getCharsetName(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterValidation(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testNormalize(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.writeLines(5)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.fail(1)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.ProxyInputStream(1)"
CGNodeType Method "org.apache.commons.io.input.ClosedInputStreamTest.ClosedInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetName(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testFileDoesNotExist(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.append(3)"
CGNodeType Method "org.apache.commons.io.TaggedIOExceptionTest.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionCollection(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterDirAndFile3(0)"
CGNodeType Method "org.apache.commons.io.output.CountingOutputStreamTest.testCounting(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.newInstance(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getWorkingPathNamePropertyKey(0)"
CGNodeType Method "org.apache.commons.io.filefilter.SuffixFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsWaitForTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl.ProxyReaderImpl(1)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.OrFileFilterTestCase(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testFilterList(0)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.getConditionalFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.readFile(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.testRawNoBom(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.wildcardMatch(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.andFileFilter(2)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.ThreadMonitorTestCase(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitorTestCase.testThreadFactory(0)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testClose(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.testTempFileError(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.beforeWrite(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testDelegation(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyWriterTest.testWriteString(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.checkByteArrays(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testNormalizeNoEndSeparator(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnNullList(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.FilenameUtils.wildcardMatch(3)"
CGNodeType Method "org.apache.commons.io.comparator.DefaultFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.IOUtils.closeQuietly(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.testDirectoryContainsFile(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriter.append(1)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onStart(1)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadShort(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.exitWhenFinished(0)"
CGNodeType Method "org.apache.commons.io.input.ProxyInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.mark(1)"
CGNodeType Method "org.apache.commons.io.EndianUtils.writeSwappedShort(2)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.TestTailerListener.fileRotated(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.getContentTypeMime(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.test_openOutputStream_noParentNoFile(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testForceDeleteAFile3(0)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStream.ReaderInputStream(1)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.equals(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testReadFileToStringWithEncoding(0)"
CGNodeType Method "org.apache.commons.io.filefilter.DirectoryFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.checkRawError(5)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testEOF1(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.CompositeFileComparatorTest(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.ThresholdingOutputStream(1)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.ByteOrderMark.hashCode(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceOS_String_Other(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.filefilter.NotFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.IOCase.checkRegionMatches(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker.handleIsCancelled(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.showFailures(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsWaitForTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriter.close(0)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.testConstructorIterableNull(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkCompare_functionality(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.NullReader.close(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.setupSymlink(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testHidden(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCopy_byteArrayToWriter(0)"
CGNodeType Method "org.apache.commons.io.output.ClosedOutputStream.static {...}"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedInteger(1)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStream.finalize(0)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(3)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateRawEncoding(4)"
CGNodeType Method "org.apache.commons.io.LineIterator.closeQuietly(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.innerListFiles(4)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase.resetTrueFilters(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testOr(0)"
CGNodeType Method "org.apache.commons.io.input.AutoCloseInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_Writer(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testLatin7Encoding(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testReadEverything(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.listFiles(3)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.assertSame(2)"
CGNodeType Method "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(1)"
CGNodeType Method "org.apache.commons.io.comparator.NameFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadTwiceWithBOM(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.testCtor(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testByteArrayToOutputStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertNotNull(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.freeSpaceWindows(2)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getWorkingPathNamePropertyKey(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testIsExtensionArray(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.readFirstBytes(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.toSuffixes(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.createFile(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.NullInputStreamTest(1)"
CGNodeType Method "org.apache.commons.io.filefilter.NameFileFilter.NameFileFilter(2)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter.setInvoked(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.toByteArray(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWrite_WithAppendOptionTrue_ShouldNotDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(3)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.testReadToArray(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.testCleanDirWithParentSymlinks(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveToDirectory_Errors(0)"
CGNodeType Method "org.apache.commons.io.input.NullReaderTest.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.moveDirectoryToDirectory(3)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStreamTest.testReset(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testCopyDirectoryErrors(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testSameEncoding(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.checkFile(2)"
CGNodeType Method "org.apache.commons.io.filefilter.NotFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.access$000(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.LineIterator.isValidLine(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.flush(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker.handleDirectoryStart(3)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.XmlStreamReaderTest(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDeleteQuietlyFile(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.CancelException.CancelException(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_nullIn(0)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testWithSingleByteWrite(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testMarkResetAfterReadWithBOM(0)"
CGNodeType Method "org.apache.commons.io.FileCleaner.getInstance(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.iterateFiles(3)"
CGNodeType Method "org.apache.commons.io.comparator.ExtensionFileComparator.compare(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(1)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.write(1)"
CGNodeType Method "org.apache.commons.io.output.DemuxOutputStream.DemuxOutputStream(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.testCompletedWithoutTimeout(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(4)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testNextLineOnlyUtf8Encoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsFileNewerTestCase.testIsFileNewer(0)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilterTestCase.getTrueResults(0)"
CGNodeType Method "org.apache.commons.io.comparator.PathFileComparator.sort(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStreamTest.testReadDouble(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.newFile(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteLines_4argsWithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.assertNull(2)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readUnsignedShort(0)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReaderTest.checkArray(2)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.initWriter(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testLimitToCurrent(0)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStreamTest.TeeInputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.nameFileFilter(2)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testThreeLines(0)"
CGNodeType Method "org.apache.commons.io.input.TaggedInputStreamTest.testBrokenStream(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToWriter_Encoding(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructNull(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testContentEqualsIgnoreEOL(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.access$300(1)"
CGNodeType Method "org.apache.commons.io.filefilter.AbstractFileFilter.AbstractFileFilter(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.fail(0)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.stop(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testContentTypeMime(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.serialize(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.generateTestData(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyDirectory(2)"
CGNodeType Method "org.apache.commons.io.input.NullReader.markSupported(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.XmlStreamReaderUtilitiesTest(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFiles4(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertFalse(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.filefilter.PrefixFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.MockFileSystemUtils(2)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_stringToOutputStream_nullStream(0)"
CGNodeType Method "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter.setInvoked(1)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testCharsetMismatchInfiniteLoop(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.skip(1)"
CGNodeType Method "org.apache.commons.io.monitor.FileAlterationMonitor.addObserver(1)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readShort(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getDefaultEncoding(0)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncoding.write(3)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStreamTest.ProxyOutputStreamTest(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.testLocaleIndependence(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.fail(1)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderException.XmlStreamReaderException(6)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyDirectory(3)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.ageFileFilter(2)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceReader.toString(0)"
CGNodeType Method "org.apache.commons.io.monitor.CollectionFileListener.onFileDelete(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.static {...}"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.FilenameUtilsWildcardTestCase(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsListFilesTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWriteLines_OutputStream_nullSeparator(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.getBOM(0)"
CGNodeType Method "org.apache.commons.io.output.CloseShieldOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_LongResponseKb(0)"
CGNodeType Method "org.apache.commons.io.output.ThresholdingOutputStream.getStream(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.testFilterAndLimitD(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.calculateHttpEncoding(7)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_inputStreamToOutputStream_IO84(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsDirectoryContainsTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.write(3)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.testNormalStream(0)"
CGNodeType Method "org.apache.commons.io.testtools.FileBasedTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.forceDelete(1)"
CGNodeType Method "org.apache.commons.io.output.ByteArrayOutputStreamTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.CopyUtilsTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.IOUtilsCopyTestCase.testCopy_readerToOutputStream_Encoding_nullIn(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.1.close(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testCharExtraLength(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.hasBOM(0)"
CGNodeType Method "org.apache.commons.io.FileDeleteStrategyTestCase.FileDeleteStrategyTestCase(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.copyDirectory(4)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedLong(1)"
CGNodeType Method "org.apache.commons.io.input.ReaderInputStreamTest.testUTF8WithSingleByteRead(0)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream.processByte(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.assertData(4)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertFalse(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtils.parseDir(2)"
CGNodeType Method "org.apache.commons.io.comparator.DirectoryFileComparator.getType(1)"
CGNodeType Method "org.apache.commons.io.input.TailerTest.assertTrue(2)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testWriteString(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.getCount(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.fail(1)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.handleIOException(1)"
CGNodeType Method "org.apache.commons.io.LineIteratorTestCase.testFilteringFileReader(0)"
CGNodeType Method "org.apache.commons.io.ByteOrderMarkTestCase.testLength(0)"
CGNodeType Method "org.apache.commons.io.output.ProxyOutputStream.write(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(2)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(3)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.hasBOM(1)"
CGNodeType Method "org.apache.commons.io.FileUtils.readFileToString(1)"
CGNodeType Method "org.apache.commons.io.filefilter.WildcardFileFilter.toString(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedLong(2)"
CGNodeType Method "org.apache.commons.io.filefilter.PrefixFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.output.WriterOutputStreamTest.testUTF16BEWithBufferedWrite(0)"
CGNodeType Method "org.apache.commons.io.monitor.FileEntry.refresh(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testToFile4(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.getConditionalFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.testUnsupportedEncodingUTF16(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.CancelException.getFile(0)"
CGNodeType Method "org.apache.commons.io.output.BrokenOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testIndexOfLastSeparator(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testListFiles(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testWriteWithEncoding_WithAppendOptionFalse_ShouldDeletePreviousFileLines(0)"
CGNodeType Method "org.apache.commons.io.output.FileWriterWithEncodingTest.testConstructor_File_directory(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.read(1)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderTest.assertEquals(3)"
CGNodeType Method "org.apache.commons.io.HexDump.HexDump(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.XmlStreamReader(4)"
CGNodeType Method "org.apache.commons.io.IOUtils.readLines(2)"
CGNodeType Method "org.apache.commons.io.input.NullInputStreamTest.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.testTextXml(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.readFileToString(2)"
CGNodeType Method "org.apache.commons.io.HexDumpTest.toAscii(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testReadSwappedUnsignedShort(0)"
CGNodeType Method "org.apache.commons.io.ThreadMonitorTestCase.assertNull(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.assertFiltering(3)"
CGNodeType Method "org.apache.commons.io.DirectoryWalker.filterDirectoryContents(3)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsWildcardTestCase.static {...}"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(3)"
CGNodeType Method "org.apache.commons.io.FileCleaningTracker.Tracker.Tracker(4)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.readFully(3)"
CGNodeType Method "org.apache.commons.io.output.TeeOutputStream.close(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.read(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.fail(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.getUserDirectoryPath(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadWithBOM(0)"
CGNodeType Method "org.apache.commons.io.output.LockableFileWriterTest.testFileNotLocked(0)"
CGNodeType Method "org.apache.commons.io.output.TaggedOutputStreamTest.testBrokenStream(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.read(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.1.{...}"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_serialization(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testGetFullPath(0)"
CGNodeType Method "org.apache.commons.io.output.XmlStreamWriterTest.testUTF16Encoding(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.waitFor(2)"
CGNodeType Method "org.apache.commons.io.input.Tailer.create(2)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker.handleCancelled(3)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparator.LastModifiedFileComparator(0)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.fileFileFilter(0)"
CGNodeType Method "org.apache.commons.io.input.SwappedDataInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkStartsWith_case(0)"
CGNodeType Method "org.apache.commons.io.input.compatibility.XmlStreamReader.getXMLGuessEncoding(1)"
CGNodeType Method "org.apache.commons.io.comparator.CompositeFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStreamTest.testZeroLength3(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.isSystemWindows(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertEqualsAndNoLineBreaks(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testMoveFile_Rename(0)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testSymmetry(0)"
CGNodeType Method "org.apache.commons.io.comparator.AbstractFileComparator.toString(0)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.WriterThread.WriterThread(4)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendConstructCapacity(0)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStreamTest.fail(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.testThrowsOnCannotDeleteFile(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testReadEmpty(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_Encoding_nullStream(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedDouble(2)"
CGNodeType Method "org.apache.commons.io.input.CharSequenceInputStreamTest.testSkip(0)"
CGNodeType Method "org.apache.commons.io.FilenameUtils.normalizeNoEndSeparator(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.makeCVSAware(1)"
CGNodeType Method "org.apache.commons.io.output.NullWriter.static {...}"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(1)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterUtils.filterList(2)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testChecksumDouble(0)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.assertEquals(2)"
CGNodeType Method "org.apache.commons.io.input.XmlStreamReader.getContentTypeMime(1)"
CGNodeType Method "org.apache.commons.io.input.Tailer.create(4)"
CGNodeType Method "org.apache.commons.io.EndianUtils.swapDouble(1)"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testWriteSwappedDouble(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.deleteDirectory(1)"
CGNodeType Method "org.apache.commons.io.input.TeeInputStream.close(0)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilterTestCase.buildFilterUsingConstructor(1)"
CGNodeType Method "org.apache.commons.io.filefilter.OrFileFilter.removeFileFilter(1)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCaseJava4.filesOnly(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStreamTest.testLeadingNonBOMSingleRead(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.assertNotNull(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.assertTrue(1)"
CGNodeType Method "org.apache.commons.io.FilenameUtilsTestCase.testEqualsNormalizedError_IO_128(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.BoundedInputStream(2)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.BrokenInputStream(1)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.2.{...}"
CGNodeType Method "org.apache.commons.io.TaggedIOExceptionTest.testTaggedIOException(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(1)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.accept(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.read(3)"
CGNodeType Method "org.apache.commons.io.FileUtils.validateListFilesParameters(2)"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(1)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize.assertFileWithShrinkingTestLines(1)"
CGNodeType Method "org.apache.commons.io.input.Tailer.create(3)"
CGNodeType Method "org.apache.commons.io.TaggedIOException.isTaggedWith(2)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparatorTest.setUp(0)"
CGNodeType Method "org.apache.commons.io.EndianUtils.readSwappedInteger(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFileFilter.FileFileFilter(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.testDecodeUrlNullSafe(0)"
CGNodeType Method "org.apache.commons.io.output.StringBuilderWriterTest.testAppendCharSequence(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsTestCase.testReadLines_InputStream_String(0)"
CGNodeType Method "org.apache.commons.io.input.BrokenInputStream.reset(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.testFilterAndLimitB(0)"
CGNodeType Method "org.apache.commons.io.input.CountingInputStream.afterRead(1)"
CGNodeType Method "org.apache.commons.io.IOCaseTestCase.test_checkEquals_case(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanSymlinksTestCase.getTestDirectory(0)"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.testFileCleanerDirectory_ForceStrategy(0)"
CGNodeType Method "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker.handleDirectoryEnd(3)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.testOutputStream(0)"
CGNodeType Method "org.apache.commons.io.DemuxTestCase.DemuxTestCase(1)"
CGNodeType Method "org.apache.commons.io.filefilter.AndFileFilter.accept(2)"
CGNodeType Method "org.apache.commons.io.filefilter.FileFilterTestCase.testMagicNumberFileFilterString(0)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.read(0)"
CGNodeType Method "org.apache.commons.io.input.CloseShieldInputStream.CloseShieldInputStream(1)"
CGNodeType Method "org.apache.commons.io.comparator.LastModifiedFileComparator.static {...}"
CGNodeType Method "org.apache.commons.io.comparator.SizeFileComparator.SizeFileComparator(0)"
CGNodeType Method "org.apache.commons.io.HexDump.static {...}"
CGNodeType Method "org.apache.commons.io.FileCleaningTrackerTestCase.tearDown(0)"
CGNodeType Method "org.apache.commons.io.FileUtilsTestCase.openOutputStream_noParent(1)"
CGNodeType Method "org.apache.commons.io.FileUtilsCleanDirectoryTestCase.chmod(3)"
CGNodeType Method "org.apache.commons.io.output.DeferredFileOutputStream.getFile(0)"
CGNodeType Method "org.apache.commons.io.IOUtilsWriteTestCase.testWrite_charArrayToOutputStream_nullStream(0)"
CGNodeType Method "org.apache.commons.io.LineIterator.hasNext(0)"
CGNodeType Method "org.apache.commons.io.input.NullReader.read(3)"
CGNodeType Method "org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpaceUnix_String_InvalidResponse4(0)"
CGNodeType Method "org.apache.commons.io.comparator.ComparatorAbstractTestCase.setUp(0)"
CGNodeType Method "org.apache.commons.io.input.BoundedInputStream.isPropagateClose(0)"
CGNodeType Method "org.apache.commons.io.filefilter.CanReadFileFilter.static {...}"
CGNodeType Method "org.apache.commons.io.EndianUtilsTest.testCtor(0)"
CGNodeType Method "org.apache.commons.io.input.ReversedLinesFileReader.FilePart.access$100(1)"
CGNodeType Method "org.apache.commons.io.input.BOMInputStream.read(1)"
CGNodeType Class "org.apache.commons.io.FileUtilsCleanSymlinksTestCase"
CGNodeType Class "org.apache.commons.io.output.TeeOutputStreamTest.ExceptionOnCloseByteArrayOutputStream"
CGNodeType Class "org.apache.commons.io.testtools.YellOnFlushAndCloseOutputStream"
CGNodeType Class "org.apache.commons.io.comparator.AbstractFileComparator"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase"
CGNodeType Class "org.apache.commons.io.input.AutoCloseInputStreamTest.1"
CGNodeType Class "org.apache.commons.io.input.XmlStreamReaderException"
CGNodeType Class "org.apache.commons.io.testtools.YellOnCloseInputStream"
CGNodeType Class "org.apache.commons.io.EndianUtils"
CGNodeType Class "org.apache.commons.io.FileCleaningTracker.Tracker"
CGNodeType Class "org.apache.commons.io.output.TaggedOutputStreamTest"
CGNodeType Class "org.apache.commons.io.FileSystemUtilsTestCase"
CGNodeType Class "org.apache.commons.io.input.compatibility.XmlStreamReaderException"
CGNodeType Class "org.apache.commons.io.input.CloseShieldInputStream"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter[]"
CGNodeType Class "org.apache.commons.io.filefilter.EmptyFileFilter"
CGNodeType Class "org.apache.commons.io.comparator.CompositeFileComparatorTest"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCaseJava4"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter[]"
CGNodeType Class "org.apache.commons.io.filefilter.TrueFileFilter"
CGNodeType Class "org.apache.commons.io.filefilter.AgeFileFilter"
CGNodeType Class "org.apache.commons.io.IOExceptionWithCause"
CGNodeType Class "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest.MockXmlStreamReader"
CGNodeType Class "org.apache.commons.io.output.ByteArrayOutputStream"
CGNodeType Class "org.apache.commons.io.FileDeleteStrategyTestCase"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase.TestCancelWalker"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFalseFileFinder"
CGNodeType Class "org.apache.commons.io.filefilter.DirectoryFileFilter"
CGNodeType Class "org.apache.commons.io.filefilter.SuffixFileFilter"
CGNodeType Class "org.apache.commons.io.output.ProxyWriter"
CGNodeType Class "org.apache.commons.io.FileDeleteStrategy.ForceFileDeleteStrategy"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinder"
CGNodeType Class "org.apache.commons.io.input.NullInputStream"
CGNodeType Class "org.apache.commons.io.FileCleaningTracker"
CGNodeType Class "org.apache.commons.io.input.Tailer"
CGNodeType Class "org.apache.commons.io.FileUtilsTestCase.3"
CGNodeType Class "org.apache.commons.io.filefilter.AndFileFilter"
CGNodeType Class "org.apache.commons.io.input.TeeInputStream"
CGNodeType Class "org.apache.commons.io.IOUtilsCopyTestCase"
CGNodeType Class "org.apache.commons.io.FileCleaningTracker.Reaper"
CGNodeType Class "org.apache.commons.io.output.ProxyWriterTest"
CGNodeType Class "org.apache.commons.io.ThreadMonitorTestCase"
CGNodeType Class "org.apache.commons.io.DemuxTestCase.ReaderThread"
CGNodeType Class "org.apache.commons.io.output.LockableFileWriterTest"
CGNodeType Class "org.apache.commons.io.input.CharSequenceReader"
CGNodeType Class "org.apache.commons.io.FileSystemUtilsTestCase.1"
CGNodeType Class "org.apache.commons.io.input.CharSequenceReaderTest"
CGNodeType Class "org.apache.commons.io.comparator.DefaultFileComparator"
CGNodeType Class "org.apache.commons.io.filefilter.RegexFileFilterTestCase"
CGNodeType Class "org.apache.commons.io.filefilter.NameFileFilter"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReader.FilePart"
CGNodeType Class "org.apache.commons.io.FileCleanerTestCase"
CGNodeType Class "org.apache.commons.io.input.TailerTest"
CGNodeType Class "junit.framework.TestCase"
CGNodeType Class "org.apache.commons.io.FileUtilsTestCase.1"
CGNodeType Class "org.apache.commons.io.output.TeeOutputStream"
CGNodeType Class "org.apache.commons.io.FileUtilsTestCase.2"
CGNodeType Class "org.apache.commons.io.input.CountingInputStreamTest"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReaderTestSimple"
CGNodeType Class "org.apache.commons.io.comparator.CompositeFileComparator"
CGNodeType Class "org.apache.commons.io.FileUtils"
CGNodeType Class "int[]"
CGNodeType Class "org.apache.commons.io.output.BrokenOutputStream"
CGNodeType Class "org.apache.commons.io.input.ProxyReaderTest.CustomNullReader"
CGNodeType Class "org.apache.commons.io.input.NullInputStreamTest.TestNullInputStream"
CGNodeType Class "org.apache.commons.io.input.NullInputStreamTest"
CGNodeType Class "byte[]"
CGNodeType Class "org.apache.commons.io.FileSystemUtilsTestCase.2"
CGNodeType Class "org.apache.commons.io.input.SwappedDataInputStream"
CGNodeType Class "org.apache.commons.io.input.ClosedInputStreamTest"
CGNodeType Class "org.apache.commons.io.input.NullReader"
CGNodeType Class "org.apache.commons.io.output.NullOutputStream"
CGNodeType Class "org.apache.commons.io.filefilter.WildcardFilter"
CGNodeType Class "org.apache.commons.io.output.LockableFileWriter"
CGNodeType Class "org.apache.commons.io.ByteOrderMark[]"
CGNodeType Class "org.apache.commons.io.input.BOMInputStreamTest.1"
CGNodeType Class "org.apache.commons.io.comparator.DirectoryFileComparator"
CGNodeType Class "org.apache.commons.io.output.WriterOutputStream"
CGNodeType Class "org.apache.commons.io.input.TaggedInputStreamTest"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilter"
CGNodeType Class "org.apache.commons.io.filefilter.MagicNumberFileFilter"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationObserver"
CGNodeType Class "org.apache.commons.io.input.BoundedInputStreamTest"
CGNodeType Class "org.apache.commons.io.input.ClassLoaderObjectInputStreamTest"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestCancelWalker"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase.TestFileFinderString"
CGNodeType Class "org.apache.commons.io.comparator.ReverseComparator"
CGNodeType Class "org.apache.commons.io.IOUtilsTestCase.4"
CGNodeType Class "org.apache.commons.io.IOUtilsTestCase.3"
CGNodeType Class "org.apache.commons.io.SelectorAdapter"
CGNodeType Class "org.apache.commons.io.IOUtilsTestCase.2"
CGNodeType Class "org.apache.commons.io.IOUtilsTestCase.1"
CGNodeType Class "org.apache.commons.io.comparator.NameFileComparatorTest"
CGNodeType Class "org.apache.commons.io.input.BOMInputStreamTest.ExpectCloseInputStream"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationMonitorTestCase"
CGNodeType Class "org.apache.commons.io.input.TaggedInputStream"
CGNodeType Class "org.apache.commons.io.FileCleaningTrackerTestCase"
CGNodeType Class "org.apache.commons.io.output.CountingOutputStreamTest"
CGNodeType Class "org.apache.commons.io.comparator.ExtensionFileComparatorTest"
CGNodeType Class "org.apache.commons.io.testtools.FileBasedTestCase"
CGNodeType Class "org.apache.commons.io.filefilter.AbstractFileFilter"
CGNodeType Class "org.apache.commons.io.ByteOrderMark"
CGNodeType Class "org.apache.commons.io.output.ProxyOutputStream"
CGNodeType Class "org.apache.commons.io.input.DemuxInputStream"
CGNodeType Class "org.apache.commons.io.filefilter.HiddenFileFilter"
CGNodeType Class "org.apache.commons.io.ByteOrderMarkTestCase"
CGNodeType Class "org.apache.commons.io.input.TeeInputStreamTest"
CGNodeType Class "org.apache.commons.io.output.ProxyOutputStreamTest"
CGNodeType Class "org.apache.commons.io.FileExistsException"
CGNodeType Class "org.apache.commons.io.input.BrokenInputStream"
CGNodeType Class "org.apache.commons.io.filefilter.FalseFileFilter"
CGNodeType Class "org.apache.commons.io.FileUtilsWaitForTestCase"
CGNodeType Class "org.apache.commons.io.FileUtilsTestCase.ListDirectoryWalker"
CGNodeType Class "org.apache.commons.io.input.BrokenInputStreamTest"
CGNodeType Class "org.apache.commons.io.FilenameUtils"
CGNodeType Class "org.apache.commons.io.monitor.FileEntry"
CGNodeType Class "org.apache.commons.io.LineIteratorTestCase.2"
CGNodeType Class "org.apache.commons.io.DemuxTestCase.WriterThread"
CGNodeType Class "org.apache.commons.io.LineIteratorTestCase.1"
CGNodeType Class "org.apache.commons.io.output.NullOutputStreamTest"
CGNodeType Class "org.apache.commons.io.output.ByteArrayOutputStreamTestCase"
CGNodeType Class "org.apache.commons.io.input.BOMInputStreamTest"
CGNodeType Class "org.apache.commons.io.filefilter.OrFileFilter"
CGNodeType Class "org.apache.commons.io.filefilter.AndFileFilterTestCase"
CGNodeType Class "org.apache.commons.io.output.ClosedOutputStream"
CGNodeType Class "org.apache.commons.io.monitor.CollectionFileListener"
CGNodeType Class "org.apache.commons.io.input.CountingInputStream"
CGNodeType Class "org.apache.commons.io.IOUtilsTestCase"
CGNodeType Class "org.apache.commons.io.ThreadMonitor"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationMonitor"
CGNodeType Class "org.apache.commons.io.comparator.ComparatorAbstractTestCase"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationObserverTestCase"
CGNodeType Class "junit.framework.Assert"
CGNodeType Class "org.apache.commons.io.input.AutoCloseInputStream"
CGNodeType Class "org.apache.commons.io.input.ProxyInputStream"
CGNodeType Class "org.apache.commons.io.output.ThresholdingOutputStream"
CGNodeType Class "org.apache.commons.io.filefilter.CanWriteFileFilter"
CGNodeType Class "org.apache.commons.io.LineIterator"
CGNodeType Class "org.apache.commons.io.LineIteratorTestCase"
CGNodeType Class "org.apache.commons.io.output.WriterOutputStreamTest"
CGNodeType Class "org.apache.commons.io.FileUtilsFileNewerTestCase"
CGNodeType Class "org.apache.commons.io.input.NullReaderTest.TestNullReader"
CGNodeType Class "org.apache.commons.io.input.ReaderInputStream"
CGNodeType Class "org.apache.commons.io.TaggedIOExceptionTest"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestMultiThreadCancelWalker"
CGNodeType Class "org.apache.commons.io.comparator.SizeFileComparatorTest"
CGNodeType Class "org.apache.commons.io.output.FileWriterWithEncoding"
CGNodeType Class "org.apache.commons.io.input.CharSequenceInputStreamTest"
CGNodeType Class "org.apache.commons.io.input.XmlStreamReader"
CGNodeType Class "org.apache.commons.io.input.AutoCloseInputStreamTest"
CGNodeType Class "org.apache.commons.io.filefilter.NotFileFilter"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase.TestFalseFileFinder"
CGNodeType Class "org.apache.commons.io.output.DeferredFileOutputStreamTest"
CGNodeType Class "org.apache.commons.io.CopyUtils"
CGNodeType Class "org.apache.commons.io.DirectoryWalker"
CGNodeType Class "org.apache.commons.io.FilenameUtilsWildcardTestCase"
CGNodeType Class "org.apache.commons.io.filefilter.ConditionalFileFilter"
CGNodeType Class "org.apache.commons.io.HexDump"
CGNodeType Class "org.apache.commons.io.input.ProxyReaderTest"
CGNodeType Class "org.apache.commons.io.input.ProxyReader"
CGNodeType Class "org.apache.commons.io.comparator.ExtensionFileComparator"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCase.TestMultiThreadCancelWalker"
CGNodeType Class "org.apache.commons.io.IOUtils"
CGNodeType Class "org.apache.commons.io.output.NullWriterTest"
CGNodeType Class "org.apache.commons.io.output.XmlStreamWriterTest"
CGNodeType Class "org.apache.commons.io.EndianUtilsTest"
CGNodeType Class "org.apache.commons.io.comparator.LastModifiedFileComparator"
CGNodeType Class "org.apache.commons.io.filefilter.OrFileFilterTestCase"
CGNodeType Class "org.apache.commons.io.TaggedIOException"
CGNodeType Class "org.apache.commons.io.DemuxTestCase"
CGNodeType Class "boolean[]"
CGNodeType Class "org.apache.commons.io.DirectoryWalker.CancelException"
CGNodeType Class "org.apache.commons.io.filefilter.DelegateFileFilter"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReaderTestParamBlockSize"
CGNodeType Class "org.apache.commons.io.output.BrokenOutputStreamTest"
CGNodeType Class "org.apache.commons.io.FileUtilsListFilesTestCase"
CGNodeType Class "org.apache.commons.io.comparator.PathFileComparatorTest"
CGNodeType Class "org.apache.commons.io.output.ClosedOutputStreamTest"
CGNodeType Class "org.apache.commons.io.output.StringBuilderWriter"
CGNodeType Class "org.apache.commons.io.input.compatibility.XmlStreamReaderUtilitiesCompatibilityTest"
CGNodeType Class "org.apache.commons.io.output.XmlStreamWriter"
CGNodeType Class "org.apache.commons.io.output.CloseShieldOutputStreamTest"
CGNodeType Class "org.apache.commons.io.output.CountingOutputStream"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationListener"
CGNodeType Class "org.apache.commons.io.output.DeferredFileOutputStream"
CGNodeType Class "junit.framework.AssertionFailedError"
CGNodeType Class "org.apache.commons.io.IOCaseTestCase"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReader.1"
CGNodeType Class "org.apache.commons.io.output.TaggedOutputStream"
CGNodeType Class "org.apache.commons.io.comparator.SizeFileComparator"
CGNodeType Class "org.apache.commons.io.output.TeeOutputStreamTest"
CGNodeType Class "org.apache.commons.io.comparator.LastModifiedFileComparatorTest"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterFalseFileFilter"
CGNodeType Class "org.apache.commons.io.filefilter.WildcardFileFilter"
CGNodeType Class "org.apache.commons.io.output.TeeOutputStreamTest.RecordCloseByteArrayOutputStream"
CGNodeType Class "org.apache.commons.io.input.XmlStreamReaderTest"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReaderTestParamFile"
CGNodeType Class "org.apache.commons.io.comparator.DefaultFileComparatorTest"
CGNodeType Class "org.apache.commons.io.input.BoundedInputStream"
CGNodeType Class "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest"
CGNodeType Class "org.apache.commons.io.IOExceptionWithCauseTestCase"
CGNodeType Class "org.apache.commons.io.input.TailerTest.TestTailerListener"
CGNodeType Class "org.apache.commons.io.output.NullWriter"
CGNodeType Class "org.apache.commons.io.output.ProxyOutputStreamTest.1"
CGNodeType Class "org.apache.commons.io.input.compatibility.XmlStreamReader"
CGNodeType Class "org.apache.commons.io.filefilter.FileFilterUtils"
CGNodeType Class "org.apache.commons.io.FileUtilsTestCase"
CGNodeType Class "org.apache.commons.io.input.TailerTest.1"
CGNodeType Class "org.apache.commons.io.output.StringBuilderWriterTest"
CGNodeType Class "org.apache.commons.io.input.ReaderInputStreamTest"
CGNodeType Class "org.apache.commons.io.input.BOMInputStream"
CGNodeType Class "org.apache.commons.io.input.CloseShieldInputStreamTest"
CGNodeType Class "org.apache.commons.io.HexDumpTest"
CGNodeType Class "org.apache.commons.io.FileUtilsCleanDirectoryTestCase"
CGNodeType Class "org.apache.commons.io.output.FileWriterWithEncodingTest"
CGNodeType Class "org.apache.commons.io.monitor.AbstractMonitorTestCase"
CGNodeType Class "org.apache.commons.io.CopyUtilsTest"
CGNodeType Class "org.apache.commons.io.filefilter.FileFileFilter"
CGNodeType Class "org.apache.commons.io.monitor.FileEntry[]"
CGNodeType Class "org.apache.commons.io.comparator.DirectoryFileComparatorTest"
CGNodeType Class "org.apache.commons.io.filefilter.ConditionalFileFilterAbstractTestCase"
CGNodeType Class "org.apache.commons.io.input.TailerListener"
CGNodeType Class "org.apache.commons.io.input.SwappedDataInputStreamTest"
CGNodeType Class "org.apache.commons.io.filefilter.CanReadFileFilter"
CGNodeType Class "org.apache.commons.io.output.DemuxOutputStream"
CGNodeType Class "org.apache.commons.io.input.ProxyReaderTest.ProxyReaderImpl"
CGNodeType Class "org.apache.commons.io.IOCase"
CGNodeType Class "org.apache.commons.io.FileDeleteStrategy"
CGNodeType Class "org.apache.commons.io.filefilter.FileFilterTestCase"
CGNodeType Class "org.apache.commons.io.output.TeeOutputStreamTest.1"
CGNodeType Class "org.apache.commons.io.FileSystemUtils"
CGNodeType Class "org.apache.commons.io.output.CloseShieldOutputStreamTest.1"
CGNodeType Class "org.apache.commons.io.input.ReversedLinesFileReader"
CGNodeType Class "org.apache.commons.io.filefilter.SizeFileFilter"
CGNodeType Class "org.apache.commons.io.comparator.PathFileComparator"
CGNodeType Class "org.apache.commons.io.input.NullReaderTest"
CGNodeType Class "org.apache.commons.io.monitor.FileAlterationListenerAdaptor"
CGNodeType Class "org.apache.commons.io.input.XmlStreamReaderUtilitiesTest.MockXmlStreamReader"
CGNodeType Class "org.apache.commons.io.IOUtilsWriteTestCase"
CGNodeType Class "org.apache.commons.io.input.TailerListenerAdapter"
CGNodeType Class "org.apache.commons.io.filefilter.RegexFileFilter"
CGNodeType Class "org.apache.commons.io.output.CloseShieldOutputStream"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase"
CGNodeType Class "org.apache.commons.io.input.ClosedInputStream"
CGNodeType Class "org.apache.commons.io.input.CloseShieldInputStreamTest.1"
CGNodeType Class "org.apache.commons.io.FileUtilsDirectoryContainsTestCase"
CGNodeType Class "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils.1"
CGNodeType Class "org.apache.commons.io.FileCleaner"
CGNodeType Class "org.apache.commons.io.input.CharSequenceInputStream"
CGNodeType Class "org.apache.commons.io.FilenameUtilsTestCase"
CGNodeType Class "char[]"
CGNodeType Class "org.apache.commons.io.filefilter.PrefixFileFilter"
CGNodeType Class "org.apache.commons.io.comparator.NameFileComparator"
CGNodeType Class "org.apache.commons.io.filefilter.IOFileFilterAbstractTestCase.TesterTrueFileFilter"
CGNodeType Class "org.apache.commons.io.DirectoryWalkerTestCaseJava4.TestFileFinder"
CGNodeType Class "org.apache.commons.io.FileSystemUtilsTestCase.MockFileSystemUtils"
CGNodeType Class "org.apache.commons.io.input.ClassLoaderObjectInputStream"
CGNodeType Class "byte[][]"
