FACT TUPLE :
reference "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.Source"
reference "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.SourceFactory"
reference "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.conf.source.SourceType"
reference "org.apache.flume.source.DefaultSourceFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.DefaultSourceFactory" "org.slf4j.Logger"
reference "org.apache.flume.source.DefaultSourceFactory" "org.slf4j.LoggerFactory"
contain "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory.DefaultSourceFactory(0)"
call "org.apache.flume.source.DefaultSourceFactory.create(2)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.source.DefaultSourceFactory.create(2)" "org.apache.flume.source.DefaultSourceFactory.logger"
call "org.apache.flume.source.DefaultSourceFactory.create(2)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.source.DefaultSourceFactory.create(2)" "org.apache.flume.source.DefaultSourceFactory.getClass(1)"
call "org.apache.flume.source.DefaultSourceFactory.create(2)" "org.apache.flume.Source.setName(1)"
call "org.apache.flume.source.DefaultSourceFactory.create(2)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory.create(2)"
reference "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.conf.source.SourceType.OTHER"
call "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.conf.source.SourceType.valueOf(1)"
reference "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.source.DefaultSourceFactory.logger"
call "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.conf.source.SourceType.equals(1)"
call "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.conf.source.SourceType.getSourceClassName(0)"
call "org.apache.flume.source.DefaultSourceFactory.getClass(1)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory.getClass(1)"
call "org.apache.flume.source.DefaultSourceFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.DefaultSourceFactory.static {...}" "org.apache.flume.source.DefaultSourceFactory.logger"
contain "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory.static {...}"
reference "org.apache.flume.source.DefaultSourceFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.DefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory.logger"
reference "org.apache.flume.interceptor.Interceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.Interceptor" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.interceptor.Interceptor" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.interceptor.Interceptor" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.interceptor.Interceptor" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.interceptor.Interceptor" "org.apache.flume.interceptor.Interceptor.initialize(0)"
contain "org.apache.flume.interceptor.Interceptor" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.Interceptor" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.Interceptor" "org.apache.flume.interceptor.Interceptor.close(0)"
reference "org.apache.flume.interceptor.TimestampInterceptor.1" "org.apache.flume.interceptor.TimestampInterceptor"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType[]"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.BodyTextEventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.BodyTextEventSerializer"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.FlumeEventAvroEventSerializer"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.serialization.EventSerializerType.values(0)" "org.apache.flume.serialization.EventSerializerType.$VALUES"
call "org.apache.flume.serialization.EventSerializerType.values(0)" "org.apache.flume.serialization.EventSerializerType[].clone(0)"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.values(0)"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.valueOf(1)"
reference "org.apache.flume.serialization.EventSerializerType.EventSerializerType(3)" "org.apache.flume.serialization.EventSerializerType.builderClass"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.EventSerializerType(3)"
reference "org.apache.flume.serialization.EventSerializerType.getBuilderClass(0)" "org.apache.flume.serialization.EventSerializerType.builderClass"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.getBuilderClass(0)"
call "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.EventSerializerType(3)"
reference "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.TEXT"
reference "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.HEADER_AND_TEXT"
reference "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.AVRO_EVENT"
reference "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.OTHER"
reference "org.apache.flume.serialization.EventSerializerType.static {...}" "org.apache.flume.serialization.EventSerializerType.$VALUES"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.static {...}"
reference "org.apache.flume.serialization.EventSerializerType.TEXT" "org.apache.flume.serialization.EventSerializerType"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.TEXT"
reference "org.apache.flume.serialization.EventSerializerType.HEADER_AND_TEXT" "org.apache.flume.serialization.EventSerializerType"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.HEADER_AND_TEXT"
reference "org.apache.flume.serialization.EventSerializerType.AVRO_EVENT" "org.apache.flume.serialization.EventSerializerType"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.AVRO_EVENT"
reference "org.apache.flume.serialization.EventSerializerType.OTHER" "org.apache.flume.serialization.EventSerializerType"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.OTHER"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.builderClass"
reference "org.apache.flume.serialization.EventSerializerType.$VALUES" "org.apache.flume.serialization.EventSerializerType[]"
contain "org.apache.flume.serialization.EventSerializerType" "org.apache.flume.serialization.EventSerializerType.$VALUES"
reference "org.apache.flume.source.http.HTTPBadRequestException" "org.apache.flume.FlumeException"
call "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.http.HTTPBadRequestException" "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(1)"
call "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(2)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.source.http.HTTPBadRequestException" "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(2)"
call "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.http.HTTPBadRequestException" "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(1)"
contain "org.apache.flume.source.http.HTTPBadRequestException" "org.apache.flume.source.http.HTTPBadRequestException.serialVersionUID"
reference "org.apache.flume.EventDrivenSource" "org.apache.flume.Source"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.LengthMeasurable"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.avro.file.SeekableInput"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.SeekableResettableInputBridge(1)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.SeekableResettableInputBridge(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.seek(1)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.seek(1)" "org.apache.flume.serialization.ResettableInputStream.seek(1)"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.seek(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.tell(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.tell(0)" "org.apache.flume.serialization.ResettableInputStream.tell(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.tell(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.length(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.length(0)" "org.apache.flume.serialization.LengthMeasurable.length(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.length(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.read(3)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.read(3)" "org.apache.flume.serialization.ResettableInputStream.read(3)"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.read(3)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.close(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.close(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.close(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris" "org.apache.flume.serialization.ResettableInputStream"
contain "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
reference "org.apache.flume.source.SyslogUDPSource.1" "org.jboss.netty.channel.ChannelHandler"
reference "org.apache.flume.source.SyslogUDPSource.1" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource.syslogHandler"
reference "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource"
reference "org.apache.flume.source.SyslogUDPSource.1" "org.jboss.netty.channel.Channels"
reference "org.apache.flume.source.SyslogUDPSource.1.{...}" "org.apache.flume.source.SyslogUDPSource.1.this$0"
reference "org.apache.flume.source.SyslogUDPSource.1.{...}" "org.apache.flume.source.SyslogUDPSource.1.val$handler"
contain "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource.1.{...}"
reference "org.apache.flume.source.SyslogUDPSource.1.getPipeline(0)" "org.apache.flume.source.SyslogUDPSource.1.val$handler"
call "org.apache.flume.source.SyslogUDPSource.1.getPipeline(0)" "org.jboss.netty.channel.Channels.pipeline(1)"
contain "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource.1.getPipeline(0)"
reference "org.apache.flume.source.SyslogUDPSource.1.val$handler" "org.apache.flume.source.SyslogUDPSource.syslogHandler"
contain "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource.1.val$handler"
reference "org.apache.flume.source.SyslogUDPSource.1.this$0" "org.apache.flume.source.SyslogUDPSource"
contain "org.apache.flume.source.SyslogUDPSource.1" "org.apache.flume.source.SyslogUDPSource.1.this$0"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.RegexExtractorInterceptorPassThroughSerializer(0)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.serialize(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.configure(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.configure(1)"
reference "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleState[]"
reference "org.apache.flume.lifecycle.LifecycleController" "org.slf4j.Logger"
reference "org.apache.flume.lifecycle.LifecycleController" "org.slf4j.LoggerFactory"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.LifecycleController(0)"
call "org.apache.flume.lifecycle.LifecycleController.waitForState(2)" "org.apache.flume.lifecycle.LifecycleController.waitForState(3)"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.waitForState(2)"
call "org.apache.flume.lifecycle.LifecycleController.waitForState(3)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.waitForState(3)"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.apache.flume.lifecycle.LifecycleController.logger"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.slf4j.Logger.isDebugEnabled(0)"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.apache.flume.lifecycle.LifecycleState.equals(1)"
call "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)" "org.slf4j.Logger.debug(3)"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.lifecycle.LifecycleController.stopAll(1)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.lifecycle.LifecycleController.stopAll(1)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.stopAll(1)"
call "org.apache.flume.lifecycle.LifecycleController.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.lifecycle.LifecycleController.static {...}" "org.apache.flume.lifecycle.LifecycleController.logger"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.static {...}"
reference "org.apache.flume.lifecycle.LifecycleController.logger" "org.slf4j.Logger"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.logger"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.shortestSleepDuration"
contain "org.apache.flume.lifecycle.LifecycleController" "org.apache.flume.lifecycle.LifecycleController.maxNumberOfChecks"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "byte[]"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "com.google.common.base.Charsets"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.Source"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.NetcatSocketHandler(1)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.maxLineLength"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.NetcatSocketHandler(1)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.access$600(0)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.socketChannel"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.maxLineLength"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.fill(2)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.slf4j.Logger.warn(1)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.event.EventBuilder.withBody(1)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.source"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.Source.getChannelProcessor(0)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.ackEveryEvent"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.source.NetcatSource.access$600(0)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)" "org.apache.flume.ChannelException.getMessage(0)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.fill(2)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup"
call "org.apache.flume.source.NetcatSource.NetcatSocketHandler.fill(2)" "org.apache.flume.CounterGroup.addAndGet(2)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.fill(2)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$702(2)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$802(2)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$902(2)"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$1002(2)"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.source" "org.apache.flume.Source"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.source"
reference "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.socketChannel"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.ackEveryEvent"
contain "org.apache.flume.source.NetcatSource.NetcatSocketHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.maxLineLength"
reference "org.apache.flume.serialization.Resettable" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.serialization.Resettable" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.Resettable" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.Resettable" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.Resettable" "org.apache.flume.serialization.Resettable.mark(0)"
contain "org.apache.flume.serialization.Resettable" "org.apache.flume.serialization.Resettable.reset(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.SystemClock"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.StderrReader"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.slf4j.Logger"
reference "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.process"
call "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.SystemClock.SystemClock(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.systemClock"
call "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.SystemClock.currentTimeMillis(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.lastPushToChannel"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.command"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.channelProcessor"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.restartThrottle"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.bufferCount"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.batchTimeout"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.restart"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.logStderr"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.charset"
reference "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)" "org.apache.flume.source.ExecSource.ExecRunnable.shell"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.timedFlushService"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.shell"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.command"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.formulateShellCommand(2)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.process"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.charset"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.logStderr"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.StderrReader.StderrReader(2)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.StderrReader.setName(1)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.StderrReader.setDaemon(1)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.StderrReader.start(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.1.{...}"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.batchTimeout"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.future"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.bufferCount"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.access$200(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.restart"
reference "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.restartThrottle"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.source.ExecSource.ExecRunnable.run(0)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.run(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.source.ExecSource.ExecRunnable.channelProcessor"
call "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter"
call "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.source.ExecSource.ExecRunnable.systemClock"
call "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.SystemClock.currentTimeMillis(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)" "org.apache.flume.source.ExecSource.ExecRunnable.lastPushToChannel"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)" "org.apache.flume.source.ExecSource.ExecRunnable.systemClock"
call "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)" "org.apache.flume.SystemClock.currentTimeMillis(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)" "org.apache.flume.source.ExecSource.ExecRunnable.lastPushToChannel"
reference "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)" "org.apache.flume.source.ExecSource.ExecRunnable.batchTimeout"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.formulateShellCommand(2)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)" "org.apache.flume.source.ExecSource.ExecRunnable.process"
reference "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)" "org.apache.flume.source.ExecSource.ExecRunnable.future"
reference "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)" "org.apache.flume.source.ExecSource.ExecRunnable.timedFlushService"
call "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)" "org.apache.flume.source.ExecSource.access$200(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.setRestart(1)" "org.apache.flume.source.ExecSource.ExecRunnable.restart"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.setRestart(1)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.access$000(1)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.access$100(2)"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.shell"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.command"
reference "org.apache.flume.source.ExecSource.ExecRunnable.channelProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.channelProcessor"
reference "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.restart"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.restartThrottle"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.bufferCount"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.batchTimeout"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.logStderr"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.charset"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.process"
reference "org.apache.flume.source.ExecSource.ExecRunnable.systemClock" "org.apache.flume.SystemClock"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.systemClock"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.lastPushToChannel"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.timedFlushService"
contain "org.apache.flume.source.ExecSource.ExecRunnable" "org.apache.flume.source.ExecSource.ExecRunnable.future"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.NetcatSourceConfigurationConstants(0)"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_HOSTNAME"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_PORT"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_ACKEVENT"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_MAX_LINE_LENGTH"
contain "org.apache.flume.source.NetcatSourceConfigurationConstants" "org.apache.flume.source.NetcatSourceConfigurationConstants.DEFAULT_MAX_LINE_LENGTH"
reference "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounterMBean"
reference "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SOURCE"
reference "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)" "org.apache.flume.instrumentation.SourceCounter.ATTRIBUTES"
call "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
call "org.apache.flume.instrumentation.SourceCounter.getEventReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getEventReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)" "org.apache.flume.instrumentation.SourceCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.instrumentation.SourceCounter.getEventAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getEventAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)" "org.apache.flume.instrumentation.SourceCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
call "org.apache.flume.instrumentation.SourceCounter.getAppendReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getAppendReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.getAppendAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getAppendAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.getAppendBatchReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getAppendBatchReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.getAppendBatchAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getAppendBatchAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)" "org.apache.flume.instrumentation.SourceCounter.increment(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.getOpenConnectionCount(0)" "org.apache.flume.instrumentation.SourceCounter.get(1)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.getOpenConnectionCount(0)"
call "org.apache.flume.instrumentation.SourceCounter.setOpenConnectionCount(1)" "org.apache.flume.instrumentation.SourceCounter.set(2)"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.setOpenConnectionCount(1)"
reference "org.apache.flume.instrumentation.SourceCounter.static {...}" "org.apache.flume.instrumentation.SourceCounter.ATTRIBUTES"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.static {...}"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_EVENTS_RECEIVED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_EVENTS_ACCEPTED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_RECEIVED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_ACCEPTED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_BATCH_RECEIVED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_BATCH_ACCEPTED"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.COUNTER_OPEN_CONNECTION_COUNT"
contain "org.apache.flume.instrumentation.SourceCounter" "org.apache.flume.instrumentation.SourceCounter.ATTRIBUTES"
reference "org.apache.flume.sink.RollingFileSink.1" "org.apache.flume.sink.RollingFileSink"
reference "org.apache.flume.sink.RollingFileSink.1" "org.apache.flume.formatter.output.PathManager"
reference "org.apache.flume.sink.RollingFileSink.1" "org.slf4j.Logger"
reference "org.apache.flume.sink.RollingFileSink.1.{...}" "org.apache.flume.sink.RollingFileSink.1.this$0"
contain "org.apache.flume.sink.RollingFileSink.1" "org.apache.flume.sink.RollingFileSink.1.{...}"
call "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.apache.flume.sink.RollingFileSink.access$100(0)"
reference "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.apache.flume.sink.RollingFileSink.1.this$0"
call "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.apache.flume.sink.RollingFileSink.access$000(1)"
call "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)"
call "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.RollingFileSink.1.run(0)" "org.apache.flume.sink.RollingFileSink.access$202(2)"
contain "org.apache.flume.sink.RollingFileSink.1" "org.apache.flume.sink.RollingFileSink.1.run(0)"
reference "org.apache.flume.sink.RollingFileSink.1.this$0" "org.apache.flume.sink.RollingFileSink"
contain "org.apache.flume.sink.RollingFileSink.1" "org.apache.flume.sink.RollingFileSink.1.this$0"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.1" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer"
reference "org.apache.flume.source.http.HTTPSource.1" "org.apache.flume.source.http.HTTPSource"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.avro.AvroRuntimeException"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.Builder"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.avro.Schema.Parser"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.avro.specific.SpecificRecordBase"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.avro.specific.SpecificRecord"
reference "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.avro.Schema"
call "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(0)" "org.apache.avro.specific.SpecificRecordBase.SpecificRecordBase(0)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(1)" "org.apache.avro.specific.SpecificRecordBase.SpecificRecordBase(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(1)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(1)"
reference "org.apache.flume.serialization.TransferStateFileMeta.getSchema(0)" "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.getSchema(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.get(1)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.get(1)" "org.apache.avro.AvroRuntimeException.AvroRuntimeException(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.get(1)"
reference "org.apache.flume.serialization.TransferStateFileMeta.put(2)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.put(2)" "org.apache.avro.AvroRuntimeException.AvroRuntimeException(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.put(2)"
reference "org.apache.flume.serialization.TransferStateFileMeta.getOffset(0)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.getOffset(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.setOffset(1)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.setOffset(1)"
call "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(2)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(1)"
call "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(1)"
call "org.apache.flume.serialization.TransferStateFileMeta.static {...}" "org.apache.avro.Schema.Parser.Parser(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.static {...}" "org.apache.avro.Schema.Parser.parse(1)"
reference "org.apache.flume.serialization.TransferStateFileMeta.static {...}" "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.static {...}"
reference "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$" "org.apache.avro.Schema"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta" "org.apache.flume.serialization.TransferStateFileMeta.__PARANAMER_DATA"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.Context"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.slf4j.Logger"
reference "org.apache.flume.source.SequenceGeneratorSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)" "org.apache.flume.source.SequenceGeneratorSource.eventsSent"
reference "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)" "org.apache.flume.source.SequenceGeneratorSource.sequence"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)"
call "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.source.SequenceGeneratorSource.batchSize"
reference "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.source.SequenceGeneratorSource.batchArrayList"
call "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.Context.getLong(2)"
reference "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.source.SequenceGeneratorSource.totalEvents"
reference "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
call "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.source.SequenceGeneratorSource.getName(0)"
call "org.apache.flume.source.SequenceGeneratorSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.configure(1)"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.PollableSource.Status.READY"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.batchSize"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.eventsSent"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.totalEvents"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.getChannelProcessor(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.sequence"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.batchArrayList"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
reference "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.logger"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.apache.flume.source.SequenceGeneratorSource.getName(0)"
call "org.apache.flume.source.SequenceGeneratorSource.process(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.process(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.apache.flume.source.SequenceGeneratorSource.logger"
call "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
call "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.SequenceGeneratorSource.start(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.start(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.apache.flume.source.SequenceGeneratorSource.logger"
call "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
reference "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
call "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.apache.flume.source.SequenceGeneratorSource.getName(0)"
call "org.apache.flume.source.SequenceGeneratorSource.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.stop(0)"
call "org.apache.flume.source.SequenceGeneratorSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SequenceGeneratorSource.static {...}" "org.apache.flume.source.SequenceGeneratorSource.logger"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.static {...}"
reference "org.apache.flume.source.SequenceGeneratorSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.logger"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.sequence"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.batchSize"
reference "org.apache.flume.source.SequenceGeneratorSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.batchArrayList"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.totalEvents"
contain "org.apache.flume.source.SequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource.eventsSent"
reference "org.apache.flume.SourceRunner" "org.apache.flume.PollableSource"
reference "org.apache.flume.SourceRunner" "org.apache.flume.source.PollableSourceRunner"
reference "org.apache.flume.SourceRunner" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.SourceRunner" "org.apache.flume.source.EventDrivenSourceRunner"
reference "org.apache.flume.SourceRunner" "org.apache.flume.lifecycle.LifecycleAware"
contain "org.apache.flume.SourceRunner" "org.apache.flume.SourceRunner.SourceRunner(0)"
call "org.apache.flume.SourceRunner.forSource(1)" "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)"
call "org.apache.flume.SourceRunner.forSource(1)" "org.apache.flume.source.PollableSourceRunner.setSource(1)"
call "org.apache.flume.SourceRunner.forSource(1)" "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)"
call "org.apache.flume.SourceRunner.forSource(1)" "org.apache.flume.source.EventDrivenSourceRunner.setSource(1)"
contain "org.apache.flume.SourceRunner" "org.apache.flume.SourceRunner.forSource(1)"
reference "org.apache.flume.SourceRunner.getSource(0)" "org.apache.flume.SourceRunner.source"
contain "org.apache.flume.SourceRunner" "org.apache.flume.SourceRunner.getSource(0)"
reference "org.apache.flume.SourceRunner.setSource(1)" "org.apache.flume.SourceRunner.source"
contain "org.apache.flume.SourceRunner" "org.apache.flume.SourceRunner.setSource(1)"
reference "org.apache.flume.SourceRunner.source" "org.apache.flume.Source"
contain "org.apache.flume.SourceRunner" "org.apache.flume.SourceRunner.source"
reference "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounterMBean"
reference "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL"
reference "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)" "org.apache.flume.instrumentation.ChannelCounter.ATTRIBUTES"
call "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)"
call "org.apache.flume.instrumentation.ChannelCounter.getChannelSize(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getChannelSize(0)"
call "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)" "org.apache.flume.instrumentation.ChannelCounter.set(2)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.instrumentation.ChannelCounter.getEventPutAttemptCount(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getEventPutAttemptCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)" "org.apache.flume.instrumentation.ChannelCounter.increment(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.getEventTakeAttemptCount(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getEventTakeAttemptCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)" "org.apache.flume.instrumentation.ChannelCounter.increment(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.getEventPutSuccessCount(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getEventPutSuccessCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)" "org.apache.flume.instrumentation.ChannelCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)"
call "org.apache.flume.instrumentation.ChannelCounter.getEventTakeSuccessCount(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getEventTakeSuccessCount(0)"
call "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)" "org.apache.flume.instrumentation.ChannelCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)"
call "org.apache.flume.instrumentation.ChannelCounter.setChannelCapacity(1)" "org.apache.flume.instrumentation.ChannelCounter.set(2)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.setChannelCapacity(1)"
call "org.apache.flume.instrumentation.ChannelCounter.getChannelCapacity(0)" "org.apache.flume.instrumentation.ChannelCounter.get(1)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getChannelCapacity(0)"
call "org.apache.flume.instrumentation.ChannelCounter.getChannelFillPercentage(0)" "org.apache.flume.instrumentation.ChannelCounter.getChannelCapacity(0)"
call "org.apache.flume.instrumentation.ChannelCounter.getChannelFillPercentage(0)" "org.apache.flume.instrumentation.ChannelCounter.getChannelSize(0)"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.getChannelFillPercentage(0)"
reference "org.apache.flume.instrumentation.ChannelCounter.static {...}" "org.apache.flume.instrumentation.ChannelCounter.ATTRIBUTES"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.static {...}"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_CHANNEL_SIZE"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_PUT_ATTEMPT"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_TAKE_ATTEMPT"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_PUT_SUCCESS"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_TAKE_SUCCESS"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.COUNTER_CHANNEL_CAPACITY"
contain "org.apache.flume.instrumentation.ChannelCounter" "org.apache.flume.instrumentation.ChannelCounter.ATTRIBUTES"
reference "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.Constants(0)"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE_DFLT"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP_DFLT"
reference "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST_HEADER"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE_DFLT"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP_DFLT"
contain "org.apache.flume.interceptor.HostInterceptor.Constants" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST_HEADER"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.FlumeException"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.Channel"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.AbstractChannelSelector"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.Event"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.Context"
reference "org.apache.flume.channel.MultiplexingChannelSelector" "org.slf4j.LoggerFactory"
call "org.apache.flume.channel.MultiplexingChannelSelector.MultiplexingChannelSelector(0)" "org.apache.flume.channel.AbstractChannelSelector.AbstractChannelSelector(0)"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.MultiplexingChannelSelector(0)"
call "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.headerName"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.defaultChannels"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.channelMapping"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.headerName"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.optionalChannels"
reference "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)" "org.apache.flume.channel.MultiplexingChannelSelector.EMPTY_LIST"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.headerName"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.getChannelNameMap(0)"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.getChannelListFromNames(2)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.defaultChannels"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.channelMapping"
call "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.optionalChannels"
reference "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)" "org.apache.flume.channel.MultiplexingChannelSelector.EMPTY_LIST"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)"
call "org.apache.flume.channel.MultiplexingChannelSelector.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.MultiplexingChannelSelector.static {...}" "org.apache.flume.channel.MultiplexingChannelSelector.LOG"
reference "org.apache.flume.channel.MultiplexingChannelSelector.static {...}" "org.apache.flume.channel.MultiplexingChannelSelector.EMPTY_LIST"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.static {...}"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_MULTIPLEX_HEADER_NAME"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.DEFAULT_MULTIPLEX_HEADER"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_PREFIX_MAPPING"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_DEFAULT_CHANNEL"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_PREFIX_OPTIONAL"
reference "org.apache.flume.channel.MultiplexingChannelSelector.LOG" "org.slf4j.Logger"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.LOG"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.EMPTY_LIST"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.headerName"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.channelMapping"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.optionalChannels"
contain "org.apache.flume.channel.MultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector.defaultChannels"
reference "org.apache.flume.serialization.PositionTracker" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.PositionTracker" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.PositionTracker" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.PositionTracker" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.PositionTracker" "org.apache.flume.serialization.PositionTracker.storePosition(1)"
contain "org.apache.flume.serialization.PositionTracker" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
contain "org.apache.flume.serialization.PositionTracker" "org.apache.flume.serialization.PositionTracker.getTarget(0)"
contain "org.apache.flume.serialization.PositionTracker" "org.apache.flume.serialization.PositionTracker.close(0)"
reference "org.apache.flume.serialization.LineDeserializer.Builder" "org.apache.flume.serialization.LineDeserializer"
reference "org.apache.flume.serialization.LineDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.LineDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer"
contain "org.apache.flume.serialization.LineDeserializer.Builder" "org.apache.flume.serialization.LineDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.LineDeserializer.Builder.build(2)" "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
contain "org.apache.flume.serialization.LineDeserializer.Builder" "org.apache.flume.serialization.LineDeserializer.Builder.build(2)"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSourceConfigurationConstants"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSourceHandler"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.Context"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.Server"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.Connector"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.security.SslSocketConnector"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.nio.SelectChannelConnector"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.servlet.Context"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.servlet.ServletHolder"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.http.HTTPSource" "org.mortbay.jetty.Connector[]"
reference "org.apache.flume.source.http.HTTPSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.http.HTTPSource" "org.slf4j.Logger"
reference "org.apache.flume.source.http.HTTPSource" "com.google.common.base.Throwables"
reference "org.apache.flume.source.http.HTTPSource" "org.apache.flume.tools.HTTPServerConstraintUtil"
reference "org.apache.flume.source.http.HTTPSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.http.HTTPSource.HTTPSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.HTTPSource(0)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.sslEnabled"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.port"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.host"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.LOG"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.keyStorePath"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.keyStorePassword"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.handler"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.Context.Context(1)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSourceHandler.configure(1)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "com.google.common.base.Throwables.propagate(1)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.slf4j.Logger.error(1)"
reference "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.sourceCounter"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.source.http.HTTPSource.getName(0)"
call "org.apache.flume.source.http.HTTPSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.configure(1)"
reference "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)" "org.apache.flume.source.http.HTTPSource.host"
call "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)" "org.apache.flume.source.http.HTTPSource.port"
call "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)" "com.google.common.base.Preconditions.checkNotNull(2)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.srv"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.getName(0)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Server.Server(0)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.sslEnabled"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.security.SslSocketConnector.SslSocketConnector(0)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.keyStorePath"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.security.SslSocketConnector.setKeystore(1)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.keyStorePassword"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.security.SslSocketConnector.setKeyPassword(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.security.SslSocketConnector.setReuseAddress(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.nio.SelectChannelConnector.SelectChannelConnector(0)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.nio.SelectChannelConnector.setReuseAddress(1)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.host"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Connector.setHost(1)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.port"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Connector.setPort(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Server.setConnectors(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.servlet.Context.Context(3)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.servlet.ServletHolder.ServletHolder(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.servlet.Context.addServlet(2)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Server.start(0)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Server.getHandler(0)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "com.google.common.base.Preconditions.checkArgument(1)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.LOG"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "com.google.common.base.Throwables.propagate(1)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.mortbay.jetty.Server.isRunning(0)"
reference "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.http.HTTPSource.sourceCounter"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.http.HTTPSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.start(0)"
reference "org.apache.flume.source.http.HTTPSource.stop(0)" "org.apache.flume.source.http.HTTPSource.srv"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.mortbay.jetty.Server.stop(0)"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.mortbay.jetty.Server.join(0)"
reference "org.apache.flume.source.http.HTTPSource.stop(0)" "org.apache.flume.source.http.HTTPSource.LOG"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.http.HTTPSource.stop(0)" "org.apache.flume.source.http.HTTPSource.sourceCounter"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.apache.flume.source.http.HTTPSource.getName(0)"
call "org.apache.flume.source.http.HTTPSource.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.stop(0)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.access$100(1)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.access$200(0)"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.access$300(1)"
call "org.apache.flume.source.http.HTTPSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.http.HTTPSource.static {...}" "org.apache.flume.source.http.HTTPSource.LOG"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.static {...}"
reference "org.apache.flume.source.http.HTTPSource.LOG" "org.slf4j.Logger"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.LOG"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.port"
reference "org.apache.flume.source.http.HTTPSource.srv" "org.mortbay.jetty.Server"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.srv"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.host"
reference "org.apache.flume.source.http.HTTPSource.handler" "org.apache.flume.source.http.HTTPSourceHandler"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.handler"
reference "org.apache.flume.source.http.HTTPSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.sourceCounter"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.keyStorePath"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.keyStorePassword"
contain "org.apache.flume.source.http.HTTPSource" "org.apache.flume.source.http.HTTPSource.sslEnabled"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.serialization.EventSerDe.Builder"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventSerDe" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleSupervisor"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleState"
call "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}" "org.apache.flume.lifecycle.LifecycleState.values(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}" "org.apache.flume.lifecycle.LifecycleSupervisor.1.$SwitchMap$org$apache$flume$lifecycle$LifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}" "org.apache.flume.lifecycle.LifecycleState.ordinal(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.1.$SwitchMap$org$apache$flume$lifecycle$LifecycleState" "int[]"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleSupervisor.1.$SwitchMap$org$apache$flume$lifecycle$LifecycleState"
reference "org.apache.flume.ChannelSelector" "org.apache.flume.NamedComponent"
reference "org.apache.flume.ChannelSelector" "org.apache.flume.conf.Configurable"
contain "org.apache.flume.ChannelSelector" "org.apache.flume.ChannelSelector.setChannels(1)"
contain "org.apache.flume.ChannelSelector" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
contain "org.apache.flume.ChannelSelector" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.ChannelSelector" "org.apache.flume.ChannelSelector.getAllChannels(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.slf4j.Logger"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.MonitorRunnable(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.access$200(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.lifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.supervisoree"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.debug(3)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.firstSeen"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeen"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.discard"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeenState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleState.equals(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.failures"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.1.$SwitchMap$org$apache$flume$lifecycle$LifecycleState"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleState.ordinal(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleAware.start(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.isValid(2)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.error(3)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.monitorService"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.lifecycleAware" "org.apache.flume.lifecycle.LifecycleAware"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.lifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.supervisoree"
reference "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.State"
reference "org.apache.flume.channel.BasicTransactionSemantics" "com.google.common.base.Preconditions"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doBegin(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doPut(1)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doTake(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doCommit(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doRollback(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.doClose(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
reference "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "com.google.common.base.Preconditions.checkState(3)"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.doPut(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.put(1)" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.put(1)"
reference "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
call "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "com.google.common.base.Preconditions.checkState(3)"
call "org.apache.flume.channel.BasicTransactionSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.doTake(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.take(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.getState(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.getState(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
call "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.doBegin(0)"
call "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.ChannelException.ChannelException(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.begin(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.begin(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
call "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "com.google.common.base.Preconditions.checkState(3)"
call "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.doCommit(0)"
call "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.ChannelException.ChannelException(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.commit(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.commit(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
call "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "com.google.common.base.Preconditions.checkState(3)"
reference "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
call "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.channel.BasicTransactionSemantics.doRollback(0)"
call "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
call "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
call "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
reference "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
call "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "com.google.common.base.Preconditions.checkState(3)"
reference "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED"
call "org.apache.flume.channel.BasicTransactionSemantics.close(0)" "org.apache.flume.channel.BasicTransactionSemantics.doClose(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.close(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.toString(0)" "org.apache.flume.channel.BasicTransactionSemantics.state"
reference "org.apache.flume.channel.BasicTransactionSemantics.toString(0)" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.toString(0)"
reference "org.apache.flume.channel.BasicTransactionSemantics.state" "org.apache.flume.channel.BasicTransactionSemantics.State"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.state"
contain "org.apache.flume.channel.BasicTransactionSemantics" "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.charset"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.initialValue(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.charset"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.initialValue(0)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.charset"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.commons.lang.StringUtils"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "com.google.common.base.Preconditions"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "com.google.common.collect.Lists"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.slf4j.Logger"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "com.google.common.base.Throwables"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.RegexExtractorInterceptorPassThroughSerializer(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.Builder(0)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)" "org.apache.commons.lang.StringUtils.isEmpty(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.regex"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.commons.lang.StringUtils.isEmpty(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.Context.Context(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "com.google.common.collect.Lists.newArrayListWithCapacity(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.serializerList"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.NameAndSerializer(2)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer.configure(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.access$200(0)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)" "com.google.common.base.Throwables.propagate(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.regex"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.serializerList"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(3)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.regex"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.serializerList"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer"
reference "org.apache.flume.interceptor.StaticInterceptor.1" "org.apache.flume.interceptor.StaticInterceptor"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus[]"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.values(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.$VALUES"
call "org.apache.flume.source.SyslogUtils.SyslogStatus.values(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus[].clone(0)"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.values(0)"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.valueOf(1)"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.SyslogStatus(3)" "org.apache.flume.source.SyslogUtils.SyslogStatus.syslogStatus"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.SyslogStatus(3)"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.syslogStatus"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}" "org.apache.flume.source.SyslogUtils.SyslogStatus.SyslogStatus(3)"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}" "org.apache.flume.source.SyslogUtils.SyslogStatus.OTHER"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}" "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}" "org.apache.flume.source.SyslogUtils.SyslogStatus.$VALUES"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.OTHER" "org.apache.flume.source.SyslogUtils.SyslogStatus"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.OTHER"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID" "org.apache.flume.source.SyslogUtils.SyslogStatus"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE" "org.apache.flume.source.SyslogUtils.SyslogStatus"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.syslogStatus"
reference "org.apache.flume.source.SyslogUtils.SyslogStatus.$VALUES" "org.apache.flume.source.SyslogUtils.SyslogStatus[]"
contain "org.apache.flume.source.SyslogUtils.SyslogStatus" "org.apache.flume.source.SyslogUtils.SyslogStatus.$VALUES"
reference "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState[]"
reference "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction"
reference "org.apache.flume.Transaction.TransactionState.values(0)" "org.apache.flume.Transaction.TransactionState.$VALUES"
call "org.apache.flume.Transaction.TransactionState.values(0)" "org.apache.flume.Transaction.TransactionState[].clone(0)"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.values(0)"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.valueOf(1)"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.TransactionState(2)"
call "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.TransactionState(2)"
reference "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.Started"
reference "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.Committed"
reference "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.RolledBack"
reference "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.Closed"
reference "org.apache.flume.Transaction.TransactionState.static {...}" "org.apache.flume.Transaction.TransactionState.$VALUES"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.static {...}"
reference "org.apache.flume.Transaction.TransactionState.Started" "org.apache.flume.Transaction.TransactionState"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.Started"
reference "org.apache.flume.Transaction.TransactionState.Committed" "org.apache.flume.Transaction.TransactionState"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.Committed"
reference "org.apache.flume.Transaction.TransactionState.RolledBack" "org.apache.flume.Transaction.TransactionState"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.RolledBack"
reference "org.apache.flume.Transaction.TransactionState.Closed" "org.apache.flume.Transaction.TransactionState"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.Closed"
reference "org.apache.flume.Transaction.TransactionState.$VALUES" "org.apache.flume.Transaction.TransactionState[]"
contain "org.apache.flume.Transaction.TransactionState" "org.apache.flume.Transaction.TransactionState.$VALUES"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.handler.codec.compression.ZlibEncoder"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.handler.codec.compression.ZlibDecoder"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.handler.ssl.SslHandler"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.channel.ChannelPipeline"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.jboss.netty.channel.Channels"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.slf4j.Logger"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.this$0"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableCompression"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableSsl"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystore"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystorePassword"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystoreType"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableIpFilter"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.patternRuleConfigDefinition"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystoreType"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystore"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystorePassword"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getAlgorithm(0)"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getAlgorithm(0)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.channel.Channels.pipeline(0)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableCompression"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.codec.compression.ZlibEncoder.ZlibEncoder(1)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.channel.ChannelPipeline.addFirst(2)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.codec.compression.ZlibDecoder.ZlibDecoder(0)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableSsl"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.ssl.SslHandler.SslHandler(1)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableIpFilter"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.access$100(0)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.patternRuleConfigDefinition"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.IpFilterRuleHandler(0)"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.this$0"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.apache.flume.source.AvroSource.access$200(1)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.addAll(1)"
call "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.size(0)"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableCompression"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableSsl"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystore"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystorePassword"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystoreType"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableIpFilter"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.patternRuleConfigDefinition"
reference "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.this$0" "org.apache.flume.source.AvroSource"
contain "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.this$0"
reference "org.apache.flume.serialization.TransferStateFileMeta.1" "org.apache.flume.serialization.TransferStateFileMeta"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.HTTPSourceConfigurationConstants(0)"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_PORT"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_HANDLER"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_HANDLER_PREFIX"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_BIND"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.DEFAULT_BIND"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.DEFAULT_HANDLER"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_KEYSTORE"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_KEYSTORE_PASSWORD"
contain "org.apache.flume.source.http.HTTPSourceConfigurationConstants" "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_ENABLED"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.Supervisoree(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.toString(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.Supervisoree(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.serialization.EventDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer"
contain "org.apache.flume.serialization.EventDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer.Builder.build(2)"
reference "org.apache.flume.source.ThriftSource.1" "org.apache.flume.source.ThriftSource"
reference "org.apache.flume.source.ThriftSource.1" "org.apache.thrift.server.TServer"
reference "org.apache.flume.source.ThriftSource.1.{...}" "org.apache.flume.source.ThriftSource.1.this$0"
contain "org.apache.flume.source.ThriftSource.1" "org.apache.flume.source.ThriftSource.1.{...}"
reference "org.apache.flume.source.ThriftSource.1.run(0)" "org.apache.flume.source.ThriftSource.1.this$0"
call "org.apache.flume.source.ThriftSource.1.run(0)" "org.apache.flume.source.ThriftSource.access$100(1)"
call "org.apache.flume.source.ThriftSource.1.run(0)" "org.apache.thrift.server.TServer.serve(0)"
contain "org.apache.flume.source.ThriftSource.1" "org.apache.flume.source.ThriftSource.1.run(0)"
reference "org.apache.flume.source.ThriftSource.1.this$0" "org.apache.flume.source.ThriftSource"
contain "org.apache.flume.source.ThriftSource.1" "org.apache.flume.source.ThriftSource.1.this$0"
contain "org.apache.flume.ChannelException" "org.apache.flume.ChannelException.ChannelException(1)"
contain "org.apache.flume.ChannelException" "org.apache.flume.ChannelException.ChannelException(1)"
contain "org.apache.flume.ChannelException" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.ChannelException" "org.apache.flume.ChannelException.serialVersionUID"
contain "org.apache.flume.tools.PlatformDetect" "org.apache.flume.tools.PlatformDetect.PlatformDetect(0)"
contain "org.apache.flume.tools.PlatformDetect" "org.apache.flume.tools.PlatformDetect.isWindows(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type[]"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.values(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.$VALUES"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.values(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type[].clone(0)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.values(0)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.valueOf(1)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.Type(2)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.Type(2)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SOURCE"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL_PROCESSOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK_PROCESSOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.INTERCEPTOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SERIALIZER"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.OTHER"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.$VALUES"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SOURCE" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SOURCE"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL_PROCESSOR" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL_PROCESSOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK_PROCESSOR" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK_PROCESSOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.INTERCEPTOR" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.INTERCEPTOR"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SERIALIZER" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SERIALIZER"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.OTHER" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.OTHER"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.$VALUES" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type[]"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup.Type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.$VALUES"
reference "org.apache.flume.serialization.BodyTextEventSerializer.1" "org.apache.flume.serialization.BodyTextEventSerializer"
reference "org.apache.flume.SinkFactory" "org.apache.flume.FlumeException"
contain "org.apache.flume.SinkFactory" "org.apache.flume.SinkFactory.create(2)"
contain "org.apache.flume.SinkFactory" "org.apache.flume.SinkFactory.getClass(1)"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.AvroSource" "org.apache.avro.ipc.specific.SpecificResponder"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.source.avro.AvroSourceProtocol"
reference "org.apache.flume.source.AvroSource" "org.apache.avro.ipc.NettyServer"
reference "org.apache.flume.source.AvroSource" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory"
reference "org.apache.flume.source.AvroSource" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.source.AvroSource" "org.apache.avro.ipc.NettyTransceiver"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.source.avro.AvroFlumeEvent"
reference "org.apache.flume.source.AvroSource" "org.jboss.netty.handler.ipfilter.PatternRule"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.Context"
reference "org.apache.flume.source.AvroSource" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.Event"
reference "org.apache.flume.source.AvroSource" "org.slf4j.Logger"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.AvroSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.AvroSource" "org.apache.avro.ipc.Server"
reference "org.apache.flume.source.AvroSource" "com.google.common.base.Throwables"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.AvroSource" "org.apache.flume.source.avro.Status"
reference "org.apache.flume.source.AvroSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.AvroSource.AvroSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.AvroSource.AvroSource(0)" "org.apache.flume.source.AvroSource.enableSsl"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.AvroSource(0)"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.port"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.bindAddress"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.compressionType"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.maxThreads"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.configure(1)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.enableSsl"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.keystore"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.keystorePassword"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.keystoreType"
call "org.apache.flume.source.AvroSource.configure(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.FlumeException.FlumeException(2)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.enableIpFilter"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.patternRuleConfigDefinition"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.rules"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.generateRule(1)"
reference "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.sourceCounter"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.source.AvroSource.getName(0)"
call "org.apache.flume.source.AvroSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.configure(1)"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.start(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(2)"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.bindAddress"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.port"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.avro.ipc.NettyServer.NettyServer(5)"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.server"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.connectionCountUpdater"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.avro.ipc.Server.start(0)"
reference "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.sourceCounter"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.1.{...}"
call "org.apache.flume.source.AvroSource.start(0)" "org.apache.flume.source.AvroSource.getName(0)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)" "org.apache.flume.source.AvroSource.maxThreads"
call "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
call "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.NioServerSocketChannelFactory(2)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.compressionType"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.enableSsl"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.enableIpFilter"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.keystore"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.keystorePassword"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.keystoreType"
reference "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.patternRuleConfigDefinition"
call "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)"
call "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)" "org.apache.flume.source.AvroSource.2.{...}"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)"
reference "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AvroSource.getName(0)"
call "org.apache.flume.source.AvroSource.stop(0)" "org.slf4j.Logger.info(3)"
reference "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AvroSource.server"
call "org.apache.flume.source.AvroSource.stop(0)" "org.apache.avro.ipc.Server.close(0)"
call "org.apache.flume.source.AvroSource.stop(0)" "org.apache.avro.ipc.Server.join(0)"
call "org.apache.flume.source.AvroSource.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AvroSource.sourceCounter"
call "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
reference "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AvroSource.connectionCountUpdater"
call "org.apache.flume.source.AvroSource.stop(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.AvroSource.stop(0)" "com.google.common.base.Throwables.propagate(1)"
call "org.apache.flume.source.AvroSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.stop(0)"
call "org.apache.flume.source.AvroSource.toString(0)" "org.apache.flume.source.AvroSource.getName(0)"
reference "org.apache.flume.source.AvroSource.toString(0)" "org.apache.flume.source.AvroSource.bindAddress"
reference "org.apache.flume.source.AvroSource.toString(0)" "org.apache.flume.source.AvroSource.port"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.toString(0)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.toStringMap(1)"
reference "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.AvroSource.getName(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.slf4j.Logger.debug(3)"
reference "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.AvroSource.sourceCounter"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.avro.AvroFlumeEvent.getBody(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.avro.AvroFlumeEvent.getHeaders(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.AvroSource.toStringMap(1)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.AvroSource.getChannelProcessor(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.source.AvroSource.append(1)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.avro.Status.FAILED"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)"
call "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
reference "org.apache.flume.source.AvroSource.append(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.append(1)"
reference "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.AvroSource.getName(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.slf4j.Logger.debug(3)"
reference "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.AvroSource.sourceCounter"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.avro.AvroFlumeEvent.getBody(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.avro.AvroFlumeEvent.getHeaders(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.AvroSource.toStringMap(1)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.AvroSource.getChannelProcessor(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.avro.Status.FAILED"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
reference "org.apache.flume.source.AvroSource.appendBatch(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.appendBatch(1)"
call "org.apache.flume.source.AvroSource.generateRule(1)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.source.AvroSource.generateRule(1)" "org.apache.flume.source.AvroSource.logger"
call "org.apache.flume.source.AvroSource.generateRule(1)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.AvroSource.generateRule(1)" "org.jboss.netty.handler.ipfilter.PatternRule.PatternRule(2)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.generateRule(1)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.access$000(1)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.access$100(0)"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.access$200(1)"
call "org.apache.flume.source.AvroSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.AvroSource.static {...}" "org.apache.flume.source.AvroSource.logger"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.static {...}"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.THREADS"
reference "org.apache.flume.source.AvroSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.logger"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.PORT_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.BIND_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.COMPRESSION_TYPE"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.SSL_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.IP_FILTER_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.IP_FILTER_RULES_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.KEYSTORE_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.KEYSTORE_PASSWORD_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.KEYSTORE_TYPE_KEY"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.port"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.bindAddress"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.compressionType"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.keystore"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.keystorePassword"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.keystoreType"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.enableSsl"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.enableIpFilter"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.patternRuleConfigDefinition"
reference "org.apache.flume.source.AvroSource.server" "org.apache.avro.ipc.Server"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.server"
reference "org.apache.flume.source.AvroSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.sourceCounter"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.maxThreads"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.connectionCountUpdater"
contain "org.apache.flume.source.AvroSource" "org.apache.flume.source.AvroSource.rules"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.formatter.output.PathManager"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.instrumentation.SinkCounter"
reference "org.apache.flume.sink.RollingFileSink" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.AbstractSink"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.RollingFileSink" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.RollingFileSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.serialization.EventSerializerFactory"
reference "org.apache.flume.sink.RollingFileSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.RollingFileSink" "org.apache.flume.Sink"
call "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
reference "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)" "org.apache.flume.sink.RollingFileSink.batchSize"
call "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)" "org.apache.flume.formatter.output.PathManager.PathManager(0)"
reference "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)" "org.apache.flume.sink.RollingFileSink.pathController"
reference "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)" "org.apache.flume.sink.RollingFileSink.shouldRotate"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.serializerType"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.Context.Context(1)"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.serializerContext"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.rollInterval"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.batchSize"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.directory"
reference "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.sinkCounter"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.sink.RollingFileSink.getName(0)"
call "org.apache.flume.sink.RollingFileSink.configure(1)" "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.configure(1)"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.logger"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.sinkCounter"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.instrumentation.SinkCounter.start(0)"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.AbstractSink.start(0)"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.pathController"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.directory"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.formatter.output.PathManager.setBaseDirectory(1)"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.rollInterval"
call "org.apache.flume.sink.RollingFileSink.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.sink.RollingFileSink.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.sink.RollingFileSink.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.rollService"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.1.{...}"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.sink.RollingFileSink.start(0)" "org.apache.flume.sink.RollingFileSink.getName(0)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.start(0)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.shouldRotate"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.logger"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.pathController"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.outputStream"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.serializer"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.sinkCounter"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(2)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.formatter.output.PathManager.rotate(0)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.serializerType"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.serializerContext"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.getChannel(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Channel.getTransaction(0)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.sink.RollingFileSink.batchSize"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainAttemptCount(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
reference "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.RollingFileSink.process(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.process(0)"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.logger"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.getName(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.sinkCounter"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.instrumentation.SinkCounter.stop(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.AbstractSink.stop(0)"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.outputStream"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.pathController"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.serializer"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.rollInterval"
reference "org.apache.flume.sink.RollingFileSink.stop(0)" "org.apache.flume.sink.RollingFileSink.rollService"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.RollingFileSink.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.stop(0)"
reference "org.apache.flume.sink.RollingFileSink.getDirectory(0)" "org.apache.flume.sink.RollingFileSink.directory"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.getDirectory(0)"
reference "org.apache.flume.sink.RollingFileSink.setDirectory(1)" "org.apache.flume.sink.RollingFileSink.directory"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.setDirectory(1)"
reference "org.apache.flume.sink.RollingFileSink.getRollInterval(0)" "org.apache.flume.sink.RollingFileSink.rollInterval"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.getRollInterval(0)"
reference "org.apache.flume.sink.RollingFileSink.setRollInterval(1)" "org.apache.flume.sink.RollingFileSink.rollInterval"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.setRollInterval(1)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.access$000(1)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.access$100(0)"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.access$202(2)"
call "org.apache.flume.sink.RollingFileSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.RollingFileSink.static {...}" "org.apache.flume.sink.RollingFileSink.logger"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.static {...}"
reference "org.apache.flume.sink.RollingFileSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.logger"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.defaultRollInterval"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.defaultBatchSize"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.batchSize"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.directory"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.rollInterval"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.outputStream"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.rollService"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.serializerType"
reference "org.apache.flume.sink.RollingFileSink.serializerContext" "org.apache.flume.Context"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.serializerContext"
reference "org.apache.flume.sink.RollingFileSink.serializer" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.serializer"
reference "org.apache.flume.sink.RollingFileSink.sinkCounter" "org.apache.flume.instrumentation.SinkCounter"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.sinkCounter"
reference "org.apache.flume.sink.RollingFileSink.pathController" "org.apache.flume.formatter.output.PathManager"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.pathController"
contain "org.apache.flume.sink.RollingFileSink" "org.apache.flume.sink.RollingFileSink.shouldRotate"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.file"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.length"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.lastModified"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.deserializer"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLength(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.length"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLength(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLastModified(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.lastModified"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLastModified(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.deserializer"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.file"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.file"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.length"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.lastModified"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.deserializer" "org.apache.flume.serialization.EventDeserializer"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.deserializer"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.setSinks(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.createSinkIterator(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.informSinkFailed(1)"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.sink.AbstractSink"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.LoggerSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.event.EventHelper"
reference "org.apache.flume.sink.LoggerSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.LoggerSink" "org.apache.flume.Sink"
call "org.apache.flume.sink.LoggerSink.LoggerSink(0)" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
contain "org.apache.flume.sink.LoggerSink" "org.apache.flume.sink.LoggerSink.LoggerSink(0)"
reference "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.sink.LoggerSink.getChannel(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Channel.take(0)"
reference "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.sink.LoggerSink.logger"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.slf4j.Logger.isInfoEnabled(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.event.EventHelper.dumpEvent(1)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.sink.LoggerSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(2)"
contain "org.apache.flume.sink.LoggerSink" "org.apache.flume.sink.LoggerSink.process(0)"
call "org.apache.flume.sink.LoggerSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.LoggerSink.static {...}" "org.apache.flume.sink.LoggerSink.logger"
contain "org.apache.flume.sink.LoggerSink" "org.apache.flume.sink.LoggerSink.static {...}"
reference "org.apache.flume.sink.LoggerSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.LoggerSink" "org.apache.flume.sink.LoggerSink.logger"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.Context"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.serialization.LineDeserializer"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
reference "org.apache.flume.source.SpoolDirectorySource" "org.slf4j.Logger"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.source.SpoolDirectorySource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.serialization.DecodeErrorPolicy"
reference "org.apache.flume.source.SpoolDirectorySource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)" "org.apache.flume.source.SpoolDirectorySource.hasFatalError"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)" "org.apache.flume.source.SpoolDirectorySource.backoff"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)" "org.apache.flume.source.SpoolDirectorySource.hitChannelException"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.logger"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.spoolDirectory"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.executor"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.completedSuffix"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.ignorePattern"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.trackerDirPath"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.fileHeader"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.fileHeaderKey"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.basenameHeader"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.basenameHeaderKey"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.deserializerType"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.deserializerContext"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.deletePolicy"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.inputCharset"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.decodeErrorPolicy"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy(1)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.consumeOrder"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.reader"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.FlumeException.FlumeException(2)"
reference "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.source.SpoolDirectorySource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.start(0)"
reference "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.source.SpoolDirectorySource.executor"
reference "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.source.SpoolDirectorySource.logger"
call "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
reference "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
call "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.apache.flume.source.SpoolDirectorySource.getName(0)"
call "org.apache.flume.source.SpoolDirectorySource.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.stop(0)"
call "org.apache.flume.source.SpoolDirectorySource.toString(0)" "org.apache.flume.source.SpoolDirectorySource.getName(0)"
reference "org.apache.flume.source.SpoolDirectorySource.toString(0)" "org.apache.flume.source.SpoolDirectorySource.spoolDirectory"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.toString(0)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.spoolDirectory"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.completedSuffix"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.deletePolicy"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.fileHeader"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.fileHeaderKey"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.basenameHeader"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.basenameHeaderKey"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.batchSize"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.inputCharset"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DECODE_ERROR_POLICY"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.serialization.DecodeErrorPolicy.valueOf(1)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.decodeErrorPolicy"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.ignorePattern"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.trackerDirPath"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.deserializerType"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.Context(1)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.deserializerContext"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.toString(0)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.valueOf(1)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.consumeOrder"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.getInteger(1)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_MAX_BACKOFF"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.maxBackoff"
reference "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.source.SpoolDirectorySource.getName(0)"
call "org.apache.flume.source.SpoolDirectorySource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.configure(1)"
reference "org.apache.flume.source.SpoolDirectorySource.hasFatalError(0)" "org.apache.flume.source.SpoolDirectorySource.hasFatalError"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.hasFatalError(0)"
reference "org.apache.flume.source.SpoolDirectorySource.setBackOff(1)" "org.apache.flume.source.SpoolDirectorySource.backoff"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.setBackOff(1)"
reference "org.apache.flume.source.SpoolDirectorySource.hitChannelException(0)" "org.apache.flume.source.SpoolDirectorySource.hitChannelException"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.hitChannelException(0)"
reference "org.apache.flume.source.SpoolDirectorySource.getSourceCounter(0)" "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.getSourceCounter(0)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$000(1)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$100(0)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$202(2)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$300(1)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$400(1)"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.access$502(2)"
call "org.apache.flume.source.SpoolDirectorySource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SpoolDirectorySource.static {...}" "org.apache.flume.source.SpoolDirectorySource.logger"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.static {...}"
reference "org.apache.flume.source.SpoolDirectorySource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.logger"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.POLL_DELAY_MS"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.completedSuffix"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.spoolDirectory"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.fileHeader"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.fileHeaderKey"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.basenameHeader"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.basenameHeaderKey"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.batchSize"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.ignorePattern"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.trackerDirPath"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.deserializerType"
reference "org.apache.flume.source.SpoolDirectorySource.deserializerContext" "org.apache.flume.Context"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.deserializerContext"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.deletePolicy"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.inputCharset"
reference "org.apache.flume.source.SpoolDirectorySource.decodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.decodeErrorPolicy"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.hasFatalError"
reference "org.apache.flume.source.SpoolDirectorySource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
reference "org.apache.flume.source.SpoolDirectorySource.reader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.reader"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.executor"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.backoff"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.hitChannelException"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.maxBackoff"
reference "org.apache.flume.source.SpoolDirectorySource.consumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.source.SpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource.consumeOrder"
reference "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceAudience"
contain "org.apache.flume.annotations.InterfaceStability" "org.apache.flume.annotations.InterfaceStability.InterfaceStability(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.commons.lang.StringUtils"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "com.google.common.base.Preconditions"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.joda.time.format.DateTimeFormat"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.joda.time.DateTime"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.RegexExtractorInterceptorMillisSerializer(0)"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)" "org.apache.commons.lang.StringUtils.isEmpty(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)" "org.joda.time.format.DateTimeFormat.forPattern(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.formatter"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.formatter"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)" "org.joda.time.format.DateTimeFormatter.parseDateTime(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)" "org.joda.time.DateTime.getMillis(0)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.formatter" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.formatter"
reference "org.apache.flume.SinkProcessor" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.SinkProcessor" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.SinkProcessor" "org.apache.flume.Sink.Status"
reference "org.apache.flume.SinkProcessor" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.SinkProcessor" "org.apache.flume.Sink"
contain "org.apache.flume.SinkProcessor" "org.apache.flume.SinkProcessor.process(0)"
contain "org.apache.flume.SinkProcessor" "org.apache.flume.SinkProcessor.setSinks(1)"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource.ExecRunnable"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.slf4j.Logger"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1.{...}" "org.apache.flume.source.ExecSource.ExecRunnable.1.this$0"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1.{...}" "org.apache.flume.source.ExecSource.ExecRunnable.1.val$eventList"
contain "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource.ExecRunnable.1.{...}"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.1.val$eventList"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.1.this$0"
call "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.access$000(1)"
call "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.apache.flume.source.ExecSource.ExecRunnable.access$100(2)"
call "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.apache.flume.source.ExecSource.access$200(0)"
call "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)"
contain "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource.ExecRunnable.1.val$eventList"
reference "org.apache.flume.source.ExecSource.ExecRunnable.1.this$0" "org.apache.flume.source.ExecSource.ExecRunnable"
contain "org.apache.flume.source.ExecSource.ExecRunnable.1" "org.apache.flume.source.ExecSource.ExecRunnable.1.this$0"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.ThriftSource" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TNonblockingServerSocket"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TNonblockingServerTransport"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.server.TNonblockingServer.AbstractNonblockingServerArgs"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TServerSocket"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TServerTransport"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.server.TServer.AbstractServerArgs"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.protocol.TCompactProtocol.Factory"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TFastFramedTransport.Factory"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.thrift.ThriftSourceProtocol.Processor"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.ThriftSourceHandler"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.server.TServer"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.ThriftSource" "org.slf4j.Logger"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.Context"
reference "org.apache.flume.source.ThriftSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.server.TNonblockingServer"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.protocol.TCompactProtocol"
reference "org.apache.flume.source.ThriftSource" "org.apache.thrift.transport.TFastFramedTransport"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.thrift.ThriftSourceProtocol"
reference "org.apache.flume.source.ThriftSource" "org.slf4j.LoggerFactory"
reference "org.apache.flume.source.ThriftSource" "org.apache.flume.thrift.ThriftSourceProtocol.Iface"
call "org.apache.flume.source.ThriftSource.ThriftSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.ThriftSource.ThriftSource(0)" "org.apache.flume.source.ThriftSource.maxThreads"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.ThriftSource(0)"
reference "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.logger"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.port"
call "org.apache.flume.source.ThriftSource.configure(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.bindAddress"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.maxThreads"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.slf4j.Logger.warn(1)"
reference "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.sourceCounter"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.source.ThriftSource.getName(0)"
call "org.apache.flume.source.ThriftSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.configure(1)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.logger"
call "org.apache.flume.source.ThriftSource.start(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.maxThreads"
call "org.apache.flume.source.ThriftSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.source.ThriftSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.bindAddress"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.port"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.transport.TNonblockingServerSocket.TNonblockingServerSocket(1)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.serverTransport"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.transport.TServerSocket.TServerSocket(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.protocol.TCompactProtocol.Factory.Factory(0)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.server.TServer.AbstractServerArgs.protocolFactory(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.transport.TFastFramedTransport.Factory.Factory(0)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.server.TServer.AbstractServerArgs.inputTransportFactory(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.server.TServer.AbstractServerArgs.outputTransportFactory(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.thrift.ThriftSourceProtocol.Processor.Processor(1)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.server.TServer.AbstractServerArgs.processor(1)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.server"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.servingExecutor"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.1.{...}"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.thrift.server.TServer.isServing(0)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.ThriftSource.sourceCounter"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.ThriftSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.start(0)"
reference "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.source.ThriftSource.server"
call "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.thrift.server.TServer.isServing(0)"
call "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.thrift.server.TServer.stop(0)"
reference "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.source.ThriftSource.servingExecutor"
call "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.source.ThriftSource.sourceCounter"
call "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.ThriftSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.stop(0)"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.access$100(1)"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.access$200(1)"
call "org.apache.flume.source.ThriftSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.ThriftSource.static {...}" "org.apache.flume.source.ThriftSource.logger"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.static {...}"
reference "org.apache.flume.source.ThriftSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.logger"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.CONFIG_THREADS"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.CONFIG_BIND"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.CONFIG_PORT"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.port"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.bindAddress"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.maxThreads"
reference "org.apache.flume.source.ThriftSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.sourceCounter"
reference "org.apache.flume.source.ThriftSource.server" "org.apache.thrift.server.TServer"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.server"
reference "org.apache.flume.source.ThriftSource.serverTransport" "org.apache.thrift.transport.TServerTransport"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.serverTransport"
contain "org.apache.flume.source.ThriftSource" "org.apache.flume.source.ThriftSource.servingExecutor"
reference "org.apache.flume.SinkRunner" "org.apache.flume.CounterGroup"
reference "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.PollingRunner"
reference "org.apache.flume.SinkRunner" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.SinkRunner" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.SinkRunner" "org.apache.flume.SinkProcessor"
reference "org.apache.flume.SinkRunner" "org.slf4j.Logger"
reference "org.apache.flume.SinkRunner" "org.slf4j.LoggerFactory"
call "org.apache.flume.SinkRunner.SinkRunner(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.SinkRunner.SinkRunner(0)" "org.apache.flume.SinkRunner.counterGroup"
reference "org.apache.flume.SinkRunner.SinkRunner(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.SinkRunner.SinkRunner(0)" "org.apache.flume.SinkRunner.lifecycleState"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.SinkRunner(0)"
call "org.apache.flume.SinkRunner.SinkRunner(1)" "org.apache.flume.SinkRunner.SinkRunner(0)"
call "org.apache.flume.SinkRunner.SinkRunner(1)" "org.apache.flume.SinkRunner.setSink(1)"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.SinkRunner(1)"
reference "org.apache.flume.SinkRunner.getPolicy(0)" "org.apache.flume.SinkRunner.policy"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.getPolicy(0)"
reference "org.apache.flume.SinkRunner.setSink(1)" "org.apache.flume.SinkRunner.policy"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.setSink(1)"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.getPolicy(0)"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkProcessor.start(0)"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.PollingRunner.PollingRunner(0)"
reference "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.runner"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.PollingRunner.access$002(2)"
reference "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.counterGroup"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.PollingRunner.access$102(2)"
call "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.PollingRunner.access$202(2)"
reference "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.runnerThread"
reference "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.SinkRunner.start(0)" "org.apache.flume.SinkRunner.lifecycleState"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.start(0)"
reference "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.runnerThread"
reference "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.runner"
call "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.PollingRunner.access$200(1)"
reference "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.logger"
call "org.apache.flume.SinkRunner.stop(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.SinkRunner.stop(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.getPolicy(0)"
call "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkProcessor.stop(0)"
reference "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.SinkRunner.stop(0)" "org.apache.flume.SinkRunner.lifecycleState"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.stop(0)"
call "org.apache.flume.SinkRunner.toString(0)" "org.apache.flume.SinkRunner.getPolicy(0)"
reference "org.apache.flume.SinkRunner.toString(0)" "org.apache.flume.SinkRunner.counterGroup"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.toString(0)"
reference "org.apache.flume.SinkRunner.getLifecycleState(0)" "org.apache.flume.SinkRunner.lifecycleState"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.getLifecycleState(0)"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.access$300(0)"
call "org.apache.flume.SinkRunner.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.SinkRunner.static {...}" "org.apache.flume.SinkRunner.logger"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.static {...}"
reference "org.apache.flume.SinkRunner.logger" "org.slf4j.Logger"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.logger"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.backoffSleepIncrement"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.maxBackoffSleep"
reference "org.apache.flume.SinkRunner.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.counterGroup"
reference "org.apache.flume.SinkRunner.runner" "org.apache.flume.SinkRunner.PollingRunner"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.runner"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.runnerThread"
reference "org.apache.flume.SinkRunner.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.lifecycleState"
reference "org.apache.flume.SinkRunner.policy" "org.apache.flume.SinkProcessor"
contain "org.apache.flume.SinkRunner" "org.apache.flume.SinkRunner.policy"
reference "org.apache.flume.Channel" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.Channel" "org.apache.flume.NamedComponent"
reference "org.apache.flume.Channel" "org.apache.flume.ChannelException"
reference "org.apache.flume.Channel" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.Channel" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.Channel" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.Channel" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.Channel" "org.apache.flume.Channel.put(1)"
contain "org.apache.flume.Channel" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.Channel" "org.apache.flume.Channel.getTransaction(0)"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.ExecSourceConfigurationConstants(0)"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_RESTART"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_RESTART"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_RESTART_THROTTLE"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_RESTART_THROTTLE"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_LOG_STDERR"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_LOG_STDERR"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_BATCH_SIZE"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_BATCH_SIZE"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_BATCH_TIME_OUT"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_BATCH_TIME_OUT"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CHARSET"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_CHARSET"
contain "org.apache.flume.source.ExecSourceConfigurationConstants" "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_SHELL"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.instrumentation.ChannelCounter"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.Event"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.AbstractChannel"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.Context"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel" "com.google.common.base.Preconditions"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)" "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.keepAlive"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultCapacity"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultKeepAlive"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.getName(0)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)" "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)" "org.apache.flume.instrumentation.ChannelCounter.start(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)" "org.apache.flume.channel.AbstractChannel.start(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)" "org.apache.flume.instrumentation.ChannelCounter.stop(0)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)" "org.apache.flume.channel.AbstractChannel.stop(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.ChannelException.ChannelException(2)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.keepAlive"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.getTransaction(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.getTransaction(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.static {...}" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultCapacity"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.static {...}" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultKeepAlive"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.static {...}"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultCapacity"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultKeepAlive"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.keepAlive"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter" "org.apache.flume.instrumentation.ChannelCounter"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel" "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
reference "org.apache.flume.instrumentation.SinkProcessorCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.SinkProcessorCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.SinkProcessorCounter.SinkProcessorCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK_PROCESSOR"
call "org.apache.flume.instrumentation.SinkProcessorCounter.SinkProcessorCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
contain "org.apache.flume.instrumentation.SinkProcessorCounter" "org.apache.flume.instrumentation.SinkProcessorCounter.SinkProcessorCounter(1)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.{...}" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.this$1"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.{...}"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.this$1" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.this$1"
reference "org.apache.flume.conf.Configurable" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.conf.Configurable" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.conf.Configurable" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.conf.Configurable" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.conf.Configurable" "org.apache.flume.conf.Configurable.configure(1)"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SpoolDirectorySourceConfigurationConstants(0)"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.name(0)"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DECODE_ERROR_POLICY"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_MAX_BACKOFF"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SPOOL_DIRECTORY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SPOOLED_FILE_SUFFIX"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_SPOOLED_FILE_SUFFIX"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.FILENAME_HEADER_KEY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_FILENAME_HEADER_KEY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.FILENAME_HEADER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_FILE_HEADER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BASENAME_HEADER_KEY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BASENAME_HEADER_KEY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BASENAME_HEADER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BASENAME_HEADER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BATCH_SIZE"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BATCH_SIZE"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BUFFER_MAX_LINES"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BUFFER_MAX_LINES"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BUFFER_MAX_LINE_LENGTH"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BUFFER_MAX_LINE_LENGTH"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.IGNORE_PAT"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_IGNORE_PAT"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.TRACKER_DIR"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_TRACKER_DIR"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DESERIALIZER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DESERIALIZER"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DELETE_POLICY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DELETE_POLICY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.INPUT_CHARSET"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_INPUT_CHARSET"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DECODE_ERROR_POLICY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DECODE_ERROR_POLICY"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.MAX_BACKOFF"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_MAX_BACKOFF"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.CONSUME_ORDER"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE_DFLT"
call "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.appendNewline"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.out"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.supportsReopen(0)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.afterCreate(0)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.afterReopen(0)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.beforeClose(0)"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.out"
call "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.appendNewline"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.flush(0)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(3)"
call "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.static {...}" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.logger"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.static {...}"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.logger"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE_DFLT"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.out"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.appendNewline"
reference "org.apache.flume.source.AvroSource.2" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.source.AvroSource.2" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.source.AvroSource.2" "org.jboss.netty.channel.Channels"
reference "org.apache.flume.source.AvroSource.2.{...}" "org.apache.flume.source.AvroSource.2.this$0"
contain "org.apache.flume.source.AvroSource.2" "org.apache.flume.source.AvroSource.2.{...}"
call "org.apache.flume.source.AvroSource.2.getPipeline(0)" "org.jboss.netty.channel.Channels.pipeline(0)"
contain "org.apache.flume.source.AvroSource.2" "org.apache.flume.source.AvroSource.2.getPipeline(0)"
reference "org.apache.flume.source.AvroSource.2.this$0" "org.apache.flume.source.AvroSource"
contain "org.apache.flume.source.AvroSource.2" "org.apache.flume.source.AvroSource.2.this$0"
reference "org.apache.flume.source.AvroSource.1" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.source.AvroSource.1" "org.apache.avro.ipc.NettyServer"
reference "org.apache.flume.source.AvroSource.1" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.AvroSource.1.{...}" "org.apache.flume.source.AvroSource.1.this$0"
reference "org.apache.flume.source.AvroSource.1.{...}" "org.apache.flume.source.AvroSource.1.val$srv"
contain "org.apache.flume.source.AvroSource.1" "org.apache.flume.source.AvroSource.1.{...}"
reference "org.apache.flume.source.AvroSource.1.run(0)" "org.apache.flume.source.AvroSource.1.this$0"
call "org.apache.flume.source.AvroSource.1.run(0)" "org.apache.flume.source.AvroSource.access$000(1)"
reference "org.apache.flume.source.AvroSource.1.run(0)" "org.apache.flume.source.AvroSource.1.val$srv"
call "org.apache.flume.source.AvroSource.1.run(0)" "org.apache.avro.ipc.NettyServer.getNumActiveConnections(0)"
call "org.apache.flume.source.AvroSource.1.run(0)" "org.apache.flume.instrumentation.SourceCounter.setOpenConnectionCount(1)"
contain "org.apache.flume.source.AvroSource.1" "org.apache.flume.source.AvroSource.1.run(0)"
reference "org.apache.flume.source.AvroSource.1.val$srv" "org.apache.avro.ipc.NettyServer"
contain "org.apache.flume.source.AvroSource.1" "org.apache.flume.source.AvroSource.1.val$srv"
reference "org.apache.flume.source.AvroSource.1.this$0" "org.apache.flume.source.AvroSource"
contain "org.apache.flume.source.AvroSource.1" "org.apache.flume.source.AvroSource.1.this$0"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.Sink"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.SinkProcessor"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.conf.ConfigurableComponent"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.DefaultSinkProcessor" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.DefaultSinkProcessor(0)"
reference "org.apache.flume.sink.DefaultSinkProcessor.start(0)" "org.apache.flume.sink.DefaultSinkProcessor.sink"
call "org.apache.flume.sink.DefaultSinkProcessor.start(0)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.sink.DefaultSinkProcessor.start(0)" "org.apache.flume.Sink.start(0)"
reference "org.apache.flume.sink.DefaultSinkProcessor.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.sink.DefaultSinkProcessor.start(0)" "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.start(0)"
reference "org.apache.flume.sink.DefaultSinkProcessor.stop(0)" "org.apache.flume.sink.DefaultSinkProcessor.sink"
call "org.apache.flume.sink.DefaultSinkProcessor.stop(0)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.sink.DefaultSinkProcessor.stop(0)" "org.apache.flume.Sink.stop(0)"
reference "org.apache.flume.sink.DefaultSinkProcessor.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.sink.DefaultSinkProcessor.stop(0)" "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.stop(0)"
reference "org.apache.flume.sink.DefaultSinkProcessor.getLifecycleState(0)" "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.getLifecycleState(0)"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.configure(1)"
reference "org.apache.flume.sink.DefaultSinkProcessor.process(0)" "org.apache.flume.sink.DefaultSinkProcessor.sink"
call "org.apache.flume.sink.DefaultSinkProcessor.process(0)" "org.apache.flume.Sink.process(0)"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.process(0)"
call "org.apache.flume.sink.DefaultSinkProcessor.setSinks(1)" "com.google.common.base.Preconditions.checkNotNull(1)"
call "org.apache.flume.sink.DefaultSinkProcessor.setSinks(1)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.sink.DefaultSinkProcessor.setSinks(1)" "org.apache.flume.sink.DefaultSinkProcessor.sink"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.setSinks(1)"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.configure(1)"
reference "org.apache.flume.sink.DefaultSinkProcessor.sink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.sink"
reference "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.DefaultSinkProcessor" "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState"
reference "org.apache.flume.instrumentation.MonitorService" "org.apache.flume.conf.Configurable"
contain "org.apache.flume.instrumentation.MonitorService" "org.apache.flume.instrumentation.MonitorService.start(0)"
contain "org.apache.flume.instrumentation.MonitorService" "org.apache.flume.instrumentation.MonitorService.stop(0)"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.Sink"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.sink.AbstractSink" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.sink.AbstractSink" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.sink.AbstractSink.AbstractSink(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.sink.AbstractSink.AbstractSink(0)" "org.apache.flume.sink.AbstractSink.lifecycleState"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
reference "org.apache.flume.sink.AbstractSink.start(0)" "org.apache.flume.sink.AbstractSink.channel"
call "org.apache.flume.sink.AbstractSink.start(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.sink.AbstractSink.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.sink.AbstractSink.start(0)" "org.apache.flume.sink.AbstractSink.lifecycleState"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.start(0)"
reference "org.apache.flume.sink.AbstractSink.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.sink.AbstractSink.stop(0)" "org.apache.flume.sink.AbstractSink.lifecycleState"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.stop(0)"
reference "org.apache.flume.sink.AbstractSink.getChannel(0)" "org.apache.flume.sink.AbstractSink.channel"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.getChannel(0)"
reference "org.apache.flume.sink.AbstractSink.setChannel(1)" "org.apache.flume.sink.AbstractSink.channel"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.setChannel(1)"
reference "org.apache.flume.sink.AbstractSink.getLifecycleState(0)" "org.apache.flume.sink.AbstractSink.lifecycleState"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.getLifecycleState(0)"
reference "org.apache.flume.sink.AbstractSink.setName(1)" "org.apache.flume.sink.AbstractSink.name"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.setName(1)"
reference "org.apache.flume.sink.AbstractSink.getName(0)" "org.apache.flume.sink.AbstractSink.name"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.getName(0)"
reference "org.apache.flume.sink.AbstractSink.toString(0)" "org.apache.flume.sink.AbstractSink.name"
reference "org.apache.flume.sink.AbstractSink.toString(0)" "org.apache.flume.sink.AbstractSink.channel"
call "org.apache.flume.sink.AbstractSink.toString(0)" "org.apache.flume.Channel.getName(0)"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.toString(0)"
reference "org.apache.flume.sink.AbstractSink.channel" "org.apache.flume.Channel"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.channel"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.name"
reference "org.apache.flume.sink.AbstractSink.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.AbstractSink" "org.apache.flume.sink.AbstractSink.lifecycleState"
reference "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector"
reference "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.Context"
reference "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor"
reference "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)" "org.apache.flume.sink.AbstractSinkSelector.maxTimeOut"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)"
call "org.apache.flume.sink.AbstractSinkSelector.configure(1)" "org.apache.flume.Context.getLong(1)"
reference "org.apache.flume.sink.AbstractSinkSelector.configure(1)" "org.apache.flume.sink.AbstractSinkSelector.maxTimeOut"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.configure(1)"
reference "org.apache.flume.sink.AbstractSinkSelector.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.sink.AbstractSinkSelector.start(0)" "org.apache.flume.sink.AbstractSinkSelector.state"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.start(0)"
reference "org.apache.flume.sink.AbstractSinkSelector.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.sink.AbstractSinkSelector.stop(0)" "org.apache.flume.sink.AbstractSinkSelector.state"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.stop(0)"
reference "org.apache.flume.sink.AbstractSinkSelector.getLifecycleState(0)" "org.apache.flume.sink.AbstractSinkSelector.state"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.getLifecycleState(0)"
reference "org.apache.flume.sink.AbstractSinkSelector.setSinks(1)" "org.apache.flume.sink.AbstractSinkSelector.sinkList"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.setSinks(1)"
reference "org.apache.flume.sink.AbstractSinkSelector.getSinks(0)" "org.apache.flume.sink.AbstractSinkSelector.sinkList"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.getSinks(0)"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.informSinkFailed(1)"
reference "org.apache.flume.sink.AbstractSinkSelector.state" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.state"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.sinkList"
contain "org.apache.flume.sink.AbstractSinkSelector" "org.apache.flume.sink.AbstractSinkSelector.maxTimeOut"
reference "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.SystemClock"
reference "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.Clock"
reference "org.apache.flume.formatter.output.BucketPath" "com.google.common.base.Preconditions"
reference "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.tools.TimestampRoundDownUtil"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.BucketPath(0)"
reference "org.apache.flume.formatter.output.BucketPath.containsTag(1)" "org.apache.flume.formatter.output.BucketPath.tagPattern"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.containsTag(1)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.expandShorthand(1)"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(2)" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(5)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(2)"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(5)" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(5)"
reference "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)" "org.apache.flume.formatter.output.BucketPath.clock"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)" "org.apache.flume.Clock.currentTimeMillis(0)"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)" "org.apache.flume.formatter.output.BucketPath.roundDown(3)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)"
call "org.apache.flume.formatter.output.BucketPath.roundDown(3)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)"
call "org.apache.flume.formatter.output.BucketPath.roundDown(3)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)"
call "org.apache.flume.formatter.output.BucketPath.roundDown(3)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.roundDown(3)"
call "org.apache.flume.formatter.output.BucketPath.escapeString(2)" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.escapeString(2)"
call "org.apache.flume.formatter.output.BucketPath.escapeString(5)" "org.apache.flume.formatter.output.BucketPath.escapeString(7)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
reference "org.apache.flume.formatter.output.BucketPath.escapeString(7)" "org.apache.flume.formatter.output.BucketPath.clock"
call "org.apache.flume.formatter.output.BucketPath.escapeString(7)" "org.apache.flume.Clock.currentTimeMillis(0)"
reference "org.apache.flume.formatter.output.BucketPath.escapeString(7)" "org.apache.flume.formatter.output.BucketPath.tagPattern"
call "org.apache.flume.formatter.output.BucketPath.escapeString(7)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.formatter.output.BucketPath.escapeString(7)" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.escapeString(7)"
call "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(2)" "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(2)"
reference "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)" "org.apache.flume.formatter.output.BucketPath.tagPattern"
call "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)" "org.apache.flume.formatter.output.BucketPath.replaceShorthand(5)"
call "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)" "org.apache.flume.formatter.output.BucketPath.expandShorthand(1)"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)"
reference "org.apache.flume.formatter.output.BucketPath.setClock(1)" "org.apache.flume.formatter.output.BucketPath.clock"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.setClock(1)"
reference "org.apache.flume.formatter.output.BucketPath.getClock(0)" "org.apache.flume.formatter.output.BucketPath.clock"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.getClock(0)"
reference "org.apache.flume.formatter.output.BucketPath.static {...}" "org.apache.flume.formatter.output.BucketPath.tagPattern"
call "org.apache.flume.formatter.output.BucketPath.static {...}" "org.apache.flume.SystemClock.SystemClock(0)"
reference "org.apache.flume.formatter.output.BucketPath.static {...}" "org.apache.flume.formatter.output.BucketPath.clock"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.static {...}"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.TAG_REGEX"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.tagPattern"
reference "org.apache.flume.formatter.output.BucketPath.clock" "org.apache.flume.Clock"
contain "org.apache.flume.formatter.output.BucketPath" "org.apache.flume.formatter.output.BucketPath.clock"
reference "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.client.avro.EventReader"
reference "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.client.avro.ReliableEventReader" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.Channel"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.channel.AbstractChannel" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)" "org.apache.flume.channel.AbstractChannel.lifecycleState"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
reference "org.apache.flume.channel.AbstractChannel.setName(1)" "org.apache.flume.channel.AbstractChannel.name"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.setName(1)"
reference "org.apache.flume.channel.AbstractChannel.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.channel.AbstractChannel.start(0)" "org.apache.flume.channel.AbstractChannel.lifecycleState"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.start(0)"
reference "org.apache.flume.channel.AbstractChannel.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.channel.AbstractChannel.stop(0)" "org.apache.flume.channel.AbstractChannel.lifecycleState"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.stop(0)"
reference "org.apache.flume.channel.AbstractChannel.getLifecycleState(0)" "org.apache.flume.channel.AbstractChannel.lifecycleState"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.getLifecycleState(0)"
reference "org.apache.flume.channel.AbstractChannel.getName(0)" "org.apache.flume.channel.AbstractChannel.name"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.getName(0)"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.configure(1)"
reference "org.apache.flume.channel.AbstractChannel.toString(0)" "org.apache.flume.channel.AbstractChannel.name"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.toString(0)"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.name"
reference "org.apache.flume.channel.AbstractChannel.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.channel.AbstractChannel" "org.apache.flume.channel.AbstractChannel.lifecycleState"
reference "org.apache.flume.Transaction" "org.apache.flume.Transaction.TransactionState"
contain "org.apache.flume.Transaction" "org.apache.flume.Transaction.begin(0)"
contain "org.apache.flume.Transaction" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.Transaction" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.Transaction" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.conf.BasicConfigurationConstants"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.Context"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.conf.channel.ChannelSelectorType"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.conf.channel.ChannelSelectorConfiguration"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.slf4j.Logger"
reference "org.apache.flume.channel.ChannelSelectorFactory" "org.slf4j.LoggerFactory"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.ChannelSelectorFactory(0)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.Context.putAll(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.conf.channel.ChannelSelectorType.REPLICATING"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.conf.channel.ChannelSelectorType.toString(0)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.conf.channel.ChannelSelectorConfiguration.getType(0)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.create(2)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
reference "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.conf.channel.ChannelSelectorType.OTHER"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.conf.channel.ChannelSelectorType.valueOf(1)"
reference "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.channel.ChannelSelectorFactory.LOGGER"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.conf.channel.ChannelSelectorType.equals(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.conf.channel.ChannelSelectorType.getChannelSelectorClassName(0)"
call "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)"
call "org.apache.flume.channel.ChannelSelectorFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.ChannelSelectorFactory.static {...}" "org.apache.flume.channel.ChannelSelectorFactory.LOGGER"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.static {...}"
reference "org.apache.flume.channel.ChannelSelectorFactory.LOGGER" "org.slf4j.Logger"
contain "org.apache.flume.channel.ChannelSelectorFactory" "org.apache.flume.channel.ChannelSelectorFactory.LOGGER"
reference "org.apache.flume.sink.AbstractRpcSink.1" "org.apache.flume.sink.AbstractRpcSink"
reference "org.apache.flume.sink.AbstractRpcSink.1.{...}" "org.apache.flume.sink.AbstractRpcSink.1.this$0"
contain "org.apache.flume.sink.AbstractRpcSink.1" "org.apache.flume.sink.AbstractRpcSink.1.{...}"
reference "org.apache.flume.sink.AbstractRpcSink.1.run(0)" "org.apache.flume.sink.AbstractRpcSink.1.this$0"
call "org.apache.flume.sink.AbstractRpcSink.1.run(0)" "org.apache.flume.sink.AbstractRpcSink.access$000(1)"
contain "org.apache.flume.sink.AbstractRpcSink.1" "org.apache.flume.sink.AbstractRpcSink.1.run(0)"
reference "org.apache.flume.sink.AbstractRpcSink.1.this$0" "org.apache.flume.sink.AbstractRpcSink"
contain "org.apache.flume.sink.AbstractRpcSink.1" "org.apache.flume.sink.AbstractRpcSink.1.this$0"
reference "org.apache.flume.source.http.HTTPSourceHandler" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.http.HTTPSourceHandler" "org.apache.flume.source.http.HTTPBadRequestException"
contain "org.apache.flume.source.http.HTTPSourceHandler" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
reference "org.apache.flume.sink.AvroSink" "org.apache.flume.sink.AbstractRpcSink"
reference "org.apache.flume.sink.AvroSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.AvroSink" "org.apache.flume.api.RpcClientFactory"
reference "org.apache.flume.sink.AvroSink" "org.slf4j.LoggerFactory"
call "org.apache.flume.sink.AvroSink.AvroSink(0)" "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)"
contain "org.apache.flume.sink.AvroSink" "org.apache.flume.sink.AvroSink.AvroSink(0)"
reference "org.apache.flume.sink.AvroSink.initializeRpcClient(1)" "org.apache.flume.sink.AvroSink.logger"
call "org.apache.flume.sink.AvroSink.initializeRpcClient(1)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.sink.AvroSink.initializeRpcClient(1)" "org.apache.flume.api.RpcClientFactory.getInstance(1)"
contain "org.apache.flume.sink.AvroSink" "org.apache.flume.sink.AvroSink.initializeRpcClient(1)"
call "org.apache.flume.sink.AvroSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.AvroSink.static {...}" "org.apache.flume.sink.AvroSink.logger"
contain "org.apache.flume.sink.AvroSink" "org.apache.flume.sink.AvroSink.static {...}"
reference "org.apache.flume.sink.AvroSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.AvroSink" "org.apache.flume.sink.AvroSink.logger"
reference "org.apache.flume.source.SyslogParser.1" "com.google.common.cache.CacheLoader"
reference "org.apache.flume.source.SyslogParser.1" "org.apache.flume.source.SyslogParser"
reference "org.apache.flume.source.SyslogParser.1" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.source.SyslogParser.1.{...}" "org.apache.flume.source.SyslogParser.1.this$0"
call "org.apache.flume.source.SyslogParser.1.{...}" "com.google.common.cache.CacheLoader.CacheLoader(0)"
contain "org.apache.flume.source.SyslogParser.1" "org.apache.flume.source.SyslogParser.1.{...}"
reference "org.apache.flume.source.SyslogParser.1.load(1)" "org.apache.flume.source.SyslogParser.1.this$0"
call "org.apache.flume.source.SyslogParser.1.load(1)" "org.apache.flume.source.SyslogParser.access$000(1)"
call "org.apache.flume.source.SyslogParser.1.load(1)" "org.joda.time.format.DateTimeFormatter.parseMillis(1)"
contain "org.apache.flume.source.SyslogParser.1" "org.apache.flume.source.SyslogParser.1.load(1)"
contain "org.apache.flume.source.SyslogParser.1" "org.apache.flume.source.SyslogParser.1.load(1)"
reference "org.apache.flume.source.SyslogParser.1.this$0" "org.apache.flume.source.SyslogParser"
contain "org.apache.flume.source.SyslogParser.1" "org.apache.flume.source.SyslogParser.1.this$0"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializerType"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.serialization.EventDeserializerFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.slf4j.Logger"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializerFactory.EventDeserializerFactory(0)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.serialization.EventDeserializerType.valueOf(1)"
reference "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.serialization.EventDeserializerFactory.logger"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.serialization.EventDeserializerType.OTHER"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.serialization.EventDeserializerType.getBuilderClass(0)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)" "org.apache.flume.serialization.EventDeserializer.Builder.build(2)"
contain "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)"
call "org.apache.flume.serialization.EventDeserializerFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.EventDeserializerFactory.static {...}" "org.apache.flume.serialization.EventDeserializerFactory.logger"
contain "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializerFactory.static {...}"
reference "org.apache.flume.serialization.EventDeserializerFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.EventDeserializerFactory" "org.apache.flume.serialization.EventDeserializerFactory.logger"
reference "org.apache.flume.tools.DirectMemoryUtils" "com.google.common.base.Preconditions"
reference "org.apache.flume.tools.DirectMemoryUtils" "org.slf4j.Logger"
reference "org.apache.flume.tools.DirectMemoryUtils" "com.google.common.collect.Lists"
reference "org.apache.flume.tools.DirectMemoryUtils" "org.slf4j.LoggerFactory"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.DirectMemoryUtils(0)"
call "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)"
reference "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "org.apache.flume.tools.DirectMemoryUtils.allocated"
reference "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "org.apache.flume.tools.DirectMemoryUtils.LOG"
call "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.tools.DirectMemoryUtils.allocate(1)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.allocate(1)"
call "org.apache.flume.tools.DirectMemoryUtils.clean(1)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.tools.DirectMemoryUtils.clean(1)" "org.apache.flume.tools.DirectMemoryUtils.allocated"
call "org.apache.flume.tools.DirectMemoryUtils.clean(1)" "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)"
reference "org.apache.flume.tools.DirectMemoryUtils.clean(1)" "org.apache.flume.tools.DirectMemoryUtils.LOG"
call "org.apache.flume.tools.DirectMemoryUtils.clean(1)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.clean(1)"
call "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)" "com.google.common.collect.Lists.reverse(1)"
reference "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)" "org.apache.flume.tools.DirectMemoryUtils.DEFAULT_SIZE"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)"
reference "org.apache.flume.tools.DirectMemoryUtils.getDefaultDirectMemorySize(0)" "org.apache.flume.tools.DirectMemoryUtils.LOG"
call "org.apache.flume.tools.DirectMemoryUtils.getDefaultDirectMemorySize(0)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.getDefaultDirectMemorySize(0)"
call "org.apache.flume.tools.DirectMemoryUtils.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.tools.DirectMemoryUtils.static {...}" "org.apache.flume.tools.DirectMemoryUtils.LOG"
call "org.apache.flume.tools.DirectMemoryUtils.static {...}" "org.apache.flume.tools.DirectMemoryUtils.getDefaultDirectMemorySize(0)"
reference "org.apache.flume.tools.DirectMemoryUtils.static {...}" "org.apache.flume.tools.DirectMemoryUtils.DEFAULT_SIZE"
reference "org.apache.flume.tools.DirectMemoryUtils.static {...}" "org.apache.flume.tools.DirectMemoryUtils.allocated"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.static {...}"
reference "org.apache.flume.tools.DirectMemoryUtils.LOG" "org.slf4j.Logger"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.LOG"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.MAX_DIRECT_MEMORY_PARAM"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.DEFAULT_SIZE"
contain "org.apache.flume.tools.DirectMemoryUtils" "org.apache.flume.tools.DirectMemoryUtils.allocated"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.avro.reflect.ReflectDatumWriter"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.avro.file.DataFileWriter"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.avro.AvroRuntimeException"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.avro.file.CodecFactory"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.slf4j.Logger"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.writer"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.getOutputStream(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.getSchema(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.convert(1)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.Context.getInteger(2)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.Context.getString(2)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.getSchema(0)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.writer"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.avro.file.DataFileWriter.DataFileWriter(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.avro.file.DataFileWriter.setSyncInterval(1)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.avro.file.CodecFactory.fromString(1)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.avro.file.DataFileWriter.setCodec(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.logger"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.getSchema(0)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.getOutputStream(0)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)" "org.apache.avro.file.DataFileWriter.create(2)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.afterReopen(0)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.write(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.convert(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.write(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.write(1)" "org.apache.avro.file.DataFileWriter.append(1)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.write(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.flush(0)" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.flush(0)" "org.apache.avro.file.DataFileWriter.flush(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.flush(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.beforeClose(0)"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.supportsReopen(0)"
call "org.apache.flume.serialization.AbstractAvroEventSerializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.static {...}" "org.apache.flume.serialization.AbstractAvroEventSerializer.logger"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.static {...}"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.logger"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.writer" "org.apache.avro.io.DatumWriter"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.writer"
reference "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter" "org.apache.avro.file.DataFileWriter"
contain "org.apache.flume.serialization.AbstractAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogParser" "char[]"
reference "org.apache.flume.source.SyslogParser" "org.joda.time.DateTime"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.source.SyslogParser" "org.joda.time.format.DateTimeFormat"
reference "org.apache.flume.source.SyslogParser" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.source.SyslogParser" "com.google.common.cache.CacheBuilder"
reference "org.apache.flume.source.SyslogParser" "com.google.common.collect.Maps"
reference "org.apache.flume.source.SyslogParser" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.SyslogParser" "com.google.common.cache.Cache"
reference "org.apache.flume.source.SyslogParser" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogParser" "org.slf4j.LoggerFactory"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.SyslogParser" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "org.joda.time.format.DateTimeFormat.forPattern(1)"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "org.joda.time.format.DateTimeFormatter.withZoneUTC(0)"
reference "org.apache.flume.source.SyslogParser.SyslogParser(0)" "org.apache.flume.source.SyslogParser.timeParser"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "com.google.common.cache.CacheBuilder.newBuilder(0)"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "com.google.common.cache.CacheBuilder.maximumSize(1)"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "org.apache.flume.source.SyslogParser.1.{...}"
call "org.apache.flume.source.SyslogParser.SyslogParser(0)" "com.google.common.cache.CacheBuilder.build(1)"
reference "org.apache.flume.source.SyslogParser.SyslogParser(0)" "org.apache.flume.source.SyslogParser.timestampCache"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.SyslogParser(0)"
call "org.apache.flume.source.SyslogParser.parseMessage(3)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.SyslogParser.parseMessage(3)" "com.google.common.base.Preconditions.checkArgument(3)"
call "org.apache.flume.source.SyslogParser.parseMessage(3)" "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)"
call "org.apache.flume.source.SyslogParser.parseMessage(3)" "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)"
call "org.apache.flume.source.SyslogParser.parseMessage(3)" "org.apache.flume.event.EventBuilder.withBody(3)"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.parseMessage(3)"
call "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)" "com.google.common.base.Preconditions.checkArgument(3)"
reference "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)" "org.apache.flume.source.SyslogParser.timestampCache"
call "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)" "com.google.common.cache.Cache.get(1)"
call "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)" "com.google.common.base.Preconditions.checkArgument(2)"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.now(0)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.getYear(0)"
reference "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.apache.flume.source.SyslogParser.TWO_SPACES"
reference "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.apache.flume.source.SyslogParser.rfc3164Format"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.format.DateTimeFormatter.parseDateTime(1)"
reference "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.apache.flume.source.SyslogParser.logger"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.withYear(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.isAfter(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.minusMonths(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.isBefore(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.plusMonths(1)"
call "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)" "org.joda.time.DateTime.getMillis(0)"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.access$000(1)"
call "org.apache.flume.source.SyslogParser.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SyslogParser.static {...}" "org.apache.flume.source.SyslogParser.logger"
reference "org.apache.flume.source.SyslogParser.static {...}" "org.apache.flume.source.SyslogParser.TWO_SPACES"
call "org.apache.flume.source.SyslogParser.static {...}" "org.joda.time.format.DateTimeFormat.forPattern(1)"
call "org.apache.flume.source.SyslogParser.static {...}" "org.joda.time.format.DateTimeFormatter.withZoneUTC(0)"
reference "org.apache.flume.source.SyslogParser.static {...}" "org.apache.flume.source.SyslogParser.rfc3164Format"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.static {...}"
reference "org.apache.flume.source.SyslogParser.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.logger"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.TS_CACHE_MAX"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.TWO_SPACES"
reference "org.apache.flume.source.SyslogParser.rfc3164Format" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.rfc3164Format"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.timePat"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.RFC3164_LEN"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.RFC5424_PREFIX_LEN"
reference "org.apache.flume.source.SyslogParser.timeParser" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.timeParser"
reference "org.apache.flume.source.SyslogParser.timestampCache" "com.google.common.cache.Cache"
contain "org.apache.flume.source.SyslogParser" "org.apache.flume.source.SyslogParser.timestampCache"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.1" "org.apache.flume.serialization.FlumeEventAvroEventSerializer"
reference "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.NetcatSocketHandler"
reference "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource"
reference "org.apache.flume.source.NetcatSource.AcceptHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.AcceptHandler(1)" "org.apache.flume.source.NetcatSource.AcceptHandler.maxLineLength"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.AcceptHandler(1)"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.access$600(0)"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.shouldStop"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.serverSocket"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.maxLineLength"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.NetcatSocketHandler(1)"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$702(2)"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.counterGroup"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$802(2)"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.source"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$902(2)"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.ackEveryEvent"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$1002(2)"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.handlerService"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$002(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$102(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$202(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$302(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$402(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.access$502(2)"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.serverSocket"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.counterGroup"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.handlerService"
reference "org.apache.flume.source.NetcatSource.AcceptHandler.source" "org.apache.flume.EventDrivenSource"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.source"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.shouldStop"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.ackEveryEvent"
contain "org.apache.flume.source.NetcatSource.AcceptHandler" "org.apache.flume.source.NetcatSource.AcceptHandler.maxLineLength"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.slf4j.Logger"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "com.google.common.base.Throwables"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.this$0"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.reader"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.sourceCounter"
contain "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.reader"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.this$0"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$000(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.sourceCounter"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.getChannelProcessor(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$100(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.slf4j.Logger.warn(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$202(2)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$300(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$400(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.toString(0)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "org.apache.flume.source.SpoolDirectorySource.access$502(2)"
call "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.reader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
contain "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.reader"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.sourceCounter"
reference "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.this$0" "org.apache.flume.source.SpoolDirectorySource"
contain "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.this$0"
reference "org.apache.flume.instrumentation.ChannelProcessorCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.ChannelProcessorCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.ChannelProcessorCounter.ChannelProcessorCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL_PROCESSOR"
call "org.apache.flume.instrumentation.ChannelProcessorCounter.ChannelProcessorCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
contain "org.apache.flume.instrumentation.ChannelProcessorCounter" "org.apache.flume.instrumentation.ChannelProcessorCounter.ChannelProcessorCounter(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.Event"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.ChannelFullException"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.BasicTransactionSemantics"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.instrumentation.ChannelCounter"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.channel.MemoryChannel.access$000(2)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.ChannelException.ChannelException(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.ChannelException.ChannelException(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.access$200(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.access$100(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.access$300(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.access$400(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.access$000(2)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$500(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$100(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$600(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.ChannelException.ChannelException(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$700(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.ChannelFullException.ChannelFullException(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$300(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$400(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.access$200(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.access$300(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.access$400(1)"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.access$500(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.access$200(1)"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
call "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter" "org.apache.flume.instrumentation.ChannelCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
reference "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0" "org.apache.flume.channel.MemoryChannel"
contain "org.apache.flume.channel.MemoryChannel.MemoryTransaction" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.SyslogSourceConfigurationConstants(0)"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORTS"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_HOST"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_FORMAT_PREFIX"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_REGEX"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_SEARCH"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_REPLACE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_DATEFORMAT"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_NUMPROCESSORS"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_EVENTSIZE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_BATCHSIZE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_CHARSET"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_CHARSET"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT_CHARSET_PREFIX"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_BATCHSIZE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT_HEADER"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_PORT_HEADER"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_READBUF_SIZE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_READBUF_SIZE"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_KEEP_FIELDS"
contain "org.apache.flume.source.SyslogSourceConfigurationConstants" "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_KEEP_FIELDS"
reference "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.SourceRunner"
reference "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.Source"
reference "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.channel.ChannelProcessor"
call "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)" "org.apache.flume.SourceRunner.SourceRunner(0)"
reference "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)" "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.source.EventDrivenSourceRunner.getSource(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.Source.getChannelProcessor(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.channel.ChannelProcessor.initialize(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.Source.start(0)"
reference "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.source.EventDrivenSourceRunner.start(0)" "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.start(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.source.EventDrivenSourceRunner.getSource(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.Source.stop(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.Source.getChannelProcessor(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.channel.ChannelProcessor.close(0)"
reference "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.source.EventDrivenSourceRunner.stop(0)" "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.stop(0)"
call "org.apache.flume.source.EventDrivenSourceRunner.toString(0)" "org.apache.flume.source.EventDrivenSourceRunner.getSource(0)"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.toString(0)"
reference "org.apache.flume.source.EventDrivenSourceRunner.getLifecycleState(0)" "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.getLifecycleState(0)"
reference "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.source.EventDrivenSourceRunner" "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
reference "org.apache.flume.serialization.EventSerDe.Builder" "org.apache.flume.serialization.EventSerDe"
contain "org.apache.flume.serialization.EventSerDe.Builder" "org.apache.flume.serialization.EventSerDe.Builder.build(3)"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.this$0"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(1)"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.regexPattern"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.addYear"
reference "org.apache.flume.source.SyslogUtils.SyslogFormatter.this$0" "org.apache.flume.source.SyslogUtils"
contain "org.apache.flume.source.SyslogUtils.SyslogFormatter" "org.apache.flume.source.SyslogUtils.SyslogFormatter.this$0"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.source.BasicSourceSemantics"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.source.AbstractPollableSource.AbstractPollableSource(0)" "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)"
contain "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.source.AbstractPollableSource.AbstractPollableSource(0)"
call "org.apache.flume.source.AbstractPollableSource.process(0)" "org.apache.flume.source.AbstractPollableSource.getStartException(0)"
call "org.apache.flume.source.AbstractPollableSource.process(0)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.source.AbstractPollableSource.process(0)" "org.apache.flume.source.AbstractPollableSource.isStarted(0)"
call "org.apache.flume.source.AbstractPollableSource.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
call "org.apache.flume.source.AbstractPollableSource.process(0)" "org.apache.flume.source.AbstractPollableSource.doProcess(0)"
contain "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.source.AbstractPollableSource.process(0)"
contain "org.apache.flume.source.AbstractPollableSource" "org.apache.flume.source.AbstractPollableSource.doProcess(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.util.RandomOrderSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.AbstractSinkSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.util.OrderSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)" "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)" "org.apache.flume.util.RandomOrderSelector.RandomOrderSelector(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)" "org.apache.flume.sink.AbstractSinkSelector.configure(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.maxTimeOut"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)" "org.apache.flume.util.OrderSelector.setMaxTimeOut(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.setSinks(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.setSinks(1)" "org.apache.flume.util.OrderSelector.setObjects(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.setSinks(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.createSinkIterator(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.createSinkIterator(0)" "org.apache.flume.util.OrderSelector.createIterator(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.createSinkIterator(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.informSinkFailed(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.informSinkFailed(1)" "org.apache.flume.util.OrderSelector.informFailure(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.informSinkFailed(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector" "org.apache.flume.util.OrderSelector"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
reference "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor"
reference "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Constants"
reference "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE_DFLT"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.preserveExisting"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP_DFLT"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.useIP"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.header"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.preserveExisting"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.useIP"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)" "org.apache.flume.interceptor.HostInterceptor.Builder.header"
call "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)" "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(4)"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE_DFLT"
call "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Builder.preserveExisting"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP_DFLT"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Builder.useIP"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST_HEADER"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.HostInterceptor.Builder.header"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.preserveExisting"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.useIP"
contain "org.apache.flume.interceptor.HostInterceptor.Builder" "org.apache.flume.interceptor.HostInterceptor.Builder.header"
reference "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.Builder"
reference "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.BodyTextEventSerializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)" "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE"
reference "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)" "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE_DFLT"
call "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)" "org.apache.flume.serialization.BodyTextEventSerializer.appendNewline"
reference "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)" "org.apache.flume.serialization.BodyTextEventSerializer.out"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.supportsReopen(0)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.afterCreate(0)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.afterReopen(0)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.beforeClose(0)"
reference "org.apache.flume.serialization.BodyTextEventSerializer.write(1)" "org.apache.flume.serialization.BodyTextEventSerializer.out"
call "org.apache.flume.serialization.BodyTextEventSerializer.write(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.serialization.BodyTextEventSerializer.write(1)" "org.apache.flume.serialization.BodyTextEventSerializer.appendNewline"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.write(1)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.flush(0)"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(3)"
call "org.apache.flume.serialization.BodyTextEventSerializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.BodyTextEventSerializer.static {...}" "org.apache.flume.serialization.BodyTextEventSerializer.logger"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.static {...}"
reference "org.apache.flume.serialization.BodyTextEventSerializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.logger"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE_DFLT"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.out"
contain "org.apache.flume.serialization.BodyTextEventSerializer" "org.apache.flume.serialization.BodyTextEventSerializer.appendNewline"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.SyslogParser"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.mina.core.buffer.IoBuffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.mina.core.service.IoHandlerAdapter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.mina.core.session.IoSession"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "com.google.common.base.Throwables"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "com.google.common.collect.Lists"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.SyslogUtils.SyslogStatus"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.mina.core.service.IoHandlerAdapter.IoHandlerAdapter(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.channelProcessor"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sourceCounter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.maxEventSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.batchSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portHeader"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.defaultDecoder"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portCharsets"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.keepFields"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.SyslogParser.SyslogParser(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.syslogParser"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.LineSplitter(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.lineSplitter"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.exceptionCaught(2)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.exceptionCaught(2)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.exceptionCaught(2)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.exceptionCaught(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.maxEventSize"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)" "org.apache.mina.core.buffer.IoBuffer.allocate(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)" "org.apache.mina.core.session.IoSession.setAttribute(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionOpened(1)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionOpened(1)" "org.slf4j.Logger.debug(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionOpened(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionClosed(1)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionClosed(1)" "org.slf4j.Logger.info(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionClosed(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.mina.core.session.IoSession.getAttribute(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.defaultDecoder"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.get(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.mina.core.session.IoSession.getLocalAddress(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portCharsets"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.mina.core.buffer.IoBuffer.hasRemaining(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.batchSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.lineSplitter"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portHeader"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.slf4j.Logger.trace(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sourceCounter"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.channelProcessor"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.mina.core.buffer.IoBuffer.getString(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "com.google.common.base.Throwables.propagate(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.mina.core.buffer.IoBuffer.remaining(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.mina.core.buffer.IoBuffer.get(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.slf4j.Logger.trace(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.syslogParser"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.keepFields"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.SyslogParser.parseMessage(3)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)" "org.slf4j.Logger.debug(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.SAVED_BUF"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.channelProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.channelProcessor"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.maxEventSize"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.batchSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sourceCounter"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portHeader"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.syslogParser" "org.apache.flume.source.SyslogParser"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.syslogParser"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.lineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.lineSplitter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.defaultDecoder" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.defaultDecoder"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portCharsets"
contain "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.keepFields"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.Resettable"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
contain "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.readEvents(1)"
contain "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.mark(0)"
contain "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.reset(0)"
contain "org.apache.flume.serialization.EventDeserializer" "org.apache.flume.serialization.EventDeserializer.close(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer" "org.apache.flume.conf.ConfigurableComponent"
contain "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer.serialize(1)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.1" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor"
call "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.SupervisorPolicy(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.isValid(2)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.failures"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.isValid(2)"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogFormatter"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogStatus"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.Mode"
reference "org.apache.flume.source.SyslogUtils" "byte[]"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.Event"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.source.SyslogUtils" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.SyslogUtils" "org.jboss.netty.buffer.ChannelBuffer"
reference "org.apache.flume.source.SyslogUtils" "org.slf4j.LoggerFactory"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.SyslogUtils" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.source.SyslogUtils.SyslogUtils(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogUtils(0)"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(1)" "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
call "org.apache.flume.source.SyslogUtils.SyslogUtils(1)" "org.apache.flume.source.SyslogUtils.SyslogUtils(3)"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.Mode.START"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.m"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.prio"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.formats"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.timeStamp"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.hostName"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.msgBody"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.isUdp"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.isBadEvent"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.MIN_SIZE"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.maxSize"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.baos"
reference "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.keepFields"
call "org.apache.flume.source.SyslogUtils.SyslogUtils(3)" "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogUtils(3)"
call "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(1)"
reference "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.regexPattern"
reference "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
reference "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
reference "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
reference "org.apache.flume.source.SyslogUtils.addFormats(1)" "org.apache.flume.source.SyslogUtils.formats"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.addFormats(1)"
call "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(1)"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.regexPattern"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.addYear"
reference "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)" "org.apache.flume.source.SyslogUtils.formats"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.isBadEvent"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.prio"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.formatHeaders(0)"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.timeStamp"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.hostName"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.logger"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.slf4j.Logger.warn(1)"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.maxSize"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.keepFields"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.msgBody"
reference "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.baos"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.source.SyslogUtils.reset(0)"
call "org.apache.flume.source.SyslogUtils.buildEvent(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.buildEvent(0)"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.baos"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.formats"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.regexPattern"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.addYear"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.timeStamp"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.hostName"
reference "org.apache.flume.source.SyslogUtils.formatHeaders(0)" "org.apache.flume.source.SyslogUtils.msgBody"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.formatHeaders(0)"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.baos"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.Mode.START"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.m"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.prio"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.isBadEvent"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.hostName"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.timeStamp"
reference "org.apache.flume.source.SyslogUtils.reset(0)" "org.apache.flume.source.SyslogUtils.msgBody"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.reset(0)"
call "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.jboss.netty.buffer.ChannelBuffer.readable(0)"
call "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.jboss.netty.buffer.ChannelBuffer.readByte(0)"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.1.$SwitchMap$org$apache$flume$source$SyslogUtils$Mode"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.m"
call "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.Mode.ordinal(0)"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.baos"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.Mode.PRIO"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.logger"
call "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.isBadEvent"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.Mode.DATA"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.prio"
call "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.buildEvent(0)"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.maxSize"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
reference "org.apache.flume.source.SyslogUtils.extractEvent(1)" "org.apache.flume.source.SyslogUtils.isUdp"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
reference "org.apache.flume.source.SyslogUtils.getEventSize(0)" "org.apache.flume.source.SyslogUtils.maxSize"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.getEventSize(0)"
reference "org.apache.flume.source.SyslogUtils.setEventSize(1)" "org.apache.flume.source.SyslogUtils.maxSize"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.setEventSize(1)"
reference "org.apache.flume.source.SyslogUtils.setKeepFields(1)" "org.apache.flume.source.SyslogUtils.keepFields"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.setKeepFields(1)"
call "org.apache.flume.source.SyslogUtils.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SyslogUtils.static {...}" "org.apache.flume.source.SyslogUtils.logger"
reference "org.apache.flume.source.SyslogUtils.static {...}" "org.apache.flume.source.SyslogUtils.MIN_SIZE"
reference "org.apache.flume.source.SyslogUtils.static {...}" "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.static {...}"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_2"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_1"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_3"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_4"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC3164_1"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_MSG_RFC5424_0"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_MSG_RFC3164_0"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_POS"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_HOSTNAME_POS"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_BODY_POS"
reference "org.apache.flume.source.SyslogUtils.m" "org.apache.flume.source.SyslogUtils.Mode"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.m"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.prio"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.baos"
reference "org.apache.flume.source.SyslogUtils.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.logger"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_FACILITY"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.SYSLOG_SEVERITY"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.EVENT_STATUS"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.MIN_SIZE"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.isUdp"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.isBadEvent"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.maxSize"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.keepFields"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.formats"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.timeStamp"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.hostName"
contain "org.apache.flume.source.SyslogUtils" "org.apache.flume.source.SyslogUtils.msgBody"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.slf4j.Logger"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.PollableSource.Status"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.PollingRunner(0)"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.source.PollableSourceRunner.access$300(0)"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.source"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.shouldStop"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.counterGroup"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.PollableSource.process(0)"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.PollableSource.Status.equals(1)"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.apache.flume.CounterGroup.set(2)"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$002(2)"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$102(2)"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$202(2)"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$200(1)"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.source" "org.apache.flume.PollableSource"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.source"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.shouldStop"
reference "org.apache.flume.source.PollableSourceRunner.PollingRunner.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.PollableSourceRunner.PollingRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner.counterGroup"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.NameAndSerializer(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.headerName"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.NameAndSerializer(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.serializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.NameAndSerializer(2)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$000(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$100(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.headerName"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.serializer" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.serializer"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.FlumeException"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.DecodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.Event"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.ResettableFileInputStream"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableEventReader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.Context"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "com.google.common.base.Optional"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "com.google.common.base.Preconditions"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.slf4j.Logger"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "com.google.common.base.Charsets"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "com.google.common.io.Files"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.tools.PlatformDetect"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.DurablePositionTracker"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.serialization.EventDeserializerFactory"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.slf4j.LoggerFactory"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.base.Optional.absent(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.committed"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.base.Preconditions.checkNotNull(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.name(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.slf4j.Logger.isDebugEnabled(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.io.Files.readLines(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "com.google.common.base.Preconditions.checkState(3)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.FlumeException.FlumeException(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.spoolDirectory"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.completedSuffix"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerType"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerContext"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateFileName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.fileNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateBaseName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.baseNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ignorePattern"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deletePolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.decodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.consumeOrder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFile"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)" "com.google.common.base.Optional.isPresent(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.committed"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "com.google.common.base.Optional.isPresent(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.serialization.EventDeserializer.reset(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.serialization.EventDeserializer.readEvents(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateFileName"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.fileNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateBaseName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.baseNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "com.google.common.base.Optional.isPresent(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "org.apache.flume.serialization.EventDeserializer.close(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)" "com.google.common.base.Optional.absent(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.committed"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "com.google.common.base.Optional.isPresent(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)" "org.apache.flume.serialization.EventDeserializer.mark(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "com.google.common.base.Optional.isPresent(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "com.google.common.base.Preconditions.checkState(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.serialization.EventDeserializer.close(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLastModified(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLength(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deletePolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.name(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.completedSuffix"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.tools.PlatformDetect.isWindows(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "com.google.common.base.Optional.get(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "com.google.common.io.Files.equal(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.slf4j.Logger.warn(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.slf4j.Logger.error(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.{...}"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.spoolDirectory"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "com.google.common.base.Optional.absent(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.consumeOrder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.smallerLexicographical(2)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.smallerLexicographical(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFile"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.serialization.PositionTracker.getTarget(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.serialization.PositionTracker.close(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "com.google.common.base.Preconditions.checkState(3)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.decodeErrorPolicy"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerType"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerContext"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "com.google.common.base.Optional.of(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "com.google.common.base.Optional.absent(0)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFile"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$000(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$100(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(15)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.static {...}"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger" "org.slf4j.Logger"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFileName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.spoolDirectory"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.completedSuffix"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerType"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerContext" "org.apache.flume.Context"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerContext"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ignorePattern"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFile"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateFileName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateBaseName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.fileNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.baseNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.decodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.decodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.consumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.consumeOrder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile" "com.google.common.base.Optional"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead" "com.google.common.base.Optional"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.committed"
contain "org.apache.flume.formatter.output.EventFormatter" "org.apache.flume.formatter.output.EventFormatter.format(1)"
reference "org.apache.flume.formatter.output.PathManager.PathManager(0)" "org.apache.flume.formatter.output.PathManager.seriesTimestamp"
reference "org.apache.flume.formatter.output.PathManager.PathManager(0)" "org.apache.flume.formatter.output.PathManager.fileIndex"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.PathManager(0)"
reference "org.apache.flume.formatter.output.PathManager.nextFile(0)" "org.apache.flume.formatter.output.PathManager.baseDirectory"
reference "org.apache.flume.formatter.output.PathManager.nextFile(0)" "org.apache.flume.formatter.output.PathManager.seriesTimestamp"
reference "org.apache.flume.formatter.output.PathManager.nextFile(0)" "org.apache.flume.formatter.output.PathManager.fileIndex"
reference "org.apache.flume.formatter.output.PathManager.nextFile(0)" "org.apache.flume.formatter.output.PathManager.currentFile"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.nextFile(0)"
reference "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)" "org.apache.flume.formatter.output.PathManager.currentFile"
call "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)" "org.apache.flume.formatter.output.PathManager.nextFile(0)"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)"
reference "org.apache.flume.formatter.output.PathManager.rotate(0)" "org.apache.flume.formatter.output.PathManager.currentFile"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.rotate(0)"
reference "org.apache.flume.formatter.output.PathManager.getBaseDirectory(0)" "org.apache.flume.formatter.output.PathManager.baseDirectory"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.getBaseDirectory(0)"
reference "org.apache.flume.formatter.output.PathManager.setBaseDirectory(1)" "org.apache.flume.formatter.output.PathManager.baseDirectory"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.setBaseDirectory(1)"
reference "org.apache.flume.formatter.output.PathManager.getSeriesTimestamp(0)" "org.apache.flume.formatter.output.PathManager.seriesTimestamp"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.getSeriesTimestamp(0)"
reference "org.apache.flume.formatter.output.PathManager.getFileIndex(0)" "org.apache.flume.formatter.output.PathManager.fileIndex"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.getFileIndex(0)"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.seriesTimestamp"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.baseDirectory"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.fileIndex"
contain "org.apache.flume.formatter.output.PathManager" "org.apache.flume.formatter.output.PathManager.currentFile"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.SyslogTcpSource" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory"
reference "org.apache.flume.source.SyslogTcpSource" "org.jboss.netty.bootstrap.ServerBootstrap"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler"
reference "org.apache.flume.source.SyslogTcpSource" "org.jboss.netty.channel.ChannelFactory"
reference "org.apache.flume.source.SyslogTcpSource" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogTcpSource" "org.jboss.netty.channel.Channel"
reference "org.apache.flume.source.SyslogTcpSource" "org.jboss.netty.channel.ChannelFuture"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.Context"
reference "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogTcpSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)" "org.apache.flume.source.SyslogTcpSource.host"
call "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)" "org.apache.flume.source.SyslogTcpSource.counterGroup"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.NioServerSocketChannelFactory(2)"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.jboss.netty.bootstrap.ServerBootstrap.ServerBootstrap(1)"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.SyslogTcpSource.1.{...}"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.jboss.netty.bootstrap.ServerBootstrap.setPipelineFactory(1)"
reference "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.SyslogTcpSource.logger"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.SyslogTcpSource.host"
reference "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.SyslogTcpSource.port"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.jboss.netty.bootstrap.ServerBootstrap.bind(1)"
reference "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.SyslogTcpSource.nettyChannel"
call "org.apache.flume.source.SyslogTcpSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.start(0)"
reference "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.apache.flume.source.SyslogTcpSource.logger"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.apache.flume.source.SyslogTcpSource.counterGroup"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.apache.flume.source.SyslogTcpSource.nettyChannel"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.jboss.netty.channel.Channel.close(0)"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.jboss.netty.channel.Channel.getCloseFuture(0)"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.jboss.netty.channel.ChannelFuture.await(2)"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.SyslogTcpSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.stop(0)"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogTcpSource.port"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogTcpSource.host"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogTcpSource.eventSize"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogTcpSource.formaterProp"
call "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.SyslogTcpSource.configure(1)" "org.apache.flume.source.SyslogTcpSource.keepFields"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.configure(1)"
reference "org.apache.flume.source.SyslogTcpSource.getSourcePort(0)" "org.apache.flume.source.SyslogTcpSource.nettyChannel"
call "org.apache.flume.source.SyslogTcpSource.getSourcePort(0)" "org.jboss.netty.channel.Channel.getLocalAddress(0)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.getSourcePort(0)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.access$000(0)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.access$100(1)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.access$200(1)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.access$300(1)"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.access$400(1)"
call "org.apache.flume.source.SyslogTcpSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SyslogTcpSource.static {...}" "org.apache.flume.source.SyslogTcpSource.logger"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.static {...}"
reference "org.apache.flume.source.SyslogTcpSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.logger"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.port"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.host"
reference "org.apache.flume.source.SyslogTcpSource.nettyChannel" "org.jboss.netty.channel.Channel"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.nettyChannel"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.eventSize"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.formaterProp"
reference "org.apache.flume.source.SyslogTcpSource.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.counterGroup"
contain "org.apache.flume.source.SyslogTcpSource" "org.apache.flume.source.SyslogTcpSource.keepFields"
contain "org.apache.flume.conf.ConfigurableComponent" "org.apache.flume.conf.ConfigurableComponent.configure(1)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.slf4j.Logger"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.Builder(0)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.regex"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.excludeEvents"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexFilteringInterceptor.access$000(0)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.regex"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.excludeEvents"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)" "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(3)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.regex"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.excludeEvents"
reference "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState[]"
reference "org.apache.flume.lifecycle.LifecycleState.values(0)" "org.apache.flume.lifecycle.LifecycleState.$VALUES"
call "org.apache.flume.lifecycle.LifecycleState.values(0)" "org.apache.flume.lifecycle.LifecycleState[].clone(0)"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.values(0)"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.valueOf(1)"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.LifecycleState(2)"
call "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.LifecycleState(2)"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.ERROR"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.$VALUES"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
reference "org.apache.flume.lifecycle.LifecycleState.static {...}" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.static {...}"
reference "org.apache.flume.lifecycle.LifecycleState.IDLE" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.lifecycle.LifecycleState.START" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.lifecycle.LifecycleState.STOP" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.LifecycleState.ERROR" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.ERROR"
reference "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR" "org.apache.flume.lifecycle.LifecycleState[]"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
reference "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR" "org.apache.flume.lifecycle.LifecycleState[]"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.lifecycle.LifecycleState.$VALUES" "org.apache.flume.lifecycle.LifecycleState[]"
contain "org.apache.flume.lifecycle.LifecycleState" "org.apache.flume.lifecycle.LifecycleState.$VALUES"
reference "org.apache.flume.serialization.ResettableFileInputStream.1" "org.apache.flume.serialization.ResettableFileInputStream"
reference "org.apache.flume.serialization.ResettableFileInputStream.1" "org.apache.flume.serialization.DecodeErrorPolicy"
call "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.values(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.ResettableFileInputStream.1.$SwitchMap$org$apache$flume$serialization$DecodeErrorPolicy"
reference "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.ordinal(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
reference "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE"
contain "org.apache.flume.serialization.ResettableFileInputStream.1" "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}"
reference "org.apache.flume.serialization.ResettableFileInputStream.1.$SwitchMap$org$apache$flume$serialization$DecodeErrorPolicy" "int[]"
contain "org.apache.flume.serialization.ResettableFileInputStream.1" "org.apache.flume.serialization.ResettableFileInputStream.1.$SwitchMap$org$apache$flume$serialization$DecodeErrorPolicy"
reference "org.apache.flume.sink.ThriftSink" "org.apache.flume.api.RpcClientConfigurationConstants"
reference "org.apache.flume.sink.ThriftSink" "org.apache.flume.sink.AbstractRpcSink"
reference "org.apache.flume.sink.ThriftSink" "org.apache.flume.api.RpcClientFactory.ClientType"
reference "org.apache.flume.sink.ThriftSink" "org.apache.flume.api.RpcClientFactory"
call "org.apache.flume.sink.ThriftSink.ThriftSink(0)" "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)"
contain "org.apache.flume.sink.ThriftSink" "org.apache.flume.sink.ThriftSink.ThriftSink(0)"
reference "org.apache.flume.sink.ThriftSink.initializeRpcClient(1)" "org.apache.flume.api.RpcClientFactory.ClientType.THRIFT"
call "org.apache.flume.sink.ThriftSink.initializeRpcClient(1)" "org.apache.flume.api.RpcClientFactory.ClientType.name(0)"
call "org.apache.flume.sink.ThriftSink.initializeRpcClient(1)" "org.apache.flume.api.RpcClientFactory.getInstance(1)"
contain "org.apache.flume.sink.ThriftSink" "org.apache.flume.sink.ThriftSink.initializeRpcClient(1)"
reference "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State[]"
reference "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.values(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.$VALUES"
call "org.apache.flume.channel.BasicTransactionSemantics.State.values(0)" "org.apache.flume.channel.BasicTransactionSemantics.State[].clone(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.values(0)"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.valueOf(1)"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.State(2)"
call "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.State(2)"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}" "org.apache.flume.channel.BasicTransactionSemantics.State.$VALUES"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.NEW" "org.apache.flume.channel.BasicTransactionSemantics.State"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN" "org.apache.flume.channel.BasicTransactionSemantics.State"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED" "org.apache.flume.channel.BasicTransactionSemantics.State"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED" "org.apache.flume.channel.BasicTransactionSemantics.State"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED"
reference "org.apache.flume.channel.BasicTransactionSemantics.State.$VALUES" "org.apache.flume.channel.BasicTransactionSemantics.State[]"
contain "org.apache.flume.channel.BasicTransactionSemantics.State" "org.apache.flume.channel.BasicTransactionSemantics.State.$VALUES"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor"
call "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.AlwaysRestartPolicy(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.SupervisorPolicy(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.AlwaysRestartPolicy(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.isValid(2)"
reference "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.Constants"
reference "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.Builder"
reference "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(1)" "org.apache.flume.interceptor.TimestampInterceptor.preserveExisting"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(1)"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.initialize(0)"
call "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)" "org.apache.flume.interceptor.TimestampInterceptor.preserveExisting"
reference "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)"
call "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)" "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.close(0)"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(2)"
contain "org.apache.flume.interceptor.TimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.preserveExisting"
contain "org.apache.flume.serialization.Seekable" "org.apache.flume.serialization.Seekable.seek(1)"
contain "org.apache.flume.serialization.Seekable" "org.apache.flume.serialization.Seekable.tell(0)"
contain "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.AvroEventSerializerConfigurationConstants(0)"
contain "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.SYNC_INTERVAL_BYTES"
contain "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.DEFAULT_SYNC_INTERVAL_BYTES"
contain "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.COMPRESSION_CODEC"
contain "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants" "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.DEFAULT_COMPRESSION_CODEC"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.Channel"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.ChannelFactory"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.conf.channel.ChannelType"
reference "org.apache.flume.channel.DefaultChannelFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.slf4j.Logger"
reference "org.apache.flume.channel.DefaultChannelFactory" "org.slf4j.LoggerFactory"
contain "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.channel.DefaultChannelFactory.DefaultChannelFactory(0)"
call "org.apache.flume.channel.DefaultChannelFactory.create(2)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.channel.DefaultChannelFactory.create(2)" "org.apache.flume.channel.DefaultChannelFactory.logger"
call "org.apache.flume.channel.DefaultChannelFactory.create(2)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.channel.DefaultChannelFactory.create(2)" "org.apache.flume.channel.DefaultChannelFactory.getClass(1)"
call "org.apache.flume.channel.DefaultChannelFactory.create(2)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.channel.DefaultChannelFactory.create(2)"
reference "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.conf.channel.ChannelType.OTHER"
call "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.conf.channel.ChannelType.valueOf(1)"
reference "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.channel.DefaultChannelFactory.logger"
call "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.conf.channel.ChannelType.equals(1)"
call "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.conf.channel.ChannelType.getChannelClassName(0)"
call "org.apache.flume.channel.DefaultChannelFactory.getClass(1)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.channel.DefaultChannelFactory.getClass(1)"
call "org.apache.flume.channel.DefaultChannelFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.DefaultChannelFactory.static {...}" "org.apache.flume.channel.DefaultChannelFactory.logger"
contain "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.channel.DefaultChannelFactory.static {...}"
reference "org.apache.flume.channel.DefaultChannelFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.channel.DefaultChannelFactory" "org.apache.flume.channel.DefaultChannelFactory.logger"
reference "org.apache.flume.channel.ChannelUtils" "org.apache.flume.Event"
reference "org.apache.flume.channel.ChannelUtils" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.ChannelUtils" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelUtils" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.ChannelUtils" "org.slf4j.Logger"
reference "org.apache.flume.channel.ChannelUtils" "org.slf4j.LoggerFactory"
call "org.apache.flume.channel.ChannelUtils.put(2)" "org.apache.flume.channel.ChannelUtils.1.{...}"
call "org.apache.flume.channel.ChannelUtils.put(2)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.ChannelUtils.put(2)" "org.apache.flume.channel.ChannelUtils.2.{...}"
call "org.apache.flume.channel.ChannelUtils.put(2)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.ChannelUtils.take(1)" "org.apache.flume.channel.ChannelUtils.3.{...}"
call "org.apache.flume.channel.ChannelUtils.take(1)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.take(1)"
call "org.apache.flume.channel.ChannelUtils.take(2)" "org.apache.flume.channel.ChannelUtils.4.{...}"
call "org.apache.flume.channel.ChannelUtils.take(2)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.take(2)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.transact(2)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.ChannelException.ChannelException(1)"
reference "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.channel.ChannelUtils.logger"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.channel.ChannelUtils.transact(2)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.ChannelUtils(0)"
call "org.apache.flume.channel.ChannelUtils.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.ChannelUtils.static {...}" "org.apache.flume.channel.ChannelUtils.logger"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.static {...}"
reference "org.apache.flume.channel.ChannelUtils.logger" "org.slf4j.Logger"
contain "org.apache.flume.channel.ChannelUtils" "org.apache.flume.channel.ChannelUtils.logger"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.ParseException"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.FlumeException"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.Options"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.GnuParser"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.HelpFormatter"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.SimpleTextLineEventReader"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.Event"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.ReliableEventReader"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.CommandLine"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.commons.cli.CommandLineParser"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.EventReader"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.api.RpcClient"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.slf4j.Logger"
reference "org.apache.flume.client.avro.AvroCLIClient" "com.google.common.base.Preconditions"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.api.RpcClientFactory"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.slf4j.LoggerFactory"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.client.avro.AvroCLIClient.AvroCLIClient(0)" "org.apache.flume.client.avro.AvroCLIClient.headers"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.AvroCLIClient(0)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.apache.flume.client.avro.AvroCLIClient.AvroCLIClient(0)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.apache.flume.client.avro.AvroCLIClient.run(0)"
reference "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.apache.flume.client.avro.AvroCLIClient.logger"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.apache.commons.cli.ParseException.getMessage(0)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.client.avro.AvroCLIClient.main(1)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.main(1)"
call "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.apache.commons.cli.CommandLine.getOptionValue(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.apache.flume.client.avro.AvroCLIClient.logger"
call "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.apache.flume.client.avro.AvroCLIClient.headers"
call "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)" "org.slf4j.Logger.error(3)"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.Options.Options(0)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.Options.addOption(4)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.GnuParser.GnuParser(0)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.CommandLineParser.parse(2)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.CommandLine.hasOption(1)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.HelpFormatter.HelpFormatter(0)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.HelpFormatter.printHelp(5)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.CommandLine.hasOption(1)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.ParseException.ParseException(1)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.commons.cli.CommandLine.getOptionValue(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.rpcClientPropsFile"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "com.google.common.base.Preconditions.checkArgument(3)"
reference "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.port"
reference "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.hostname"
reference "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.fileName"
reference "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.dirName"
call "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)" "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.rpcClientPropsFile"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.api.RpcClientFactory.getInstance(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.hostname"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.port"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.api.RpcClientFactory.getDefaultInstance(3)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.fileName"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.dirName"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.api.RpcClient.getBatchSize(0)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.EventReader.readEvents(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.headers"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.sent"
reference "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.AvroCLIClient.logger"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.api.RpcClient.appendBatch(1)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.client.avro.EventReader.close(0)"
call "org.apache.flume.client.avro.AvroCLIClient.run(0)" "org.apache.flume.api.RpcClient.close(0)"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.run(0)"
call "org.apache.flume.client.avro.AvroCLIClient.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.client.avro.AvroCLIClient.static {...}" "org.apache.flume.client.avro.AvroCLIClient.logger"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.static {...}"
reference "org.apache.flume.client.avro.AvroCLIClient.logger" "org.slf4j.Logger"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.logger"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.BATCH_SIZE"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.MAX_LINE_LENGTH"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.hostname"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.port"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.fileName"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.rpcClientPropsFile"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.dirName"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.headers"
contain "org.apache.flume.client.avro.AvroCLIClient" "org.apache.flume.client.avro.AvroCLIClient.sent"
reference "org.apache.flume.PollableSource" "org.apache.flume.Source"
reference "org.apache.flume.PollableSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.PollableSource" "org.apache.flume.EventDeliveryException"
contain "org.apache.flume.PollableSource" "org.apache.flume.PollableSource.process(0)"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicTransactionSemantics"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.AbstractChannel"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.channel.BasicChannelSemantics" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicTransactionSemantics.State"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)" "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
reference "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)" "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
reference "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)" "org.apache.flume.channel.BasicChannelSemantics.initialized"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.initialize(0)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.createTransaction(0)"
reference "org.apache.flume.channel.BasicChannelSemantics.put(1)" "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
call "org.apache.flume.channel.BasicChannelSemantics.put(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.channel.BasicChannelSemantics.put(1)" "org.apache.flume.channel.BasicTransactionSemantics.put(1)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.put(1)"
reference "org.apache.flume.channel.BasicChannelSemantics.take(0)" "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
call "org.apache.flume.channel.BasicChannelSemantics.take(0)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.channel.BasicChannelSemantics.take(0)" "org.apache.flume.channel.BasicTransactionSemantics.take(0)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.take(0)"
reference "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicChannelSemantics.initialized"
call "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicChannelSemantics.initialize(0)"
reference "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
call "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicTransactionSemantics.getState(0)"
reference "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED"
call "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
call "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)" "org.apache.flume.channel.BasicChannelSemantics.createTransaction(0)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
contain "org.apache.flume.channel.BasicChannelSemantics" "org.apache.flume.channel.BasicChannelSemantics.initialized"
reference "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.Sink"
reference "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.SinkProcessor"
reference "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.AbstractSinkProcessor(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.start(0)" "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
call "org.apache.flume.sink.AbstractSinkProcessor.start(0)" "org.apache.flume.Sink.start(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.sink.AbstractSinkProcessor.start(0)" "org.apache.flume.sink.AbstractSinkProcessor.state"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.start(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.stop(0)" "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
call "org.apache.flume.sink.AbstractSinkProcessor.stop(0)" "org.apache.flume.Sink.stop(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.sink.AbstractSinkProcessor.stop(0)" "org.apache.flume.sink.AbstractSinkProcessor.state"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.stop(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.getLifecycleState(0)" "org.apache.flume.sink.AbstractSinkProcessor.state"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.getLifecycleState(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.setSinks(1)" "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.setSinks(1)"
reference "org.apache.flume.sink.AbstractSinkProcessor.getSinks(0)" "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.getSinks(0)"
reference "org.apache.flume.sink.AbstractSinkProcessor.state" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.state"
contain "org.apache.flume.sink.AbstractSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.1" "org.apache.flume.interceptor.RegexFilteringInterceptor"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.RemoteMarkable"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.LengthMeasurable"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.DecodeErrorPolicy"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.ResettableFileInputStream" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.slf4j.Logger"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)" "com.google.common.base.Charsets.UTF_8"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableInputStream.ResettableInputStream(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.logger"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.file"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.in"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.chan"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.buf"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.byteBuf"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.charBuf"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.fileSize"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.decoder"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.position"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.maxCharWidth"
reference "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.1.$SwitchMap$org$apache$flume$serialization$DecodeErrorPolicy"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.DecodeErrorPolicy.ordinal(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)" "org.apache.flume.serialization.ResettableFileInputStream.seek(1)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
reference "org.apache.flume.serialization.ResettableFileInputStream.read(0)" "org.apache.flume.serialization.ResettableFileInputStream.byteBuf"
call "org.apache.flume.serialization.ResettableFileInputStream.read(0)" "org.apache.flume.serialization.ResettableFileInputStream.read(3)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.read(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.logger"
call "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.slf4j.Logger.trace(3)"
reference "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.position"
reference "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.fileSize"
reference "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.buf"
call "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.read(3)" "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.read(3)"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.buf"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.maxCharWidth"
call "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.charBuf"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.position"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.fileSize"
reference "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.decoder"
call "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)" "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)" "org.apache.flume.serialization.ResettableFileInputStream.buf"
reference "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)" "org.apache.flume.serialization.ResettableFileInputStream.chan"
reference "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)" "org.apache.flume.serialization.ResettableFileInputStream.position"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.mark(0)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
call "org.apache.flume.serialization.ResettableFileInputStream.mark(0)" "org.apache.flume.serialization.ResettableFileInputStream.tell(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.mark(0)" "org.apache.flume.serialization.PositionTracker.storePosition(1)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.mark(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.markPosition(1)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
call "org.apache.flume.serialization.ResettableFileInputStream.markPosition(1)" "org.apache.flume.serialization.PositionTracker.storePosition(1)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.markPosition(1)"
reference "org.apache.flume.serialization.ResettableFileInputStream.getMarkPosition(0)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
call "org.apache.flume.serialization.ResettableFileInputStream.getMarkPosition(0)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.getMarkPosition(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.reset(0)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
call "org.apache.flume.serialization.ResettableFileInputStream.reset(0)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
call "org.apache.flume.serialization.ResettableFileInputStream.reset(0)" "org.apache.flume.serialization.ResettableFileInputStream.seek(1)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.reset(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.length(0)" "org.apache.flume.serialization.ResettableFileInputStream.file"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.length(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.tell(0)" "org.apache.flume.serialization.ResettableFileInputStream.logger"
reference "org.apache.flume.serialization.ResettableFileInputStream.tell(0)" "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
call "org.apache.flume.serialization.ResettableFileInputStream.tell(0)" "org.slf4j.Logger.trace(2)"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.tell(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.logger"
call "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.slf4j.Logger.trace(2)"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.position"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.buf"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.decoder"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.chan"
reference "org.apache.flume.serialization.ResettableFileInputStream.seek(1)" "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.seek(1)"
reference "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)" "org.apache.flume.serialization.ResettableFileInputStream.position"
reference "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)" "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)"
reference "org.apache.flume.serialization.ResettableFileInputStream.close(0)" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
call "org.apache.flume.serialization.ResettableFileInputStream.close(0)" "org.apache.flume.serialization.PositionTracker.close(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.close(0)" "org.apache.flume.serialization.ResettableFileInputStream.in"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.close(0)"
reference "org.apache.flume.serialization.ResettableFileInputStream.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.logger"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.DEFAULT_BUF_SIZE"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.file"
reference "org.apache.flume.serialization.ResettableFileInputStream.tracker" "org.apache.flume.serialization.PositionTracker"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.tracker"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.in"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.chan"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.buf"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.charBuf"
reference "org.apache.flume.serialization.ResettableFileInputStream.byteBuf" "byte[]"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.byteBuf"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.fileSize"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.decoder"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.position"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
contain "org.apache.flume.serialization.ResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream.maxCharWidth"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.Source"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.BasicSourceSemantics" "com.google.common.base.Throwables"
reference "org.apache.flume.source.BasicSourceSemantics" "org.slf4j.Logger"
reference "org.apache.flume.source.BasicSourceSemantics" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.BasicSourceSemantics" "org.slf4j.LoggerFactory"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)" "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)"
call "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
reference "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.source.BasicSourceSemantics.exception"
reference "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
call "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)"
call "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.source.BasicSourceSemantics.doConfigure(1)"
reference "org.apache.flume.source.BasicSourceSemantics.configure(1)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
call "org.apache.flume.source.BasicSourceSemantics.configure(1)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.configure(1)"
reference "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.exception"
reference "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.logger"
call "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.getName(0)"
call "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.channelProcessor"
call "org.apache.flume.source.BasicSourceSemantics.start(0)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.doStart(0)"
reference "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)"
reference "org.apache.flume.source.BasicSourceSemantics.start(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.start(0)"
call "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.source.BasicSourceSemantics.doStop(0)"
reference "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
call "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)"
reference "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.source.BasicSourceSemantics.logger"
call "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.source.BasicSourceSemantics.getName(0)"
call "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.BasicSourceSemantics.stop(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.stop(0)"
reference "org.apache.flume.source.BasicSourceSemantics.setChannelProcessor(1)" "org.apache.flume.source.BasicSourceSemantics.channelProcessor"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.setChannelProcessor(1)"
reference "org.apache.flume.source.BasicSourceSemantics.getChannelProcessor(0)" "org.apache.flume.source.BasicSourceSemantics.channelProcessor"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.getChannelProcessor(0)"
reference "org.apache.flume.source.BasicSourceSemantics.setName(1)" "org.apache.flume.source.BasicSourceSemantics.name"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.setName(1)"
reference "org.apache.flume.source.BasicSourceSemantics.getName(0)" "org.apache.flume.source.BasicSourceSemantics.name"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.getName(0)"
reference "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)" "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
reference "org.apache.flume.source.BasicSourceSemantics.toString(0)" "org.apache.flume.source.BasicSourceSemantics.name"
reference "org.apache.flume.source.BasicSourceSemantics.toString(0)" "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.toString(0)"
call "org.apache.flume.source.BasicSourceSemantics.isStarted(0)" "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
reference "org.apache.flume.source.BasicSourceSemantics.isStarted(0)" "org.apache.flume.lifecycle.LifecycleState.START"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
reference "org.apache.flume.source.BasicSourceSemantics.getStartException(0)" "org.apache.flume.source.BasicSourceSemantics.exception"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
reference "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)" "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.doConfigure(1)"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.doStart(0)"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.doStop(0)"
call "org.apache.flume.source.BasicSourceSemantics.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.BasicSourceSemantics.static {...}" "org.apache.flume.source.BasicSourceSemantics.logger"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.static {...}"
reference "org.apache.flume.source.BasicSourceSemantics.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.logger"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.exception"
reference "org.apache.flume.source.BasicSourceSemantics.channelProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.channelProcessor"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.name"
reference "org.apache.flume.source.BasicSourceSemantics.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.source.BasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
reference "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy[]"
reference "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.serialization.DecodeErrorPolicy.values(0)" "org.apache.flume.serialization.DecodeErrorPolicy.$VALUES"
call "org.apache.flume.serialization.DecodeErrorPolicy.values(0)" "org.apache.flume.serialization.DecodeErrorPolicy[].clone(0)"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.values(0)"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.valueOf(1)"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.DecodeErrorPolicy(2)"
call "org.apache.flume.serialization.DecodeErrorPolicy.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.DecodeErrorPolicy(2)"
reference "org.apache.flume.serialization.DecodeErrorPolicy.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
reference "org.apache.flume.serialization.DecodeErrorPolicy.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
reference "org.apache.flume.serialization.DecodeErrorPolicy.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE"
reference "org.apache.flume.serialization.DecodeErrorPolicy.static {...}" "org.apache.flume.serialization.DecodeErrorPolicy.$VALUES"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.static {...}"
reference "org.apache.flume.serialization.DecodeErrorPolicy.FAIL" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
reference "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
reference "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE"
reference "org.apache.flume.serialization.DecodeErrorPolicy.$VALUES" "org.apache.flume.serialization.DecodeErrorPolicy[]"
contain "org.apache.flume.serialization.DecodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy.$VALUES"
reference "org.apache.flume.SystemClock" "org.apache.flume.Clock"
contain "org.apache.flume.SystemClock" "org.apache.flume.SystemClock.SystemClock(0)"
contain "org.apache.flume.SystemClock" "org.apache.flume.SystemClock.currentTimeMillis(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.FlumeException"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.slf4j.Logger"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "com.google.common.base.Preconditions"
reference "org.apache.flume.lifecycle.LifecycleSupervisor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
call "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
call "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.purger"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.needToPurge"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
call "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.purger"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
call "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.slf4j.Logger.error(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleState.equals(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
call "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.fail(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.fail(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.fail(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.slf4j.Logger.isDebugEnabled(0)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.Supervisoree(1)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.Status(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
call "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.MonitorRunnable(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.lifecycleAware"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.supervisoree"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.monitorService"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
call "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
call "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.discard"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleState.STOP"
call "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.needToPurge"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
call "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
call "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "org.slf4j.Logger.debug(3)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.getLifecycleState(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.isComponentInErrorState(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.isComponentInErrorState(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.isComponentInErrorState(1)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.isComponentInErrorState(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.access$200(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.access$300(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.access$400(1)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.access$302(2)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.static {...}" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.static {...}"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.logger" "org.slf4j.Logger"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.purger" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.purger"
contain "org.apache.flume.lifecycle.LifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.needToPurge"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.RemoteMarkable"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.FlumeException"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.Context"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.EventDeserializer"
contain "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.AvroEventDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)" "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(3)"
call "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)" "org.apache.flume.serialization.AvroEventDeserializer.access$100(1)"
call "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.serialization.AvroEventDeserializer.Builder" "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.instrumentation.ChannelCounter"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.MemoryTransaction"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.BasicChannelSemantics"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.Context"
reference "org.apache.flume.channel.MemoryChannel" "byte[]"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.channel.MemoryChannel" "org.slf4j.Logger"
reference "org.apache.flume.channel.MemoryChannel" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.Event"
reference "org.apache.flume.channel.MemoryChannel" "org.slf4j.LoggerFactory"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.channel.MemoryChannel" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)" "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)"
reference "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)" "org.apache.flume.channel.MemoryChannel.queueLock"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.defaultCapacity"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.LOGGER"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.defaultTransCapacity"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.transCapacity"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.defaultByteCapacityBufferPercentage"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.byteCapacityBufferPercentage"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.defaultByteCapacity"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.Context.getLong(2)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.byteCapacity"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.defaultKeepAlive"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.keepAlive"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.queue"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.resizeQueue(1)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.queueLock"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.queueRemaining"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.queueStored"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.bytesRemaining"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.lastByteCapacity"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.slf4j.Logger.warn(1)"
reference "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.channelCounter"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.channel.MemoryChannel.getName(0)"
call "org.apache.flume.channel.MemoryChannel.configure(1)" "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.configure(1)"
reference "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.apache.flume.channel.MemoryChannel.queueLock"
reference "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.apache.flume.channel.MemoryChannel.queue"
reference "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.apache.flume.channel.MemoryChannel.queueRemaining"
reference "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.apache.flume.channel.MemoryChannel.keepAlive"
reference "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.apache.flume.channel.MemoryChannel.LOGGER"
call "org.apache.flume.channel.MemoryChannel.resizeQueue(1)" "org.slf4j.Logger.warn(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.resizeQueue(1)"
reference "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.channel.MemoryChannel.channelCounter"
call "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.instrumentation.ChannelCounter.start(0)"
reference "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.channel.MemoryChannel.queue"
call "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelCapacity(1)"
call "org.apache.flume.channel.MemoryChannel.start(0)" "org.apache.flume.channel.BasicChannelSemantics.start(0)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.start(0)"
reference "org.apache.flume.channel.MemoryChannel.stop(0)" "org.apache.flume.channel.MemoryChannel.channelCounter"
reference "org.apache.flume.channel.MemoryChannel.stop(0)" "org.apache.flume.channel.MemoryChannel.queue"
call "org.apache.flume.channel.MemoryChannel.stop(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.channel.MemoryChannel.stop(0)" "org.apache.flume.instrumentation.ChannelCounter.stop(0)"
call "org.apache.flume.channel.MemoryChannel.stop(0)" "org.apache.flume.channel.BasicChannelSemantics.stop(0)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.stop(0)"
reference "org.apache.flume.channel.MemoryChannel.createTransaction(0)" "org.apache.flume.channel.MemoryChannel.transCapacity"
reference "org.apache.flume.channel.MemoryChannel.createTransaction(0)" "org.apache.flume.channel.MemoryChannel.channelCounter"
call "org.apache.flume.channel.MemoryChannel.createTransaction(0)" "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.createTransaction(0)"
call "org.apache.flume.channel.MemoryChannel.estimateEventSize(1)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.estimateEventSize(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$000(2)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$100(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$200(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$300(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$400(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$500(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$600(1)"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.access$700(1)"
call "org.apache.flume.channel.MemoryChannel.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.LOGGER"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.defaultCapacity"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.defaultTransCapacity"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.defaultByteCapacity"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.defaultByteCapacityBufferPercentage"
reference "org.apache.flume.channel.MemoryChannel.static {...}" "org.apache.flume.channel.MemoryChannel.defaultKeepAlive"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.static {...}"
reference "org.apache.flume.channel.MemoryChannel.LOGGER" "org.slf4j.Logger"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.LOGGER"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.defaultCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.defaultTransCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.byteCapacitySlotSize"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.defaultByteCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.defaultByteCapacityBufferPercentage"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.defaultKeepAlive"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.queueLock"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.queue"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.queueRemaining"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.queueStored"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.transCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.keepAlive"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.byteCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.lastByteCapacity"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.byteCapacityBufferPercentage"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.bytesRemaining"
reference "org.apache.flume.channel.MemoryChannel.channelCounter" "org.apache.flume.instrumentation.ChannelCounter"
contain "org.apache.flume.channel.MemoryChannel" "org.apache.flume.channel.MemoryChannel.channelCounter"
reference "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.Constants(0)"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.KEY"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.KEY_DEFAULT"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.VALUE"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.VALUE_DEFAULT"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.PRESERVE"
contain "org.apache.flume.interceptor.StaticInterceptor.Constants" "org.apache.flume.interceptor.StaticInterceptor.Constants.PRESERVE_DEFAULT"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.Source"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.AbstractSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.AbstractSource" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.source.AbstractSource.AbstractSource(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.source.AbstractSource.AbstractSource(0)" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.AbstractSource.start(0)" "org.apache.flume.source.AbstractSource.channelProcessor"
call "org.apache.flume.source.AbstractSource.start(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.source.AbstractSource.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.source.AbstractSource.start(0)" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.AbstractSource.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.source.AbstractSource.stop(0)" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.stop(0)"
reference "org.apache.flume.source.AbstractSource.setChannelProcessor(1)" "org.apache.flume.source.AbstractSource.channelProcessor"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.setChannelProcessor(1)"
reference "org.apache.flume.source.AbstractSource.getChannelProcessor(0)" "org.apache.flume.source.AbstractSource.channelProcessor"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.getChannelProcessor(0)"
reference "org.apache.flume.source.AbstractSource.getLifecycleState(0)" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.getLifecycleState(0)"
reference "org.apache.flume.source.AbstractSource.setName(1)" "org.apache.flume.source.AbstractSource.name"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.setName(1)"
reference "org.apache.flume.source.AbstractSource.getName(0)" "org.apache.flume.source.AbstractSource.name"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.getName(0)"
reference "org.apache.flume.source.AbstractSource.toString(0)" "org.apache.flume.source.AbstractSource.name"
reference "org.apache.flume.source.AbstractSource.toString(0)" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.toString(0)"
reference "org.apache.flume.source.AbstractSource.channelProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.channelProcessor"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.name"
reference "org.apache.flume.source.AbstractSource.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.source.AbstractSource" "org.apache.flume.source.AbstractSource.lifecycleState"
contain "org.apache.flume.serialization.LengthMeasurable" "org.apache.flume.serialization.LengthMeasurable.length(0)"
reference "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType[]"
reference "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.GangliaServer"
reference "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
reference "org.apache.flume.instrumentation.MonitoringType.values(0)" "org.apache.flume.instrumentation.MonitoringType.$VALUES"
call "org.apache.flume.instrumentation.MonitoringType.values(0)" "org.apache.flume.instrumentation.MonitoringType[].clone(0)"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.values(0)"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.valueOf(1)"
reference "org.apache.flume.instrumentation.MonitoringType.MonitoringType(3)" "org.apache.flume.instrumentation.MonitoringType.monitoringClass"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.MonitoringType(3)"
reference "org.apache.flume.instrumentation.MonitoringType.getMonitorClass(0)" "org.apache.flume.instrumentation.MonitoringType.monitoringClass"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.getMonitorClass(0)"
call "org.apache.flume.instrumentation.MonitoringType.static {...}" "org.apache.flume.instrumentation.MonitoringType.MonitoringType(3)"
reference "org.apache.flume.instrumentation.MonitoringType.static {...}" "org.apache.flume.instrumentation.MonitoringType.OTHER"
reference "org.apache.flume.instrumentation.MonitoringType.static {...}" "org.apache.flume.instrumentation.MonitoringType.GANGLIA"
reference "org.apache.flume.instrumentation.MonitoringType.static {...}" "org.apache.flume.instrumentation.MonitoringType.HTTP"
reference "org.apache.flume.instrumentation.MonitoringType.static {...}" "org.apache.flume.instrumentation.MonitoringType.$VALUES"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.static {...}"
reference "org.apache.flume.instrumentation.MonitoringType.OTHER" "org.apache.flume.instrumentation.MonitoringType"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.OTHER"
reference "org.apache.flume.instrumentation.MonitoringType.GANGLIA" "org.apache.flume.instrumentation.MonitoringType"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.GANGLIA"
reference "org.apache.flume.instrumentation.MonitoringType.HTTP" "org.apache.flume.instrumentation.MonitoringType"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.HTTP"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.monitoringClass"
reference "org.apache.flume.instrumentation.MonitoringType.$VALUES" "org.apache.flume.instrumentation.MonitoringType[]"
contain "org.apache.flume.instrumentation.MonitoringType" "org.apache.flume.instrumentation.MonitoringType.$VALUES"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.mortbay.jetty.Server"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.mortbay.jetty.nio.SelectChannelConnector"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.mortbay.jetty.Connector"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.MonitorService"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.slf4j.Logger"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.Context"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.slf4j.LoggerFactory"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsServer(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.Server.Server(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.jettyServer"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.nio.SelectChannelConnector.SelectChannelConnector(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.nio.SelectChannelConnector.setReuseAddress(1)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.port"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.nio.SelectChannelConnector.setPort(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.Server.setConnectors(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.Server.setHandler(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.Server.start(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.mortbay.jetty.Server.isStarted(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.jettyServer"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)" "org.mortbay.jetty.Server.stop(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)" "org.mortbay.jetty.Server.join(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.port"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}" "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}" "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}" "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.jettyServer" "org.mortbay.jetty.Server"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.jettyServer"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.port"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG" "org.slf4j.Logger"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.1" "org.apache.flume.interceptor.RegexExtractorInterceptor"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.FlumeException"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.Context"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.Sink"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.slf4j.Logger"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.slf4j.LoggerFactory"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.LoadBalancingSinkProcessor(0)" "org.apache.flume.sink.AbstractSinkProcessor.AbstractSinkProcessor(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.LoadBalancingSinkProcessor(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.getSinks(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.Context.getString(2)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.setSinks(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.Context.Context(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.configure(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)" "org.apache.flume.sink.AbstractSinkProcessor.start(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.start(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.stop(0)" "org.apache.flume.sink.AbstractSinkProcessor.stop(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.stop(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.stop(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.stop(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.stop(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.createSinkIterator(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.Sink.process(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.informSinkFailed(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.static {...}" "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.static {...}"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_SELECTOR"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_SELECTOR_PREFIX"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_BACKOFF"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_ROUND_ROBIN"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_RANDOM"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_ROUND_ROBIN_BACKOFF"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_RANDOM_BACKOFF"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER" "org.slf4j.Logger"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.selector" "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.Status(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeen"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeenState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.firstSeen"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.failures"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.discard"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.firstSeen"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeen"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeenState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeenState"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.failures"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.discard"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Status" "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
reference "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate"
reference "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.annotations.InterfaceAudience" "org.apache.flume.annotations.InterfaceAudience.InterfaceAudience(0)"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.EventReader"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "com.google.common.base.Charsets"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "com.google.common.collect.Lists"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)" "org.apache.flume.client.avro.SimpleTextLineEventReader.reader"
contain "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.reader"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
contain "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)"
call "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)"
contain "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)"
reference "org.apache.flume.client.avro.SimpleTextLineEventReader.close(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.reader"
contain "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.SimpleTextLineEventReader.close(0)"
contain "org.apache.flume.client.avro.SimpleTextLineEventReader" "org.apache.flume.client.avro.SimpleTextLineEventReader.reader"
reference "org.apache.flume.tools.HTTPServerConstraintUtil" "org.mortbay.jetty.security.Constraint"
reference "org.apache.flume.tools.HTTPServerConstraintUtil" "org.mortbay.jetty.security.ConstraintMapping"
reference "org.apache.flume.tools.HTTPServerConstraintUtil" "org.mortbay.jetty.security.SecurityHandler"
reference "org.apache.flume.tools.HTTPServerConstraintUtil" "org.mortbay.jetty.servlet.Context"
contain "org.apache.flume.tools.HTTPServerConstraintUtil" "org.apache.flume.tools.HTTPServerConstraintUtil.HTTPServerConstraintUtil(0)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.Constraint.Constraint(0)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.Constraint.setAuthenticate(1)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.ConstraintMapping.ConstraintMapping(0)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.ConstraintMapping.setConstraint(1)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.ConstraintMapping.setMethod(1)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.ConstraintMapping.setPathSpec(1)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.SecurityHandler.SecurityHandler(0)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.security.SecurityHandler.setConstraintMappings(1)"
call "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)" "org.mortbay.jetty.servlet.Context.addHandler(1)"
contain "org.apache.flume.tools.HTTPServerConstraintUtil" "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)"
reference "org.apache.flume.annotations.InterfaceAudience.Private" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.source.BasicSourceSemantics"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.source.AbstractEventDrivenSource.AbstractEventDrivenSource(0)" "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)"
contain "org.apache.flume.source.AbstractEventDrivenSource" "org.apache.flume.source.AbstractEventDrivenSource.AbstractEventDrivenSource(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.mina.core.buffer.IoBuffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.slf4j.Logger"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.LineSplitter(1)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.maxLineLength"
contain "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.LineSplitter(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.mark(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.position(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.hasRemaining(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.maxLineLength"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.get(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.reset(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.get(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.put(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.flip(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.getSlice(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.mina.core.buffer.IoBuffer.clear(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)"
contain "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.NEWLINE"
contain "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.maxLineLength"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPBadRequestException"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSourceHandler"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.slf4j.Logger"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(0)" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.this$0"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(0)"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.this$0"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSource.access$100(1)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSource.access$200(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPBadRequestException.getMessage(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSource.access$300(1)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.source.http.HTTPSource.getChannelProcessor(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.ChannelException.getMessage(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)"
call "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doGet(2)" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doGet(2)"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(1)"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.serialVersionUID"
reference "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.this$0" "org.apache.flume.source.http.HTTPSource"
contain "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet" "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.this$0"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor.Constants"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE_DFLT"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.Builder(0)" "org.apache.flume.interceptor.TimestampInterceptor.Builder.preserveExisting"
contain "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor.Builder.Builder(0)"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.build(0)" "org.apache.flume.interceptor.TimestampInterceptor.Builder.preserveExisting"
call "org.apache.flume.interceptor.TimestampInterceptor.Builder.build(0)" "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(2)"
contain "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE_DFLT"
call "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.TimestampInterceptor.Builder.preserveExisting"
contain "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)"
contain "org.apache.flume.interceptor.TimestampInterceptor.Builder" "org.apache.flume.interceptor.TimestampInterceptor.Builder.preserveExisting"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.util.JMXPollUtil"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.slf4j.Logger"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.GangliaCollector(0)" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.this$0"
contain "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.GangliaCollector(0)"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.this$0"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.access$100(1)"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.server"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.apache.flume.instrumentation.GangliaServer.access$200(0)"
call "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)"
contain "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.access$002(1)"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.server" "org.apache.flume.instrumentation.GangliaServer"
contain "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.server"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.this$0" "org.apache.flume.instrumentation.GangliaServer"
contain "org.apache.flume.instrumentation.GangliaServer.GangliaCollector" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.this$0"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.{...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.this$0"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.{...}"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.accept(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.this$0"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.accept(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$000(1)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.accept(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$100(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.accept(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.this$0" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.this$0"
reference "org.apache.flume.formatter.output.TextDelimitedOutputFormatter" "org.apache.flume.formatter.output.EventFormatter"
reference "org.apache.flume.formatter.output.TextDelimitedOutputFormatter" "org.apache.flume.Event"
contain "org.apache.flume.formatter.output.TextDelimitedOutputFormatter" "org.apache.flume.formatter.output.TextDelimitedOutputFormatter.TextDelimitedOutputFormatter(0)"
call "org.apache.flume.formatter.output.TextDelimitedOutputFormatter.format(1)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.formatter.output.TextDelimitedOutputFormatter" "org.apache.flume.formatter.output.TextDelimitedOutputFormatter.format(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.mina.transport.socket.nio.NioSocketAcceptor"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.Context"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "com.google.common.collect.ImmutableMap"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "com.google.common.collect.Lists"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "com.google.common.collect.ImmutableSet"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.slf4j.Logger"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.mina.transport.socket.SocketSessionConfig"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.mina.core.session.IdleStatus"
reference "org.apache.flume.source.MultiportSyslogTCPSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ports"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)" "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)" "org.apache.flume.source.MultiportSyslogTCPSource.portCharsets"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.ports"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.host"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.numProcessors"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.maxEventSize"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.defaultCharset"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.defaultDecoder"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.portCharsets"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "com.google.common.collect.ImmutableMap.entrySet(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "com.google.common.collect.ImmutableSet.iterator(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.batchSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.portHeader"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.readBufferSize"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.keepFields"
reference "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.source.MultiportSyslogTCPSource.getName(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.numProcessors"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.NioSocketAcceptor(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.acceptor"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.NioSocketAcceptor(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.setReuseAddress(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.getSessionConfig(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.readBufferSize"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.SocketSessionConfig.setReadBufferSize(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.core.session.IdleStatus.BOTH_IDLE"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.SocketSessionConfig.setIdleTime(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.maxEventSize"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.batchSize"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.getChannelProcessor(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.portHeader"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.defaultDecoder"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.portCharsets"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.keepFields"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.setHandler(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ports"
reference "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.MultiportSyslogTCPSource.host"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.bind(1)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.start(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.flume.source.MultiportSyslogTCPSource.acceptor"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.unbind(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.mina.transport.socket.nio.NioSocketAcceptor.dispose(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.toString(0)" "org.apache.flume.source.MultiportSyslogTCPSource.getName(0)"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.toString(0)"
call "org.apache.flume.source.MultiportSyslogTCPSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.static {...}" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.static {...}"
reference "org.apache.flume.source.MultiportSyslogTCPSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.logger"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.portCharsets"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.ports"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.host"
reference "org.apache.flume.source.MultiportSyslogTCPSource.acceptor" "org.apache.mina.transport.socket.nio.NioSocketAcceptor"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.acceptor"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.numProcessors"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.maxEventSize"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.batchSize"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.readBufferSize"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.portHeader"
reference "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.defaultCharset"
reference "org.apache.flume.source.MultiportSyslogTCPSource.defaultDecoder" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.defaultDecoder"
contain "org.apache.flume.source.MultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.keepFields"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.StaticInterceptor"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "com.google.common.collect.Lists"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(2)" "org.apache.flume.interceptor.RegexFilteringInterceptor.regex"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(2)" "org.apache.flume.interceptor.RegexFilteringInterceptor.excludeEvents"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(2)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.initialize(0)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexFilteringInterceptor.excludeEvents"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexFilteringInterceptor.regex"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.close(0)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.access$000(0)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(3)"
call "org.apache.flume.interceptor.RegexFilteringInterceptor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.static {...}" "org.apache.flume.interceptor.RegexFilteringInterceptor.logger"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.static {...}"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.logger" "org.slf4j.Logger"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.logger"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.regex"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.excludeEvents"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.jboss.netty.buffer.ChannelBuffer"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.jboss.netty.channel.SimpleChannelHandler"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.jboss.netty.channel.ChannelHandlerContext"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.jboss.netty.channel.MessageEvent"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.this$0"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)" "org.jboss.netty.channel.SimpleChannelHandler.SimpleChannelHandler(0)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(3)"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.setFormater(1)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.setFormater(1)" "org.apache.flume.source.SyslogUtils.addFormats(1)"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.setFormater(1)"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.setKeepFields(1)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.setKeepFields(1)" "org.apache.flume.source.SyslogUtils.setKeepFields(1)"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.setKeepFields(1)"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.this$0"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.access$000(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUtils.setEventSize(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.jboss.netty.channel.MessageEvent.getMessage(0)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.getChannelProcessor(0)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.access$100(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.apache.flume.source.SyslogUDPSource.access$200(0)"
call "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils" "org.apache.flume.source.SyslogUtils"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
reference "org.apache.flume.source.SyslogUDPSource.syslogHandler.this$0" "org.apache.flume.source.SyslogUDPSource"
contain "org.apache.flume.source.SyslogUDPSource.syslogHandler" "org.apache.flume.source.SyslogUDPSource.syslogHandler.this$0"
reference "org.apache.flume.tools.TimestampRoundDownUtil" "com.google.common.base.Preconditions"
contain "org.apache.flume.tools.TimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil.TimestampRoundDownUtil(0)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)"
contain "org.apache.flume.tools.TimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)"
contain "org.apache.flume.tools.TimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)" "com.google.common.base.Preconditions.checkArgument(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)"
contain "org.apache.flume.tools.TimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)"
call "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)" "com.google.common.base.Preconditions.checkArgument(2)"
contain "org.apache.flume.tools.TimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)"
reference "org.apache.flume.interceptor.Interceptor.Builder" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.interceptor.Interceptor.Builder" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.Interceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.Channel"
reference "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.FlumeException"
reference "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.AbstractChannelSelector(0)"
reference "org.apache.flume.channel.AbstractChannelSelector.getAllChannels(0)" "org.apache.flume.channel.AbstractChannelSelector.channels"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.getAllChannels(0)"
reference "org.apache.flume.channel.AbstractChannelSelector.setChannels(1)" "org.apache.flume.channel.AbstractChannelSelector.channels"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.setChannels(1)"
reference "org.apache.flume.channel.AbstractChannelSelector.setName(1)" "org.apache.flume.channel.AbstractChannelSelector.name"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.setName(1)"
reference "org.apache.flume.channel.AbstractChannelSelector.getName(0)" "org.apache.flume.channel.AbstractChannelSelector.name"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.getName(0)"
call "org.apache.flume.channel.AbstractChannelSelector.getChannelNameMap(0)" "org.apache.flume.channel.AbstractChannelSelector.getAllChannels(0)"
call "org.apache.flume.channel.AbstractChannelSelector.getChannelNameMap(0)" "org.apache.flume.Channel.getName(0)"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.getChannelNameMap(0)"
call "org.apache.flume.channel.AbstractChannelSelector.getChannelListFromNames(2)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.getChannelListFromNames(2)"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.channels"
contain "org.apache.flume.channel.AbstractChannelSelector" "org.apache.flume.channel.AbstractChannelSelector.name"
reference "org.apache.flume.sink.AbstractRpcSink" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.api.RpcClientConfigurationConstants"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.instrumentation.SinkCounter"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.FlumeException"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.ChannelException"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractSink"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.AbstractRpcSink" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.AbstractRpcSink" "com.google.common.collect.ImmutableMap"
reference "org.apache.flume.sink.AbstractRpcSink" "com.google.common.collect.ImmutableSet"
reference "org.apache.flume.sink.AbstractRpcSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.api.RpcClient"
reference "org.apache.flume.sink.AbstractRpcSink" "com.google.common.collect.Lists"
reference "org.apache.flume.sink.AbstractRpcSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.Sink"
call "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
reference "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "org.apache.flume.sink.AbstractRpcSink.DEFAULT_CXN_RESET_INTERVAL"
call "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)" "org.apache.flume.sink.AbstractRpcSink.cxnResetExecutor"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.clientProps"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.hostname"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.port"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.Context.getParameters(0)"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "com.google.common.collect.ImmutableMap.entrySet(0)"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "com.google.common.collect.ImmutableSet.iterator(0)"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.cxnResetInterval"
reference "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.configure(1)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.configure(1)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.initializeRpcClient(1)"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.client"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.hostname"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.port"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.resetConnectionFlag"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.clientProps"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.initializeRpcClient(1)"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.cxnResetInterval"
reference "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.cxnResetExecutor"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.sink.AbstractRpcSink.1.{...}"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.sink.AbstractRpcSink.createConnection(0)" "org.slf4j.Logger.debug(3)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.createConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)" "org.apache.flume.sink.AbstractRpcSink.createConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.client"
reference "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.api.RpcClient.close(0)"
reference "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.client"
call "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.createConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)" "org.apache.flume.api.RpcClient.isActive(0)"
call "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.instrumentation.SinkCounter.start(0)"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.createConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.hostname"
reference "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.port"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractSink.start(0)"
call "org.apache.flume.sink.AbstractRpcSink.start(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.start(0)"
reference "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
reference "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractRpcSink.cxnResetExecutor"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.slf4j.Logger.error(1)"
reference "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.instrumentation.SinkCounter.stop(0)"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.apache.flume.sink.AbstractSink.stop(0)"
call "org.apache.flume.sink.AbstractRpcSink.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.stop(0)"
call "org.apache.flume.sink.AbstractRpcSink.toString(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
reference "org.apache.flume.sink.AbstractRpcSink.toString(0)" "org.apache.flume.sink.AbstractRpcSink.hostname"
reference "org.apache.flume.sink.AbstractRpcSink.toString(0)" "org.apache.flume.sink.AbstractRpcSink.port"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.toString(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.getChannel(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Channel.getTransaction(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.resetConnectionFlag"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "com.google.common.collect.Lists.newLinkedList(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.client"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.api.RpcClient.getBatchSize(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Channel.take(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchEmptyCount(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchUnderflowCount(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchCompleteCount(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainAttemptCount(1)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.api.RpcClient.appendBatch(1)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Transaction.rollback(0)"
reference "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.logger"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.getName(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
call "org.apache.flume.sink.AbstractRpcSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(2)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.process(0)"
reference "org.apache.flume.sink.AbstractRpcSink.getUnderlyingClient(0)" "org.apache.flume.sink.AbstractRpcSink.client"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.getUnderlyingClient(0)"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.access$000(1)"
call "org.apache.flume.sink.AbstractRpcSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.AbstractRpcSink.static {...}" "org.apache.flume.sink.AbstractRpcSink.logger"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.static {...}"
reference "org.apache.flume.sink.AbstractRpcSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.logger"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.hostname"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.port"
reference "org.apache.flume.sink.AbstractRpcSink.client" "org.apache.flume.api.RpcClient"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.client"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.clientProps"
reference "org.apache.flume.sink.AbstractRpcSink.sinkCounter" "org.apache.flume.instrumentation.SinkCounter"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.cxnResetInterval"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.resetConnectionFlag"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.DEFAULT_CXN_RESET_INTERVAL"
contain "org.apache.flume.sink.AbstractRpcSink" "org.apache.flume.sink.AbstractRpcSink.cxnResetExecutor"
reference "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.Constants"
reference "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.Builder"
reference "org.apache.flume.interceptor.StaticInterceptor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(3)" "org.apache.flume.interceptor.StaticInterceptor.preserveExisting"
reference "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(3)" "org.apache.flume.interceptor.StaticInterceptor.key"
reference "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(3)" "org.apache.flume.interceptor.StaticInterceptor.value"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(3)"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.initialize(0)"
call "org.apache.flume.interceptor.StaticInterceptor.intercept(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.StaticInterceptor.intercept(1)" "org.apache.flume.interceptor.StaticInterceptor.preserveExisting"
reference "org.apache.flume.interceptor.StaticInterceptor.intercept(1)" "org.apache.flume.interceptor.StaticInterceptor.key"
reference "org.apache.flume.interceptor.StaticInterceptor.intercept(1)" "org.apache.flume.interceptor.StaticInterceptor.value"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.intercept(1)"
call "org.apache.flume.interceptor.StaticInterceptor.intercept(1)" "org.apache.flume.interceptor.StaticInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.close(0)"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.access$000(0)"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(4)"
call "org.apache.flume.interceptor.StaticInterceptor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.interceptor.StaticInterceptor.static {...}" "org.apache.flume.interceptor.StaticInterceptor.logger"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.static {...}"
reference "org.apache.flume.interceptor.StaticInterceptor.logger" "org.slf4j.Logger"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.logger"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.preserveExisting"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.key"
contain "org.apache.flume.interceptor.StaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.value"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.specific.SpecificDatumWriter"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.specific.SpecificDatumReader"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.file.DataFileWriter"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.file.DataFileReader"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.io.DatumWriter"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.avro.io.DatumReader"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.tools.PlatformDetect"
reference "org.apache.flume.serialization.DurablePositionTracker" "com.google.common.base.Preconditions"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.TransferStateFileMeta"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.TransferStateFileMeta.Builder"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.annotations.InterfaceStability"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.serialization.DurablePositionTracker.getTarget(0)"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.serialization.DurablePositionTracker.getPosition(0)"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.serialization.DurablePositionTracker.close(0)"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)"
call "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)" "org.apache.flume.tools.PlatformDetect.isWindows(0)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.trackerFile"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.target"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(1)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(1)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileWriter.DataFileWriter(1)"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.writer"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileWriter.appendTo(1)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileReader.DataFileReader(2)"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.reader"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileReader.getMetaString(1)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileWriter.setMeta(2)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.avro.file.DataFileWriter.create(2)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.getTarget(0)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(0)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.metaCache"
call "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.initReader(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)" "org.apache.flume.serialization.DurablePositionTracker.isOpen"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
reference "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.flume.serialization.DurablePositionTracker.trackerFile"
reference "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.flume.serialization.DurablePositionTracker.reader"
call "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.avro.file.DataFileReader.sync(1)"
call "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.avro.file.DataFileReader.hasNext(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.flume.serialization.DurablePositionTracker.metaCache"
call "org.apache.flume.serialization.DurablePositionTracker.initReader(0)" "org.apache.avro.file.DataFileReader.next(1)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.initReader(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.flume.serialization.DurablePositionTracker.metaCache"
call "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.flume.serialization.TransferStateFileMeta.setOffset(1)"
reference "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.flume.serialization.DurablePositionTracker.writer"
call "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.avro.file.DataFileWriter.append(1)"
call "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.avro.file.DataFileWriter.sync(0)"
call "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)" "org.apache.avro.file.DataFileWriter.flush(0)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)"
reference "org.apache.flume.serialization.DurablePositionTracker.getPosition(0)" "org.apache.flume.serialization.DurablePositionTracker.metaCache"
call "org.apache.flume.serialization.DurablePositionTracker.getPosition(0)" "org.apache.flume.serialization.TransferStateFileMeta.getOffset(0)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.getPosition(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.getTarget(0)" "org.apache.flume.serialization.DurablePositionTracker.target"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.getTarget(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.close(0)" "org.apache.flume.serialization.DurablePositionTracker.isOpen"
reference "org.apache.flume.serialization.DurablePositionTracker.close(0)" "org.apache.flume.serialization.DurablePositionTracker.writer"
call "org.apache.flume.serialization.DurablePositionTracker.close(0)" "org.apache.avro.file.DataFileWriter.close(0)"
reference "org.apache.flume.serialization.DurablePositionTracker.close(0)" "org.apache.flume.serialization.DurablePositionTracker.reader"
call "org.apache.flume.serialization.DurablePositionTracker.close(0)" "org.apache.avro.file.DataFileReader.close(0)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.close(0)"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.trackerFile"
reference "org.apache.flume.serialization.DurablePositionTracker.writer" "org.apache.avro.file.DataFileWriter"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.writer"
reference "org.apache.flume.serialization.DurablePositionTracker.reader" "org.apache.avro.file.DataFileReader"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.reader"
reference "org.apache.flume.serialization.DurablePositionTracker.metaCache" "org.apache.flume.serialization.TransferStateFileMeta"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.metaCache"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.target"
contain "org.apache.flume.serialization.DurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker.isOpen"
reference "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status[]"
reference "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource"
reference "org.apache.flume.PollableSource.Status.values(0)" "org.apache.flume.PollableSource.Status.$VALUES"
call "org.apache.flume.PollableSource.Status.values(0)" "org.apache.flume.PollableSource.Status[].clone(0)"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.values(0)"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.valueOf(1)"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.Status(2)"
call "org.apache.flume.PollableSource.Status.static {...}" "org.apache.flume.PollableSource.Status.Status(2)"
reference "org.apache.flume.PollableSource.Status.static {...}" "org.apache.flume.PollableSource.Status.READY"
reference "org.apache.flume.PollableSource.Status.static {...}" "org.apache.flume.PollableSource.Status.BACKOFF"
reference "org.apache.flume.PollableSource.Status.static {...}" "org.apache.flume.PollableSource.Status.$VALUES"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.static {...}"
reference "org.apache.flume.PollableSource.Status.READY" "org.apache.flume.PollableSource.Status"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.READY"
reference "org.apache.flume.PollableSource.Status.BACKOFF" "org.apache.flume.PollableSource.Status"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.BACKOFF"
reference "org.apache.flume.PollableSource.Status.$VALUES" "org.apache.flume.PollableSource.Status[]"
contain "org.apache.flume.PollableSource.Status" "org.apache.flume.PollableSource.Status.$VALUES"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy[]"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.values(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.$VALUES"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.values(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy[].clone(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.values(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.valueOf(1)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DeletePolicy(2)"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DeletePolicy(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DELAY"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.$VALUES"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DELAY" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DELAY"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.$VALUES" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy[]"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.$VALUES"
contain "org.apache.flume.Constants" "org.apache.flume.Constants.Constants(0)"
contain "org.apache.flume.Constants" "org.apache.flume.Constants.SYSPROP_CALLED_FROM_SERVICE"
reference "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializer" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.serialization.EventSerializer" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.serialization.EventSerializer" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventSerializer" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.afterReopen(0)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.write(1)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.flush(0)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.supportsReopen(0)"
contain "org.apache.flume.serialization.EventSerializer" "org.apache.flume.serialization.EventSerializer.CTX_PREFIX"
reference "org.apache.flume.source.SyslogUtils.1" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogUtils.1" "org.apache.flume.source.SyslogUtils.Mode"
call "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.Mode.values(0)"
reference "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.1.$SwitchMap$org$apache$flume$source$SyslogUtils$Mode"
reference "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.Mode.START"
call "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.Mode.ordinal(0)"
reference "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.Mode.PRIO"
reference "org.apache.flume.source.SyslogUtils.1.static {...}" "org.apache.flume.source.SyslogUtils.Mode.DATA"
contain "org.apache.flume.source.SyslogUtils.1" "org.apache.flume.source.SyslogUtils.1.static {...}"
reference "org.apache.flume.source.SyslogUtils.1.$SwitchMap$org$apache$flume$source$SyslogUtils$Mode" "int[]"
contain "org.apache.flume.source.SyslogUtils.1" "org.apache.flume.source.SyslogUtils.1.$SwitchMap$org$apache$flume$source$SyslogUtils$Mode"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelSize(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getEventPutAttemptCount(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getEventTakeAttemptCount(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getEventPutSuccessCount(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getEventTakeSuccessCount(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getStartTime(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getStopTime(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelCapacity(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getType(0)"
contain "org.apache.flume.instrumentation.ChannelCounterMBean" "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelFillPercentage(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)"
reference "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer" "org.apache.mina.core.buffer.IoBuffer"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
contain "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
reference "org.apache.flume.ChannelFactory" "org.apache.flume.FlumeException"
contain "org.apache.flume.ChannelFactory" "org.apache.flume.ChannelFactory.create(2)"
contain "org.apache.flume.ChannelFactory" "org.apache.flume.ChannelFactory.getClass(1)"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder[]"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.values(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.$VALUES"
call "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.values(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder[].clone(0)"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.values(0)"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.valueOf(1)"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.ConsumeOrder(2)"
call "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.ConsumeOrder(2)"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.$VALUES"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
reference "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.$VALUES" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder[]"
contain "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.$VALUES"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Purger" "org.apache.flume.lifecycle.LifecycleSupervisor"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.this$0"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Purger" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(0)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.this$0"
call "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.access$300(1)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.access$400(1)"
call "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.access$302(2)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Purger" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Purger" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(1)"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.this$0" "org.apache.flume.lifecycle.LifecycleSupervisor"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.Purger" "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.this$0"
contain "org.apache.flume.tools.GetJavaProperty" "org.apache.flume.tools.GetJavaProperty.GetJavaProperty(0)"
contain "org.apache.flume.tools.GetJavaProperty" "org.apache.flume.tools.GetJavaProperty.main(1)"
reference "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.conf.Configurables" "org.apache.flume.conf.ConfigurableComponent"
reference "org.apache.flume.conf.Configurables" "org.apache.flume.Context"
reference "org.apache.flume.conf.Configurables" "com.google.common.collect.ImmutableMap"
contain "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurables.Configurables(0)"
call "org.apache.flume.conf.Configurables.configure(2)" "org.apache.flume.conf.Configurable.configure(1)"
contain "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.conf.Configurables.configure(2)" "org.apache.flume.conf.ConfigurableComponent.configure(1)"
contain "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)" "org.apache.flume.Context.getParameters(0)"
call "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)" "com.google.common.collect.ImmutableMap.containsKey(1)"
call "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)" "com.google.common.collect.ImmutableMap.get(1)"
contain "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
call "org.apache.flume.conf.Configurables.ensureOptionalNonNull(2)" "org.apache.flume.Context.getParameters(0)"
call "org.apache.flume.conf.Configurables.ensureOptionalNonNull(2)" "com.google.common.collect.ImmutableMap.containsKey(1)"
call "org.apache.flume.conf.Configurables.ensureOptionalNonNull(2)" "com.google.common.collect.ImmutableMap.get(1)"
contain "org.apache.flume.conf.Configurables" "org.apache.flume.conf.Configurables.ensureOptionalNonNull(2)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.Context"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.serialization.DecodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DECODE_ERROR_POLICY"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.serialization.DecodeErrorPolicy.valueOf(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder"
call "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(15)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext" "org.apache.flume.Context"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy" "org.apache.flume.serialization.DecodeErrorPolicy"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy"
reference "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
contain "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.NoOpTransaction(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance"
call "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.NoOpTransaction(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.begin(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.commit(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.rollback(0)"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.close(0)"
reference "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction"
contain "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction" "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSourceConfigurationConstants"
reference "org.apache.flume.source.NetcatSource" "com.google.common.util.concurrent.ThreadFactoryBuilder"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.AcceptHandler"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.NetcatSocketHandler"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.NetcatSource" "org.apache.flume.Context"
reference "org.apache.flume.source.NetcatSource" "org.slf4j.Logger"
reference "org.apache.flume.source.NetcatSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.NetcatSource.NetcatSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.NetcatSource.NetcatSource(0)" "org.apache.flume.source.NetcatSource.port"
call "org.apache.flume.source.NetcatSource.NetcatSource(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.source.NetcatSource.NetcatSource(0)" "org.apache.flume.source.NetcatSource.counterGroup"
reference "org.apache.flume.source.NetcatSource.NetcatSource(0)" "org.apache.flume.source.NetcatSource.acceptThreadShouldStop"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.NetcatSource(0)"
call "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
call "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.source.NetcatSource.hostName"
call "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.source.NetcatSource.port"
call "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.source.NetcatSource.ackEveryEvent"
call "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.NetcatSource.configure(1)" "org.apache.flume.source.NetcatSource.maxLineLength"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.configure(1)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.logger"
call "org.apache.flume.source.NetcatSource.start(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.counterGroup"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.source.NetcatSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
call "org.apache.flume.source.NetcatSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
call "org.apache.flume.source.NetcatSource.start(0)" "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.handlerService"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.hostName"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.port"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.serverSocket"
call "org.apache.flume.source.NetcatSource.start(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.FlumeException.FlumeException(1)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.maxLineLength"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.AcceptHandler(1)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.acceptThreadShouldStop"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$002(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$102(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$202(2)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.ackEveryEvent"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$302(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$402(2)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.AcceptHandler.access$502(2)"
reference "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.NetcatSource.acceptThread"
call "org.apache.flume.source.NetcatSource.start(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.source.NetcatSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.start(0)"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.logger"
call "org.apache.flume.source.NetcatSource.stop(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.acceptThreadShouldStop"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.acceptThread"
call "org.apache.flume.source.NetcatSource.stop(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.serverSocket"
call "org.apache.flume.source.NetcatSource.stop(0)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.handlerService"
reference "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.NetcatSource.counterGroup"
call "org.apache.flume.source.NetcatSource.stop(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.NetcatSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.stop(0)"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.access$600(0)"
call "org.apache.flume.source.NetcatSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.NetcatSource.static {...}" "org.apache.flume.source.NetcatSource.logger"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.static {...}"
reference "org.apache.flume.source.NetcatSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.logger"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.hostName"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.port"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.maxLineLength"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.ackEveryEvent"
reference "org.apache.flume.source.NetcatSource.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.counterGroup"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.serverSocket"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.acceptThreadShouldStop"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.acceptThread"
contain "org.apache.flume.source.NetcatSource" "org.apache.flume.source.NetcatSource.handlerService"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.AvroRuntimeException"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.specific.SpecificRecordBuilderBase"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.data.RecordBuilder"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.Schema.Field"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.generic.GenericData"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.avro.Schema"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)" "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fields(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.isValidValue(2)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.data(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.avro.Schema.Field.schema(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.avro.generic.GenericData.deepCopy(2)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.getOffset(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.getOffset(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fields(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.validate(2)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.hasOffset(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.hasOffset(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.clearOffset(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.clearOffset(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.fields(0)"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.Builder.defaultValue(1)"
reference "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.flume.serialization.TransferStateFileMeta.offset"
call "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)" "org.apache.avro.AvroRuntimeException.AvroRuntimeException(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(2)"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
contain "org.apache.flume.serialization.TransferStateFileMeta.Builder" "org.apache.flume.serialization.TransferStateFileMeta.Builder.__PARANAMER_DATA"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder" "org.apache.flume.serialization.FlumeEventAvroEventSerializer"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.Builder(0)"
call "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.build(2)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(2)"
call "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.build(2)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.configure(1)"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.build(2)"
reference "org.apache.flume.channel.ChannelUtils.3" "org.apache.flume.channel.ChannelUtils"
reference "org.apache.flume.channel.ChannelUtils.3" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelUtils.3.{...}" "org.apache.flume.channel.ChannelUtils.3.val$channel"
contain "org.apache.flume.channel.ChannelUtils.3" "org.apache.flume.channel.ChannelUtils.3.{...}"
reference "org.apache.flume.channel.ChannelUtils.3.call(0)" "org.apache.flume.channel.ChannelUtils.3.val$channel"
call "org.apache.flume.channel.ChannelUtils.3.call(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.ChannelUtils.3" "org.apache.flume.channel.ChannelUtils.3.call(0)"
reference "org.apache.flume.channel.ChannelUtils.3.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.ChannelUtils.3" "org.apache.flume.channel.ChannelUtils.3.val$channel"
reference "org.apache.flume.SourceFactory" "org.apache.flume.FlumeException"
contain "org.apache.flume.SourceFactory" "org.apache.flume.SourceFactory.create(2)"
contain "org.apache.flume.SourceFactory" "org.apache.flume.SourceFactory.getClass(1)"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder.Builder(0)"
call "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder.build(2)" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(3)"
contain "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder" "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder.build(2)"
reference "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.Event"
reference "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.channel.ChannelUtils"
reference "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelUtils.2.{...}" "org.apache.flume.channel.ChannelUtils.2.val$events"
reference "org.apache.flume.channel.ChannelUtils.2.{...}" "org.apache.flume.channel.ChannelUtils.2.val$channel"
contain "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.channel.ChannelUtils.2.{...}"
reference "org.apache.flume.channel.ChannelUtils.2.run(0)" "org.apache.flume.channel.ChannelUtils.2.val$events"
reference "org.apache.flume.channel.ChannelUtils.2.run(0)" "org.apache.flume.channel.ChannelUtils.2.val$channel"
call "org.apache.flume.channel.ChannelUtils.2.run(0)" "org.apache.flume.Channel.put(1)"
contain "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.channel.ChannelUtils.2.run(0)"
contain "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.channel.ChannelUtils.2.val$events"
reference "org.apache.flume.channel.ChannelUtils.2.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.ChannelUtils.2" "org.apache.flume.channel.ChannelUtils.2.val$channel"
reference "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.channel.ChannelUtils"
reference "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelUtils.1.{...}" "org.apache.flume.channel.ChannelUtils.1.val$channel"
reference "org.apache.flume.channel.ChannelUtils.1.{...}" "org.apache.flume.channel.ChannelUtils.1.val$event"
contain "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.channel.ChannelUtils.1.{...}"
reference "org.apache.flume.channel.ChannelUtils.1.run(0)" "org.apache.flume.channel.ChannelUtils.1.val$channel"
reference "org.apache.flume.channel.ChannelUtils.1.run(0)" "org.apache.flume.channel.ChannelUtils.1.val$event"
call "org.apache.flume.channel.ChannelUtils.1.run(0)" "org.apache.flume.Channel.put(1)"
contain "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.channel.ChannelUtils.1.run(0)"
reference "org.apache.flume.channel.ChannelUtils.1.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.channel.ChannelUtils.1.val$channel"
reference "org.apache.flume.channel.ChannelUtils.1.val$event" "org.apache.flume.Event"
contain "org.apache.flume.channel.ChannelUtils.1" "org.apache.flume.channel.ChannelUtils.1.val$event"
reference "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.Event"
reference "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.channel.ChannelUtils"
reference "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelUtils.4.{...}" "org.apache.flume.channel.ChannelUtils.4.val$max"
reference "org.apache.flume.channel.ChannelUtils.4.{...}" "org.apache.flume.channel.ChannelUtils.4.val$channel"
contain "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.channel.ChannelUtils.4.{...}"
reference "org.apache.flume.channel.ChannelUtils.4.call(0)" "org.apache.flume.channel.ChannelUtils.4.val$max"
reference "org.apache.flume.channel.ChannelUtils.4.call(0)" "org.apache.flume.channel.ChannelUtils.4.val$channel"
call "org.apache.flume.channel.ChannelUtils.4.call(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.channel.ChannelUtils.4.call(0)"
contain "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.channel.ChannelUtils.4.val$max"
reference "org.apache.flume.channel.ChannelUtils.4.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.ChannelUtils.4" "org.apache.flume.channel.ChannelUtils.4.val$channel"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.Sink"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.AbstractSinkProcessor"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.Context"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.slf4j.Logger"
reference "org.apache.flume.sink.FailoverSinkProcessor" "org.slf4j.LoggerFactory"
call "org.apache.flume.sink.FailoverSinkProcessor.FailoverSinkProcessor(0)" "org.apache.flume.sink.AbstractSinkProcessor.AbstractSinkProcessor(0)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.FailoverSinkProcessor(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.liveSinks"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.failedSinks"
call "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.maxPenalty"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.logger"
call "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.sinks"
call "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.slf4j.Logger.warn(3)"
reference "org.apache.flume.sink.FailoverSinkProcessor.configure(1)" "org.apache.flume.sink.FailoverSinkProcessor.activeSink"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.configure(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.failedSinks"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getRefresh(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getSink(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.Sink.process(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.liveSinks"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getPriority(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.activeSink"
reference "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.logger"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.Sink.getName(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.slf4j.Logger.warn(3)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.process(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)" "org.apache.flume.sink.FailoverSinkProcessor.liveSinks"
reference "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)" "org.apache.flume.sink.FailoverSinkProcessor.failedSinks"
reference "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)" "org.apache.flume.sink.FailoverSinkProcessor.activeSink"
call "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.setSinks(1)" "org.apache.flume.sink.AbstractSinkProcessor.setSinks(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.setSinks(1)" "org.apache.flume.sink.FailoverSinkProcessor.sinks"
call "org.apache.flume.sink.FailoverSinkProcessor.setSinks(1)" "org.apache.flume.Sink.getName(0)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.setSinks(1)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.access$000(0)"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.access$100(1)"
call "org.apache.flume.sink.FailoverSinkProcessor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.static {...}" "org.apache.flume.sink.FailoverSinkProcessor.logger"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.static {...}"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.FAILURE_PENALTY"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.DEFAULT_MAX_PENALTY"
reference "org.apache.flume.sink.FailoverSinkProcessor.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.logger"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.PRIORITY_PREFIX"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.MAX_PENALTY_PREFIX"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.sinks"
reference "org.apache.flume.sink.FailoverSinkProcessor.activeSink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.activeSink"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.liveSinks"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.failedSinks"
contain "org.apache.flume.sink.FailoverSinkProcessor" "org.apache.flume.sink.FailoverSinkProcessor.maxPenalty"
reference "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor"
contain "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor.Constants.Constants(0)"
reference "org.apache.flume.interceptor.TimestampInterceptor.Constants.static {...}" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
reference "org.apache.flume.interceptor.TimestampInterceptor.Constants.static {...}" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE"
reference "org.apache.flume.interceptor.TimestampInterceptor.Constants.static {...}" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE_DFLT"
contain "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor.Constants.static {...}"
contain "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
contain "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE"
contain "org.apache.flume.interceptor.TimestampInterceptor.Constants" "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE_DFLT"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionCreatedCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionClosedCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionFailedCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getBatchEmptyCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getBatchUnderflowCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getBatchCompleteCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getEventDrainAttemptCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getEventDrainSuccessCount(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getStartTime(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getStopTime(0)"
contain "org.apache.flume.instrumentation.SinkCounterMBean" "org.apache.flume.instrumentation.SinkCounterMBean.getType(0)"
contain "org.apache.flume.serialization.RemoteMarkable" "org.apache.flume.serialization.RemoteMarkable.markPosition(1)"
contain "org.apache.flume.serialization.RemoteMarkable" "org.apache.flume.serialization.RemoteMarkable.getMarkPosition(0)"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.Sink"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.SinkFactory"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.conf.sink.SinkType"
reference "org.apache.flume.sink.DefaultSinkFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.slf4j.Logger"
reference "org.apache.flume.sink.DefaultSinkFactory" "org.slf4j.LoggerFactory"
contain "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory.DefaultSinkFactory(0)"
call "org.apache.flume.sink.DefaultSinkFactory.create(2)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.sink.DefaultSinkFactory.create(2)" "org.apache.flume.sink.DefaultSinkFactory.logger"
call "org.apache.flume.sink.DefaultSinkFactory.create(2)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.sink.DefaultSinkFactory.create(2)" "org.apache.flume.sink.DefaultSinkFactory.getClass(1)"
call "org.apache.flume.sink.DefaultSinkFactory.create(2)" "org.apache.flume.Sink.setName(1)"
call "org.apache.flume.sink.DefaultSinkFactory.create(2)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory.create(2)"
reference "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.conf.sink.SinkType.OTHER"
call "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.conf.sink.SinkType.valueOf(1)"
reference "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.sink.DefaultSinkFactory.logger"
call "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.conf.sink.SinkType.equals(1)"
call "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.conf.sink.SinkType.getSinkClassName(0)"
call "org.apache.flume.sink.DefaultSinkFactory.getClass(1)" "org.apache.flume.FlumeException.FlumeException(2)"
contain "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory.getClass(1)"
call "org.apache.flume.sink.DefaultSinkFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.DefaultSinkFactory.static {...}" "org.apache.flume.sink.DefaultSinkFactory.logger"
contain "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory.static {...}"
reference "org.apache.flume.sink.DefaultSinkFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.DefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory.logger"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getEventReceivedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getEventAcceptedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getAppendReceivedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getAppendAcceptedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getAppendBatchReceivedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getAppendBatchAcceptedCount(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getStartTime(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getStopTime(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getType(0)"
contain "org.apache.flume.instrumentation.SourceCounterMBean" "org.apache.flume.instrumentation.SourceCounterMBean.getOpenConnectionCount(0)"
reference "org.apache.flume.Source" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.Source" "org.apache.flume.NamedComponent"
reference "org.apache.flume.Source" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.Source" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.Source" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.Source" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.Source" "org.apache.flume.Source.setChannelProcessor(1)"
contain "org.apache.flume.Source" "org.apache.flume.Source.getChannelProcessor(0)"
reference "org.apache.flume.annotations.InterfaceStability.Evolving" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup"
reference "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounterMBean"
reference "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK"
reference "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)" "org.apache.flume.instrumentation.SinkCounter.ATTRIBUTES"
call "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)"
call "org.apache.flume.instrumentation.SinkCounter.getConnectionCreatedCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getConnectionCreatedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getConnectionClosedCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getConnectionClosedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getConnectionFailedCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getConnectionFailedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getBatchEmptyCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getBatchEmptyCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementBatchEmptyCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementBatchEmptyCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getBatchUnderflowCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getBatchUnderflowCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementBatchUnderflowCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementBatchUnderflowCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getBatchCompleteCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getBatchCompleteCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementBatchCompleteCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementBatchCompleteCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.getEventDrainAttemptCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getEventDrainAttemptCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainAttemptCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainAttemptCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.addToEventDrainAttemptCount(1)" "org.apache.flume.instrumentation.SinkCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainAttemptCount(1)"
call "org.apache.flume.instrumentation.SinkCounter.getEventDrainSuccessCount(0)" "org.apache.flume.instrumentation.SinkCounter.get(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.getEventDrainSuccessCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainSuccessCount(0)" "org.apache.flume.instrumentation.SinkCounter.increment(1)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainSuccessCount(0)"
call "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)" "org.apache.flume.instrumentation.SinkCounter.addAndGet(2)"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)"
reference "org.apache.flume.instrumentation.SinkCounter.static {...}" "org.apache.flume.instrumentation.SinkCounter.ATTRIBUTES"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.static {...}"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_CREATED"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_CLOSED"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_FAILED"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_EMPTY"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_UNDERFLOW"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_COMPLETE"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_EVENT_DRAIN_ATTEMPT"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.COUNTER_EVENT_DRAIN_SUCCESS"
contain "org.apache.flume.instrumentation.SinkCounter" "org.apache.flume.instrumentation.SinkCounter.ATTRIBUTES"
reference "org.apache.flume.annotations.InterfaceAudience.Public" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.util.RoundRobinOrderSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.AbstractSinkSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.util.OrderSelector"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)" "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)" "org.apache.flume.util.RoundRobinOrderSelector.RoundRobinOrderSelector(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)" "org.apache.flume.sink.AbstractSinkSelector.configure(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.maxTimeOut"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)" "org.apache.flume.util.OrderSelector.setMaxTimeOut(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.createSinkIterator(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.createSinkIterator(0)" "org.apache.flume.util.OrderSelector.createIterator(0)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.createSinkIterator(0)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.setSinks(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.setSinks(1)" "org.apache.flume.util.OrderSelector.setObjects(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.setSinks(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.informSinkFailed(1)" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
call "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.informSinkFailed(1)" "org.apache.flume.util.OrderSelector.informFailure(1)"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.informSinkFailed(1)"
reference "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector" "org.apache.flume.util.OrderSelector"
contain "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector" "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
reference "org.apache.flume.serialization.BodyTextEventSerializer.Builder" "org.apache.flume.serialization.BodyTextEventSerializer"
reference "org.apache.flume.serialization.BodyTextEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.BodyTextEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.serialization.BodyTextEventSerializer.Builder" "org.apache.flume.serialization.BodyTextEventSerializer.Builder.Builder(0)"
call "org.apache.flume.serialization.BodyTextEventSerializer.Builder.build(2)" "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(3)"
contain "org.apache.flume.serialization.BodyTextEventSerializer.Builder" "org.apache.flume.serialization.BodyTextEventSerializer.Builder.build(2)"
contain "org.apache.flume.Clock" "org.apache.flume.Clock.currentTimeMillis(0)"
reference "org.apache.flume.tools.VersionInfo" "org.apache.flume.VersionAnnotation"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.VersionInfo(0)"
reference "org.apache.flume.tools.VersionInfo.getPackage(0)" "org.apache.flume.tools.VersionInfo.myPackage"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getPackage(0)"
reference "org.apache.flume.tools.VersionInfo.getVersion(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getVersion(0)" "org.apache.flume.VersionAnnotation.version(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getVersion(0)"
reference "org.apache.flume.tools.VersionInfo.getRevision(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getRevision(0)" "org.apache.flume.VersionAnnotation.revision(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getRevision(0)"
reference "org.apache.flume.tools.VersionInfo.getBranch(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getBranch(0)" "org.apache.flume.VersionAnnotation.branch(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getBranch(0)"
reference "org.apache.flume.tools.VersionInfo.getDate(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getDate(0)" "org.apache.flume.VersionAnnotation.date(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getDate(0)"
reference "org.apache.flume.tools.VersionInfo.getUser(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getUser(0)" "org.apache.flume.VersionAnnotation.user(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getUser(0)"
reference "org.apache.flume.tools.VersionInfo.getUrl(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getUrl(0)" "org.apache.flume.VersionAnnotation.url(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getUrl(0)"
reference "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)" "org.apache.flume.tools.VersionInfo.version"
call "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)" "org.apache.flume.VersionAnnotation.srcChecksum(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)"
call "org.apache.flume.tools.VersionInfo.getBuildVersion(0)" "org.apache.flume.tools.VersionInfo.getVersion(0)"
call "org.apache.flume.tools.VersionInfo.getBuildVersion(0)" "org.apache.flume.tools.VersionInfo.getRevision(0)"
call "org.apache.flume.tools.VersionInfo.getBuildVersion(0)" "org.apache.flume.tools.VersionInfo.getUser(0)"
call "org.apache.flume.tools.VersionInfo.getBuildVersion(0)" "org.apache.flume.tools.VersionInfo.getDate(0)"
call "org.apache.flume.tools.VersionInfo.getBuildVersion(0)" "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.getBuildVersion(0)"
call "org.apache.flume.tools.VersionInfo.main(1)" "org.apache.flume.tools.VersionInfo.getVersion(0)"
call "org.apache.flume.tools.VersionInfo.main(1)" "org.apache.flume.tools.VersionInfo.getRevision(0)"
call "org.apache.flume.tools.VersionInfo.main(1)" "org.apache.flume.tools.VersionInfo.getUser(0)"
call "org.apache.flume.tools.VersionInfo.main(1)" "org.apache.flume.tools.VersionInfo.getDate(0)"
call "org.apache.flume.tools.VersionInfo.main(1)" "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.main(1)"
reference "org.apache.flume.tools.VersionInfo.static {...}" "org.apache.flume.tools.VersionInfo.myPackage"
reference "org.apache.flume.tools.VersionInfo.static {...}" "org.apache.flume.tools.VersionInfo.version"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.static {...}"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.myPackage"
reference "org.apache.flume.tools.VersionInfo.version" "org.apache.flume.VersionAnnotation"
contain "org.apache.flume.tools.VersionInfo" "org.apache.flume.tools.VersionInfo.version"
reference "org.apache.flume.source.StressSource" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.StressSource" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.StressSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.StressSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.StressSource" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.StressSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.StressSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.StressSource" "org.apache.flume.Context"
reference "org.apache.flume.source.StressSource" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.StressSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.StressSource" "org.slf4j.Logger"
reference "org.apache.flume.source.StressSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.StressSource.StressSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.StressSource.StressSource(0)" "org.apache.flume.source.StressSource.lastSent"
call "org.apache.flume.source.StressSource.StressSource(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.source.StressSource.StressSource(0)" "org.apache.flume.source.StressSource.counterGroup"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.StressSource(0)"
call "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.Context.getLong(2)"
reference "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.source.StressSource.maxTotalEvents"
reference "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.source.StressSource.maxSuccessfulEvents"
call "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.source.StressSource.batchSize"
call "org.apache.flume.source.StressSource.configure(1)" "org.apache.flume.source.StressSource.prepEventData(1)"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.configure(1)"
reference "org.apache.flume.source.StressSource.prepEventData(1)" "org.apache.flume.source.StressSource.buffer"
reference "org.apache.flume.source.StressSource.prepEventData(1)" "org.apache.flume.source.StressSource.batchSize"
reference "org.apache.flume.source.StressSource.prepEventData(1)" "org.apache.flume.source.StressSource.eventBatchList"
call "org.apache.flume.source.StressSource.prepEventData(1)" "org.apache.flume.event.EventBuilder.withBody(1)"
reference "org.apache.flume.source.StressSource.prepEventData(1)" "org.apache.flume.source.StressSource.event"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.prepEventData(1)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.counterGroup"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.lastSent"
call "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.CounterGroup.addAndGet(2)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.maxTotalEvents"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.maxSuccessfulEvents"
call "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.CounterGroup.get(1)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.batchSize"
call "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.getChannelProcessor(0)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.event"
call "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.eventBatchList"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.source.StressSource.eventBatchListToProcess"
call "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
reference "org.apache.flume.source.StressSource.process(0)" "org.apache.flume.PollableSource.Status.READY"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.process(0)"
reference "org.apache.flume.source.StressSource.start(0)" "org.apache.flume.source.StressSource.logger"
call "org.apache.flume.source.StressSource.start(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.StressSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
call "org.apache.flume.source.StressSource.start(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.start(0)"
reference "org.apache.flume.source.StressSource.stop(0)" "org.apache.flume.source.StressSource.logger"
call "org.apache.flume.source.StressSource.stop(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.source.StressSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
reference "org.apache.flume.source.StressSource.stop(0)" "org.apache.flume.source.StressSource.counterGroup"
call "org.apache.flume.source.StressSource.stop(0)" "org.slf4j.Logger.info(2)"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.stop(0)"
call "org.apache.flume.source.StressSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.StressSource.static {...}" "org.apache.flume.source.StressSource.logger"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.static {...}"
reference "org.apache.flume.source.StressSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.logger"
reference "org.apache.flume.source.StressSource.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.counterGroup"
reference "org.apache.flume.source.StressSource.buffer" "byte[]"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.buffer"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.maxTotalEvents"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.maxSuccessfulEvents"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.batchSize"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.lastSent"
reference "org.apache.flume.source.StressSource.event" "org.apache.flume.Event"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.event"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.eventBatchList"
contain "org.apache.flume.source.StressSource" "org.apache.flume.source.StressSource.eventBatchListToProcess"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.SyslogUDPSource" "org.jboss.netty.bootstrap.ConnectionlessBootstrap"
reference "org.apache.flume.source.SyslogUDPSource" "org.jboss.netty.channel.socket.oio.OioDatagramChannelFactory"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.syslogHandler"
reference "org.apache.flume.source.SyslogUDPSource" "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.SyslogUDPSource" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogUDPSource" "org.jboss.netty.channel.Channel"
reference "org.apache.flume.source.SyslogUDPSource" "org.jboss.netty.channel.ChannelFuture"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.Context"
reference "org.apache.flume.source.SyslogUDPSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
reference "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)" "org.apache.flume.source.SyslogUDPSource.maxsize"
reference "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)" "org.apache.flume.source.SyslogUDPSource.host"
call "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)" "org.apache.flume.source.SyslogUDPSource.counterGroup"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.channel.socket.oio.OioDatagramChannelFactory.OioDatagramChannelFactory(1)"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.bootstrap.ConnectionlessBootstrap.ConnectionlessBootstrap(1)"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.formaterProp"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.setFormater(1)"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.keepFields"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.syslogHandler.setKeepFields(1)"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.maxsize"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory.AdaptiveReceiveBufferSizePredictorFactory(3)"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.bootstrap.ConnectionlessBootstrap.setOption(2)"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.1.{...}"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.bootstrap.ConnectionlessBootstrap.setPipelineFactory(1)"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.host"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.port"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.jboss.netty.bootstrap.ConnectionlessBootstrap.bind(1)"
reference "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.SyslogUDPSource.nettyChannel"
call "org.apache.flume.source.SyslogUDPSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.start(0)"
reference "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.apache.flume.source.SyslogUDPSource.logger"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.apache.flume.source.SyslogUDPSource.counterGroup"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.apache.flume.source.SyslogUDPSource.nettyChannel"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.jboss.netty.channel.Channel.close(0)"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.jboss.netty.channel.Channel.getCloseFuture(0)"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.jboss.netty.channel.ChannelFuture.await(2)"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.SyslogUDPSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.stop(0)"
call "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
call "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.Context.getInteger(1)"
reference "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.source.SyslogUDPSource.port"
call "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.source.SyslogUDPSource.host"
call "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.Context.getSubProperties(1)"
reference "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.source.SyslogUDPSource.formaterProp"
call "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.SyslogUDPSource.configure(1)" "org.apache.flume.source.SyslogUDPSource.keepFields"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.configure(1)"
reference "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)" "org.apache.flume.source.SyslogUDPSource.nettyChannel"
call "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)" "org.jboss.netty.channel.Channel.getLocalAddress(0)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.access$000(1)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.access$100(1)"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.access$200(0)"
call "org.apache.flume.source.SyslogUDPSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.SyslogUDPSource.static {...}" "org.apache.flume.source.SyslogUDPSource.logger"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.static {...}"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.port"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.maxsize"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.host"
reference "org.apache.flume.source.SyslogUDPSource.nettyChannel" "org.jboss.netty.channel.Channel"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.nettyChannel"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.formaterProp"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.keepFields"
reference "org.apache.flume.source.SyslogUDPSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.logger"
reference "org.apache.flume.source.SyslogUDPSource.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.counterGroup"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.DEFAULT_MIN_SIZE"
contain "org.apache.flume.source.SyslogUDPSource" "org.apache.flume.source.SyslogUDPSource.DEFAULT_INITIAL_SIZE"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.ExecRunnable"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSourceConfigurationConstants"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.EventDrivenSource"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.StderrReader"
reference "org.apache.flume.source.ExecSource" "org.slf4j.Logger"
reference "org.apache.flume.source.ExecSource" "org.apache.flume.Context"
reference "org.apache.flume.source.ExecSource" "com.google.common.base.Preconditions"
reference "org.apache.flume.source.ExecSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.ExecSource.ExecSource(0)" "org.apache.flume.source.AbstractSource.AbstractSource(0)"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.ExecSource(0)"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.logger"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.command"
call "org.apache.flume.source.ExecSource.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.executor"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.shell"
call "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.getChannelProcessor(0)"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.sourceCounter"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.restart"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.restartThrottle"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.logStderr"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.bufferCount"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.batchTimeout"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.charset"
call "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.runner"
reference "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.ExecSource.runnerFuture"
call "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.source.ExecSource.start(0)" "org.apache.flume.source.AbstractSource.start(0)"
call "org.apache.flume.source.ExecSource.start(0)" "org.slf4j.Logger.debug(1)"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.start(0)"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.logger"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.command"
call "org.apache.flume.source.ExecSource.stop(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.runner"
call "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.ExecRunnable.setRestart(1)"
call "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.runnerFuture"
call "org.apache.flume.source.ExecSource.stop(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.executor"
reference "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.ExecSource.sourceCounter"
call "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.source.ExecSource.stop(0)" "org.apache.flume.source.AbstractSource.stop(0)"
call "org.apache.flume.source.ExecSource.stop(0)" "org.slf4j.Logger.debug(3)"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.stop(0)"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.command"
call "org.apache.flume.source.ExecSource.configure(1)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.Context.getLong(2)"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.restartThrottle"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.restart"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.logStderr"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.bufferCount"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.batchTimeout"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.charset"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.shell"
reference "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.sourceCounter"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.source.ExecSource.getName(0)"
call "org.apache.flume.source.ExecSource.configure(1)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.configure(1)"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.access$200(0)"
call "org.apache.flume.source.ExecSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.ExecSource.static {...}" "org.apache.flume.source.ExecSource.logger"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.static {...}"
reference "org.apache.flume.source.ExecSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.logger"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.shell"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.command"
reference "org.apache.flume.source.ExecSource.sourceCounter" "org.apache.flume.instrumentation.SourceCounter"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.sourceCounter"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.executor"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.runnerFuture"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.restartThrottle"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.restart"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.logStderr"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.bufferCount"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.batchTimeout"
reference "org.apache.flume.source.ExecSource.runner" "org.apache.flume.source.ExecSource.ExecRunnable"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.runner"
contain "org.apache.flume.source.ExecSource" "org.apache.flume.source.ExecSource.charset"
reference "org.apache.flume.event.EventHelper" "org.apache.flume.Event"
reference "org.apache.flume.event.EventHelper" "byte[]"
reference "org.apache.flume.event.EventHelper" "org.apache.commons.io.HexDump"
reference "org.apache.flume.event.EventHelper" "org.slf4j.Logger"
reference "org.apache.flume.event.EventHelper" "org.slf4j.LoggerFactory"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.EventHelper(0)"
call "org.apache.flume.event.EventHelper.dumpEvent(1)" "org.apache.flume.event.EventHelper.dumpEvent(2)"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.dumpEvent(1)"
call "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.apache.commons.io.HexDump.dump(4)"
reference "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.apache.flume.event.EventHelper.LOGGER"
call "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.slf4j.Logger.isInfoEnabled(0)"
call "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.apache.flume.event.EventHelper.EOL"
call "org.apache.flume.event.EventHelper.dumpEvent(2)" "org.apache.flume.Event.getHeaders(0)"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.dumpEvent(2)"
reference "org.apache.flume.event.EventHelper.static {...}" "org.apache.flume.event.EventHelper.EOL"
call "org.apache.flume.event.EventHelper.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.event.EventHelper.static {...}" "org.apache.flume.event.EventHelper.LOGGER"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.static {...}"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.HEXDUMP_OFFSET"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.EOL"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.DEFAULT_MAX_BYTES"
reference "org.apache.flume.event.EventHelper.LOGGER" "org.slf4j.Logger"
contain "org.apache.flume.event.EventHelper" "org.apache.flume.event.EventHelper.LOGGER"
contain "org.apache.flume.lifecycle.LifecycleException" "org.apache.flume.lifecycle.LifecycleException.LifecycleException(0)"
contain "org.apache.flume.lifecycle.LifecycleException" "org.apache.flume.lifecycle.LifecycleException.LifecycleException(1)"
contain "org.apache.flume.lifecycle.LifecycleException" "org.apache.flume.lifecycle.LifecycleException.LifecycleException(2)"
contain "org.apache.flume.lifecycle.LifecycleException" "org.apache.flume.lifecycle.LifecycleException.LifecycleException(1)"
contain "org.apache.flume.lifecycle.LifecycleException" "org.apache.flume.lifecycle.LifecycleException.serialVersionUID"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType[]"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.values(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.$VALUES"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.values(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType[].clone(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.values(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.valueOf(1)"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.AvroSchemaType(2)"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.AvroSchemaType(2)"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.$VALUES"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.$VALUES" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType[]"
contain "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.$VALUES"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.jboss.netty.buffer.ChannelBuffer"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.jboss.netty.channel.SimpleChannelHandler"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.jboss.netty.channel.MessageEvent"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.this$0"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)" "org.jboss.netty.channel.SimpleChannelHandler.SimpleChannelHandler(0)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(0)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setEventSize(1)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setEventSize(1)" "org.apache.flume.source.SyslogUtils.setEventSize(1)"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setEventSize(1)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setKeepFields(1)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setKeepFields(1)" "org.apache.flume.source.SyslogUtils.setKeepFields(1)"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setKeepFields(1)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setFormater(1)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setFormater(1)" "org.apache.flume.source.SyslogUtils.addFormats(1)"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setFormater(1)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.jboss.netty.channel.MessageEvent.getMessage(0)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.jboss.netty.buffer.ChannelBuffer.readable(0)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogTcpSource.access$000(0)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.this$0"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogTcpSource.getChannelProcessor(0)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.source.SyslogTcpSource.access$100(1)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils" "org.apache.flume.source.SyslogUtils"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
reference "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.this$0" "org.apache.flume.source.SyslogTcpSource"
contain "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.this$0"
reference "org.apache.flume.annotations.InterfaceStability.Unstable" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.ChannelFullException" "org.apache.flume.ChannelException"
call "org.apache.flume.ChannelFullException.ChannelFullException(1)" "org.apache.flume.ChannelException.ChannelException(1)"
contain "org.apache.flume.ChannelFullException" "org.apache.flume.ChannelFullException.ChannelFullException(1)"
call "org.apache.flume.ChannelFullException.ChannelFullException(1)" "org.apache.flume.ChannelException.ChannelException(1)"
contain "org.apache.flume.ChannelFullException" "org.apache.flume.ChannelFullException.ChannelFullException(1)"
call "org.apache.flume.ChannelFullException.ChannelFullException(2)" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.ChannelFullException" "org.apache.flume.ChannelFullException.ChannelFullException(2)"
contain "org.apache.flume.ChannelFullException" "org.apache.flume.ChannelFullException.serialVersionUID"
reference "org.apache.flume.source.SyslogTcpSource.1" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler"
reference "org.apache.flume.source.SyslogTcpSource.1" "org.jboss.netty.channel.ChannelHandler"
reference "org.apache.flume.source.SyslogTcpSource.1" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.source.SyslogTcpSource.1" "org.apache.flume.source.SyslogTcpSource"
reference "org.apache.flume.source.SyslogTcpSource.1" "org.jboss.netty.channel.Channels"
reference "org.apache.flume.source.SyslogTcpSource.1.{...}" "org.apache.flume.source.SyslogTcpSource.1.this$0"
contain "org.apache.flume.source.SyslogTcpSource.1" "org.apache.flume.source.SyslogTcpSource.1.{...}"
reference "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.1.this$0"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.access$200(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setEventSize(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.access$300(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setFormater(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.access$400(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setKeepFields(1)"
call "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)" "org.jboss.netty.channel.Channels.pipeline(1)"
contain "org.apache.flume.source.SyslogTcpSource.1" "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)"
reference "org.apache.flume.source.SyslogTcpSource.1.this$0" "org.apache.flume.source.SyslogTcpSource"
contain "org.apache.flume.source.SyslogTcpSource.1" "org.apache.flume.source.SyslogTcpSource.1.this$0"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.conf.sink.SinkGroupConfiguration"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.conf.ConfigurationException"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.FlumeException"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.conf.ConfigurableComponent"
reference "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkProcessorFactory"
reference "org.apache.flume.sink.SinkGroup.SinkGroup(1)" "org.apache.flume.sink.SinkGroup.sinks"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.SinkGroup(1)"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.conf.sink.SinkGroupConfiguration.SinkGroupConfiguration(1)"
reference "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkGroup.conf"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.conf.sink.SinkGroupConfiguration.configure(1)"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkGroup.configure(1)"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.configure(1)"
reference "org.apache.flume.sink.SinkGroup.getProcessor(0)" "org.apache.flume.sink.SinkGroup.processor"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.getProcessor(0)"
reference "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkGroup.conf"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.conf.sink.SinkGroupConfiguration.getProcessorContext(0)"
reference "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkGroup.sinks"
call "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
reference "org.apache.flume.sink.SinkGroup.configure(1)" "org.apache.flume.sink.SinkGroup.processor"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.configure(1)"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.sinks"
reference "org.apache.flume.sink.SinkGroup.processor" "org.apache.flume.SinkProcessor"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.processor"
reference "org.apache.flume.sink.SinkGroup.conf" "org.apache.flume.conf.sink.SinkGroupConfiguration"
contain "org.apache.flume.sink.SinkGroup" "org.apache.flume.sink.SinkGroup.conf"
reference "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.lifecycle.LifecycleAware.start(0)"
contain "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
contain "org.apache.flume.lifecycle.LifecycleAware" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
reference "org.apache.flume.serialization.EventSerializer.Builder" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.serialization.EventSerializer.Builder" "org.apache.flume.serialization.EventSerializer.Builder.build(2)"
reference "org.apache.flume.serialization.AvroEventDeserializer.1" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.Constants"
reference "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.Builder"
reference "org.apache.flume.interceptor.HostInterceptor" "org.slf4j.Logger"
reference "org.apache.flume.interceptor.HostInterceptor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)" "org.apache.flume.interceptor.HostInterceptor.host"
reference "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)" "org.apache.flume.interceptor.HostInterceptor.preserveExisting"
reference "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)" "org.apache.flume.interceptor.HostInterceptor.header"
reference "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)" "org.apache.flume.interceptor.HostInterceptor.logger"
call "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.initialize(0)"
call "org.apache.flume.interceptor.HostInterceptor.intercept(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.HostInterceptor.intercept(1)" "org.apache.flume.interceptor.HostInterceptor.preserveExisting"
reference "org.apache.flume.interceptor.HostInterceptor.intercept(1)" "org.apache.flume.interceptor.HostInterceptor.header"
reference "org.apache.flume.interceptor.HostInterceptor.intercept(1)" "org.apache.flume.interceptor.HostInterceptor.host"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.intercept(1)"
call "org.apache.flume.interceptor.HostInterceptor.intercept(1)" "org.apache.flume.interceptor.HostInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.close(0)"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(4)"
call "org.apache.flume.interceptor.HostInterceptor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.interceptor.HostInterceptor.static {...}" "org.apache.flume.interceptor.HostInterceptor.logger"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.static {...}"
reference "org.apache.flume.interceptor.HostInterceptor.logger" "org.slf4j.Logger"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.logger"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.preserveExisting"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.header"
contain "org.apache.flume.interceptor.HostInterceptor" "org.apache.flume.interceptor.HostInterceptor.host"
reference "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status[]"
reference "org.apache.flume.Sink.Status" "org.apache.flume.Sink"
reference "org.apache.flume.Sink.Status.values(0)" "org.apache.flume.Sink.Status.$VALUES"
call "org.apache.flume.Sink.Status.values(0)" "org.apache.flume.Sink.Status[].clone(0)"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.values(0)"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.valueOf(1)"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.Status(2)"
call "org.apache.flume.Sink.Status.static {...}" "org.apache.flume.Sink.Status.Status(2)"
reference "org.apache.flume.Sink.Status.static {...}" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.Sink.Status.static {...}" "org.apache.flume.Sink.Status.BACKOFF"
reference "org.apache.flume.Sink.Status.static {...}" "org.apache.flume.Sink.Status.$VALUES"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.static {...}"
reference "org.apache.flume.Sink.Status.READY" "org.apache.flume.Sink.Status"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.Sink.Status.BACKOFF" "org.apache.flume.Sink.Status"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.BACKOFF"
reference "org.apache.flume.Sink.Status.$VALUES" "org.apache.flume.Sink.Status[]"
contain "org.apache.flume.Sink.Status" "org.apache.flume.Sink.Status.$VALUES"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "com.google.gson.Gson"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.mortbay.jetty.Request"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.mortbay.jetty.handler.AbstractHandler"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.util.JMXPollUtil"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.this$0"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.mortbay.jetty.handler.AbstractHandler.AbstractHandler(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.{...}"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.getType(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.mapType"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "com.google.gson.Gson.Gson(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.gson"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)" "org.mortbay.jetty.Request.setHandled(1)"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)" "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.gson"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.mapType"
call "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)" "com.google.gson.Gson.toJson(2)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(1)"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.mapType"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.gson" "com.google.gson.Gson"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.gson"
reference "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.this$0" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
contain "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.this$0"
reference "org.apache.flume.NamedComponent" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.NamedComponent" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.NamedComponent" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.NamedComponent" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.NamedComponent" "org.apache.flume.NamedComponent.setName(1)"
contain "org.apache.flume.NamedComponent" "org.apache.flume.NamedComponent.getName(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.Sink"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.this$0"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.priority"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sequentialFailures"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.compareTo(1)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.compareTo(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getRefresh(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getRefresh(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getSink(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getSink(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getPriority(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.priority"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getPriority(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sequentialFailures"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.sink.FailoverSinkProcessor.access$000(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.Sink.getName(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)" "org.slf4j.Logger.debug(2)"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.this$0"
call "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)" "org.apache.flume.sink.FailoverSinkProcessor.access$100(1)"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sequentialFailures"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.compareTo(1)"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.priority"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sequentialFailures"
reference "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.this$0" "org.apache.flume.sink.FailoverSinkProcessor"
contain "org.apache.flume.sink.FailoverSinkProcessor.FailedSink" "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.this$0"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.Builder"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.LineDeserializer" "com.google.common.collect.Lists"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.LineDeserializer" "org.slf4j.Logger"
reference "org.apache.flume.serialization.LineDeserializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.serialization.LineDeserializer.in"
call "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.serialization.LineDeserializer.outputCharset"
call "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.serialization.LineDeserializer.maxLineLength"
reference "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)" "org.apache.flume.serialization.LineDeserializer.isOpen"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
call "org.apache.flume.serialization.LineDeserializer.readEvent(0)" "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
call "org.apache.flume.serialization.LineDeserializer.readEvent(0)" "org.apache.flume.serialization.LineDeserializer.readLine(0)"
reference "org.apache.flume.serialization.LineDeserializer.readEvent(0)" "org.apache.flume.serialization.LineDeserializer.outputCharset"
call "org.apache.flume.serialization.LineDeserializer.readEvent(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.readEvent(0)"
call "org.apache.flume.serialization.LineDeserializer.readEvents(1)" "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
call "org.apache.flume.serialization.LineDeserializer.readEvents(1)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.serialization.LineDeserializer.readEvents(1)" "org.apache.flume.serialization.LineDeserializer.readEvent(0)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.readEvents(1)"
call "org.apache.flume.serialization.LineDeserializer.mark(0)" "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
reference "org.apache.flume.serialization.LineDeserializer.mark(0)" "org.apache.flume.serialization.LineDeserializer.in"
call "org.apache.flume.serialization.LineDeserializer.mark(0)" "org.apache.flume.serialization.ResettableInputStream.mark(0)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.mark(0)"
call "org.apache.flume.serialization.LineDeserializer.reset(0)" "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
reference "org.apache.flume.serialization.LineDeserializer.reset(0)" "org.apache.flume.serialization.LineDeserializer.in"
call "org.apache.flume.serialization.LineDeserializer.reset(0)" "org.apache.flume.serialization.ResettableInputStream.reset(0)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.reset(0)"
reference "org.apache.flume.serialization.LineDeserializer.close(0)" "org.apache.flume.serialization.LineDeserializer.isOpen"
call "org.apache.flume.serialization.LineDeserializer.close(0)" "org.apache.flume.serialization.LineDeserializer.reset(0)"
reference "org.apache.flume.serialization.LineDeserializer.close(0)" "org.apache.flume.serialization.LineDeserializer.in"
call "org.apache.flume.serialization.LineDeserializer.close(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.close(0)"
reference "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)" "org.apache.flume.serialization.LineDeserializer.isOpen"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
reference "org.apache.flume.serialization.LineDeserializer.readLine(0)" "org.apache.flume.serialization.LineDeserializer.in"
call "org.apache.flume.serialization.LineDeserializer.readLine(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
reference "org.apache.flume.serialization.LineDeserializer.readLine(0)" "org.apache.flume.serialization.LineDeserializer.maxLineLength"
reference "org.apache.flume.serialization.LineDeserializer.readLine(0)" "org.apache.flume.serialization.LineDeserializer.logger"
call "org.apache.flume.serialization.LineDeserializer.readLine(0)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.readLine(0)"
call "org.apache.flume.serialization.LineDeserializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.LineDeserializer.static {...}" "org.apache.flume.serialization.LineDeserializer.logger"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.static {...}"
reference "org.apache.flume.serialization.LineDeserializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.logger"
reference "org.apache.flume.serialization.LineDeserializer.in" "org.apache.flume.serialization.ResettableInputStream"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.in"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.outputCharset"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.maxLineLength"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.isOpen"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.OUT_CHARSET_KEY"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.CHARSET_DFLT"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.MAXLINE_KEY"
contain "org.apache.flume.serialization.LineDeserializer" "org.apache.flume.serialization.LineDeserializer.MAXLINE_DFLT"
reference "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate" "org.apache.flume.annotations.InterfaceAudience"
contain "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate" "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate.value(0)"
reference "org.apache.flume.source.http.JSONHandler.1" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.source.http.JSONHandler.1" "org.apache.flume.source.http.JSONHandler"
reference "org.apache.flume.source.http.JSONHandler.1.{...}" "org.apache.flume.source.http.JSONHandler.1.this$0"
call "org.apache.flume.source.http.JSONHandler.1.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.source.http.JSONHandler.1" "org.apache.flume.source.http.JSONHandler.1.{...}"
reference "org.apache.flume.source.http.JSONHandler.1.this$0" "org.apache.flume.source.http.JSONHandler"
contain "org.apache.flume.source.http.JSONHandler.1" "org.apache.flume.source.http.JSONHandler.1.this$0"
reference "org.apache.flume.annotations.InterfaceStability.Stable" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode[]"
reference "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.SyslogUtils.Mode.values(0)" "org.apache.flume.source.SyslogUtils.Mode.$VALUES"
call "org.apache.flume.source.SyslogUtils.Mode.values(0)" "org.apache.flume.source.SyslogUtils.Mode[].clone(0)"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.values(0)"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.valueOf(1)"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.Mode(2)"
call "org.apache.flume.source.SyslogUtils.Mode.static {...}" "org.apache.flume.source.SyslogUtils.Mode.Mode(2)"
reference "org.apache.flume.source.SyslogUtils.Mode.static {...}" "org.apache.flume.source.SyslogUtils.Mode.START"
reference "org.apache.flume.source.SyslogUtils.Mode.static {...}" "org.apache.flume.source.SyslogUtils.Mode.PRIO"
reference "org.apache.flume.source.SyslogUtils.Mode.static {...}" "org.apache.flume.source.SyslogUtils.Mode.DATA"
reference "org.apache.flume.source.SyslogUtils.Mode.static {...}" "org.apache.flume.source.SyslogUtils.Mode.$VALUES"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.static {...}"
reference "org.apache.flume.source.SyslogUtils.Mode.START" "org.apache.flume.source.SyslogUtils.Mode"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.START"
reference "org.apache.flume.source.SyslogUtils.Mode.PRIO" "org.apache.flume.source.SyslogUtils.Mode"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.PRIO"
reference "org.apache.flume.source.SyslogUtils.Mode.DATA" "org.apache.flume.source.SyslogUtils.Mode"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.DATA"
reference "org.apache.flume.source.SyslogUtils.Mode.$VALUES" "org.apache.flume.source.SyslogUtils.Mode[]"
contain "org.apache.flume.source.SyslogUtils.Mode" "org.apache.flume.source.SyslogUtils.Mode.$VALUES"
reference "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.AbstractChannelSelector"
reference "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.Context"
call "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)" "org.apache.flume.channel.AbstractChannelSelector.AbstractChannelSelector(0)"
reference "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)" "org.apache.flume.channel.ReplicatingChannelSelector.requiredChannels"
reference "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)" "org.apache.flume.channel.ReplicatingChannelSelector.optionalChannels"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
reference "org.apache.flume.channel.ReplicatingChannelSelector.getRequiredChannels(1)" "org.apache.flume.channel.ReplicatingChannelSelector.requiredChannels"
call "org.apache.flume.channel.ReplicatingChannelSelector.getRequiredChannels(1)" "org.apache.flume.channel.ReplicatingChannelSelector.getAllChannels(0)"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.getRequiredChannels(1)"
reference "org.apache.flume.channel.ReplicatingChannelSelector.getOptionalChannels(1)" "org.apache.flume.channel.ReplicatingChannelSelector.optionalChannels"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.getOptionalChannels(1)"
call "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)" "org.apache.flume.channel.ReplicatingChannelSelector.getAllChannels(0)"
reference "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)" "org.apache.flume.channel.ReplicatingChannelSelector.requiredChannels"
call "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)" "org.apache.flume.channel.ReplicatingChannelSelector.getChannelNameMap(0)"
reference "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)" "org.apache.flume.channel.ReplicatingChannelSelector.optionalChannels"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.CONFIG_OPTIONAL"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.requiredChannels"
contain "org.apache.flume.channel.ReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector.optionalChannels"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializerType"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.serialization.EventSerializerFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.slf4j.Logger"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializerFactory.EventSerializerFactory(0)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.serialization.EventSerializerType.valueOf(1)"
reference "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.serialization.EventSerializerFactory.logger"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.serialization.EventSerializerType.OTHER"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.serialization.EventSerializerType.getBuilderClass(0)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)" "org.apache.flume.serialization.EventSerializer.Builder.build(2)"
contain "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.EventSerializerFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.EventSerializerFactory.static {...}" "org.apache.flume.serialization.EventSerializerFactory.logger"
contain "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializerFactory.static {...}"
reference "org.apache.flume.serialization.EventSerializerFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.EventSerializerFactory" "org.apache.flume.serialization.EventSerializerFactory.logger"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.FlumeException"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.api.HostInfo"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.conf.ConfigurationException"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.MonitorService"
reference "org.apache.flume.instrumentation.GangliaServer" "org.slf4j.Logger"
reference "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.Context"
reference "org.apache.flume.instrumentation.GangliaServer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.buffer"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.addresses"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.socket"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.service"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.CONF_POLL_FREQUENCY"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_POLL_FREQUENCY"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.CONF_HOSTS"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.CONF_ISGANGLIA3"
call "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.GangliaCollector(0)"
reference "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)" "org.apache.flume.instrumentation.GangliaServer.collectorRunnable"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)"
call "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)" "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)"
reference "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)" "org.apache.flume.instrumentation.GangliaServer.buffer"
reference "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)" "org.apache.flume.instrumentation.GangliaServer.offset"
call "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)" "org.apache.flume.instrumentation.GangliaServer.pad(0)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)"
reference "org.apache.flume.instrumentation.GangliaServer.pad(0)" "org.apache.flume.instrumentation.GangliaServer.offset"
reference "org.apache.flume.instrumentation.GangliaServer.pad(0)" "org.apache.flume.instrumentation.GangliaServer.buffer"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.pad(0)"
reference "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)" "org.apache.flume.instrumentation.GangliaServer.buffer"
reference "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)" "org.apache.flume.instrumentation.GangliaServer.offset"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)"
reference "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.apache.flume.instrumentation.GangliaServer.addresses"
reference "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.apache.flume.instrumentation.GangliaServer.buffer"
reference "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.apache.flume.instrumentation.GangliaServer.offset"
reference "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.apache.flume.instrumentation.GangliaServer.socket"
reference "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.socket"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.hostname"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.slf4j.Logger.error(1)"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.hosts"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.addresses"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.api.HostInfo.getHostName(0)"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.api.HostInfo.getPortNumber(0)"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.collectorRunnable"
call "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.access$002(1)"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.service"
reference "org.apache.flume.instrumentation.GangliaServer.start(0)" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.start(0)"
reference "org.apache.flume.instrumentation.GangliaServer.stop(0)" "org.apache.flume.instrumentation.GangliaServer.service"
reference "org.apache.flume.instrumentation.GangliaServer.stop(0)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.stop(0)" "org.slf4j.Logger.warn(1)"
call "org.apache.flume.instrumentation.GangliaServer.stop(0)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.instrumentation.GangliaServer.stop(0)" "org.apache.flume.instrumentation.GangliaServer.addresses"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.stop(0)"
reference "org.apache.flume.instrumentation.GangliaServer.setPollFrequency(1)" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.setPollFrequency(1)"
reference "org.apache.flume.instrumentation.GangliaServer.getPollFrequency(0)" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.getPollFrequency(0)"
reference "org.apache.flume.instrumentation.GangliaServer.setIsGanglia3(1)" "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.setIsGanglia3(1)"
reference "org.apache.flume.instrumentation.GangliaServer.isGanglia3(0)" "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.isGanglia3(0)"
reference "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)" "org.apache.flume.instrumentation.GangliaServer.hostname"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)" "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)" "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)"
reference "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)"
reference "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.apache.flume.instrumentation.GangliaServer.hostname"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)"
call "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)" "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)"
call "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
call "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.conf.ConfigurationException.ConfigurationException(1)"
call "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)"
reference "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.instrumentation.GangliaServer.hosts"
call "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.instrumentation.GangliaServer.configure(1)" "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.configure(1)"
reference "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)" "org.apache.flume.instrumentation.GangliaServer.logger"
call "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)" "org.apache.flume.api.HostInfo.HostInfo(3)"
call "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.access$100(1)"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.access$200(0)"
call "org.apache.flume.instrumentation.GangliaServer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.instrumentation.GangliaServer.static {...}" "org.apache.flume.instrumentation.GangliaServer.logger"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.static {...}"
reference "org.apache.flume.instrumentation.GangliaServer.logger" "org.slf4j.Logger"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.logger"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.BUFFER_SIZE"
reference "org.apache.flume.instrumentation.GangliaServer.buffer" "byte[]"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.buffer"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.offset"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.addresses"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.socket"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.service"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.hosts"
reference "org.apache.flume.instrumentation.GangliaServer.collectorRunnable" "org.apache.flume.instrumentation.GangliaServer.GangliaCollector"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.collectorRunnable"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_UNITS"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_TMAX"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_DMAX"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_SLOPE"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.GANGLIA_DOUBLE_TYPE"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.hostname"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.CONF_POLL_FREQUENCY"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.DEFAULT_POLL_FREQUENCY"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.CONF_HOSTS"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.CONF_ISGANGLIA3"
contain "org.apache.flume.instrumentation.GangliaServer" "org.apache.flume.instrumentation.GangliaServer.GANGLIA_CONTEXT"
reference "org.apache.flume.Sink" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.Sink" "org.apache.flume.NamedComponent"
reference "org.apache.flume.Sink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.Sink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.Sink" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.Sink" "org.apache.flume.annotations.InterfaceStability.Stable"
reference "org.apache.flume.Sink" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.Sink" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.Sink" "org.apache.flume.Sink.setChannel(1)"
contain "org.apache.flume.Sink" "org.apache.flume.Sink.getChannel(0)"
contain "org.apache.flume.Sink" "org.apache.flume.Sink.process(0)"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.interceptor.InterceptorChain"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.Context"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.FlumeException"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.Event"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.Channel"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.ChannelProcessor" "com.google.common.collect.Lists"
reference "org.apache.flume.channel.ChannelProcessor" "org.slf4j.Logger"
reference "org.apache.flume.channel.ChannelProcessor" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.channel.ChannelProcessor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)" "org.apache.flume.channel.ChannelProcessor.selector"
call "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)" "org.apache.flume.interceptor.InterceptorChain.InterceptorChain(0)"
reference "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
reference "org.apache.flume.channel.ChannelProcessor.initialize(0)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
call "org.apache.flume.channel.ChannelProcessor.initialize(0)" "org.apache.flume.interceptor.InterceptorChain.initialize(0)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.initialize(0)"
reference "org.apache.flume.channel.ChannelProcessor.close(0)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
call "org.apache.flume.channel.ChannelProcessor.close(0)" "org.apache.flume.interceptor.InterceptorChain.close(0)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.close(0)"
call "org.apache.flume.channel.ChannelProcessor.configure(1)" "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.configure(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.Context.getString(2)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.Context.getSubProperties(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.Context.Context(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.Context.getString(1)"
reference "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.channel.ChannelProcessor.LOG"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.slf4j.Logger.error(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.FlumeException.FlumeException(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.FlumeException.FlumeException(2)"
reference "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
call "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)" "org.apache.flume.interceptor.InterceptorChain.setInterceptors(1)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)"
reference "org.apache.flume.channel.ChannelProcessor.getSelector(0)" "org.apache.flume.channel.ChannelProcessor.selector"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.getSelector(0)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
reference "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.interceptor.InterceptorChain.intercept(1)"
reference "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.channel.ChannelProcessor.selector"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.Transaction.rollback(0)"
reference "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.channel.ChannelProcessor.LOG"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)" "org.apache.flume.ChannelException.ChannelException(2)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
reference "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.interceptor.InterceptorChain.intercept(1)"
reference "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.channel.ChannelProcessor.selector"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "com.google.common.base.Preconditions.checkNotNull(2)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.Transaction.rollback(0)"
reference "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.channel.ChannelProcessor.LOG"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.ChannelException.ChannelException(2)"
call "org.apache.flume.channel.ChannelProcessor.processEvent(1)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.channel.ChannelProcessor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.channel.ChannelProcessor.static {...}" "org.apache.flume.channel.ChannelProcessor.LOG"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.static {...}"
reference "org.apache.flume.channel.ChannelProcessor.LOG" "org.slf4j.Logger"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.LOG"
reference "org.apache.flume.channel.ChannelProcessor.selector" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.selector"
reference "org.apache.flume.channel.ChannelProcessor.interceptorChain" "org.apache.flume.interceptor.InterceptorChain"
contain "org.apache.flume.channel.ChannelProcessor" "org.apache.flume.channel.ChannelProcessor.interceptorChain"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.slf4j.Logger"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.slf4j.LoggerFactory"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.registered"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)" "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.registered"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.name(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.name(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.get(1)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.getStartTime(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.getStartTime(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.getStopTime(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.getStopTime(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.name(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.get(1)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.get(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.get(1)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.set(2)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.set(2)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.addAndGet(2)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.addAndGet(2)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.increment(1)" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.increment(1)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.getType(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.getType(0)" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.name(0)"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.getType(0)"
call "org.apache.flume.instrumentation.MonitoredCounterGroup.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.static {...}" "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.static {...}"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.logger" "org.slf4j.Logger"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.COUNTER_GROUP_START_TIME"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.COUNTER_GROUP_STOP_TIME"
reference "org.apache.flume.instrumentation.MonitoredCounterGroup.type" "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
contain "org.apache.flume.instrumentation.MonitoredCounterGroup" "org.apache.flume.instrumentation.MonitoredCounterGroup.registered"
reference "org.apache.flume.interceptor.HostInterceptor.1" "org.apache.flume.interceptor.HostInterceptor"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.PollingRunner"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.SourceRunner"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.PollableSourceRunner" "org.slf4j.Logger"
reference "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.Source"
reference "org.apache.flume.source.PollableSourceRunner" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.SourceRunner.SourceRunner(0)"
reference "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.source.PollableSourceRunner.shouldStop"
call "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.source.PollableSourceRunner.counterGroup"
reference "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)" "org.apache.flume.source.PollableSourceRunner.lifecycleState"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.getSource(0)"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.PollableSource.getChannelProcessor(0)"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.channel.ChannelProcessor.initialize(0)"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.PollableSource.start(0)"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.PollingRunner(0)"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.runner"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$002(2)"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.counterGroup"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$102(2)"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.shouldStop"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$202(2)"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.runnerThread"
call "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.PollableSource.getName(0)"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.source.PollableSourceRunner.start(0)" "org.apache.flume.source.PollableSourceRunner.lifecycleState"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.start(0)"
reference "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.runner"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$200(1)"
reference "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.runnerThread"
reference "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.logger"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.getSource(0)"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.Source.stop(0)"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.Source.getChannelProcessor(0)"
call "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.channel.ChannelProcessor.close(0)"
reference "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.source.PollableSourceRunner.stop(0)" "org.apache.flume.source.PollableSourceRunner.lifecycleState"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.stop(0)"
call "org.apache.flume.source.PollableSourceRunner.toString(0)" "org.apache.flume.source.PollableSourceRunner.getSource(0)"
reference "org.apache.flume.source.PollableSourceRunner.toString(0)" "org.apache.flume.source.PollableSourceRunner.counterGroup"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.toString(0)"
reference "org.apache.flume.source.PollableSourceRunner.getLifecycleState(0)" "org.apache.flume.source.PollableSourceRunner.lifecycleState"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.getLifecycleState(0)"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.access$300(0)"
call "org.apache.flume.source.PollableSourceRunner.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.PollableSourceRunner.static {...}" "org.apache.flume.source.PollableSourceRunner.logger"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.static {...}"
reference "org.apache.flume.source.PollableSourceRunner.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.logger"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.backoffSleepIncrement"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.maxBackoffSleep"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.shouldStop"
reference "org.apache.flume.source.PollableSourceRunner.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.counterGroup"
reference "org.apache.flume.source.PollableSourceRunner.runner" "org.apache.flume.source.PollableSourceRunner.PollingRunner"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.runner"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.runnerThread"
reference "org.apache.flume.source.PollableSourceRunner.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.source.PollableSourceRunner" "org.apache.flume.source.PollableSourceRunner.lifecycleState"
reference "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
call "org.apache.flume.interceptor.InterceptorBuilderFactory.lookup(1)" "org.apache.flume.interceptor.InterceptorType.valueOf(1)"
call "org.apache.flume.interceptor.InterceptorBuilderFactory.lookup(1)" "org.apache.flume.interceptor.InterceptorType.getBuilderClass(0)"
contain "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.InterceptorBuilderFactory.lookup(1)"
call "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)" "org.apache.flume.interceptor.InterceptorBuilderFactory.lookup(1)"
contain "org.apache.flume.interceptor.InterceptorBuilderFactory" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType[]"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.TimestampInterceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.HostInterceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.StaticInterceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.TimestampInterceptor"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.HostInterceptor"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.StaticInterceptor"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.RegexFilteringInterceptor"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.RegexExtractorInterceptor"
reference "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.InterceptorType.values(0)" "org.apache.flume.interceptor.InterceptorType.$VALUES"
call "org.apache.flume.interceptor.InterceptorType.values(0)" "org.apache.flume.interceptor.InterceptorType[].clone(0)"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.values(0)"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.valueOf(1)"
reference "org.apache.flume.interceptor.InterceptorType.InterceptorType(3)" "org.apache.flume.interceptor.InterceptorType.builderClass"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.InterceptorType(3)"
reference "org.apache.flume.interceptor.InterceptorType.getBuilderClass(0)" "org.apache.flume.interceptor.InterceptorType.builderClass"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.getBuilderClass(0)"
call "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.InterceptorType(3)"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.HOST"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.STATIC"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.REGEX_EXTRACTOR"
reference "org.apache.flume.interceptor.InterceptorType.static {...}" "org.apache.flume.interceptor.InterceptorType.$VALUES"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.static {...}"
reference "org.apache.flume.interceptor.InterceptorType.TIMESTAMP" "org.apache.flume.interceptor.InterceptorType"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
reference "org.apache.flume.interceptor.InterceptorType.HOST" "org.apache.flume.interceptor.InterceptorType"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.HOST"
reference "org.apache.flume.interceptor.InterceptorType.STATIC" "org.apache.flume.interceptor.InterceptorType"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.STATIC"
reference "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER" "org.apache.flume.interceptor.InterceptorType"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
reference "org.apache.flume.interceptor.InterceptorType.REGEX_EXTRACTOR" "org.apache.flume.interceptor.InterceptorType"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.REGEX_EXTRACTOR"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.builderClass"
reference "org.apache.flume.interceptor.InterceptorType.$VALUES" "org.apache.flume.interceptor.InterceptorType[]"
contain "org.apache.flume.interceptor.InterceptorType" "org.apache.flume.interceptor.InterceptorType.$VALUES"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Constants"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.slf4j.Logger"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.Builder(0)"
call "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)" "org.apache.flume.Context.getBoolean(2)"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.StaticInterceptor.Builder.preserveExisting"
call "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)" "org.apache.flume.Context.getString(2)"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.StaticInterceptor.Builder.key"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)" "org.apache.flume.interceptor.StaticInterceptor.Builder.value"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.apache.flume.interceptor.StaticInterceptor.access$000(0)"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.apache.flume.interceptor.StaticInterceptor.Builder.preserveExisting"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.apache.flume.interceptor.StaticInterceptor.Builder.key"
reference "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.apache.flume.interceptor.StaticInterceptor.Builder.value"
call "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.slf4j.Logger.info(1)"
call "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)" "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(4)"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.preserveExisting"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.key"
contain "org.apache.flume.interceptor.StaticInterceptor.Builder" "org.apache.flume.interceptor.StaticInterceptor.Builder.value"
reference "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.InterceptorChain" "com.google.common.collect.Lists"
reference "org.apache.flume.interceptor.InterceptorChain" "com.google.common.base.Preconditions"
call "org.apache.flume.interceptor.InterceptorChain.InterceptorChain(0)" "com.google.common.collect.Lists.newLinkedList(0)"
reference "org.apache.flume.interceptor.InterceptorChain.InterceptorChain(0)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.InterceptorChain(0)"
reference "org.apache.flume.interceptor.InterceptorChain.setInterceptors(1)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.setInterceptors(1)"
reference "org.apache.flume.interceptor.InterceptorChain.intercept(1)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
call "org.apache.flume.interceptor.InterceptorChain.intercept(1)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.intercept(1)"
reference "org.apache.flume.interceptor.InterceptorChain.intercept(1)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
call "org.apache.flume.interceptor.InterceptorChain.intercept(1)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
call "org.apache.flume.interceptor.InterceptorChain.intercept(1)" "com.google.common.base.Preconditions.checkNotNull(3)"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.intercept(1)"
reference "org.apache.flume.interceptor.InterceptorChain.initialize(0)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
call "org.apache.flume.interceptor.InterceptorChain.initialize(0)" "org.apache.flume.interceptor.Interceptor.initialize(0)"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.initialize(0)"
reference "org.apache.flume.interceptor.InterceptorChain.close(0)" "org.apache.flume.interceptor.InterceptorChain.interceptors"
call "org.apache.flume.interceptor.InterceptorChain.close(0)" "org.apache.flume.interceptor.Interceptor.close(0)"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.close(0)"
contain "org.apache.flume.interceptor.InterceptorChain" "org.apache.flume.interceptor.InterceptorChain.interceptors"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.file.DataFileReader"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.generic.GenericDatumReader"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.generic.GenericDatumWriter"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.generic.GenericRecord"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.file.DataFileConstants"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.RemoteMarkable"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.Builder"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.slf4j.Logger"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.io.EncoderFactory"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.SchemaNormalization"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.commons.codec.binary.Hex"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.io.BinaryEncoder"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.avro.Schema"
reference "org.apache.flume.serialization.AvroEventDeserializer" "com.google.common.collect.Lists"
reference "org.apache.flume.serialization.AvroEventDeserializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.ris"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.toString(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.Context.getString(2)"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.valueOf(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.schemaType"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL"
reference "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.apache.flume.serialization.AvroEventDeserializer.logger"
call "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)" "org.slf4j.Logger.warn(1)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.SeekableResettableInputBridge(1)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.tell(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.seek(1)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.file.DataFileReader.DataFileReader(2)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.file.DataFileReader.sync(1)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.file.DataFileReader.getSchema(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.schema"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.datumWriter"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.out"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.io.EncoderFactory.get(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.encoder"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.io.EncoderFactory.binaryEncoder(2)"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.avro.SchemaNormalization.parsingFingerprint(2)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.schemaHash"
call "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.commons.codec.binary.Hex.encodeHexString(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)" "org.apache.flume.serialization.AvroEventDeserializer.schemaHashString"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.avro.file.DataFileReader.hasNext(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.record"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.avro.file.DataFileReader.next(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.out"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.datumWriter"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.encoder"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.avro.generic.GenericDatumWriter.write(2)"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.avro.io.BinaryEncoder.flush(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.schemaType"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.schemaHashString"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.flume.serialization.AvroEventDeserializer.schema"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)" "org.apache.avro.Schema.toString(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)" "org.apache.avro.file.DataFileReader.hasNext(0)"
call "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)" "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.mark(0)" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
call "org.apache.flume.serialization.AvroEventDeserializer.mark(0)" "org.apache.avro.file.DataFileReader.previousSync(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.mark(0)" "org.apache.flume.serialization.AvroEventDeserializer.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.mark(0)" "org.apache.flume.serialization.RemoteMarkable.markPosition(1)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.mark(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.reset(0)" "org.apache.flume.serialization.AvroEventDeserializer.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.reset(0)" "org.apache.flume.serialization.RemoteMarkable.getMarkPosition(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.reset(0)" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
call "org.apache.flume.serialization.AvroEventDeserializer.reset(0)" "org.apache.avro.file.DataFileReader.sync(1)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.reset(0)"
reference "org.apache.flume.serialization.AvroEventDeserializer.close(0)" "org.apache.flume.serialization.AvroEventDeserializer.ris"
call "org.apache.flume.serialization.AvroEventDeserializer.close(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.close(0)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(3)"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.access$100(1)"
call "org.apache.flume.serialization.AvroEventDeserializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.AvroEventDeserializer.static {...}" "org.apache.flume.serialization.AvroEventDeserializer.logger"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.static {...}"
reference "org.apache.flume.serialization.AvroEventDeserializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.logger"
reference "org.apache.flume.serialization.AvroEventDeserializer.schemaType" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.schemaType"
reference "org.apache.flume.serialization.AvroEventDeserializer.ris" "org.apache.flume.serialization.ResettableInputStream"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.ris"
reference "org.apache.flume.serialization.AvroEventDeserializer.schema" "org.apache.avro.Schema"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.schema"
reference "org.apache.flume.serialization.AvroEventDeserializer.schemaHash" "byte[]"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.schemaHash"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.schemaHashString"
reference "org.apache.flume.serialization.AvroEventDeserializer.fileReader" "org.apache.avro.file.DataFileReader"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
reference "org.apache.flume.serialization.AvroEventDeserializer.datumWriter" "org.apache.avro.generic.GenericDatumWriter"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.datumWriter"
reference "org.apache.flume.serialization.AvroEventDeserializer.record" "org.apache.avro.generic.GenericRecord"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.record"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.out"
reference "org.apache.flume.serialization.AvroEventDeserializer.encoder" "org.apache.avro.io.BinaryEncoder"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.encoder"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.CONFIG_SCHEMA_TYPE_KEY"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AVRO_SCHEMA_HEADER_HASH"
contain "org.apache.flume.serialization.AvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AVRO_SCHEMA_HEADER_LITERAL"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.version(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.revision(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.branch(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.user(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.date(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.url(0)"
contain "org.apache.flume.VersionAnnotation" "org.apache.flume.VersionAnnotation.srcChecksum(0)"
reference "org.apache.flume.instrumentation.util.JMXPollUtil" "com.google.common.collect.Maps"
reference "org.apache.flume.instrumentation.util.JMXPollUtil" "org.slf4j.Logger"
reference "org.apache.flume.instrumentation.util.JMXPollUtil" "com.google.common.base.Throwables"
reference "org.apache.flume.instrumentation.util.JMXPollUtil" "org.slf4j.LoggerFactory"
contain "org.apache.flume.instrumentation.util.JMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil.JMXPollUtil(0)"
call "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)" "com.google.common.collect.Maps.newHashMap(0)"
reference "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)" "org.apache.flume.instrumentation.util.JMXPollUtil.mbeanServer"
reference "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)" "org.apache.flume.instrumentation.util.JMXPollUtil.LOG"
call "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.instrumentation.util.JMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)"
call "org.apache.flume.instrumentation.util.JMXPollUtil.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.instrumentation.util.JMXPollUtil.static {...}" "org.apache.flume.instrumentation.util.JMXPollUtil.LOG"
reference "org.apache.flume.instrumentation.util.JMXPollUtil.static {...}" "org.apache.flume.instrumentation.util.JMXPollUtil.mbeanServer"
contain "org.apache.flume.instrumentation.util.JMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil.static {...}"
reference "org.apache.flume.instrumentation.util.JMXPollUtil.LOG" "org.slf4j.Logger"
contain "org.apache.flume.instrumentation.util.JMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil.LOG"
contain "org.apache.flume.instrumentation.util.JMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil.mbeanServer"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
reference "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.SupervisorPolicy(0)"
contain "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.isValid(2)"
reference "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.Constants(0)"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.REGEX"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.DEFAULT_REGEX"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.EXCLUDE_EVENTS"
contain "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.DEFAULT_EXCLUDE_EVENTS"
reference "org.apache.flume.source.http.JSONHandler" "com.google.gson.GsonBuilder"
reference "org.apache.flume.source.http.JSONHandler" "com.google.gson.JsonSyntaxException"
reference "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.HTTPBadRequestException"
reference "org.apache.flume.source.http.JSONHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.http.JSONHandler" "org.apache.flume.event.JSONEvent"
reference "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.HTTPSourceHandler"
reference "org.apache.flume.source.http.JSONHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.http.JSONHandler" "com.google.gson.Gson"
reference "org.apache.flume.source.http.JSONHandler" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.http.JSONHandler" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "org.apache.flume.source.http.JSONHandler.1.{...}"
call "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "org.apache.flume.source.http.JSONHandler.1.getType(0)"
reference "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "org.apache.flume.source.http.JSONHandler.listType"
call "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "com.google.gson.GsonBuilder.GsonBuilder(0)"
call "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "com.google.gson.GsonBuilder.disableHtmlEscaping(0)"
call "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "com.google.gson.GsonBuilder.create(0)"
reference "org.apache.flume.source.http.JSONHandler.JSONHandler(0)" "org.apache.flume.source.http.JSONHandler.gson"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.JSONHandler(0)"
reference "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.source.http.JSONHandler.LOG"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.slf4j.Logger.error(2)"
reference "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.source.http.JSONHandler.gson"
reference "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.source.http.JSONHandler.listType"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "com.google.gson.Gson.fromJson(2)"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(2)"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.event.JSONEvent.setCharset(1)"
call "org.apache.flume.source.http.JSONHandler.getEvents(1)" "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.getEvents(1)"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.configure(1)"
call "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)" "org.apache.flume.event.EventBuilder.withBody(2)"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)"
call "org.apache.flume.source.http.JSONHandler.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.http.JSONHandler.static {...}" "org.apache.flume.source.http.JSONHandler.LOG"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.static {...}"
reference "org.apache.flume.source.http.JSONHandler.LOG" "org.slf4j.Logger"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.LOG"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.listType"
reference "org.apache.flume.source.http.JSONHandler.gson" "com.google.gson.Gson"
contain "org.apache.flume.source.http.JSONHandler" "org.apache.flume.source.http.JSONHandler.gson"
reference "org.apache.flume.CounterGroup.CounterGroup(0)" "org.apache.flume.CounterGroup.counters"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.CounterGroup(0)"
call "org.apache.flume.CounterGroup.get(1)" "org.apache.flume.CounterGroup.getCounter(1)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.get(1)"
call "org.apache.flume.CounterGroup.incrementAndGet(1)" "org.apache.flume.CounterGroup.getCounter(1)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.CounterGroup.addAndGet(2)" "org.apache.flume.CounterGroup.getCounter(1)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.addAndGet(2)"
call "org.apache.flume.CounterGroup.add(1)" "org.apache.flume.CounterGroup.getCounters(0)"
call "org.apache.flume.CounterGroup.add(1)" "org.apache.flume.CounterGroup.addAndGet(2)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.add(1)"
call "org.apache.flume.CounterGroup.set(2)" "org.apache.flume.CounterGroup.getCounter(1)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.set(2)"
reference "org.apache.flume.CounterGroup.getCounter(1)" "org.apache.flume.CounterGroup.counters"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.getCounter(1)"
reference "org.apache.flume.CounterGroup.toString(0)" "org.apache.flume.CounterGroup.name"
reference "org.apache.flume.CounterGroup.toString(0)" "org.apache.flume.CounterGroup.counters"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.toString(0)"
reference "org.apache.flume.CounterGroup.getName(0)" "org.apache.flume.CounterGroup.name"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.getName(0)"
reference "org.apache.flume.CounterGroup.setName(1)" "org.apache.flume.CounterGroup.name"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.setName(1)"
reference "org.apache.flume.CounterGroup.getCounters(0)" "org.apache.flume.CounterGroup.counters"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.getCounters(0)"
reference "org.apache.flume.CounterGroup.setCounters(1)" "org.apache.flume.CounterGroup.counters"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.setCounters(1)"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.name"
contain "org.apache.flume.CounterGroup" "org.apache.flume.CounterGroup.counters"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.thrift.ThriftFlumeEvent"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.thrift.ThriftSourceProtocol.Iface"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.thrift.TException"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.slf4j.Logger"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.thrift.Status"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "com.google.common.collect.Lists"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.thrift.ThriftSourceProtocol"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(0)" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0"
contain "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.thrift.ThriftFlumeEvent.getBody(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.thrift.ThriftFlumeEvent.getHeaders(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.source.ThriftSource.access$200(1)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.source.ThriftSource.getChannelProcessor(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.source.ThriftSource.logger"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.source.ThriftSource.getName(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.thrift.Status.FAILED"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)" "org.apache.flume.thrift.Status.OK"
contain "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.source.ThriftSource.access$200(1)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.thrift.ThriftFlumeEvent.getBody(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.thrift.ThriftFlumeEvent.getHeaders(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.source.ThriftSource.getChannelProcessor(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.source.ThriftSource.logger"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.source.ThriftSource.getName(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.slf4j.Logger.warn(2)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.thrift.Status.FAILED"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)" "org.apache.flume.thrift.Status.OK"
contain "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)"
contain "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(1)"
reference "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0" "org.apache.flume.source.ThriftSource"
contain "org.apache.flume.source.ThriftSource.ThriftSourceHandler" "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.CounterGroup"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.sink.AbstractSink"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.conf.Configurable"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.NullSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.NullSink" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.NullSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.NullSink" "org.apache.flume.Sink"
call "org.apache.flume.sink.NullSink.NullSink(0)" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
reference "org.apache.flume.sink.NullSink.NullSink(0)" "org.apache.flume.sink.NullSink.batchSize"
reference "org.apache.flume.sink.NullSink.NullSink(0)" "org.apache.flume.sink.NullSink.logEveryNEvents"
call "org.apache.flume.sink.NullSink.NullSink(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.sink.NullSink.NullSink(0)" "org.apache.flume.sink.NullSink.counterGroup"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.NullSink(0)"
call "org.apache.flume.sink.NullSink.configure(1)" "org.apache.flume.Context.getInteger(2)"
reference "org.apache.flume.sink.NullSink.configure(1)" "org.apache.flume.sink.NullSink.batchSize"
reference "org.apache.flume.sink.NullSink.configure(1)" "org.apache.flume.sink.NullSink.logger"
call "org.apache.flume.sink.NullSink.configure(1)" "org.apache.flume.sink.NullSink.getName(0)"
call "org.apache.flume.sink.NullSink.configure(1)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.sink.NullSink.configure(1)" "com.google.common.base.Preconditions.checkArgument(2)"
reference "org.apache.flume.sink.NullSink.configure(1)" "org.apache.flume.sink.NullSink.logEveryNEvents"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.configure(1)"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.getChannel(0)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Channel.getTransaction(0)"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.counterGroup"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.CounterGroup.get(1)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.batchSize"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Channel.take(0)"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.logEveryNEvents"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.logger"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.sink.NullSink.getName(0)"
call "org.apache.flume.sink.NullSink.process(0)" "org.slf4j.Logger.info(3)"
reference "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.CounterGroup.addAndGet(2)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.sink.NullSink.process(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.sink.NullSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(2)"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.process(0)"
reference "org.apache.flume.sink.NullSink.start(0)" "org.apache.flume.sink.NullSink.logger"
call "org.apache.flume.sink.NullSink.start(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.sink.NullSink.start(0)" "org.apache.flume.sink.NullSink.counterGroup"
call "org.apache.flume.sink.NullSink.start(0)" "org.apache.flume.sink.NullSink.getName(0)"
call "org.apache.flume.sink.NullSink.start(0)" "org.apache.flume.CounterGroup.setName(1)"
call "org.apache.flume.sink.NullSink.start(0)" "org.apache.flume.sink.AbstractSink.start(0)"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.start(0)"
reference "org.apache.flume.sink.NullSink.stop(0)" "org.apache.flume.sink.NullSink.logger"
call "org.apache.flume.sink.NullSink.stop(0)" "org.apache.flume.sink.NullSink.getName(0)"
call "org.apache.flume.sink.NullSink.stop(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.sink.NullSink.stop(0)" "org.apache.flume.sink.AbstractSink.stop(0)"
reference "org.apache.flume.sink.NullSink.stop(0)" "org.apache.flume.sink.NullSink.counterGroup"
call "org.apache.flume.sink.NullSink.stop(0)" "org.slf4j.Logger.info(3)"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.stop(0)"
call "org.apache.flume.sink.NullSink.toString(0)" "org.apache.flume.sink.NullSink.getName(0)"
reference "org.apache.flume.sink.NullSink.toString(0)" "org.apache.flume.sink.NullSink.batchSize"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.toString(0)"
call "org.apache.flume.sink.NullSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.NullSink.static {...}" "org.apache.flume.sink.NullSink.logger"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.static {...}"
reference "org.apache.flume.sink.NullSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.logger"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.DFLT_BATCH_SIZE"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.DFLT_LOG_EVERY_N_EVENTS"
reference "org.apache.flume.sink.NullSink.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.counterGroup"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.batchSize"
contain "org.apache.flume.sink.NullSink" "org.apache.flume.sink.NullSink.logEveryNEvents"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.Resettable"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.Seekable"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.annotations.InterfaceAudience.Public"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.ResettableInputStream(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.read(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.read(3)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.mark(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.reset(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.seek(1)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.tell(0)"
contain "org.apache.flume.serialization.ResettableInputStream" "org.apache.flume.serialization.ResettableInputStream.close(0)"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.FlumeException"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.SinkProcessor"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.Context"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.conf.sink.SinkProcessorType"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.conf.ComponentConfiguration"
reference "org.apache.flume.sink.SinkProcessorFactory" "com.google.common.base.Preconditions"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.slf4j.Logger"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.SinkProcessorFactory" "org.slf4j.LoggerFactory"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.SinkProcessorFactory(0)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "com.google.common.base.Preconditions.checkNotNull(1)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "com.google.common.base.Preconditions.checkArgument(1)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.Context.getParameters(0)"
reference "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.OTHER"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.valueOf(1)"
reference "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.sink.SinkProcessorFactory.logger"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.equals(1)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.getSinkProcessorClassName(0)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.SinkProcessor.setSinks(1)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.ComponentConfiguration.getType(0)"
reference "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.DEFAULT"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.valueOf(1)"
reference "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.sink.SinkProcessorFactory.logger"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.slf4j.Logger.warn(2)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.sink.SinkProcessorType.getSinkProcessorClassName(0)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.FlumeException.FlumeException(2)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.SinkProcessor.setSinks(1)"
call "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
call "org.apache.flume.sink.SinkProcessorFactory.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.SinkProcessorFactory.static {...}" "org.apache.flume.sink.SinkProcessorFactory.logger"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.static {...}"
reference "org.apache.flume.sink.SinkProcessorFactory.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.logger"
contain "org.apache.flume.sink.SinkProcessorFactory" "org.apache.flume.sink.SinkProcessorFactory.TYPE"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType[]"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.LineDeserializer.Builder"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.AvroEventDeserializer.Builder"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.annotations.InterfaceStability.Unstable"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.LineDeserializer"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.annotations.InterfaceStability"
reference "org.apache.flume.serialization.EventDeserializerType.values(0)" "org.apache.flume.serialization.EventDeserializerType.$VALUES"
call "org.apache.flume.serialization.EventDeserializerType.values(0)" "org.apache.flume.serialization.EventDeserializerType[].clone(0)"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.values(0)"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.valueOf(1)"
reference "org.apache.flume.serialization.EventDeserializerType.EventDeserializerType(3)" "org.apache.flume.serialization.EventDeserializerType.builderClass"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.EventDeserializerType(3)"
reference "org.apache.flume.serialization.EventDeserializerType.getBuilderClass(0)" "org.apache.flume.serialization.EventDeserializerType.builderClass"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.getBuilderClass(0)"
call "org.apache.flume.serialization.EventDeserializerType.static {...}" "org.apache.flume.serialization.EventDeserializerType.EventDeserializerType(3)"
reference "org.apache.flume.serialization.EventDeserializerType.static {...}" "org.apache.flume.serialization.EventDeserializerType.LINE"
reference "org.apache.flume.serialization.EventDeserializerType.static {...}" "org.apache.flume.serialization.EventDeserializerType.AVRO"
reference "org.apache.flume.serialization.EventDeserializerType.static {...}" "org.apache.flume.serialization.EventDeserializerType.OTHER"
reference "org.apache.flume.serialization.EventDeserializerType.static {...}" "org.apache.flume.serialization.EventDeserializerType.$VALUES"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.static {...}"
reference "org.apache.flume.serialization.EventDeserializerType.LINE" "org.apache.flume.serialization.EventDeserializerType"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.LINE"
reference "org.apache.flume.serialization.EventDeserializerType.AVRO" "org.apache.flume.serialization.EventDeserializerType"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.AVRO"
reference "org.apache.flume.serialization.EventDeserializerType.OTHER" "org.apache.flume.serialization.EventDeserializerType"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.OTHER"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.builderClass"
reference "org.apache.flume.serialization.EventDeserializerType.$VALUES" "org.apache.flume.serialization.EventDeserializerType[]"
contain "org.apache.flume.serialization.EventDeserializerType" "org.apache.flume.serialization.EventDeserializerType.$VALUES"
reference "org.apache.flume.source.ExecSource.StderrReader" "org.apache.flume.source.ExecSource"
reference "org.apache.flume.source.ExecSource.StderrReader" "org.slf4j.Logger"
reference "org.apache.flume.source.ExecSource.StderrReader.StderrReader(2)" "org.apache.flume.source.ExecSource.StderrReader.input"
reference "org.apache.flume.source.ExecSource.StderrReader.StderrReader(2)" "org.apache.flume.source.ExecSource.StderrReader.logStderr"
contain "org.apache.flume.source.ExecSource.StderrReader" "org.apache.flume.source.ExecSource.StderrReader.StderrReader(2)"
reference "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.apache.flume.source.ExecSource.StderrReader.input"
reference "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.apache.flume.source.ExecSource.StderrReader.logStderr"
call "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.apache.flume.source.ExecSource.access$200(0)"
call "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.slf4j.Logger.info(3)"
call "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.ExecSource.StderrReader.run(0)" "org.slf4j.Logger.info(2)"
contain "org.apache.flume.source.ExecSource.StderrReader" "org.apache.flume.source.ExecSource.StderrReader.run(0)"
contain "org.apache.flume.source.ExecSource.StderrReader" "org.apache.flume.source.ExecSource.StderrReader.input"
contain "org.apache.flume.source.ExecSource.StderrReader" "org.apache.flume.source.ExecSource.StderrReader.logStderr"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.slf4j.Logger"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "com.google.common.collect.Lists"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.regex"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(2)" "org.apache.flume.interceptor.RegexExtractorInterceptor.serializers"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(2)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.initialize(0)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.close(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.regex"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.serializers"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.logger"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.slf4j.Logger.isDebugEnabled(0)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$000(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$100(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer.serialize(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "com.google.common.collect.Lists.newArrayListWithCapacity(1)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)" "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.access$200(0)"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(3)"
call "org.apache.flume.interceptor.RegexExtractorInterceptor.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.static {...}" "org.apache.flume.interceptor.RegexExtractorInterceptor.logger"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.static {...}"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.REGEX"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.SERIALIZERS"
reference "org.apache.flume.interceptor.RegexExtractorInterceptor.logger" "org.slf4j.Logger"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.logger"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.regex"
contain "org.apache.flume.interceptor.RegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor.serializers"
reference "org.apache.flume.client.avro.EventReader" "org.apache.flume.annotations.InterfaceAudience.Private"
reference "org.apache.flume.client.avro.EventReader" "org.apache.flume.annotations.InterfaceStability.Evolving"
reference "org.apache.flume.client.avro.EventReader" "org.apache.flume.annotations.InterfaceAudience"
reference "org.apache.flume.client.avro.EventReader" "org.apache.flume.annotations.InterfaceStability"
contain "org.apache.flume.client.avro.EventReader" "org.apache.flume.client.avro.EventReader.readEvent(0)"
contain "org.apache.flume.client.avro.EventReader" "org.apache.flume.client.avro.EventReader.readEvents(1)"
contain "org.apache.flume.client.avro.EventReader" "org.apache.flume.client.avro.EventReader.close(0)"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.slf4j.Logger"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkProcessor"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.Sink.Status"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.CounterGroup"
reference "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.Sink"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.PollingRunner(0)"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.SinkRunner.access$300(0)"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.SinkRunner.PollingRunner.shouldStop"
reference "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.SinkRunner.PollingRunner.policy"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.SinkProcessor.process(0)"
reference "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.Sink.Status.equals(1)"
reference "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.SinkRunner.PollingRunner.counterGroup"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.apache.flume.CounterGroup.set(2)"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.SinkRunner.PollingRunner.run(0)" "org.slf4j.Logger.debug(2)"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.run(0)"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.access$002(2)"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.access$102(2)"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.access$202(2)"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.access$200(1)"
reference "org.apache.flume.SinkRunner.PollingRunner.policy" "org.apache.flume.SinkProcessor"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.policy"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.shouldStop"
reference "org.apache.flume.SinkRunner.PollingRunner.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.SinkRunner.PollingRunner" "org.apache.flume.SinkRunner.PollingRunner.counterGroup"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.avro.Schema.Parser"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.avro.Schema"
call "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(1)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.out"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(1)"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getSchema(0)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.SCHEMA"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getSchema(0)"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getOutputStream(0)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.out"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getOutputStream(0)"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.convert(1)"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(2)"
call "org.apache.flume.serialization.FlumeEventAvroEventSerializer.static {...}" "org.apache.avro.Schema.Parser.Parser(0)"
call "org.apache.flume.serialization.FlumeEventAvroEventSerializer.static {...}" "org.apache.avro.Schema.Parser.parse(1)"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.static {...}" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.SCHEMA"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.static {...}"
reference "org.apache.flume.serialization.FlumeEventAvroEventSerializer.SCHEMA" "org.apache.avro.Schema"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.SCHEMA"
contain "org.apache.flume.serialization.FlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.out"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.HTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.Context"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.HTTPSourceConfigurationConstants"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.impl.client.DefaultHttpClient"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.client.methods.HttpPost"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.entity.StringEntity"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.client.methods.HttpTrace"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.client.methods.HttpOptions"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.HTTPSourceHandler"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.event.JSONEvent"
reference "org.apache.flume.source.http.TestHTTPSource" "com.google.gson.Gson"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.Event"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.HttpResponse"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.StatusLine"
reference "org.apache.flume.source.http.TestHTTPSource" "junit.framework.Assert"
reference "org.apache.flume.source.http.TestHTTPSource" "org.fest.reflect.core.Reflection"
reference "org.apache.flume.source.http.TestHTTPSource" "org.fest.reflect.field.FieldName"
reference "org.apache.flume.source.http.TestHTTPSource" "org.fest.reflect.field.FieldType"
reference "org.apache.flume.source.http.TestHTTPSource" "org.fest.reflect.field.Invoker"
reference "org.apache.flume.source.http.TestHTTPSource" "com.google.common.collect.Lists"
reference "org.apache.flume.source.http.TestHTTPSource" "com.google.common.collect.Maps"
reference "org.apache.flume.source.http.TestHTTPSource" "org.apache.http.conn.ssl.SSLSocketFactory"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.TestHTTPSource(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.findFreePort(0)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.findFreePort(0)"
reference "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.selectedPort"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.HTTPSource.HTTPSource(0)"
reference "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.source"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
reference "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.httpsSource"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.HTTPSource.setName(1)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.HTTPSource.setChannelProcessor(1)"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.Channel.start(0)"
reference "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.TestHTTPSource.sslPort"
call "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)" "org.apache.flume.source.http.HTTPSource.start(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)"
reference "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)" "org.apache.flume.source.http.TestHTTPSource.source"
call "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)" "org.apache.flume.source.http.HTTPSource.stop(0)"
reference "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)" "org.apache.flume.Channel.stop(0)"
reference "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)" "org.apache.flume.source.http.TestHTTPSource.httpsSource"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)"
call "org.apache.flume.source.http.TestHTTPSource.setUp(0)" "org.apache.http.impl.client.DefaultHttpClient.DefaultHttpClient(0)"
reference "org.apache.flume.source.http.TestHTTPSource.setUp(0)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
reference "org.apache.flume.source.http.TestHTTPSource.setUp(0)" "org.apache.flume.source.http.TestHTTPSource.selectedPort"
call "org.apache.flume.source.http.TestHTTPSource.setUp(0)" "org.apache.http.client.methods.HttpPost.HttpPost(1)"
reference "org.apache.flume.source.http.TestHTTPSource.setUp(0)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.setUp(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.entity.StringEntity.StringEntity(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.entity.StringEntity.setContentType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.client.methods.HttpPost.setEntity(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "junit.framework.Assert.assertEquals(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimple(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testSimple(0)"
reference "org.apache.flume.source.http.TestHTTPSource.testTrace(0)" "org.apache.flume.source.http.TestHTTPSource.selectedPort"
call "org.apache.flume.source.http.TestHTTPSource.testTrace(0)" "org.apache.http.client.methods.HttpTrace.HttpTrace(1)"
call "org.apache.flume.source.http.TestHTTPSource.testTrace(0)" "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testTrace(0)"
reference "org.apache.flume.source.http.TestHTTPSource.testOptions(0)" "org.apache.flume.source.http.TestHTTPSource.selectedPort"
call "org.apache.flume.source.http.TestHTTPSource.testOptions(0)" "org.apache.http.client.methods.HttpOptions.HttpOptions(1)"
call "org.apache.flume.source.http.TestHTTPSource.testOptions(0)" "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testOptions(0)"
reference "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
call "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.entity.StringEntity.StringEntity(2)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.entity.StringEntity.setContentType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.client.methods.HttpPost.setEntity(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "junit.framework.Assert.assertEquals(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.entity.StringEntity.StringEntity(1)"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.entity.StringEntity.setContentType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.client.methods.HttpPost.setEntity(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)"
call "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF8(0)" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF8(0)"
call "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF16(0)" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF16(0)"
call "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF32(0)" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF32(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.http.entity.StringEntity.StringEntity(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.http.entity.StringEntity.setContentType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.http.client.methods.HttpPost.setEntity(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)" "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
call "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.fest.reflect.core.Reflection.field(1)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.fest.reflect.field.FieldName.ofType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.apache.flume.source.http.TestHTTPSource.source"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.fest.reflect.field.FieldType.in(1)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.fest.reflect.field.Invoker.get(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.fest.reflect.field.Invoker.set(1)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testFail(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testFail(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)" "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
call "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)" "org.apache.http.HttpResponse.getStatusLine(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)" "org.apache.http.StatusLine.getStatusCode(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.1.{...}"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.1.getType(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.event.JSONEvent.JSONEvent(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.event.JSONEvent.setHeaders(1)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.event.JSONEvent.setBody(1)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "com.google.gson.Gson.Gson(0)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "com.google.gson.Gson.toJson(2)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.http.entity.StringEntity.StringEntity(1)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.http.entity.StringEntity.setContentType(1)"
reference "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.postRequest"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.http.client.methods.HttpPost.setEntity(1)"
reference "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.httpClient"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
call "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.2.{...}"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.2.getType(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.event.JSONEvent.JSONEvent(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.event.JSONEvent.setHeaders(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.event.JSONEvent.setBody(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "com.google.gson.Gson.Gson(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "com.google.gson.Gson.toJson(2)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.3.{...}"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.4.{...}"
reference "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER"
reference "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.sslPort"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "junit.framework.Assert.assertEquals(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttps(0)" "junit.framework.Assert.fail(1)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testHttps(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.source.http.TestHTTPSource.5.{...}"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.source.http.TestHTTPSource.5.getType(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.event.JSONEvent.JSONEvent(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.event.JSONEvent.setHeaders(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.event.JSONEvent.setBody(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "com.google.gson.Gson.Gson(0)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "com.google.gson.Gson.toJson(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "org.apache.flume.source.http.TestHTTPSource.sslPort"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "junit.framework.Assert.fail(1)"
call "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)" "junit.framework.Assert.assertTrue(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)"
reference "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.source.http.TestHTTPSource.channel"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)"
call "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)"
call "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
reference "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.events"
call "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)" "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)"
reference "org.apache.flume.source.http.TestHTTPSource.source" "org.apache.flume.source.http.HTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.source"
reference "org.apache.flume.source.http.TestHTTPSource.httpsSource" "org.apache.flume.source.http.HTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.httpsSource"
reference "org.apache.flume.source.http.TestHTTPSource.channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.channel"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.selectedPort"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.sslPort"
reference "org.apache.flume.source.http.TestHTTPSource.httpClient" "org.apache.http.impl.client.DefaultHttpClient"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.httpClient"
reference "org.apache.flume.source.http.TestHTTPSource.postRequest" "org.apache.http.client.methods.HttpPost"
contain "org.apache.flume.source.http.TestHTTPSource" "org.apache.flume.source.http.TestHTTPSource.postRequest"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestAvroSource" "org.jboss.netty.channel.ChannelException"
reference "org.apache.flume.source.TestAvroSource" "org.apache.avro.ipc.NettyTransceiver"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.avro.AvroSourceProtocol"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.avro.AvroFlumeEvent"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.SSLChannelFactory"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.lifecycle.LifecycleController"
reference "org.apache.flume.source.TestAvroSource" "org.apache.avro.ipc.specific.SpecificRequestor"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.avro.Status"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestAvroSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestAvroSource" "org.slf4j.Logger"
reference "org.apache.flume.source.TestAvroSource" "org.slf4j.LoggerFactory"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.TestAvroSource(0)"
reference "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.source.TestAvroSource.localhost"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.source.AvroSource.AvroSource(0)"
reference "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.source.TestAvroSource.source"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.source.TestAvroSource.channel"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestAvroSource.setUp(0)" "org.apache.flume.source.AvroSource.setChannelProcessor(1)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.setUp(0)"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.source.TestAvroSource.selectedPort"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.source.TestAvroSource.source"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.source.TestAvroSource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testLifecycle(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithNoCompression(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithNoCompression(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel0(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel0(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel1(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel1(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel6(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel6(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel9(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel9(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnServerOnly(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnServerOnly(0)"
call "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientOnly(0)" "org.apache.flume.source.TestAvroSource.doRequest(3)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientOnly(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.TestAvroSource.selectedPort"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.TestAvroSource.source"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.CompressionChannelFactory(1)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(2)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.avro.ipc.specific.SpecificRequestor.getClient(2)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(1)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.avro.AvroFlumeEvent.AvroFlumeEvent(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.avro.AvroFlumeEvent.setHeaders(1)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.avro.AvroFlumeEvent.setBody(1)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.avro.AvroSourceProtocol.append(1)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.avro.Status.OK"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.TestAvroSource.channel"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.TestAvroSource.logger"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.avro.ipc.NettyTransceiver.close(0)"
call "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.source.TestAvroSource.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.doRequest(3)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.TestAvroSource.selectedPort"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.TestAvroSource.source"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.TestAvroSource.SSLChannelFactory.SSLChannelFactory(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(2)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.avro.ipc.specific.SpecificRequestor.getClient(2)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.avro.AvroFlumeEvent.AvroFlumeEvent(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.avro.AvroFlumeEvent.setHeaders(1)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.avro.AvroFlumeEvent.setBody(1)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.avro.AvroSourceProtocol.append(1)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.avro.Status.OK"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.TestAvroSource.channel"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.TestAvroSource.logger"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.source.TestAvroSource.testSslRequest(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testSslRequest(0)"
reference "org.apache.flume.source.TestAvroSource.testValidIpFilterAllows(0)" "org.apache.flume.source.TestAvroSource.localhost"
call "org.apache.flume.source.TestAvroSource.testValidIpFilterAllows(0)" "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testValidIpFilterAllows(0)"
reference "org.apache.flume.source.TestAvroSource.testValidIpFilterDenys(0)" "org.apache.flume.source.TestAvroSource.localhost"
call "org.apache.flume.source.TestAvroSource.testValidIpFilterDenys(0)" "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testValidIpFilterDenys(0)"
reference "org.apache.flume.source.TestAvroSource.testInvalidIpFilter(0)" "org.apache.flume.source.TestAvroSource.localhost"
call "org.apache.flume.source.TestAvroSource.testInvalidIpFilter(0)" "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.testInvalidIpFilter(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.TestAvroSource.selectedPort"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.TestAvroSource.logger"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.slf4j.Logger.info(1)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.TestAvroSource.source"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.TestAvroSource.SSLChannelFactory.SSLChannelFactory(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(2)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.avro.ipc.specific.SpecificRequestor.getClient(2)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(1)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.avro.AvroFlumeEvent.AvroFlumeEvent(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.avro.AvroFlumeEvent.setHeaders(1)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.avro.AvroFlumeEvent.setBody(1)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.avro.AvroSourceProtocol.append(1)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.avro.Status.OK"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.avro.ipc.NettyTransceiver.close(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.source.TestAvroSource.channel"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)"
call "org.apache.flume.source.TestAvroSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.TestAvroSource.static {...}" "org.apache.flume.source.TestAvroSource.logger"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.static {...}"
reference "org.apache.flume.source.TestAvroSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.logger"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.selectedPort"
reference "org.apache.flume.source.TestAvroSource.source" "org.apache.flume.source.AvroSource"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.source"
reference "org.apache.flume.source.TestAvroSource.channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.channel"
contain "org.apache.flume.source.TestAvroSource" "org.apache.flume.source.TestAvroSource.localhost"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getHeaders(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.EMPTY_HEADERS"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getHeaders(0)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.setHeaders(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getBody(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getBody(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.setBody(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.setBody(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.static {...}" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.EMPTY_HEADERS"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.static {...}"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.EMPTY_HEADERS"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body" "byte[]"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$exceptionClass"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$test"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$exceptionClass"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$test"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$exceptionClass"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$test"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.this$0" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.val$test"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.{...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.{...}"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.run(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.val$test"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.val$mainThread"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.{...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.val$mainThread"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.run(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.val$mainThread"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.this$0" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.values(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.$SwitchMap$org$apache$flume$channel$AbstractBasicChannelSemanticsTest$TestChannel$Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.ordinal(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.$SwitchMap$org$apache$flume$channel$AbstractBasicChannelSemanticsTest$TestChannel$Mode" "int[]"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.$SwitchMap$org$apache$flume$channel$AbstractBasicChannelSemanticsTest$TestChannel$Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.val$test"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.{...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.val$test"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalState(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.run(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.val$test"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.this$0" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.this$0"
reference "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.3.{...}" "org.apache.flume.source.http.TestHTTPSource.3.this$0"
contain "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource.3.{...}"
contain "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource.3.checkClientTrusted(2)"
contain "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource.3.checkServerTrusted(2)"
contain "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource.3.getAcceptedIssuers(0)"
reference "org.apache.flume.source.http.TestHTTPSource.3.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.3" "org.apache.flume.source.http.TestHTTPSource.3.this$0"
reference "org.apache.flume.source.http.TestHTTPSource.4" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.4.{...}" "org.apache.flume.source.http.TestHTTPSource.4.this$0"
contain "org.apache.flume.source.http.TestHTTPSource.4" "org.apache.flume.source.http.TestHTTPSource.4.{...}"
contain "org.apache.flume.source.http.TestHTTPSource.4" "org.apache.flume.source.http.TestHTTPSource.4.verify(2)"
reference "org.apache.flume.source.http.TestHTTPSource.4.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.4" "org.apache.flume.source.http.TestHTTPSource.4.this$0"
reference "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.Builder"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.CensoringInterceptor(0)"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.initialize(0)"
call "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)" "org.apache.flume.Event.getHeaders(0)"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)"
call "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)" "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.close(0)"
contain "org.apache.flume.interceptor.CensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.CensoringInterceptor(1)"
reference "org.apache.flume.source.http.TestHTTPSource.1" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.source.http.TestHTTPSource.1" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.1" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper"
reference "org.apache.flume.source.http.TestHTTPSource.1.{...}" "org.apache.flume.source.http.TestHTTPSource.1.this$0"
call "org.apache.flume.source.http.TestHTTPSource.1.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.source.http.TestHTTPSource.1" "org.apache.flume.source.http.TestHTTPSource.1.{...}"
reference "org.apache.flume.source.http.TestHTTPSource.1.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.1" "org.apache.flume.source.http.TestHTTPSource.1.this$0"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "junit.framework.Assert"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.joda.time.format.DateTimeFormat"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.TestRegexExtractorInterceptorMillisSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.RegexExtractorInterceptorMillisSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)" "junit.framework.Assert.fail(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.RegexExtractorInterceptorMillisSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)" "junit.framework.Assert.fail(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.RegexExtractorInterceptorMillisSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.joda.time.format.DateTimeFormat.forPattern(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.joda.time.format.DateTimeFormatter.print(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)"
reference "org.apache.flume.source.http.TestHTTPSource.2" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.source.http.TestHTTPSource.2" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.2.{...}" "org.apache.flume.source.http.TestHTTPSource.2.this$0"
call "org.apache.flume.source.http.TestHTTPSource.2.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.source.http.TestHTTPSource.2" "org.apache.flume.source.http.TestHTTPSource.2.{...}"
reference "org.apache.flume.source.http.TestHTTPSource.2.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.2" "org.apache.flume.source.http.TestHTTPSource.2.this$0"
reference "org.apache.flume.source.http.TestHTTPSource.5" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.source.http.TestHTTPSource.5" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.5.{...}" "org.apache.flume.source.http.TestHTTPSource.5.this$0"
call "org.apache.flume.source.http.TestHTTPSource.5.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.source.http.TestHTTPSource.5" "org.apache.flume.source.http.TestHTTPSource.5.{...}"
reference "org.apache.flume.source.http.TestHTTPSource.5.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.5" "org.apache.flume.source.http.TestHTTPSource.5.this$0"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.generic.GenericDatumReader"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.file.DataFileReader"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.generic.GenericData.Record"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.io.DatumReader"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.generic.GenericRecord"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "com.google.common.collect.Lists"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.EventSerializerFactory"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.avro.generic.GenericData"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer.TestSyslogAvroEventSerializer(0)" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.testFile"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer.TestSyslogAvroEventSerializer(0)" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.schemaFile"
contain "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.TestSyslogAvroEventSerializer(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)" "org.apache.flume.Event.getHeaders(0)"
contain "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)"
reference "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.testFile"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.file.DataFileReader.DataFileReader(2)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.file.DataFileReader.getSchema(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.generic.GenericData.Record.Record(1)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.file.DataFileReader.hasNext(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.file.DataFileReader.next(1)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.generic.GenericRecord.get(1)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.avro.file.DataFileReader.close(0)"
call "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)"
contain "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.testFile"
contain "org.apache.flume.serialization.TestSyslogAvroEventSerializer" "org.apache.flume.serialization.TestSyslogAvroEventSerializer.schemaFile"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2.{...}"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2.accept(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.sink.SinkGroup"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.SinkRunner"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "junit.framework.Assert"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.event.EventBuilder"
contain "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.sink.TestFailoverSinkProcessor.TestFailoverSinkProcessor(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setChannel(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setName(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Channel.start(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.SinkGroup.SinkGroup(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Context.putAll(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.SinkGroup.getProcessor(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.SinkRunner.SinkRunner(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.SinkRunner.start(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getLifecycleState(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getWritten(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setRemaining(1)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.SinkRunner.stop(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)" "org.apache.flume.Channel.stop(0)"
contain "org.apache.flume.sink.TestFailoverSinkProcessor" "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TransientPositionTracker"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.Builder"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.ResettableFileInputStream"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericDatumReader"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericRecord"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.file.DataFileWriter"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericDatumWriter"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericRecordBuilder"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.Schema.Field"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.slf4j.Logger"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.io.DecoderFactory"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.io.DatumReader"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.SchemaNormalization"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.commons.codec.binary.Hex"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.Schema"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.slf4j.LoggerFactory"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.Schema.Type"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericData.Record"
reference "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.avro.generic.GenericData"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.TestAvroEventDeserializer(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.avro.io.DecoderFactory.get(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.avro.io.DecoderFactory.binaryDecoder(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.avro.io.DatumReader.read(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.avro.generic.GenericRecord.get(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.EventDeserializer.reset(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)" "org.apache.flume.serialization.EventDeserializer.mark(0)"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.toString(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.avro.SchemaNormalization.parsingFingerprint(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)" "org.apache.commons.codec.binary.Hex.encodeHexString(1)"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.toString(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
call "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)" "org.apache.avro.Schema.toString(0)"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.DataFileWriter(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.create(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.generic.GenericRecordBuilder.GenericRecordBuilder(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.generic.GenericRecordBuilder.set(2)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.generic.GenericRecordBuilder.build(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.append(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.sync(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.flush(0)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)" "org.apache.avro.file.DataFileWriter.close(0)"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
call "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.avro.Schema.createRecord(4)"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.avro.Schema.Type.STRING"
call "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.avro.Schema.create(1)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.avro.Schema.Field.Field(3)"
call "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}" "org.apache.avro.Schema.setFields(1)"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
reference "org.apache.flume.serialization.TestAvroEventDeserializer.schema" "org.apache.avro.Schema"
contain "org.apache.flume.serialization.TestAvroEventDeserializer" "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
reference "org.apache.flume.tools.TestVersionInfo" "org.apache.flume.tools.VersionInfo"
reference "org.apache.flume.tools.TestVersionInfo" "org.slf4j.Logger"
reference "org.apache.flume.tools.TestVersionInfo" "org.slf4j.LoggerFactory"
contain "org.apache.flume.tools.TestVersionInfo" "org.apache.flume.tools.TestVersionInfo.TestVersionInfo(0)"
reference "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.TestVersionInfo.logger"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getVersion(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.slf4j.Logger.debug(1)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getUrl(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getRevision(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getUser(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getDate(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getBuildVersion(0)"
call "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)" "org.apache.flume.tools.VersionInfo.getBranch(0)"
contain "org.apache.flume.tools.TestVersionInfo" "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)"
call "org.apache.flume.tools.TestVersionInfo.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.tools.TestVersionInfo.static {...}" "org.apache.flume.tools.TestVersionInfo.logger"
contain "org.apache.flume.tools.TestVersionInfo" "org.apache.flume.tools.TestVersionInfo.static {...}"
reference "org.apache.flume.tools.TestVersionInfo.logger" "org.slf4j.Logger"
contain "org.apache.flume.tools.TestVersionInfo" "org.apache.flume.tools.TestVersionInfo.logger"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySource"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestSpoolDirectorySource" "com.google.common.io.Files"
reference "org.apache.flume.source.TestSpoolDirectorySource" "com.google.common.base.Charsets"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.lifecycle.LifecycleController"
reference "org.apache.flume.source.TestSpoolDirectorySource" "com.google.common.collect.Lists"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.TestSpoolDirectorySource(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.source.TestSpoolDirectorySource.channel"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.source.SpoolDirectorySource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "com.google.common.io.Files.createTempDir(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.tearDown(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.tearDown(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
call "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
call "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.source.SpoolDirectorySource.start(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.source.SpoolDirectorySource.getSourceCounter(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.instrumentation.SourceCounter.getEventAcceptedCount(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.channel"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.source.SpoolDirectorySource.start(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.source.SpoolDirectorySource.getSourceCounter(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.instrumentation.SourceCounter.getEventAcceptedCount(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.source.TestSpoolDirectorySource.channel"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.source.SpoolDirectorySource.start(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.source.SpoolDirectorySource.getLifecycleState(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.source.SpoolDirectorySource.stop(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.SpoolDirectorySource.start(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.TestSpoolDirectorySource.channel"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.SpoolDirectorySource.stop(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)" "org.apache.flume.source.SpoolDirectorySource.hasFatalError(0)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.TestSpoolDirectorySource.channel"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.channel.MemoryChannel.stop(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.channel.MemoryChannel.start(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "com.google.common.io.Files.write(3)"
reference "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.TestSpoolDirectorySource.source"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.SpoolDirectorySource.setBackOff(1)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.SpoolDirectorySource.start(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.SpoolDirectorySource.hitChannelException(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)" "org.apache.flume.source.SpoolDirectorySource.stop(0)"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)"
reference "org.apache.flume.source.TestSpoolDirectorySource.source" "org.apache.flume.source.SpoolDirectorySource"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.source"
reference "org.apache.flume.source.TestSpoolDirectorySource.channel" "org.apache.flume.channel.MemoryChannel"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.channel"
contain "org.apache.flume.source.TestSpoolDirectorySource" "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.avro.Schema.Parser"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.joda.time.DateTime"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.AbstractAvroEventSerializer"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.avro.Schema"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.slf4j.Logger"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.joda.time.format.DateTimeFormat"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.slf4j.LoggerFactory"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.out"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.avro.Schema.Parser.Parser(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.schemaFile"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.avro.Schema.Parser.parse(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.schema"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.getOutputStream(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.out"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.getOutputStream(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.getSchema(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.schema"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.getSchema(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.SyslogEvent(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setFacility(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setSeverity(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setTimestamp(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setHostname(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setMessage(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.logger"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)" "org.slf4j.Logger.debug(2)"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt1"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.format.DateTimeFormatter.parseDateTime(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.logger"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt2"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.DateTime(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.getYear(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.withYear(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.isAfter(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.minusMonths(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.isBefore(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.plusMonths(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)" "org.joda.time.DateTime.getMillis(0)"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.access$000(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.joda.time.format.DateTimeFormat.forPattern(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.joda.time.format.DateTimeFormatter.withZoneUTC(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt1"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt2"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.apache.flume.serialization.SyslogAvroEventSerializer.logger"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}" "org.apache.flume.serialization.SyslogAvroEventSerializer.schemaFile"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt1" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt1"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt2" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt2"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.logger"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.schemaFile"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.out"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.schema" "org.apache.avro.Schema"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer" "org.apache.flume.serialization.SyslogAvroEventSerializer.schema"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.Event"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.Event[]"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalArgument(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalArgument(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalState(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalState(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testWrongThread(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testWrongThread(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.{...}"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testWrongThread(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getMode(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.setMode(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testError(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testError(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testError(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testRuntimeException(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testRuntimeException(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testRuntimeException(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testChannelException(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testChannelException(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testChannelException(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.{...}"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.interruptTest(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.interruptTest(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.{...}"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.interruptTest(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testWrongThread(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testExceptions(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testError(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testRuntimeException(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testChannelException(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)" "com.google.common.base.Preconditions.checkState(2)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.after(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.after(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.after(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.static {...}" "org.apache.flume.event.EventBuilder.withBody(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.static {...}"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.Context"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.MockEvent"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.MockChannel"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.ChannelSelectorFactory"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "junit.framework.Assert"
reference "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.TestReplicatingChannelSelector(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.channels"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.TestReplicatingChannelSelector(0)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.channels"
call "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)" "org.apache.flume.channel.MockChannel.createMockChannel(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.ChannelSelector.configure(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.channels"
reference "org.apache.flume.channel.TestReplicatingChannelSelector.selector" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.channel.TestReplicatingChannelSelector" "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
reference "org.apache.flume.source.MockSource" "org.apache.flume.Source"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.MockSource(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.start(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.stop(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.getLifecycleState(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.setChannelProcessor(1)"
reference "org.apache.flume.source.MockSource.setName(1)" "org.apache.flume.source.MockSource.name"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.setName(1)"
reference "org.apache.flume.source.MockSource.getName(0)" "org.apache.flume.source.MockSource.name"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.getName(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.getChannelProcessor(0)"
contain "org.apache.flume.source.MockSource" "org.apache.flume.source.MockSource.name"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.9.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.9.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.channel.TestBasicChannelSemantics.9.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.9.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.9.run(0)" "org.apache.flume.Transaction.begin(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.channel.TestBasicChannelSemantics.9.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.channel.TestBasicChannelSemantics.9.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.9.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.9" "org.apache.flume.channel.TestBasicChannelSemantics.9.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.8.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.8.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.channel.TestBasicChannelSemantics.8.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.8.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.8.run(0)" "org.apache.flume.Transaction.begin(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.channel.TestBasicChannelSemantics.8.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.channel.TestBasicChannelSemantics.8.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.8.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.8" "org.apache.flume.channel.TestBasicChannelSemantics.8.this$0"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.ThriftSink"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.api.ThriftTestingSource"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.TestThriftSink" "com.google.common.base.Charsets"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.api.ThriftTestingSource.HandlerType"
reference "org.apache.flume.sink.TestThriftSink" "org.apache.flume.Sink"
reference "org.apache.flume.sink.TestThriftSink.TestThriftSink(0)" "org.apache.flume.sink.TestThriftSink.random"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.TestThriftSink(0)"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.ThriftSink.ThriftSink(0)"
reference "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.TestThriftSink.sink"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.TestThriftSink.channel"
reference "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.TestThriftSink.hostname"
reference "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.TestThriftSink.random"
reference "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.TestThriftSink.port"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.sink.ThriftSink.setChannel(1)"
call "org.apache.flume.sink.TestThriftSink.setUp(0)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.setUp(0)"
reference "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.sink.TestThriftSink.channel"
call "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.channel.MemoryChannel.stop(0)"
reference "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.sink.TestThriftSink.sink"
call "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.sink.ThriftSink.stop(0)"
reference "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.sink.TestThriftSink.src"
call "org.apache.flume.sink.TestThriftSink.tearDown(0)" "org.apache.flume.api.ThriftTestingSource.stop(0)"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.tearDown(0)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.OK"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.name(0)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.TestThriftSink.port"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.ThriftTestingSource(2)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.TestThriftSink.src"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.TestThriftSink.channel"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.channel.MemoryChannel.start(0)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.TestThriftSink.sink"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.ThriftSink.start(0)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.channel.MemoryChannel.put(1)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.ThriftSink.process(0)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.sink.ThriftSink.stop(0)"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.flumeEvents"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.batchCount"
reference "org.apache.flume.sink.TestThriftSink.testProcess(0)" "org.apache.flume.api.ThriftTestingSource.individualCount"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.testProcess(0)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.ALTERNATE"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.name(0)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.TestThriftSink.port"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.api.ThriftTestingSource.ThriftTestingSource(2)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.TestThriftSink.src"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.api.ThriftTestingSource.setDelay(1)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.TestThriftSink.sink"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.ThriftSink.start(0)"
reference "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.TestThriftSink.channel"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.channel.MemoryChannel.put(1)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.ThriftSink.process(0)"
call "org.apache.flume.sink.TestThriftSink.testTimeout(0)" "org.apache.flume.sink.ThriftSink.stop(0)"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.testTimeout(0)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.TestThriftSink.sink"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.ThriftSink.start(0)"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.TestThriftSink.channel"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.channel.MemoryChannel.put(1)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.ThriftSink.process(0)"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.OK"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.api.ThriftTestingSource.HandlerType.name(0)"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.TestThriftSink.port"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.api.ThriftTestingSource.ThriftTestingSource(2)"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.TestThriftSink.src"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)" "org.apache.flume.sink.ThriftSink.stop(0)"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)"
reference "org.apache.flume.sink.TestThriftSink.src" "org.apache.flume.api.ThriftTestingSource"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.src"
reference "org.apache.flume.sink.TestThriftSink.sink" "org.apache.flume.sink.ThriftSink"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.sink"
reference "org.apache.flume.sink.TestThriftSink.channel" "org.apache.flume.channel.MemoryChannel"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.channel"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.hostname"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.port"
contain "org.apache.flume.sink.TestThriftSink" "org.apache.flume.sink.TestThriftSink.random"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.3.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.3.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.TestBasicChannelSemantics.3.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.3.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.3.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.TestBasicChannelSemantics.3.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.3.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.3" "org.apache.flume.channel.TestBasicChannelSemantics.3.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.2.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.2.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.TestBasicChannelSemantics.2.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.2.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.2.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.TestBasicChannelSemantics.2.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.2.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.2" "org.apache.flume.channel.TestBasicChannelSemantics.2.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.1.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.TestBasicChannelSemantics.1.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.1.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.1.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.1" "org.apache.flume.channel.TestBasicChannelSemantics.1.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.7.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.7.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.channel.TestBasicChannelSemantics.7.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.7.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.7.run(0)" "org.apache.flume.Transaction.begin(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.channel.TestBasicChannelSemantics.7.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.channel.TestBasicChannelSemantics.7.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.7.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.7" "org.apache.flume.channel.TestBasicChannelSemantics.7.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.6.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.6.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.channel.TestBasicChannelSemantics.6.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.6.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.6.run(0)" "org.apache.flume.Transaction.begin(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.channel.TestBasicChannelSemantics.6.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.channel.TestBasicChannelSemantics.6.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.6.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.6" "org.apache.flume.channel.TestBasicChannelSemantics.6.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.5.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.5.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.TestBasicChannelSemantics.5.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.5.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.5.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.TestBasicChannelSemantics.5.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.5.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.5" "org.apache.flume.channel.TestBasicChannelSemantics.5.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.4.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.4.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.TestBasicChannelSemantics.4.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.4.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.4.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.TestBasicChannelSemantics.4.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.4.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.4" "org.apache.flume.channel.TestBasicChannelSemantics.4.this$0"
reference "org.apache.flume.channel.MockChannel.1" "org.apache.flume.channel.MockChannel"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.SequenceGeneratorSource"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.channel.PseudoTxnMemoryChannel"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.PollableSource.Status"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.TestSequenceGeneratorSource(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.setUp(0)" "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)"
reference "org.apache.flume.source.TestSequenceGeneratorSource.setUp(0)" "org.apache.flume.source.TestSequenceGeneratorSource.source"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.setUp(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.source.TestSequenceGeneratorSource.source"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.PollableSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.PollableSource.process(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.source.TestSequenceGeneratorSource.source"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.PollableSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.PollableSource.start(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.PollableSource.process(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)" "org.apache.flume.PollableSource.stop(0)"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.source.TestSequenceGeneratorSource.source"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.PollableSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.PollableSource.start(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.PollableSource.process(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)" "org.apache.flume.PollableSource.stop(0)"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)"
reference "org.apache.flume.source.TestSequenceGeneratorSource.source" "org.apache.flume.PollableSource"
contain "org.apache.flume.source.TestSequenceGeneratorSource" "org.apache.flume.source.TestSequenceGeneratorSource.source"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.DefaultSinkFactory"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.AvroSink"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.NullSink"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.LoggerSink"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.RollingFileSink"
reference "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.SinkFactory"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.TestDefaultSinkFactory(0)"
call "org.apache.flume.sink.TestDefaultSinkFactory.setUp(0)" "org.apache.flume.sink.DefaultSinkFactory.DefaultSinkFactory(0)"
reference "org.apache.flume.sink.TestDefaultSinkFactory.setUp(0)" "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.setUp(0)"
reference "org.apache.flume.sink.TestDefaultSinkFactory.testDuplicateCreate(0)" "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory"
call "org.apache.flume.sink.TestDefaultSinkFactory.testDuplicateCreate(0)" "org.apache.flume.SinkFactory.create(2)"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.testDuplicateCreate(0)"
reference "org.apache.flume.sink.TestDefaultSinkFactory.verifySinkCreation(3)" "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory"
call "org.apache.flume.sink.TestDefaultSinkFactory.verifySinkCreation(3)" "org.apache.flume.SinkFactory.create(2)"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.verifySinkCreation(3)"
call "org.apache.flume.sink.TestDefaultSinkFactory.testSinkCreation(0)" "org.apache.flume.sink.TestDefaultSinkFactory.verifySinkCreation(3)"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.testSinkCreation(0)"
reference "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory" "org.apache.flume.SinkFactory"
contain "org.apache.flume.sink.TestDefaultSinkFactory" "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.CounterGroup"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.getLifecycleState(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.start(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.start(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.start(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.stop(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.stop(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.stop(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getLifecycleState(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getSleepTime(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getSleepTime(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.setSleepTime(1)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.setSleepTime(1)"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
reference "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.channel.PseudoTxnMemoryChannel"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "com.google.gson.Gson"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.Context"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.HTTPMetricsServer"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.MonitorService"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.Channel"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.Transaction"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.util.JMXTestUtils"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.memChannel"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.pmemChannel"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.{...}"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.getType(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.mapType"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "com.google.gson.Gson.Gson(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.gson"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.memChannel"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.setName(1)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.pmemChannel"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.start(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)" "org.apache.flume.Channel.stop(0)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsServer(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.MonitorService.configure(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.MonitorService.start(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.gson"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.mapType"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "com.google.gson.Gson.fromJson(2)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.util.JMXTestUtils.checkChannelCounterParams(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)" "org.apache.flume.instrumentation.MonitorService.stop(0)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testTrace(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testTrace(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testOptions(0)" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testOptions(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsServer(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.MonitorService.configure(1)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.MonitorService.start(0)"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)" "org.apache.flume.instrumentation.MonitorService.stop(0)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.memChannel" "org.apache.flume.Channel"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.memChannel"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.pmemChannel" "org.apache.flume.Channel"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.pmemChannel"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.mapType"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.gson" "com.google.gson.Gson"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.gson"
reference "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableInputStream"
call "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)" "org.apache.flume.serialization.ResettableInputStream.ResettableInputStream(0)"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)" "org.apache.flume.serialization.ResettableTestStringInputStream.markPos"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)" "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)" "org.apache.flume.serialization.ResettableTestStringInputStream.str"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.readChar(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.readChar(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.str"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.readChar(0)"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.mark(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.mark(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.markPos"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.mark(0)"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.reset(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.markPos"
reference "org.apache.flume.serialization.ResettableTestStringInputStream.reset(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.reset(0)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.seek(1)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.tell(0)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.read(0)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.read(3)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.close(0)"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.str"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.markPos"
contain "org.apache.flume.serialization.ResettableTestStringInputStream" "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.Context"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.conf.Configurables"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.TestMemoryChannelConcurrency(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.setUp(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.barrier"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.{...}"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.{...}"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.access$000(1)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency" "org.apache.flume.channel.TestMemoryChannelConcurrency.barrier"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.BasicChannelSemantics"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.queue"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.NORMAL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionCommitted"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionRolledBack"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionClosed"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getMode(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.setMode(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.setMode(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionCommitted"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionRolledBack"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionClosed"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.createTransaction(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.TestTransaction(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.createTransaction(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$000(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$100(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$202(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$302(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$402(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.queue"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionCommitted"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionRolledBack"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionClosed"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.jboss.netty.handler.codec.compression.ZlibEncoder"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.jboss.netty.handler.codec.compression.ZlibDecoder"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.jboss.netty.channel.ChannelPipeline"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.apache.flume.source.TestAvroSource"
call "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.CompressionChannelFactory(1)" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.NioClientSocketChannelFactory(0)"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.CompressionChannelFactory(1)" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.compressionLevel"
contain "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.CompressionChannelFactory(1)"
reference "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.compressionLevel"
call "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)" "org.jboss.netty.handler.codec.compression.ZlibEncoder.ZlibEncoder(1)"
call "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)" "org.jboss.netty.channel.ChannelPipeline.addFirst(2)"
call "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)" "org.jboss.netty.handler.codec.compression.ZlibDecoder.ZlibDecoder(0)"
call "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.newChannel(1)"
contain "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)"
contain "org.apache.flume.source.TestAvroSource.CompressionChannelFactory" "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.compressionLevel"
reference "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.TestChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestChannelUtils.1.1.{...}" "org.apache.flume.channel.TestChannelUtils.1.1.this$1"
contain "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.TestChannelUtils.1.1.{...}"
reference "org.apache.flume.channel.TestChannelUtils.1.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.1.this$1"
reference "org.apache.flume.channel.TestChannelUtils.1.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.this$0"
reference "org.apache.flume.channel.TestChannelUtils.1.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.val$mode"
reference "org.apache.flume.channel.TestChannelUtils.1.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.val$test"
call "org.apache.flume.channel.TestChannelUtils.1.1.run(0)" "org.apache.flume.channel.TestChannelUtils.testMode(2)"
contain "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.TestChannelUtils.1.1.run(0)"
reference "org.apache.flume.channel.TestChannelUtils.1.1.this$1" "org.apache.flume.channel.TestChannelUtils.1"
contain "org.apache.flume.channel.TestChannelUtils.1.1" "org.apache.flume.channel.TestChannelUtils.1.1.this$1"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError.TestError(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError.serialVersionUID"
reference "org.apache.flume.event.TestEventHelper" "org.apache.flume.event.SimpleEvent"
reference "org.apache.flume.event.TestEventHelper" "org.apache.flume.event.EventHelper"
contain "org.apache.flume.event.TestEventHelper" "org.apache.flume.event.TestEventHelper.TestEventHelper(0)"
call "org.apache.flume.event.TestEventHelper.testPrintable(0)" "org.apache.flume.event.SimpleEvent.SimpleEvent(0)"
call "org.apache.flume.event.TestEventHelper.testPrintable(0)" "org.apache.flume.event.SimpleEvent.setBody(1)"
call "org.apache.flume.event.TestEventHelper.testPrintable(0)" "org.apache.flume.event.EventHelper.dumpEvent(1)"
contain "org.apache.flume.event.TestEventHelper" "org.apache.flume.event.TestEventHelper.testPrintable(0)"
call "org.apache.flume.event.TestEventHelper.testNonPrintable(0)" "org.apache.flume.event.SimpleEvent.SimpleEvent(0)"
call "org.apache.flume.event.TestEventHelper.testNonPrintable(0)" "org.apache.flume.event.SimpleEvent.setBody(1)"
call "org.apache.flume.event.TestEventHelper.testNonPrintable(0)" "org.apache.flume.event.EventHelper.dumpEvent(1)"
contain "org.apache.flume.event.TestEventHelper" "org.apache.flume.event.TestEventHelper.testNonPrintable(0)"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.DefaultSourceFactory"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.SequenceGeneratorSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.NetcatSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.ExecSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.SyslogTcpSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.SyslogUDPSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.SpoolDirectorySource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.http.HTTPSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.ThriftSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.MockSource"
reference "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.SourceFactory"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.TestDefaultSourceFactory(0)"
call "org.apache.flume.source.TestDefaultSourceFactory.setUp(0)" "org.apache.flume.source.DefaultSourceFactory.DefaultSourceFactory(0)"
reference "org.apache.flume.source.TestDefaultSourceFactory.setUp(0)" "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.setUp(0)"
reference "org.apache.flume.source.TestDefaultSourceFactory.testDuplicateCreate(0)" "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory"
call "org.apache.flume.source.TestDefaultSourceFactory.testDuplicateCreate(0)" "org.apache.flume.SourceFactory.create(2)"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.testDuplicateCreate(0)"
reference "org.apache.flume.source.TestDefaultSourceFactory.verifySourceCreation(3)" "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory"
call "org.apache.flume.source.TestDefaultSourceFactory.verifySourceCreation(3)" "org.apache.flume.SourceFactory.create(2)"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.verifySourceCreation(3)"
call "org.apache.flume.source.TestDefaultSourceFactory.testSourceCreation(0)" "org.apache.flume.source.TestDefaultSourceFactory.verifySourceCreation(3)"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.testSourceCreation(0)"
reference "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory" "org.apache.flume.SourceFactory"
contain "org.apache.flume.source.TestDefaultSourceFactory" "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.EventSerializerFactory"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.TestHeaderAndBodyTextEventSerializer(0)" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testFile"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.TestHeaderAndBodyTextEventSerializer(0)" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.expectedFile"
contain "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.TestHeaderAndBodyTextEventSerializer(0)"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testFile"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.event.EventBuilder.withBody(3)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testFile"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
reference "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.event.EventBuilder.withBody(3)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)"
contain "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testFile"
contain "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer" "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.expectedFile"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.sink.LoggerSink"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.channel.PseudoTxnMemoryChannel"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.sink.TestLoggerSink.TestLoggerSink(0)"
call "org.apache.flume.sink.TestLoggerSink.setUp(0)" "org.apache.flume.sink.LoggerSink.LoggerSink(0)"
reference "org.apache.flume.sink.TestLoggerSink.setUp(0)" "org.apache.flume.sink.TestLoggerSink.sink"
contain "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.sink.TestLoggerSink.setUp(0)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.conf.Configurables.configure(2)"
reference "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.sink.TestLoggerSink.sink"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.sink.LoggerSink.setChannel(1)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.sink.LoggerSink.start(0)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.sink.LoggerSink.process(0)"
call "org.apache.flume.sink.TestLoggerSink.testAppend(0)" "org.apache.flume.sink.LoggerSink.stop(0)"
contain "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.sink.TestLoggerSink.testAppend(0)"
reference "org.apache.flume.sink.TestLoggerSink.sink" "org.apache.flume.sink.LoggerSink"
contain "org.apache.flume.sink.TestLoggerSink" "org.apache.flume.sink.TestLoggerSink.sink"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.Event"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.TestPollableSourceRunner.1" "org.slf4j.Logger"
reference "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.source.TestPollableSourceRunner.1.this$0"
reference "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.source.TestPollableSourceRunner.1.val$cs"
reference "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.source.TestPollableSourceRunner.1.val$channel"
reference "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.source.TestPollableSourceRunner.1.val$latch"
call "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.{...}" "org.apache.flume.source.TestPollableSourceRunner.1.cp"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.{...}"
reference "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.source.TestPollableSourceRunner.1.val$channel"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.source.TestPollableSourceRunner.1.val$latch"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Transaction.commit(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.PollableSource.Status.READY"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.source.TestPollableSourceRunner.access$000(0)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.slf4j.Logger.error(2)"
call "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.Transaction.rollback(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.process(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.process(0)"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.start(0)"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.stop(0)"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.getLifecycleState(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.setName(1)" "org.apache.flume.source.TestPollableSourceRunner.1.name"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.setName(1)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.getName(0)" "org.apache.flume.source.TestPollableSourceRunner.1.name"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.getName(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.setChannelProcessor(1)" "org.apache.flume.source.TestPollableSourceRunner.1.cp"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.setChannelProcessor(1)"
reference "org.apache.flume.source.TestPollableSourceRunner.1.getChannelProcessor(0)" "org.apache.flume.source.TestPollableSourceRunner.1.cp"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.getChannelProcessor(0)"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.name"
reference "org.apache.flume.source.TestPollableSourceRunner.1.cp" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.cp"
reference "org.apache.flume.source.TestPollableSourceRunner.1.val$cs" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.val$cs"
reference "org.apache.flume.source.TestPollableSourceRunner.1.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.val$channel"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.val$latch"
reference "org.apache.flume.source.TestPollableSourceRunner.1.this$0" "org.apache.flume.source.TestPollableSourceRunner"
contain "org.apache.flume.source.TestPollableSourceRunner.1" "org.apache.flume.source.TestPollableSourceRunner.1.this$0"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.AvroSink"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.MockAvroServer"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.avro.ipc.NettyServer"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.avro.ipc.specific.SpecificResponder"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.source.avro.AvroSourceProtocol"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.source.AvroSource"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.sink.TestAvroSink" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.avro.ipc.Server"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.api.RpcClient"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.lifecycle.LifecycleController"
reference "org.apache.flume.sink.TestAvroSink" "com.google.common.base.Charsets"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.sink.TestAvroSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.TestAvroSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.TestAvroSink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.TestAvroSink(0)"
call "org.apache.flume.sink.TestAvroSink.setUp(0)" "org.apache.flume.sink.TestAvroSink.setUp(2)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.sink.AvroSink.AvroSink(0)"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.sink.TestAvroSink.port"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.sink.AvroSink.setChannel(1)"
call "org.apache.flume.sink.TestAvroSink.setUp(2)" "org.apache.flume.conf.Configurables.configure(2)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.setUp(2)"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.avro.ipc.Server.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testLifecycle(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testLifecycle(0)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.avro.ipc.Server.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testProcess(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testProcess(0)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.DelayMockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.avro.ipc.Server.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.TestAvroSink.logger"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testTimeout(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testTimeout(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.avro.ipc.Server.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.avro.ipc.Server.close(0)"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.avro.ipc.Server.start(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.sink"
reference "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.AvroSink.setChannel(1)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.AvroSink.start(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.AvroSink.getUnderlyingClient(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.AvroSink.process(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.sink.AvroSink.stop(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.flume.Context.clear(0)"
call "org.apache.flume.sink.TestAvroSink.testReset(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testReset(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.createSslServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.avro.ipc.Server.start(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslProcess(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testSslProcess(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.createSslServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.avro.ipc.Server.start(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)"
call "org.apache.flume.sink.TestAvroSink.createServer(1)" "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(2)"
reference "org.apache.flume.sink.TestAvroSink.createServer(1)" "org.apache.flume.sink.TestAvroSink.port"
call "org.apache.flume.sink.TestAvroSink.createServer(1)" "org.apache.avro.ipc.NettyServer.NettyServer(2)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.TestAvroSink.setUp(2)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.source.AvroSource.AvroSource(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.source.AvroSource.setChannelProcessor(1)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.TestAvroSink.port"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.TestAvroSink.logger"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.sink.AvroSink.stop(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.createServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.avro.ipc.Server.start(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.TestAvroSink.logger"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.setUp(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.createSslServer(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.avro.ipc.Server.start(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.TestAvroSink.logger"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.sink.AvroSink.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)" "org.apache.avro.ipc.Server.close(0)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)"
call "org.apache.flume.sink.TestAvroSink.testRequestWithNoCompression(0)" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testRequestWithNoCompression(0)"
call "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel0(0)" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel0(0)"
call "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel1(0)" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel1(0)"
call "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel6(0)" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel6(0)"
call "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel9(0)" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel9(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.TestAvroSink.setUp(2)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.source.AvroSource.AvroSource(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.source.AvroSource.setChannelProcessor(1)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.TestAvroSink.port"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.source.AvroSource.start(0)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.source.AvroSource.getLifecycleState(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.TestAvroSink.sink"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.AvroSink.start(0)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.TestAvroSink.channel"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.AvroSink.process(0)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.TestAvroSink.logger"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.slf4j.Logger.debug(1)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Sink.Status.READY"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.sink.AvroSink.stop(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.source.AvroSource.stop(0)"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
reference "org.apache.flume.sink.TestAvroSink.doRequest(3)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.doRequest(3)"
call "org.apache.flume.sink.TestAvroSink.createSslServer(1)" "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(2)"
reference "org.apache.flume.sink.TestAvroSink.createSslServer(1)" "org.apache.flume.sink.TestAvroSink.port"
call "org.apache.flume.sink.TestAvroSink.createSslServer(1)" "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.NioServerSocketChannelFactory(2)"
call "org.apache.flume.sink.TestAvroSink.createSslServer(1)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)"
call "org.apache.flume.sink.TestAvroSink.createSslServer(1)" "org.apache.avro.ipc.NettyServer.NettyServer(5)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.createSslServer(1)"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.access$100(0)"
call "org.apache.flume.sink.TestAvroSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.TestAvroSink.static {...}" "org.apache.flume.sink.TestAvroSink.logger"
reference "org.apache.flume.sink.TestAvroSink.static {...}" "org.apache.flume.sink.TestAvroSink.port"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.static {...}"
reference "org.apache.flume.sink.TestAvroSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.logger"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.hostname"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.port"
reference "org.apache.flume.sink.TestAvroSink.sink" "org.apache.flume.sink.AvroSink"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.sink"
reference "org.apache.flume.sink.TestAvroSink.channel" "org.apache.flume.Channel"
contain "org.apache.flume.sink.TestAvroSink" "org.apache.flume.sink.TestAvroSink.channel"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.LoadBalancingSinkProcessor"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.Sink"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.FixedOrderSelector"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "junit.framework.Assert"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.TestLoadBalancingSinkProcessor(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(2)" "org.apache.flume.Context.Context(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(1)" "org.apache.flume.Context.Context(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)" "org.apache.flume.sink.LoadBalancingSinkProcessor.LoadBalancingSinkProcessor(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)" "org.apache.flume.sink.LoadBalancingSinkProcessor.setSinks(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)" "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)" "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "junit.framework.Assert.fail(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)" "org.apache.flume.Sink.Status.BACKOFF"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)" "junit.framework.Assert.assertTrue(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.Sink.Status.READY"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.Sink.Status.BACKOFF"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate"
reference "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleController" "junit.framework.Assert"
reference "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.LifecycleController"
contain "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.TestLifecycleController.TestLifecycleController(0)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleState.equals(1)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleAware.start(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleController.waitForState(3)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
contain "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleAware.start(0)"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
call "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)" "junit.framework.Assert.assertTrue(2)"
contain "org.apache.flume.lifecycle.TestLifecycleController" "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.{...}" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.this$0"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.{...}"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.start(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.getLifecycleState(0)" "org.apache.flume.lifecycle.LifecycleState.IDLE"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.getLifecycleState(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.this$0" "org.apache.flume.lifecycle.TestLifecycleSupervisor"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor.1" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.this$0"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptor"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "com.google.common.base.Joiner"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.joda.time.format.DateTimeFormat"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.joda.time.format.DateTimeFormatter"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.TestRegexExtractorInterceptor(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)" "org.apache.flume.interceptor.InterceptorType.REGEX_EXTRACTOR"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutRegex(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutRegex(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutRegex(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "com.google.common.base.Joiner.on(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "com.google.common.base.Joiner.join(3)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.joda.time.format.DateTimeFormat.forPattern(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.joda.time.format.DateTimeFormatter.print(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder" "org.apache.flume.interceptor.Interceptor.Builder"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptor" "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.AbstractPollableSource"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource"
reference "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.PollableSource"
reference "org.apache.flume.source.TestAbstractPollableSource.1.{...}" "org.apache.flume.source.TestAbstractPollableSource.1.this$0"
call "org.apache.flume.source.TestAbstractPollableSource.1.{...}" "org.apache.flume.source.AbstractPollableSource.AbstractPollableSource(0)"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.{...}"
reference "org.apache.flume.source.TestAbstractPollableSource.1.doProcess(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.doProcess(0)"
call "org.apache.flume.source.TestAbstractPollableSource.1.doConfigure(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.doConfigure(1)"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.doStart(0)"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.doStop(0)"
reference "org.apache.flume.source.TestAbstractPollableSource.1.this$0" "org.apache.flume.source.TestAbstractPollableSource"
contain "org.apache.flume.source.TestAbstractPollableSource.1" "org.apache.flume.source.TestAbstractPollableSource.1.this$0"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.Channel"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor.Builder"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.slf4j.LoggerFactory"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "com.google.common.collect.Lists"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "com.google.common.collect.Maps"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.interceptor.CensoringInterceptor"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.Transaction"
call "org.apache.flume.interceptor.TestCensoringInterceptor.TestCensoringInterceptor(0)" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.interceptor.TestCensoringInterceptor.TestCensoringInterceptor(0)" "org.apache.flume.interceptor.TestCensoringInterceptor.logger"
contain "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.interceptor.TestCensoringInterceptor.TestCensoringInterceptor(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.start(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Context.Context(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ChannelProcessor.configure(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ChannelProcessor.initialize(0)"
reference "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.event.EventBuilder.withBody(3)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.ChannelProcessor.close(0)"
call "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)" "org.apache.flume.channel.MemoryChannel.stop(0)"
contain "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)"
reference "org.apache.flume.interceptor.TestCensoringInterceptor.logger" "org.slf4j.Logger"
contain "org.apache.flume.interceptor.TestCensoringInterceptor" "org.apache.flume.interceptor.TestCensoringInterceptor.logger"
reference "org.apache.flume.TestContext" "org.apache.flume.Context"
reference "org.apache.flume.TestContext" "com.google.common.collect.ImmutableMap"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.TestContext(0)"
call "org.apache.flume.TestContext.setUp(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.TestContext.setUp(0)" "org.apache.flume.TestContext.context"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.setUp(0)"
reference "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.TestContext.context"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getParameters(0)"
call "org.apache.flume.TestContext.testPutGet(0)" "com.google.common.collect.ImmutableMap.size(0)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getString(1)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.clear(0)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getString(2)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getBoolean(1)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getBoolean(2)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getInteger(1)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getInteger(2)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getLong(1)"
call "org.apache.flume.TestContext.testPutGet(0)" "org.apache.flume.Context.getLong(2)"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.testPutGet(0)"
reference "org.apache.flume.TestContext.testSubProperties(0)" "org.apache.flume.TestContext.context"
call "org.apache.flume.TestContext.testSubProperties(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.TestContext.testSubProperties(0)" "com.google.common.collect.ImmutableMap.of(2)"
call "org.apache.flume.TestContext.testSubProperties(0)" "org.apache.flume.Context.getSubProperties(1)"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.testSubProperties(0)"
reference "org.apache.flume.TestContext.testClear(0)" "org.apache.flume.TestContext.context"
call "org.apache.flume.TestContext.testClear(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.TestContext.testClear(0)" "org.apache.flume.Context.clear(0)"
call "org.apache.flume.TestContext.testClear(0)" "org.apache.flume.Context.getInteger(1)"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.testClear(0)"
reference "org.apache.flume.TestContext.testPutAll(0)" "org.apache.flume.TestContext.context"
call "org.apache.flume.TestContext.testPutAll(0)" "com.google.common.collect.ImmutableMap.of(2)"
call "org.apache.flume.TestContext.testPutAll(0)" "org.apache.flume.Context.putAll(1)"
call "org.apache.flume.TestContext.testPutAll(0)" "org.apache.flume.Context.getString(1)"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.testPutAll(0)"
reference "org.apache.flume.TestContext.context" "org.apache.flume.Context"
contain "org.apache.flume.TestContext" "org.apache.flume.TestContext.context"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.{...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.this$1"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.{...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.this$1"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.val$test"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.interruptTest(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.this$1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.this$1"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode[]"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.values(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.$VALUES"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.values(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode[].clone(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.values(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.valueOf(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.Mode(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.Mode(2)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.NORMAL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.$VALUES"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.NORMAL" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.NORMAL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.$VALUES" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode[]"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.$VALUES"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.{...}" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.this$0"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.{...}"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.compare(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.compare(2)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.this$0" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.this$0"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.generic.GenericDatumReader"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.file.DataFileReader"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.generic.GenericData.Record"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.io.DatumReader"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.generic.GenericRecord"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.FlumeEventAvroEventSerializer"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.avro.generic.GenericData"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TestFlumeEventAvroEventSerializer(0)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.commons.io.FileUtils.forceDelete(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.Builder(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.EventSerializer.Builder.build(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.file.DataFileReader.DataFileReader(2)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.file.DataFileReader.getSchema(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.generic.GenericData.Record.Record(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.file.DataFileReader.hasNext(0)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.file.DataFileReader.next(1)"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.generic.GenericRecord.get(1)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)" "org.apache.avro.file.DataFileReader.close(0)"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
reference "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.static {...}" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.static {...}"
contain "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer" "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.jboss.netty.handler.ssl.SslHandler"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.jboss.netty.channel.ChannelPipelineFactory"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.jboss.netty.channel.Channels"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.jboss.netty.channel.ChannelPipeline"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.this$0"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystore"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystorePassword"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystoreType"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.this$0"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystore"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystorePassword"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystoreType"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystoreType"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystore"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystorePassword"
call "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getAlgorithm(0)"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getAlgorithm(0)"
call "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.channel.Channels.pipeline(0)"
call "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)"
call "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.handler.ssl.SslHandler.SslHandler(1)"
call "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)" "org.jboss.netty.channel.ChannelPipeline.addLast(2)"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystore"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystorePassword"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystoreType"
reference "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.this$0" "org.apache.flume.sink.TestAvroSink"
contain "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory" "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.Event"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.BasicTransactionSemantics"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "com.google.common.base.Preconditions"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.TestTransaction(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.TestTransaction(1)" "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.TestTransaction(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.$SwitchMap$org$apache$flume$channel$AbstractBasicChannelSemanticsTest$TestChannel$Mode"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$000(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.ordinal(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError.TestError(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException.TestRuntimeException(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)" "org.apache.flume.ChannelException.ChannelException(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doBegin(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doBegin(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doPut(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doPut(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doPut(1)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$100(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doPut(1)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doTake(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doTake(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doTake(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$100(1)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doTake(0)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doCommit(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doCommit(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doCommit(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$202(2)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doCommit(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doRollback(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doRollback(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$302(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doRollback(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doRollback(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$402(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$000(1)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "com.google.common.base.Preconditions.checkState(2)"
call "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
reference "org.apache.flume.channel.MockChannel" "org.apache.flume.Event"
reference "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.MockTransaction"
reference "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.AbstractChannel"
reference "org.apache.flume.channel.MockChannel" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.MockChannel" "org.apache.flume.Channel"
call "org.apache.flume.channel.MockChannel.MockChannel(0)" "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
reference "org.apache.flume.channel.MockChannel.MockChannel(0)" "org.apache.flume.channel.MockChannel.events"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.MockChannel(0)"
call "org.apache.flume.channel.MockChannel.createMockChannel(1)" "org.apache.flume.channel.MockChannel.MockChannel(0)"
call "org.apache.flume.channel.MockChannel.createMockChannel(1)" "org.apache.flume.Channel.setName(1)"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.createMockChannel(1)"
reference "org.apache.flume.channel.MockChannel.put(1)" "org.apache.flume.channel.MockChannel.events"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.put(1)"
reference "org.apache.flume.channel.MockChannel.take(0)" "org.apache.flume.channel.MockChannel.events"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.take(0)"
call "org.apache.flume.channel.MockChannel.getTransaction(0)" "org.apache.flume.channel.MockChannel.MockTransaction.MockTransaction(1)"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.getTransaction(0)"
contain "org.apache.flume.channel.MockChannel" "org.apache.flume.channel.MockChannel.events"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.source.avro.AvroSourceProtocol"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.avro.AvroRemoteException"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.sink.TestAvroSink"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.slf4j.Logger"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.source.avro.Status"
contain "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(0)"
call "org.apache.flume.sink.TestAvroSink.MockAvroServer.append(1)" "org.apache.flume.sink.TestAvroSink.access$100(0)"
call "org.apache.flume.sink.TestAvroSink.MockAvroServer.append(1)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer.append(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.sink.TestAvroSink.MockAvroServer.append(1)"
call "org.apache.flume.sink.TestAvroSink.MockAvroServer.appendBatch(1)" "org.apache.flume.sink.TestAvroSink.access$100(0)"
call "org.apache.flume.sink.TestAvroSink.MockAvroServer.appendBatch(1)" "org.slf4j.Logger.debug(2)"
reference "org.apache.flume.sink.TestAvroSink.MockAvroServer.appendBatch(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.sink.TestAvroSink.MockAvroServer.appendBatch(1)"
contain "org.apache.flume.sink.TestAvroSink.MockAvroServer" "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.api.RpcClientConfigurationConstants"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.ThriftSource"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.SubmitHelper"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.api.RpcClientFactory"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.TestThriftSource" "org.apache.flume.api.RpcClient"
reference "org.apache.flume.source.TestThriftSource" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestThriftSource" "com.google.common.collect.Maps"
reference "org.apache.flume.source.TestThriftSource.TestThriftSource(0)" "org.apache.flume.source.TestThriftSource.random"
reference "org.apache.flume.source.TestThriftSource.TestThriftSource(0)" "org.apache.flume.source.TestThriftSource.props"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.TestThriftSource(0)"
reference "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.TestThriftSource.random"
reference "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.TestThriftSource.props"
call "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.ThriftSource.ThriftSource(0)"
reference "org.apache.flume.source.TestThriftSource.setUp(0)" "org.apache.flume.source.TestThriftSource.source"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.setUp(0)"
reference "org.apache.flume.source.TestThriftSource.stop(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.stop(0)" "org.apache.flume.source.ThriftSource.stop(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.stop(0)"
reference "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
reference "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestThriftSource.configureSource(0)" "org.apache.flume.source.ThriftSource.setChannelProcessor(1)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.configureSource(0)"
reference "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.props"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.api.RpcClientFactory.getThriftInstance(1)"
reference "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.client"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.configureSource(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.source.ThriftSource.start(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.api.RpcClient.append(1)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestThriftSource.testAppend(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.testAppend(0)"
reference "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.props"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.api.RpcClientFactory.getThriftInstance(1)"
reference "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.client"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.configureSource(0)"
reference "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.source.ThriftSource.start(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.api.RpcClient.appendBatch(1)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBatch(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.testAppendBatch(0)"
reference "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.props"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.api.RpcClientFactory.getThriftInstance(1)"
reference "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.client"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.configureSource(0)"
reference "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.source.ThriftSource.start(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.api.RpcClient.appendBatch(1)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)"
reference "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.props"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.api.RpcClientFactory.getThriftInstance(1)"
reference "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.client"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.channel"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.configureSource(0)"
reference "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.source"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.ThriftSource.start(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.source.TestThriftSource.SubmitHelper.SubmitHelper(1)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.channel.MemoryChannel.take(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestThriftSource.testMultipleClients(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.testMultipleClients(0)"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.access$000(1)"
reference "org.apache.flume.source.TestThriftSource.source" "org.apache.flume.source.ThriftSource"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.source"
reference "org.apache.flume.source.TestThriftSource.channel" "org.apache.flume.channel.MemoryChannel"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.channel"
reference "org.apache.flume.source.TestThriftSource.client" "org.apache.flume.api.RpcClient"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.client"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.random"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.props"
contain "org.apache.flume.source.TestThriftSource" "org.apache.flume.source.TestThriftSource.port"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.DurablePositionTracker"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.ResettableFileInputStream"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.ResettableInputStream"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "com.google.common.io.Files"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.slf4j.Logger"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.DecodeErrorPolicy"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "junit.framework.Assert"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "com.google.common.base.Strings"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "com.google.common.collect.Lists"
reference "org.apache.flume.serialization.TestResettableFileInputStream" "org.slf4j.LoggerFactory"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.TestResettableFileInputStream(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "org.apache.flume.serialization.TestResettableFileInputStream.WORK_DIR"
call "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "com.google.common.io.Files.createParentDirs(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "org.apache.flume.serialization.TestResettableFileInputStream.logger"
call "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "org.slf4j.Logger.info(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.tearDown(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
reference "org.apache.flume.serialization.TestResettableFileInputStream.tearDown(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.tearDown(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.singleLineFileInit(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.wideCharFileInit(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingFailMalformed(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingIgnore(0)" "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingIgnore(0)" "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingIgnore(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingIgnore(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingReplace(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.TestResettableFileInputStream.generateLatin1InvalidSequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "com.google.common.io.Files.write(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.TestResettableFileInputStream.generateLatin1InvalidSequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "com.google.common.io.Files.write(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
call "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)" "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)" "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
reference "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
call "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8Latin1Sequence(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8OverlyLongSequence(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8NonUnicodeSequence(1)"
call "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)" "com.google.common.io.Files.write(2)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8OverlyLongSequence(1)" "com.google.common.base.Charsets.UTF_8"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8OverlyLongSequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8NonUnicodeSequence(1)" "com.google.common.base.Charsets.UTF_8"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8NonUnicodeSequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8Latin1Sequence(1)" "com.google.common.base.Charsets.UTF_8"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8Latin1Sequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.generateLatin1InvalidSequence(1)" "com.google.common.base.Charsets.UTF_8"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateLatin1InvalidSequence(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.singleLineFileInit(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.ResettableInputStream.reset(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.ResettableInputStream.reset(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.ResettableInputStream.mark(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.ResettableInputStream.mark(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.ResettableInputStream.close(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)" "org.apache.flume.serialization.PositionTracker.close(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.TestResettableFileInputStream.file"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.TestResettableFileInputStream.generateData(4)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.ResettableInputStream.tell(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)" "org.apache.flume.serialization.ResettableInputStream.seek(1)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.generateWideCharLine(0)" "com.google.common.base.Strings.padStart(3)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateWideCharLine(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.wideCharFileInit(2)" "org.apache.flume.serialization.TestResettableFileInputStream.generateWideCharLine(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.wideCharFileInit(2)" "com.google.common.io.Files.write(2)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.wideCharFileInit(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)" "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.singleLineFileInit(2)" "com.google.common.io.Files.write(2)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.singleLineFileInit(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)" "com.google.common.io.Files.write(2)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)"
call "org.apache.flume.serialization.TestResettableFileInputStream.generateData(4)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.generateData(4)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.static {...}" "org.apache.flume.serialization.TestResettableFileInputStream.WORK_DIR"
call "org.apache.flume.serialization.TestResettableFileInputStream.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.TestResettableFileInputStream.static {...}" "org.apache.flume.serialization.TestResettableFileInputStream.logger"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.static {...}"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.CLEANUP"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.WORK_DIR"
reference "org.apache.flume.serialization.TestResettableFileInputStream.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.logger"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.file"
contain "org.apache.flume.serialization.TestResettableFileInputStream" "org.apache.flume.serialization.TestResettableFileInputStream.meta"
reference "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.DurablePositionTracker"
reference "org.apache.flume.serialization.TestDurablePositionTracker" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestDurablePositionTracker" "com.google.common.io.Files"
reference "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.serialization.TestDurablePositionTracker" "org.slf4j.LoggerFactory"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.TestDurablePositionTracker(0)"
reference "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "org.apache.flume.serialization.PositionTracker.storePosition(1)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "org.apache.flume.serialization.PositionTracker.close(0)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)" "org.apache.flume.serialization.PositionTracker.getTarget(0)"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testGoodTrackerFile(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testGoodTrackerFile(0)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.testGoodTrackerFile(0)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testPartialTrackerFile(0)" "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
call "org.apache.flume.serialization.TestDurablePositionTracker.testPartialTrackerFile(0)" "org.apache.flume.serialization.PositionTracker.getPosition(0)"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.testPartialTrackerFile(0)"
call "org.apache.flume.serialization.TestDurablePositionTracker.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.serialization.TestDurablePositionTracker.static {...}" "org.apache.flume.serialization.TestDurablePositionTracker.logger"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.static {...}"
reference "org.apache.flume.serialization.TestDurablePositionTracker.logger" "org.slf4j.Logger"
contain "org.apache.flume.serialization.TestDurablePositionTracker" "org.apache.flume.serialization.TestDurablePositionTracker.logger"
reference "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.sink.AbstractSinkSelector"
reference "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.Context"
call "org.apache.flume.sink.FixedOrderSelector.FixedOrderSelector(0)" "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)"
contain "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.sink.FixedOrderSelector.FixedOrderSelector(0)"
call "org.apache.flume.sink.FixedOrderSelector.createSinkIterator(0)" "org.apache.flume.sink.FixedOrderSelector.getSinks(0)"
contain "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.sink.FixedOrderSelector.createSinkIterator(0)"
call "org.apache.flume.sink.FixedOrderSelector.configure(1)" "org.apache.flume.sink.AbstractSinkSelector.configure(1)"
call "org.apache.flume.sink.FixedOrderSelector.configure(1)" "org.apache.flume.Context.getString(1)"
contain "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.sink.FixedOrderSelector.configure(1)"
contain "org.apache.flume.sink.FixedOrderSelector" "org.apache.flume.sink.FixedOrderSelector.SET_ME"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.35.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.35.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.channel.TestBasicChannelSemantics.35.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.35.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.35.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.channel.TestBasicChannelSemantics.35.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.channel.TestBasicChannelSemantics.35.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.35.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.35" "org.apache.flume.channel.TestBasicChannelSemantics.35.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.36.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.36.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.channel.TestBasicChannelSemantics.36.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.36.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.36.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.channel.TestBasicChannelSemantics.36.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.channel.TestBasicChannelSemantics.36.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.36.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.36" "org.apache.flume.channel.TestBasicChannelSemantics.36.this$0"
reference "org.apache.flume.channel.TestChannelUtils.3" "org.apache.flume.channel.TestChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.3.{...}" "org.apache.flume.channel.TestChannelUtils.3.this$0"
contain "org.apache.flume.channel.TestChannelUtils.3" "org.apache.flume.channel.TestChannelUtils.3.{...}"
reference "org.apache.flume.channel.TestChannelUtils.3.run(0)" "org.apache.flume.channel.TestChannelUtils.3.this$0"
call "org.apache.flume.channel.TestChannelUtils.3.run(0)" "org.apache.flume.channel.TestChannelUtils.3.1.{...}"
call "org.apache.flume.channel.TestChannelUtils.3.run(0)" "org.apache.flume.channel.TestChannelUtils.interruptTest(1)"
contain "org.apache.flume.channel.TestChannelUtils.3" "org.apache.flume.channel.TestChannelUtils.3.run(0)"
reference "org.apache.flume.channel.TestChannelUtils.3.this$0" "org.apache.flume.channel.TestChannelUtils"
contain "org.apache.flume.channel.TestChannelUtils.3" "org.apache.flume.channel.TestChannelUtils.3.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.33.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.33.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.channel.TestBasicChannelSemantics.33.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.33.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.33.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.channel.TestBasicChannelSemantics.33.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.channel.TestBasicChannelSemantics.33.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.33.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.33" "org.apache.flume.channel.TestBasicChannelSemantics.33.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.34.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.34.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.channel.TestBasicChannelSemantics.34.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.34.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.34.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.channel.TestBasicChannelSemantics.34.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.channel.TestBasicChannelSemantics.34.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.34.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.34" "org.apache.flume.channel.TestBasicChannelSemantics.34.this$0"
reference "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.TestChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.TestChannelUtils.2.{...}" "org.apache.flume.channel.TestChannelUtils.2.this$0"
contain "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.TestChannelUtils.2.{...}"
reference "org.apache.flume.channel.TestChannelUtils.2.run(0)" "org.apache.flume.channel.TestChannelUtils.2.this$0"
reference "org.apache.flume.channel.TestChannelUtils.2.run(0)" "org.apache.flume.channel.TestChannelUtils.channel"
reference "org.apache.flume.channel.TestChannelUtils.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestChannelUtils.2.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.TestChannelUtils.2.run(0)"
reference "org.apache.flume.channel.TestChannelUtils.2.this$0" "org.apache.flume.channel.TestChannelUtils"
contain "org.apache.flume.channel.TestChannelUtils.2" "org.apache.flume.channel.TestChannelUtils.2.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.39.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.39.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.channel.TestBasicChannelSemantics.39.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.39.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.39.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.channel.TestBasicChannelSemantics.39.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.channel.TestBasicChannelSemantics.39.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.39.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.39" "org.apache.flume.channel.TestBasicChannelSemantics.39.this$0"
reference "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.ChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestChannelUtils.1.{...}" "org.apache.flume.channel.TestChannelUtils.1.this$0"
reference "org.apache.flume.channel.TestChannelUtils.1.{...}" "org.apache.flume.channel.TestChannelUtils.1.val$mode"
reference "org.apache.flume.channel.TestChannelUtils.1.{...}" "org.apache.flume.channel.TestChannelUtils.1.val$test"
contain "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils.1.{...}"
reference "org.apache.flume.channel.TestChannelUtils.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.this$0"
reference "org.apache.flume.channel.TestChannelUtils.1.run(0)" "org.apache.flume.channel.TestChannelUtils.channel"
call "org.apache.flume.channel.TestChannelUtils.1.run(0)" "org.apache.flume.channel.TestChannelUtils.1.1.{...}"
call "org.apache.flume.channel.TestChannelUtils.1.run(0)" "org.apache.flume.channel.ChannelUtils.transact(2)"
contain "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils.1.run(0)"
reference "org.apache.flume.channel.TestChannelUtils.1.val$mode" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
contain "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils.1.val$mode"
contain "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils.1.val$test"
reference "org.apache.flume.channel.TestChannelUtils.1.this$0" "org.apache.flume.channel.TestChannelUtils"
contain "org.apache.flume.channel.TestChannelUtils.1" "org.apache.flume.channel.TestChannelUtils.1.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.37.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.37.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.channel.TestBasicChannelSemantics.37.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.37.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.37.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.channel.TestBasicChannelSemantics.37.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.channel.TestBasicChannelSemantics.37.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.37.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.37" "org.apache.flume.channel.TestBasicChannelSemantics.37.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.38.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.38.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.channel.TestBasicChannelSemantics.38.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.38.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.38.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.channel.TestBasicChannelSemantics.38.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.channel.TestBasicChannelSemantics.38.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.38.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.38" "org.apache.flume.channel.TestBasicChannelSemantics.38.this$0"
contain "org.apache.flume.instrumentation.util.JMXTestUtils" "org.apache.flume.instrumentation.util.JMXTestUtils.JMXTestUtils(0)"
contain "org.apache.flume.instrumentation.util.JMXTestUtils" "org.apache.flume.instrumentation.util.JMXTestUtils.checkChannelCounterParams(1)"
reference "org.apache.flume.source.http.TestJSONHandler.1" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.source.http.TestJSONHandler.1" "org.apache.flume.source.http.TestJSONHandler"
reference "org.apache.flume.source.http.TestJSONHandler.1.{...}" "org.apache.flume.source.http.TestJSONHandler.1.this$0"
call "org.apache.flume.source.http.TestJSONHandler.1.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.source.http.TestJSONHandler.1" "org.apache.flume.source.http.TestJSONHandler.1.{...}"
reference "org.apache.flume.source.http.TestJSONHandler.1.this$0" "org.apache.flume.source.http.TestJSONHandler"
contain "org.apache.flume.source.http.TestJSONHandler.1" "org.apache.flume.source.http.TestJSONHandler.1.this$0"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.Event"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.Context"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.serialization.LineDeserializer"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.slf4j.LoggerFactory"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "com.google.common.collect.Lists"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "com.google.common.base.Throwables"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "com.google.common.io.Files"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "com.google.common.base.Charsets"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.slf4j.Logger"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.TestSpoolingFileLineReader(0)" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.TestSpoolingFileLineReader(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.logger"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.TestSpoolingFileLineReader(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)" "com.google.common.collect.Lists.newArrayListWithCapacity(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)" "com.google.common.base.Throwables.propagate(1)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bufferMaxLineLength"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.{...}"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.setUp(0)" "com.google.common.io.Files.createTempDir(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.setUp(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.setUp(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.tearDown(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tearDown(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.logger"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.slf4j.Logger.info(2)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.slf4j.Logger.debug(2)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "com.google.common.collect.Lists.newArrayList(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "com.google.common.collect.Lists.newArrayList(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "com.google.common.io.Files.append(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)" "com.google.common.collect.Lists.newArrayList(1)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "com.google.common.io.Files.touch(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "com.google.common.collect.Lists.newArrayList(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "com.google.common.collect.Lists.newArrayList(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
call "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.static {...}" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.static {...}" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bufferMaxLineLength"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.static {...}"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.logger" "org.slf4j.Logger"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.logger"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bufferMaxLineLength"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.Event"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableEventReader"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "com.google.common.io.Files"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "com.google.common.base.Charsets"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.slf4j.Logger"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "junit.framework.Assert"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "com.google.common.collect.Sets"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "com.google.common.collect.Lists"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.slf4j.LoggerFactory"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.TestReliableSpoolingFileEventReader(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)" "com.google.common.io.Files.createParentDirs(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)" "com.google.common.io.Files.write(3)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.tearDown(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.tearDown(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.tearDown(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.logger"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)" "org.slf4j.Logger.warn(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.toString(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.name(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "com.google.common.collect.Sets.newHashSet(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.commons.io.FileUtils.write(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "com.google.common.collect.Lists.newLinkedList(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesOLDEST(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesOLDEST(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesOLDEST(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesYOUNGEST(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesYOUNGEST(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.{...}"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesYOUNGEST(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesYOUNGEST(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesRANDOM(0)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesRANDOM(0)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesRANDOM(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.io.Files.createParentDirs(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.collect.Lists.newArrayList(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.collect.Sets.newHashSet(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)" "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)" "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2.{...}"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)" "com.google.common.collect.Lists.newArrayList(1)"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)"
call "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.static {...}" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.logger"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.static {...}" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.static {...}"
reference "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.logger" "org.slf4j.Logger"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.logger"
contain "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader" "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.joda.time.DateTime"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.SyslogUDPSource"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestSyslogUdpSource" "byte[]"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestSyslogUdpSource" "com.google.common.base.Charsets"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.slf4j.Logger"
reference "org.apache.flume.source.TestSyslogUdpSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.joda.time.DateTime.DateTime(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.apache.flume.source.TestSyslogUdpSource.time"
call "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.joda.time.DateTime.toString(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.apache.flume.source.TestSyslogUdpSource.stamp1"
reference "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.apache.flume.source.TestSyslogUdpSource.host1"
reference "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.apache.flume.source.TestSyslogUdpSource.data1"
reference "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)" "org.apache.flume.source.TestSyslogUdpSource.bodyWithTandH"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.source.TestSyslogUdpSource.source"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.source.TestSyslogUdpSource.channel"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.source.SyslogUDPSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestSyslogUdpSource.init(1)" "org.apache.flume.source.SyslogUDPSource.configure(1)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.init(1)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogUdpSource.init(1)"
reference "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogUdpSource.source"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogUDPSource.start(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogUdpSource.bodyWithTandH"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogUdpSource.channel"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogUDPSource.stop(0)"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "com.google.common.base.Charsets.UTF_8"
reference "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogUdpSource.logger"
call "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.TestSyslogUdpSource.init(1)"
reference "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.TestSyslogUdpSource.source"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.SyslogUDPSource.start(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.TestSyslogUdpSource.getPayload(1)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)"
reference "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.TestSyslogUdpSource.channel"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.source.SyslogUDPSource.stop(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testKeepFields(0)" "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.testKeepFields(0)"
call "org.apache.flume.source.TestSyslogUdpSource.testRemoveFields(0)" "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.testRemoveFields(0)"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.getPayload(1)"
call "org.apache.flume.source.TestSyslogUdpSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.TestSyslogUdpSource.static {...}" "org.apache.flume.source.TestSyslogUdpSource.logger"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.static {...}"
reference "org.apache.flume.source.TestSyslogUdpSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.logger"
reference "org.apache.flume.source.TestSyslogUdpSource.source" "org.apache.flume.source.SyslogUDPSource"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.source"
reference "org.apache.flume.source.TestSyslogUdpSource.channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.channel"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.TEST_SYSLOG_PORT"
reference "org.apache.flume.source.TestSyslogUdpSource.time" "org.joda.time.DateTime"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.time"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.stamp1"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.host1"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.data1"
contain "org.apache.flume.source.TestSyslogUdpSource" "org.apache.flume.source.TestSyslogUdpSource.bodyWithTandH"
reference "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.TestChannelUtils"
reference "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestChannelUtils.3.1.{...}" "org.apache.flume.channel.TestChannelUtils.3.1.this$1"
contain "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.TestChannelUtils.3.1.{...}"
reference "org.apache.flume.channel.TestChannelUtils.3.1.run(0)" "org.apache.flume.channel.TestChannelUtils.3.1.this$1"
reference "org.apache.flume.channel.TestChannelUtils.3.1.run(0)" "org.apache.flume.channel.TestChannelUtils.3.this$0"
reference "org.apache.flume.channel.TestChannelUtils.3.1.run(0)" "org.apache.flume.channel.TestChannelUtils.channel"
reference "org.apache.flume.channel.TestChannelUtils.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestChannelUtils.3.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.TestChannelUtils.3.1.run(0)"
reference "org.apache.flume.channel.TestChannelUtils.3.1.this$1" "org.apache.flume.channel.TestChannelUtils.3"
contain "org.apache.flume.channel.TestChannelUtils.3.1" "org.apache.flume.channel.TestChannelUtils.3.1.this$1"
reference "org.apache.flume.sink.TestAvroSink.1" "org.apache.flume.sink.TestAvroSink"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.31.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.TestBasicChannelSemantics.31.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.31.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.31.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.TestBasicChannelSemantics.31.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.31.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.31" "org.apache.flume.channel.TestBasicChannelSemantics.31.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.32.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.TestBasicChannelSemantics.32.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.32.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.32.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.TestBasicChannelSemantics.32.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.32.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.32" "org.apache.flume.channel.TestBasicChannelSemantics.32.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.30.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.30.val$finalTransaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.channel.TestBasicChannelSemantics.30.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.30.val$finalTransaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.30.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.channel.TestBasicChannelSemantics.30.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30.val$finalTransaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.channel.TestBasicChannelSemantics.30.val$finalTransaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.30.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.30" "org.apache.flume.channel.TestBasicChannelSemantics.30.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.46.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.46.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.channel.TestBasicChannelSemantics.46.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.46.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.46.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.channel.TestBasicChannelSemantics.46.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.channel.TestBasicChannelSemantics.46.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.46.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.46" "org.apache.flume.channel.TestBasicChannelSemantics.46.this$0"
reference "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.MockTransaction(0)"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.begin(0)"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.commit(0)"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.rollback(0)"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.close(0)"
contain "org.apache.flume.channel.MockChannel.MockTransaction" "org.apache.flume.channel.MockChannel.MockTransaction.MockTransaction(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.47.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.47.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.channel.TestBasicChannelSemantics.47.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.47.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.47.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.channel.TestBasicChannelSemantics.47.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.channel.TestBasicChannelSemantics.47.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.47.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.47" "org.apache.flume.channel.TestBasicChannelSemantics.47.this$0"
reference "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.JSONHandler"
reference "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper"
reference "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.Event"
reference "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.event.JSONEvent"
reference "org.apache.flume.source.http.TestJSONHandler" "com.google.gson.Gson"
reference "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.HTTPSourceHandler"
reference "org.apache.flume.source.http.TestJSONHandler" "junit.framework.Assert"
reference "org.apache.flume.source.http.TestJSONHandler" "com.google.common.collect.Lists"
reference "org.apache.flume.source.http.TestJSONHandler" "com.google.common.collect.Maps"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.TestJSONHandler(0)"
call "org.apache.flume.source.http.TestJSONHandler.setUp(0)" "org.apache.flume.source.http.JSONHandler.JSONHandler(0)"
reference "org.apache.flume.source.http.TestJSONHandler.setUp(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.setUp(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
reference "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
reference "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
reference "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)"
call "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)" "junit.framework.Assert.fail(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)"
call "org.apache.flume.source.http.TestJSONHandler.testError(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
reference "org.apache.flume.source.http.TestJSONHandler.testError(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testError(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testError(0)" "junit.framework.Assert.fail(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testError(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
reference "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.source.http.TestJSONHandler.1.{...}"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.source.http.TestJSONHandler.1.getType(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "com.google.common.collect.Maps.newHashMap(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.event.JSONEvent.JSONEvent(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.event.JSONEvent.setBody(1)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.event.JSONEvent.setHeaders(1)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "com.google.gson.Gson.Gson(0)"
reference "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.source.http.TestJSONHandler.handler"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "com.google.gson.Gson.toJson(2)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)"
reference "org.apache.flume.source.http.TestJSONHandler.handler" "org.apache.flume.source.http.HTTPSourceHandler"
contain "org.apache.flume.source.http.TestJSONHandler" "org.apache.flume.source.http.TestJSONHandler.handler"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor.Constants"
reference "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TimestampInterceptor"
contain "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TestTimestampInterceptor.TestTimestampInterceptor(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
call "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestTimestampInterceptor" "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.44.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.44.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.channel.TestBasicChannelSemantics.44.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.44.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.44.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.channel.TestBasicChannelSemantics.44.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.channel.TestBasicChannelSemantics.44.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.44.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.44" "org.apache.flume.channel.TestBasicChannelSemantics.44.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.45.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.45.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.channel.TestBasicChannelSemantics.45.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.45.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.45.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.channel.TestBasicChannelSemantics.45.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.channel.TestBasicChannelSemantics.45.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.45.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.45" "org.apache.flume.channel.TestBasicChannelSemantics.45.this$0"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.MultiplexingChannelSelector"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.MockEvent"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.MockChannel"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.ChannelSelectorFactory"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "junit.framework.Assert"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.TestMultiplexingChannelSelector(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.TestMultiplexingChannelSelector(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.TestMultiplexingChannelSelector(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.setUp(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.setUp(0)" "org.apache.flume.channel.MockChannel.createMockChannel(1)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.setUp(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.setUp(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)" "org.apache.flume.ChannelSelector.getAllChannels(0)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.channel.MockEvent.MockEvent(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.Event.setHeaders(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "org.apache.flume.Channel.getName(0)"
call "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
reference "org.apache.flume.channel.TestMultiplexingChannelSelector.selector" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
contain "org.apache.flume.channel.TestMultiplexingChannelSelector" "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.48.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.48.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.channel.TestBasicChannelSemantics.48.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.48.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.48.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.channel.TestBasicChannelSemantics.48.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.channel.TestBasicChannelSemantics.48.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.48.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.48" "org.apache.flume.channel.TestBasicChannelSemantics.48.this$0"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.channel.AbstractChannel"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.ChannelException"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(0)" "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.events"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.put(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.events"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.put(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.take(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.events"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.take(0)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.getTransaction(0)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.events"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.49.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.49.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.channel.TestBasicChannelSemantics.49.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.49.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.49.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.channel.TestBasicChannelSemantics.49.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.channel.TestBasicChannelSemantics.49.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.49.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.49" "org.apache.flume.channel.TestBasicChannelSemantics.49.this$0"
reference "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource"
reference "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.source.TestBasicSourceSemantics"
reference "org.apache.flume.source.TestBasicSourceSemantics.1.{...}" "org.apache.flume.source.TestBasicSourceSemantics.1.this$0"
call "org.apache.flume.source.TestBasicSourceSemantics.1.{...}" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.source.TestBasicSourceSemantics.1.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.1.doConfigure(1)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.source.TestBasicSourceSemantics.1.doConfigure(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.1.this$0" "org.apache.flume.source.TestBasicSourceSemantics"
contain "org.apache.flume.source.TestBasicSourceSemantics.1" "org.apache.flume.source.TestBasicSourceSemantics.1.this$0"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper" "org.apache.flume.source.http.TestHTTPSource"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.this$0"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.events"
contain "org.apache.flume.source.http.TestHTTPSource.ResultWrapper" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response" "org.apache.http.HttpResponse"
contain "org.apache.flume.source.http.TestHTTPSource.ResultWrapper" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
contain "org.apache.flume.source.http.TestHTTPSource.ResultWrapper" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.events"
reference "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.this$0" "org.apache.flume.source.http.TestHTTPSource"
contain "org.apache.flume.source.http.TestHTTPSource.ResultWrapper" "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.this$0"
reference "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource"
reference "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.source.TestBasicSourceSemantics"
reference "org.apache.flume.source.TestBasicSourceSemantics.3.{...}" "org.apache.flume.source.TestBasicSourceSemantics.3.this$0"
call "org.apache.flume.source.TestBasicSourceSemantics.3.{...}" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.source.TestBasicSourceSemantics.3.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.3.doStop(0)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.source.TestBasicSourceSemantics.3.doStop(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.3.this$0" "org.apache.flume.source.TestBasicSourceSemantics"
contain "org.apache.flume.source.TestBasicSourceSemantics.3" "org.apache.flume.source.TestBasicSourceSemantics.3.this$0"
reference "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource"
reference "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.source.TestBasicSourceSemantics"
reference "org.apache.flume.source.TestBasicSourceSemantics.2.{...}" "org.apache.flume.source.TestBasicSourceSemantics.2.this$0"
call "org.apache.flume.source.TestBasicSourceSemantics.2.{...}" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.source.TestBasicSourceSemantics.2.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.2.doStart(0)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.source.TestBasicSourceSemantics.2.doStart(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.2.this$0" "org.apache.flume.source.TestBasicSourceSemantics"
contain "org.apache.flume.source.TestBasicSourceSemantics.2" "org.apache.flume.source.TestBasicSourceSemantics.2.this$0"
reference "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException.TestRuntimeException(0)"
contain "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException.serialVersionUID"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.CounterGroup"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.source.StressSource"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.ChannelException"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestStressSource" "org.mockito.Mockito"
reference "org.apache.flume.source.TestStressSource" "org.fest.reflect.core.Reflection"
reference "org.apache.flume.source.TestStressSource" "org.fest.reflect.field.FieldName"
reference "org.apache.flume.source.TestStressSource" "org.fest.reflect.field.FieldType"
reference "org.apache.flume.source.TestStressSource" "org.fest.reflect.field.Invoker"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.TestStressSource" "junit.framework.TestCase"
reference "org.apache.flume.source.TestStressSource" "junit.framework.Assert"
reference "org.apache.flume.source.TestStressSource" "org.mockito.stubbing.Stubber"
reference "org.apache.flume.source.TestStressSource" "org.apache.flume.PollableSource"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.TestStressSource(0)"
call "org.apache.flume.source.TestStressSource.setUp(0)" "org.mockito.Mockito.mock(1)"
reference "org.apache.flume.source.TestStressSource.setUp(0)" "org.apache.flume.source.TestStressSource.mockProcessor"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.setUp(0)"
call "org.apache.flume.source.TestStressSource.getEvent(1)" "org.fest.reflect.core.Reflection.field(1)"
call "org.apache.flume.source.TestStressSource.getEvent(1)" "org.fest.reflect.field.FieldName.ofType(1)"
call "org.apache.flume.source.TestStressSource.getEvent(1)" "org.fest.reflect.field.FieldType.in(1)"
call "org.apache.flume.source.TestStressSource.getEvent(1)" "org.fest.reflect.field.Invoker.get(0)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.getEvent(1)"
call "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)" "org.fest.reflect.core.Reflection.field(1)"
call "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)" "org.fest.reflect.field.FieldName.ofType(1)"
call "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)" "org.fest.reflect.field.FieldType.in(1)"
call "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)" "org.fest.reflect.field.Invoker.get(0)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)"
call "org.apache.flume.source.TestStressSource.getCounterGroup(1)" "org.fest.reflect.core.Reflection.field(1)"
call "org.apache.flume.source.TestStressSource.getCounterGroup(1)" "org.fest.reflect.field.FieldName.ofType(1)"
call "org.apache.flume.source.TestStressSource.getCounterGroup(1)" "org.fest.reflect.field.FieldType.in(1)"
call "org.apache.flume.source.TestStressSource.getCounterGroup(1)" "org.fest.reflect.field.Invoker.get(0)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.getCounterGroup(1)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.StressSource.StressSource(0)"
reference "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.TestStressSource.mockProcessor"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.StressSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.StressSource.configure(1)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.StressSource.process(0)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.mockito.Mockito.times(1)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.mockito.Mockito.verify(2)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.source.TestStressSource.getEvent(1)"
call "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.StressSource.StressSource(0)"
reference "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.TestStressSource.mockProcessor"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.StressSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.StressSource.configure(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.StressSource.process(0)"
reference "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "junit.framework.TestCase.assertTrue(2)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.mockito.Mockito.times(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.mockito.Mockito.verify(2)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.source.TestStressSource.getCounterGroup(1)"
call "org.apache.flume.source.TestStressSource.testBatchEvents(0)" "org.apache.flume.CounterGroup.get(1)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.testBatchEvents(0)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.StressSource.StressSource(0)"
reference "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.TestStressSource.mockProcessor"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.StressSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.StressSource.configure(1)"
reference "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.PollableSource.Status.BACKOFF"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.StressSource.process(0)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "junit.framework.Assert.assertFalse(2)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.mockito.Mockito.times(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.mockito.Mockito.verify(2)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.source.TestStressSource.getCounterGroup(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "org.apache.flume.CounterGroup.get(1)"
call "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)" "junit.framework.TestCase.assertTrue(2)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.StressSource.StressSource(0)"
reference "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.TestStressSource.mockProcessor"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.StressSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.StressSource.configure(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.StressSource.process(0)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.ChannelException.ChannelException(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.mockito.Mockito.doThrow(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.mockito.stubbing.Stubber.when(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.source.TestStressSource.getEvent(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.mockito.Mockito.doNothing(0)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.mockito.Mockito.times(1)"
call "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)" "org.mockito.Mockito.verify(2)"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)"
reference "org.apache.flume.source.TestStressSource.mockProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.TestStressSource" "org.apache.flume.source.TestStressSource.mockProcessor"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.1" "org.apache.flume.client.avro.TestSpoolingFileLineReader"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.{...}" "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.this$0"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader.1" "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.{...}"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader.1" "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.accept(1)"
reference "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.this$0" "org.apache.flume.client.avro.TestSpoolingFileLineReader"
contain "org.apache.flume.client.avro.TestSpoolingFileLineReader.1" "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.this$0"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.channel.TestChannelProcessor" "org.mockito.Mockito"
reference "org.apache.flume.channel.TestChannelProcessor" "org.mockito.stubbing.OngoingStubbing"
reference "org.apache.flume.channel.TestChannelProcessor" "com.google.common.collect.Lists"
reference "org.apache.flume.channel.TestChannelProcessor" "com.google.common.base.Charsets"
reference "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.event.EventBuilder"
contain "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.channel.TestChannelProcessor.TestChannelProcessor(0)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.mockito.Mockito.mock(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.mockito.Mockito.when(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.ChannelException.ChannelException(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.mockito.stubbing.OngoingStubbing.thenThrow(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
contain "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.mockito.Mockito.mock(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.mockito.Mockito.when(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.mockito.stubbing.OngoingStubbing.thenReturn(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "com.google.common.collect.Lists.newArrayList(0)"
reference "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)" "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
contain "org.apache.flume.channel.TestChannelProcessor" "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.42.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.42.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.channel.TestBasicChannelSemantics.42.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.42.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.42.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.channel.TestBasicChannelSemantics.42.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.channel.TestBasicChannelSemantics.42.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.42.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.42" "org.apache.flume.channel.TestBasicChannelSemantics.42.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.43.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.43.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.channel.TestBasicChannelSemantics.43.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.43.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.43.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.channel.TestBasicChannelSemantics.43.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.channel.TestBasicChannelSemantics.43.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.43.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.43" "org.apache.flume.channel.TestBasicChannelSemantics.43.this$0"
reference "org.apache.flume.tools.TestTimestampRoundDownUtil" "org.apache.flume.tools.TimestampRoundDownUtil"
reference "org.apache.flume.tools.TestTimestampRoundDownUtil" "junit.framework.Assert"
contain "org.apache.flume.tools.TestTimestampRoundDownUtil" "org.apache.flume.tools.TestTimestampRoundDownUtil.TestTimestampRoundDownUtil(0)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampSeconds(0)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampSeconds(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.tools.TestTimestampRoundDownUtil" "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampSeconds(0)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampMinutes(0)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampMinutes(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.tools.TestTimestampRoundDownUtil" "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampMinutes(0)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampHours(0)" "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)"
call "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampHours(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.tools.TestTimestampRoundDownUtil" "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampHours(0)"
reference "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager"
reference "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.jboss.netty.handler.ssl.SslHandler"
reference "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory"
reference "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.apache.flume.source.TestAvroSource"
reference "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.jboss.netty.channel.ChannelPipeline"
call "org.apache.flume.source.TestAvroSource.SSLChannelFactory.SSLChannelFactory(0)" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.NioClientSocketChannelFactory(2)"
contain "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.apache.flume.source.TestAvroSource.SSLChannelFactory.SSLChannelFactory(0)"
call "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.PermissiveTrustManager(1)"
call "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)" "org.jboss.netty.handler.ssl.SslHandler.SslHandler(1)"
call "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)" "org.jboss.netty.channel.ChannelPipeline.addFirst(2)"
call "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)" "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.newChannel(1)"
contain "org.apache.flume.source.TestAvroSource.SSLChannelFactory" "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.40.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.40.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.channel.TestBasicChannelSemantics.40.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.40.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.40.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.channel.TestBasicChannelSemantics.40.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.channel.TestBasicChannelSemantics.40.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.40.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.40" "org.apache.flume.channel.TestBasicChannelSemantics.40.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.41.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.41.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.channel.TestBasicChannelSemantics.41.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.41.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.41.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.channel.TestBasicChannelSemantics.41.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.channel.TestBasicChannelSemantics.41.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.41.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.41" "org.apache.flume.channel.TestBasicChannelSemantics.41.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.13.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.TestBasicChannelSemantics.13.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.13.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.13.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.13" "org.apache.flume.channel.TestBasicChannelSemantics.13.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.14.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.TestBasicChannelSemantics.14.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.14.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.14.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.14" "org.apache.flume.channel.TestBasicChannelSemantics.14.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.11.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.TestBasicChannelSemantics.11.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.11.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.11.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.11" "org.apache.flume.channel.TestBasicChannelSemantics.11.this$0"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.SyslogEvent(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.SyslogEvent(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.SyslogEvent(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setFacility(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.facility"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setFacility(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getFacility(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.facility"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getFacility(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setSeverity(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.severity"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setSeverity(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getSeverity(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.severity"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getSeverity(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setTimestamp(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.timestamp"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setTimestamp(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getTimestamp(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.timestamp"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getTimestamp(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setHostname(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setHostname(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getHostname(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getHostname(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setMessage(1)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setMessage(1)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getMessage(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getMessage(0)"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.facility"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.severity"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.timestamp"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.facility"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.severity"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.timestamp"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.12.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.TestBasicChannelSemantics.12.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.12.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.12.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.TestBasicChannelSemantics.12.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.12.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.12" "org.apache.flume.channel.TestBasicChannelSemantics.12.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.17.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.TestBasicChannelSemantics.17.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.17.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.17.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.17" "org.apache.flume.channel.TestBasicChannelSemantics.17.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.18.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.18.val$finalTransaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.channel.TestBasicChannelSemantics.18.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.18.val$finalTransaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.18.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.channel.TestBasicChannelSemantics.18.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18.val$finalTransaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.channel.TestBasicChannelSemantics.18.val$finalTransaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.18.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.18" "org.apache.flume.channel.TestBasicChannelSemantics.18.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.15.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.TestBasicChannelSemantics.15.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.15.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.15.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.15" "org.apache.flume.channel.TestBasicChannelSemantics.15.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.16.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.TestBasicChannelSemantics.16.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.16.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.16.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.16" "org.apache.flume.channel.TestBasicChannelSemantics.16.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.19.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.TestBasicChannelSemantics.19.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.19.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.19.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.19" "org.apache.flume.channel.TestBasicChannelSemantics.19.this$0"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.1" "org.apache.flume.sink.TestLoadBalancingSinkProcessor"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.10.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.TestBasicChannelSemantics.10.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.10.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.10.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.10" "org.apache.flume.channel.TestBasicChannelSemantics.10.this$0"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.channel.PseudoTxnMemoryChannel"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.Context"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.Channel"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.Transaction"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.JMXPollUtil"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.JMXTestUtils"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)" "org.apache.flume.instrumentation.util.TestJMXPollUtil.memChannel"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)" "org.apache.flume.instrumentation.util.TestJMXPollUtil.pmemChannel"
contain "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.instrumentation.util.TestJMXPollUtil.memChannel"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.setName(1)"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.instrumentation.util.TestJMXPollUtil.pmemChannel"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.start(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.instrumentation.util.JMXTestUtils.checkChannelCounterParams(1)"
call "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)" "org.apache.flume.Channel.stop(0)"
contain "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.memChannel" "org.apache.flume.Channel"
contain "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.TestJMXPollUtil.memChannel"
reference "org.apache.flume.instrumentation.util.TestJMXPollUtil.pmemChannel" "org.apache.flume.Channel"
contain "org.apache.flume.instrumentation.util.TestJMXPollUtil" "org.apache.flume.instrumentation.util.TestJMXPollUtil.pmemChannel"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.joda.time.DateTime"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.SyslogTcpSource"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestSyslogTcpSource" "com.google.common.base.Charsets"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.slf4j.Logger"
reference "org.apache.flume.source.TestSyslogTcpSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.joda.time.DateTime.DateTime(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.apache.flume.source.TestSyslogTcpSource.time"
call "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.joda.time.DateTime.toString(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.apache.flume.source.TestSyslogTcpSource.stamp1"
reference "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.apache.flume.source.TestSyslogTcpSource.host1"
reference "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.apache.flume.source.TestSyslogTcpSource.data1"
reference "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)" "org.apache.flume.source.TestSyslogTcpSource.bodyWithTandH"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.source.TestSyslogTcpSource.source"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.source.TestSyslogTcpSource.channel"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.source.SyslogTcpSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestSyslogTcpSource.init(1)" "org.apache.flume.source.SyslogTcpSource.configure(1)"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.init(1)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogTcpSource.init(1)"
reference "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogTcpSource.source"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogTcpSource.start(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogTcpSource.getSourcePort(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogTcpSource.bodyWithTandH"
reference "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogTcpSource.channel"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.SyslogTcpSource.stop(0)"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "com.google.common.base.Charsets.UTF_8"
reference "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.apache.flume.source.TestSyslogTcpSource.logger"
call "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)" "org.slf4j.Logger.info(1)"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)"
call "org.apache.flume.source.TestSyslogTcpSource.testKeepFields(0)" "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.testKeepFields(0)"
call "org.apache.flume.source.TestSyslogTcpSource.testRemoveFields(0)" "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.testRemoveFields(0)"
call "org.apache.flume.source.TestSyslogTcpSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.TestSyslogTcpSource.static {...}" "org.apache.flume.source.TestSyslogTcpSource.logger"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.static {...}"
reference "org.apache.flume.source.TestSyslogTcpSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.logger"
reference "org.apache.flume.source.TestSyslogTcpSource.source" "org.apache.flume.source.SyslogTcpSource"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.source"
reference "org.apache.flume.source.TestSyslogTcpSource.channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.channel"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.TEST_SYSLOG_PORT"
reference "org.apache.flume.source.TestSyslogTcpSource.time" "org.joda.time.DateTime"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.time"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.stamp1"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.host1"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.data1"
contain "org.apache.flume.source.TestSyslogTcpSource" "org.apache.flume.source.TestSyslogTcpSource.bodyWithTandH"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.interceptor.TestHostInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.HostInterceptor.Constants"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.HostInterceptor"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.TestHostInterceptor(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.InterceptorType.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
call "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestHostInterceptor" "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
reference "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.ChannelUtils"
call "org.apache.flume.channel.TestChannelUtils.TestChannelUtils(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.TestChannelUtils(0)"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.TestChannelUtils.channel"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.TestChannelUtils.events"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)" "org.apache.flume.channel.TestChannelUtils.channel"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)" "org.apache.flume.channel.ChannelUtils.take(1)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)" "org.apache.flume.channel.TestChannelUtils.channel"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)" "org.apache.flume.channel.TestChannelUtils.events"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)" "org.apache.flume.channel.ChannelUtils.take(1)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)" "org.apache.flume.channel.TestChannelUtils.events"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)" "org.apache.flume.channel.TestChannelUtils.channel"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)" "org.apache.flume.channel.ChannelUtils.take(1)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)" "org.apache.flume.channel.TestChannelUtils.channel"
reference "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)" "org.apache.flume.channel.TestChannelUtils.events"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)" "org.apache.flume.channel.ChannelUtils.put(2)"
call "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)" "org.apache.flume.channel.ChannelUtils.take(2)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)"
call "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.TestChannelUtils.1.{...}"
call "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.TestChannelUtils.testException(2)"
reference "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.TestChannelUtils.channel"
call "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)"
call "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)"
call "org.apache.flume.channel.TestChannelUtils.testTransact(3)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testTransact(3)"
call "org.apache.flume.channel.TestChannelUtils.testTransact(2)" "org.apache.flume.channel.TestChannelUtils.2.{...}"
call "org.apache.flume.channel.TestChannelUtils.testTransact(2)" "org.apache.flume.channel.TestChannelUtils.testTransact(3)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testTransact(2)"
reference "org.apache.flume.channel.TestChannelUtils.testError(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
call "org.apache.flume.channel.TestChannelUtils.testError(0)" "org.apache.flume.channel.TestChannelUtils.testTransact(2)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testError(0)"
reference "org.apache.flume.channel.TestChannelUtils.testRuntimeException(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
call "org.apache.flume.channel.TestChannelUtils.testRuntimeException(0)" "org.apache.flume.channel.TestChannelUtils.testTransact(2)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testRuntimeException(0)"
reference "org.apache.flume.channel.TestChannelUtils.testChannelException(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
call "org.apache.flume.channel.TestChannelUtils.testChannelException(0)" "org.apache.flume.channel.TestChannelUtils.testTransact(2)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testChannelException(0)"
reference "org.apache.flume.channel.TestChannelUtils.testInterrupt(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
call "org.apache.flume.channel.TestChannelUtils.testInterrupt(0)" "org.apache.flume.channel.TestChannelUtils.3.{...}"
call "org.apache.flume.channel.TestChannelUtils.testInterrupt(0)" "org.apache.flume.channel.TestChannelUtils.testTransact(3)"
contain "org.apache.flume.channel.TestChannelUtils" "org.apache.flume.channel.TestChannelUtils.testInterrupt(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.24.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.TestBasicChannelSemantics.24.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.24.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.24.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.TestBasicChannelSemantics.24.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.24.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.24" "org.apache.flume.channel.TestBasicChannelSemantics.24.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25" "org.apache.flume.channel.TestBasicChannelSemantics.25.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0"
call "org.apache.flume.channel.TestBasicChannelSemantics.25.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.25.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.interruptTest(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25" "org.apache.flume.channel.TestBasicChannelSemantics.25.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25" "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.22.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.TestBasicChannelSemantics.22.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.22.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.22.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.TestBasicChannelSemantics.22.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.22.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.22" "org.apache.flume.channel.TestBasicChannelSemantics.22.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.23.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.TestBasicChannelSemantics.23.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.23.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.23.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.TestBasicChannelSemantics.23.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.23.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.23" "org.apache.flume.channel.TestBasicChannelSemantics.23.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.28.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.TestBasicChannelSemantics.28.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.28.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.28.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.TestBasicChannelSemantics.28.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.28.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.28" "org.apache.flume.channel.TestBasicChannelSemantics.28.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.29.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.TestBasicChannelSemantics.29.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.29.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.29.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.TestBasicChannelSemantics.29.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.29.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.29" "org.apache.flume.channel.TestBasicChannelSemantics.29.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.26.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.TestBasicChannelSemantics.26.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.26.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.26.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.TestBasicChannelSemantics.26.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.26.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.26" "org.apache.flume.channel.TestBasicChannelSemantics.26.this$0"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.joda.time.DateTime"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.SyslogSourceConfigurationConstants"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.mina.transport.socket.nio.NioSession"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.mina.core.buffer.IoBuffer"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "com.google.common.base.Charsets"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.SyslogUtils.SyslogStatus"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.mockito.Mockito"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.mockito.stubbing.OngoingStubbing"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.slf4j.LoggerFactory"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.joda.time.DateTime.DateTime(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.time"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.joda.time.DateTime.toString(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.stamp1"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.host1"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.data1"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.getEvent(1)" "org.apache.flume.source.TestMultiportSyslogTCPSource.stamp1"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.getEvent(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.MultiportSyslogTCPSource.setChannelProcessor(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.MultiportSyslogTCPSource.start(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.getEvent(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.time"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.joda.time.DateTime.getMillis(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)" "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.mina.core.buffer.IoBuffer.allocate(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.mina.core.buffer.IoBuffer.wrap(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.LineSplitter(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.mina.core.buffer.IoBuffer.getString(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.mina.core.buffer.IoBuffer.rewind(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "com.google.common.base.Charsets.ISO_8859_1"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.mina.core.buffer.IoBuffer.wrap(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory.DefaultIoSessionDataStructureFactory(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.mockito.Mockito.mock(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory.getAttributeMap(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.mina.transport.socket.nio.NioSession.setAttributeMap(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.mina.transport.socket.nio.NioSession.getLocalAddress(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.mockito.Mockito.when(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.mockito.stubbing.OngoingStubbing.thenReturn(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "com.google.common.base.Charsets.ISO_8859_1"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.MemoryChannel.configure(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.MemoryChannel.start(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.ReplicatingChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.mina.core.buffer.IoBuffer.wrap(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)"
call "org.apache.flume.source.TestMultiportSyslogTCPSource.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.static {...}" "org.apache.flume.source.TestMultiportSyslogTCPSource.logger"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.static {...}"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.logger"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.BASE_TEST_SYSLOG_PORT"
reference "org.apache.flume.source.TestMultiportSyslogTCPSource.time" "org.joda.time.DateTime"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.time"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.stamp1"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.host1"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.data1"
contain "org.apache.flume.source.TestMultiportSyslogTCPSource" "org.apache.flume.source.TestMultiportSyslogTCPSource.KEEP_FIELDS"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.27.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.TestBasicChannelSemantics.27.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.27.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.27.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.TestBasicChannelSemantics.27.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.27.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.27" "org.apache.flume.channel.TestBasicChannelSemantics.27.this$0"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.avro.AvroRemoteException"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.source.avro.AvroSourceProtocol"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.slf4j.Logger"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.source.avro.Status"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.DelayMockAvroServer(1)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
contain "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.DelayMockAvroServer(1)"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)" "org.apache.avro.AvroRemoteException.AvroRemoteException(2)"
contain "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)" "org.apache.flume.sink.TestAvroSink.access$100(0)"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)" "org.apache.flume.sink.TestAvroSink.access$100(0)"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)" "org.slf4j.Logger.debug(3)"
call "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)"
reference "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)" "org.apache.flume.source.avro.Status.OK"
contain "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)"
contain "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer" "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
reference "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.BasicSourceSemantics"
reference "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics"
call "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(0)" "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doConfigure(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doStart(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doStop(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.EventSerializerFactory"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.EventSerializer"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "com.google.common.base.Charsets"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.TestBodyTextEventSerializer(0)" "org.apache.flume.serialization.TestBodyTextEventSerializer.testFile"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.TestBodyTextEventSerializer(0)" "org.apache.flume.serialization.TestBodyTextEventSerializer.expectedFile"
contain "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.TestBodyTextEventSerializer.TestBodyTextEventSerializer(0)"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.TestBodyTextEventSerializer.testFile"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.TestBodyTextEventSerializer.testFile"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
reference "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.write(1)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.flush(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
call "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)"
contain "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.TestBodyTextEventSerializer.testFile"
contain "org.apache.flume.serialization.TestBodyTextEventSerializer" "org.apache.flume.serialization.TestBodyTextEventSerializer.expectedFile"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.20.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.TestBasicChannelSemantics.20.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.20.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.20.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.20" "org.apache.flume.channel.TestBasicChannelSemantics.20.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.21.this$0"
contain "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.TestBasicChannelSemantics.21.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.21.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.21.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.TestBasicChannelSemantics.21.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.21.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.21" "org.apache.flume.channel.TestBasicChannelSemantics.21.this$0"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.Context"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.event.EventBuilder"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.TestMemoryChannelTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.setUp(0)" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.setUp(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)"
reference "org.apache.flume.channel.TestMemoryChannelTransaction.channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelTransaction" "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
reference "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.AbstractPollableSource"
reference "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestAbstractPollableSource" "org.mockito.Mockito"
reference "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.PollableSource.Status"
reference "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.PollableSource"
contain "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.TestAbstractPollableSource.TestAbstractPollableSource(0)"
call "org.apache.flume.source.TestAbstractPollableSource.setUp(0)" "org.apache.flume.source.TestAbstractPollableSource.1.{...}"
call "org.apache.flume.source.TestAbstractPollableSource.setUp(0)" "org.mockito.Mockito.spy(1)"
reference "org.apache.flume.source.TestAbstractPollableSource.setUp(0)" "org.apache.flume.source.TestAbstractPollableSource.source"
contain "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.TestAbstractPollableSource.setUp(0)"
reference "org.apache.flume.source.TestAbstractPollableSource.testExceptionStartup(0)" "org.apache.flume.source.TestAbstractPollableSource.source"
call "org.apache.flume.source.TestAbstractPollableSource.testExceptionStartup(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestAbstractPollableSource.testExceptionStartup(0)" "org.apache.flume.source.AbstractPollableSource.configure(1)"
contain "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.TestAbstractPollableSource.testExceptionStartup(0)"
reference "org.apache.flume.source.TestAbstractPollableSource.testNotStarted(0)" "org.apache.flume.source.TestAbstractPollableSource.source"
call "org.apache.flume.source.TestAbstractPollableSource.testNotStarted(0)" "org.apache.flume.source.AbstractPollableSource.process(0)"
contain "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.TestAbstractPollableSource.testNotStarted(0)"
reference "org.apache.flume.source.TestAbstractPollableSource.source" "org.apache.flume.source.AbstractPollableSource"
contain "org.apache.flume.source.TestAbstractPollableSource" "org.apache.flume.source.TestAbstractPollableSource.source"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.Context"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.BasicSourceSemantics"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.mockito.Mockito"
reference "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.TestBasicSourceSemantics(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)" "org.apache.flume.source.TestBasicSourceSemantics.context"
call "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)" "org.mockito.Mockito.mock(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)" "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)" "org.mockito.Mockito.spy(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)" "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor"
call "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.setChannelProcessor(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)" "org.apache.flume.source.TestBasicSourceSemantics.context"
call "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.configure(1)"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.1.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.mockito.Mockito.spy(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.source"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.setChannelProcessor(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.context"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.configure(1)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.2.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.source"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.start(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.3.{...}"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.TestBasicSourceSemantics.source"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.start(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.stop(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.lifecycle.LifecycleState.ERROR"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)" "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.TestBasicSourceSemantics.source"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.BasicSourceSemantics.start(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.TestBasicSourceSemantics.context"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.BasicSourceSemantics.configure(1)"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
call "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)" "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)"
reference "org.apache.flume.source.TestBasicSourceSemantics.source" "org.apache.flume.source.BasicSourceSemantics"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.source"
reference "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor" "org.apache.flume.channel.ChannelProcessor"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor"
reference "org.apache.flume.source.TestBasicSourceSemantics.context" "org.apache.flume.Context"
contain "org.apache.flume.source.TestBasicSourceSemantics" "org.apache.flume.source.TestBasicSourceSemantics.context"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.FlumeException"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "com.google.common.collect.Maps"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.source.TestThriftSource"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.api.RpcClient"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper.SubmitHelper(1)" "org.apache.flume.source.TestThriftSource.SubmitHelper.this$0"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper.SubmitHelper(1)" "org.apache.flume.source.TestThriftSource.SubmitHelper.i"
contain "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.source.TestThriftSource.SubmitHelper.SubmitHelper(1)"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "com.google.common.collect.Maps.newHashMap(0)"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.source.TestThriftSource.SubmitHelper.i"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.source.TestThriftSource.SubmitHelper.this$0"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.source.TestThriftSource.access$000(1)"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.api.RpcClient.appendBatch(1)"
call "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)" "org.apache.flume.FlumeException.FlumeException(1)"
contain "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)"
contain "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.source.TestThriftSource.SubmitHelper.i"
reference "org.apache.flume.source.TestThriftSource.SubmitHelper.this$0" "org.apache.flume.source.TestThriftSource"
contain "org.apache.flume.source.TestThriftSource.SubmitHelper" "org.apache.flume.source.TestThriftSource.SubmitHelper.this$0"
reference "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.TestSyslogUtils" "org.jboss.netty.buffer.ChannelBuffer"
reference "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.Event"
reference "org.apache.flume.source.TestSyslogUtils" "org.jboss.netty.buffer.ChannelBuffers"
reference "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.SyslogUtils.SyslogStatus"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestSyslogUtils(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader0(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader0(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader1(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader1(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader2(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader2(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader3(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader3(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader4(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader4(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader5(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader5(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader6(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader6(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader7(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader7(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader8(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader8(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader9(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader9(0)"
call "org.apache.flume.source.TestSyslogUtils.TestHeader10(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestHeader10(0)"
call "org.apache.flume.source.TestSyslogUtils.TestRfc3164HeaderApacheLogWithNulls(0)" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.TestRfc3164HeaderApacheLogWithNulls(0)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSyslogUtils.checkHeader(5)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.source.SyslogUtils.SyslogUtils(3)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.source.SyslogUtils.extractEvent(1)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.Event.getHeaders(0)"
reference "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
call "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)" "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
contain "org.apache.flume.source.TestSyslogUtils" "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.71.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.71.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.channel.TestBasicChannelSemantics.71.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.71.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.71.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.channel.TestBasicChannelSemantics.71.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.channel.TestBasicChannelSemantics.71.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.71.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.71" "org.apache.flume.channel.TestBasicChannelSemantics.71.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.72.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.72.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.channel.TestBasicChannelSemantics.72.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.72.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.72.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.channel.TestBasicChannelSemantics.72.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.channel.TestBasicChannelSemantics.72.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.72.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.72" "org.apache.flume.channel.TestBasicChannelSemantics.72.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.70.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.70.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.channel.TestBasicChannelSemantics.70.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.70.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.70.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.channel.TestBasicChannelSemantics.70.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.channel.TestBasicChannelSemantics.70.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.70.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.70" "org.apache.flume.channel.TestBasicChannelSemantics.70.this$0"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.RollingFileSink"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.Context"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.channel.PseudoTxnMemoryChannel"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.event.SimpleEvent"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestRollingFileSink" "org.slf4j.Logger"
reference "org.apache.flume.sink.TestRollingFileSink" "org.slf4j.LoggerFactory"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.Sink"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.TestRollingFileSink(0)"
reference "org.apache.flume.sink.TestRollingFileSink.setUp(0)" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
call "org.apache.flume.sink.TestRollingFileSink.setUp(0)" "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)"
reference "org.apache.flume.sink.TestRollingFileSink.setUp(0)" "org.apache.flume.sink.TestRollingFileSink.sink"
call "org.apache.flume.sink.TestRollingFileSink.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.sink.TestRollingFileSink.setUp(0)" "org.apache.flume.sink.RollingFileSink.setChannel(1)"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.setUp(0)"
reference "org.apache.flume.sink.TestRollingFileSink.tearDown(0)" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.tearDown(0)"
call "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
call "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.sink.TestRollingFileSink.sink"
call "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.sink.RollingFileSink.start(0)"
call "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)" "org.apache.flume.sink.RollingFileSink.stop(0)"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.TestRollingFileSink.sink"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.RollingFileSink.setChannel(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.RollingFileSink.start(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.event.SimpleEvent.SimpleEvent(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.Event.setBody(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.RollingFileSink.process(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.RollingFileSink.stop(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.RollingFileSink.getDirectory(0)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.apache.flume.sink.TestRollingFileSink.logger"
call "org.apache.flume.sink.TestRollingFileSink.testAppend(0)" "org.slf4j.Logger.debug(3)"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.testAppend(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.TestRollingFileSink.sink"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.RollingFileSink.setChannel(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.RollingFileSink.start(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.event.SimpleEvent.SimpleEvent(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.Event.setBody(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.RollingFileSink.process(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.RollingFileSink.stop(0)"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.RollingFileSink.getDirectory(0)"
reference "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.apache.flume.sink.TestRollingFileSink.logger"
call "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)" "org.slf4j.Logger.debug(3)"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)"
call "org.apache.flume.sink.TestRollingFileSink.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.sink.TestRollingFileSink.static {...}" "org.apache.flume.sink.TestRollingFileSink.logger"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.static {...}"
reference "org.apache.flume.sink.TestRollingFileSink.logger" "org.slf4j.Logger"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.logger"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.tmpDir"
reference "org.apache.flume.sink.TestRollingFileSink.sink" "org.apache.flume.sink.RollingFileSink"
contain "org.apache.flume.sink.TestRollingFileSink" "org.apache.flume.sink.TestRollingFileSink.sink"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.Sink"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.Transaction"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.this$0"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.remaining"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.written"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.start(0)" "org.apache.flume.lifecycle.LifecycleState.START"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.start(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.start(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.stop(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.stop(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.stop(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getLifecycleState(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getLifecycleState(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setName(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.name"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setName(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getName(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.name"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getName(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setChannel(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setChannel(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getChannel(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getChannel(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setRemaining(1)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.remaining"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setRemaining(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.remaining"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.written"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)" "org.apache.flume.Sink.Status.READY"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getWritten(0)" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.written"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getWritten(0)"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.remaining"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state" "org.apache.flume.lifecycle.LifecycleState"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.name"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel" "org.apache.flume.Channel"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.written"
reference "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.this$0" "org.apache.flume.sink.TestFailoverSinkProcessor"
contain "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink" "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.this$0"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleState"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.LifecycleAware"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.CounterGroup"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.TestLifecycleSupervisor(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.setUp(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.setUp(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.setUp(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testLifecycle(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testLifecycle(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testLifecycle(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.{...}"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.AlwaysRestartPolicy(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.CounterGroup.get(1)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleState.START"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleState.STOP"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)"
call "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)" "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)"
reference "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor" "org.apache.flume.lifecycle.LifecycleSupervisor"
contain "org.apache.flume.lifecycle.TestLifecycleSupervisor" "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.Clock"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.BucketPath"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.mockito.Mockito"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.joda.time.format.ISODateTimeFormat"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.formatter.output.TestBucketPath" "org.mockito.stubbing.OngoingStubbing"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.TestBucketPath(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.setUp(0)" "org.apache.flume.formatter.output.TestBucketPath.cal"
reference "org.apache.flume.formatter.output.TestBucketPath.setUp(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.setUp(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.testDateFormatHours(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
call "org.apache.flume.formatter.output.TestBucketPath.testDateFormatHours(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testDateFormatHours(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.testDateFormatMinutes(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
call "org.apache.flume.formatter.output.TestBucketPath.testDateFormatMinutes(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testDateFormatMinutes(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.testDateFormatSeconds(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
call "org.apache.flume.formatter.output.TestBucketPath.testDateFormatSeconds(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testDateFormatSeconds(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.testNoRounding(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
call "org.apache.flume.formatter.output.TestBucketPath.testNoRounding(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
reference "org.apache.flume.formatter.output.TestBucketPath.testNoRounding(0)" "org.apache.flume.formatter.output.TestBucketPath.cal"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testNoRounding(0)"
reference "org.apache.flume.formatter.output.TestBucketPath.testDateFormatTimeZone(0)" "org.apache.flume.formatter.output.TestBucketPath.headers"
call "org.apache.flume.formatter.output.TestBucketPath.testDateFormatTimeZone(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(7)"
reference "org.apache.flume.formatter.output.TestBucketPath.testDateFormatTimeZone(0)" "org.apache.flume.formatter.output.TestBucketPath.cal"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testDateFormatTimeZone(0)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.mockito.Mockito.mock(1)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.joda.time.format.ISODateTimeFormat.dateTimeParser(0)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.joda.time.format.DateTimeFormatter.parseMillis(1)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.apache.flume.Clock.currentTimeMillis(0)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.mockito.Mockito.when(1)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.mockito.stubbing.OngoingStubbing.thenReturn(2)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.apache.flume.formatter.output.BucketPath.getClock(0)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.apache.flume.formatter.output.BucketPath.setClock(1)"
call "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)" "org.apache.flume.formatter.output.BucketPath.escapeString(7)"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.cal"
contain "org.apache.flume.formatter.output.TestBucketPath" "org.apache.flume.formatter.output.TestBucketPath.headers"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.SinkCounter"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.ChannelCounter"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.SourceCounter"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "junit.framework.Assert"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.TestMonitoredCounterGroup(0)"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.setUp(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.mbServer"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.setUp(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.setUp(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.register(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.start(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchEmptyCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchUnderflowCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementBatchCompleteCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainAttemptCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainSuccessCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.stop(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainAttemptCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)" "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.register(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.start(0)"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)" "org.apache.flume.instrumentation.ChannelCounter.stop(0)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.register(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)" "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.SourceCounter.register(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.SourceCounter.start(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "org.apache.flume.instrumentation.SourceCounter.stop(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)" "junit.framework.Assert.assertTrue(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchAcceptedCount(1)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChChannelSize(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutSuccess(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeSuccess(1)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionCreated(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionClosed(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionFailed(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchEmpty(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchUnderflow(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchComplete(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainSuccess(1)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionCreated(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionCreated(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionClosed(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionClosed(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionFailed(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionFailed(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchEmpty(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchEmpty(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchUnderflow(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchUnderflow(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchComplete(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchComplete(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainAttempt(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainSuccess(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainSuccess(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChChannelSize(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChChannelSize(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutAttempt(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeAttempt(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeAttempt(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutSuccess(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutSuccess(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeSuccess(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeSuccess(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchAcceptedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchReceivedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendAcceptedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendReceivedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventAcceptedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventAcceptedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventReceivedCount(1)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventReceivedCount(1)"
call "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
reference "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getAttribute(2)" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.mbServer"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getAttribute(2)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.MAX_BOUNDS"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ROOT_OBJ_NAME_PREFIX"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SOURCE_OBJ_NAME_PREFIX"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CHANNEL_OBJ_NAME_PREFIX"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SINK_OBJ_NAME_PREFIX"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ATTR_START_TIME"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ATTR_STOP_TIME"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_EVENT_RECEVIED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_EVENT_ACCEPTED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_RECEVIED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_ACCEPTED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_BATCH_RECEVIED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_BATCH_ACCEPTED_COUNT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_CHANNEL_SIZE"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_PUT_ATTEMPT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_TAKE_ATTEMPT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_PUT_SUCCESS"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_TAKE_SUCCESS"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_CREATED"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_CLOSED"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_FAILED"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_EMPTY"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_UNDERFLOW"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_COMPLETE"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_EVENT_DRAIN_ATTEMPT"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_EVENT_DRAIN_SUCCESS"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.mbServer"
contain "org.apache.flume.instrumentation.TestMonitoredCounterGroup" "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor.Constants"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.Event"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.StaticInterceptor"
reference "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.TestStaticInterceptor.TestStaticInterceptor(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.InterceptorType.STATIC"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.InterceptorType.STATIC"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.InterceptorType.STATIC"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.STATIC"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestStaticInterceptor" "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.this$1"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.this$1"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.25.1.this$1" "org.apache.flume.channel.TestBasicChannelSemantics.25"
contain "org.apache.flume.channel.TestBasicChannelSemantics.25.1" "org.apache.flume.channel.TestBasicChannelSemantics.25.1.this$1"
reference "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
reference "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
reference "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
call "org.apache.flume.channel.TestBasicChannelSemantics.TestBasicChannelSemantics(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.TestBasicChannelSemantics(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.executor"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.1.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.executor"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.2.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.3.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.4.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)" "org.apache.flume.channel.TestBasicChannelSemantics.5.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.6.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testExceptions(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.7.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.8.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)" "org.apache.flume.channel.TestBasicChannelSemantics.9.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.10.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.11.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.12.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalArgument(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.13.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testExceptions(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.14.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.15.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.16.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.17.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.Transaction.begin(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.18.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.19.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.20.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.21.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.22.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.events"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.23.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testWrongThread(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.24.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testBasicExceptions(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.25.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testMode(2)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.26.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.27.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.28.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.29.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.30.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.31.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.32.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.33.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.34.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testExceptions(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.35.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.36.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.37.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.38.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.39.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.40.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testWrongThread(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.41.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.42.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.43.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.44.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testError(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.45.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.46.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.47.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.48.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testRuntimeException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.49.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.50.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.51.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.52.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.53.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.54.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.55.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.56.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testInterrupt(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.57.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.58.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.channel.TestBasicChannelSemantics.59.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)" "org.apache.flume.channel.TestBasicChannelSemantics.60.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.61.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testExceptions(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.62.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)" "org.apache.flume.channel.TestBasicChannelSemantics.63.{...}"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.64.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testError(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.65.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.66.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testRuntimeException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.67.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.68.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.69.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.70.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.channel"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.71.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.72.{...}"
call "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)" "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
contain "org.apache.flume.channel.TestBasicChannelSemantics" "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)"
reference "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.PositionTracker"
reference "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)" "org.apache.flume.serialization.TransientPositionTracker.position"
reference "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)" "org.apache.flume.serialization.TransientPositionTracker.target"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)"
reference "org.apache.flume.serialization.TransientPositionTracker.storePosition(1)" "org.apache.flume.serialization.TransientPositionTracker.position"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.storePosition(1)"
reference "org.apache.flume.serialization.TransientPositionTracker.getPosition(0)" "org.apache.flume.serialization.TransientPositionTracker.position"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.getPosition(0)"
reference "org.apache.flume.serialization.TransientPositionTracker.getTarget(0)" "org.apache.flume.serialization.TransientPositionTracker.target"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.getTarget(0)"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.close(0)"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.target"
contain "org.apache.flume.serialization.TransientPositionTracker" "org.apache.flume.serialization.TransientPositionTracker.position"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.57.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.57.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.channel.TestBasicChannelSemantics.57.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.57.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.57.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.channel.TestBasicChannelSemantics.57.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.channel.TestBasicChannelSemantics.57.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.57.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.57" "org.apache.flume.channel.TestBasicChannelSemantics.57.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.58.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.58.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.channel.TestBasicChannelSemantics.58.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.58.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.58.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.channel.TestBasicChannelSemantics.58.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.channel.TestBasicChannelSemantics.58.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.58.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.58" "org.apache.flume.channel.TestBasicChannelSemantics.58.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.55.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.55.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.channel.TestBasicChannelSemantics.55.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.55.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.55.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.channel.TestBasicChannelSemantics.55.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.channel.TestBasicChannelSemantics.55.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.55.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.55" "org.apache.flume.channel.TestBasicChannelSemantics.55.this$0"
reference "org.apache.flume.TestCounterGroup" "org.apache.flume.CounterGroup"
reference "org.apache.flume.TestCounterGroup" "junit.framework.Assert"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.TestCounterGroup(0)"
call "org.apache.flume.TestCounterGroup.setUp(0)" "org.apache.flume.CounterGroup.CounterGroup(0)"
reference "org.apache.flume.TestCounterGroup.setUp(0)" "org.apache.flume.TestCounterGroup.counterGroup"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.setUp(0)"
reference "org.apache.flume.TestCounterGroup.testGetCounter(0)" "org.apache.flume.TestCounterGroup.counterGroup"
call "org.apache.flume.TestCounterGroup.testGetCounter(0)" "org.apache.flume.CounterGroup.getCounter(1)"
call "org.apache.flume.TestCounterGroup.testGetCounter(0)" "junit.framework.Assert.assertNotNull(1)"
call "org.apache.flume.TestCounterGroup.testGetCounter(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.testGetCounter(0)"
reference "org.apache.flume.TestCounterGroup.testGet(0)" "org.apache.flume.TestCounterGroup.counterGroup"
call "org.apache.flume.TestCounterGroup.testGet(0)" "org.apache.flume.CounterGroup.get(1)"
call "org.apache.flume.TestCounterGroup.testGet(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.testGet(0)"
reference "org.apache.flume.TestCounterGroup.testIncrementAndGet(0)" "org.apache.flume.TestCounterGroup.counterGroup"
call "org.apache.flume.TestCounterGroup.testIncrementAndGet(0)" "org.apache.flume.CounterGroup.incrementAndGet(1)"
call "org.apache.flume.TestCounterGroup.testIncrementAndGet(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.testIncrementAndGet(0)"
reference "org.apache.flume.TestCounterGroup.testAddAndGet(0)" "org.apache.flume.TestCounterGroup.counterGroup"
call "org.apache.flume.TestCounterGroup.testAddAndGet(0)" "org.apache.flume.CounterGroup.addAndGet(2)"
call "org.apache.flume.TestCounterGroup.testAddAndGet(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.testAddAndGet(0)"
reference "org.apache.flume.TestCounterGroup.counterGroup" "org.apache.flume.CounterGroup"
contain "org.apache.flume.TestCounterGroup" "org.apache.flume.TestCounterGroup.counterGroup"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.56.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.56.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.channel.TestBasicChannelSemantics.56.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.56.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.56.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.channel.TestBasicChannelSemantics.56.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.channel.TestBasicChannelSemantics.56.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.56.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.56" "org.apache.flume.channel.TestBasicChannelSemantics.56.this$0"
reference "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource"
contain "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.PermissiveTrustManager(0)"
contain "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.checkClientTrusted(2)"
contain "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.checkServerTrusted(2)"
contain "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.getAcceptedIssuers(0)"
contain "org.apache.flume.source.TestAvroSource.PermissiveTrustManager" "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.PermissiveTrustManager(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.59.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.59.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.channel.TestBasicChannelSemantics.59.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.59.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.59.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.channel.TestBasicChannelSemantics.59.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.channel.TestBasicChannelSemantics.59.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.59.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.59" "org.apache.flume.channel.TestBasicChannelSemantics.59.this$0"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.InterceptorType"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.InterceptorBuilderFactory"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "com.google.common.base.Charsets"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.Interceptor"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.RegexFilteringInterceptor"
contain "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.TestRegexFilteringInterceptor.TestRegexFilteringInterceptor(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.InterceptorType.toString(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
reference "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.event.EventBuilder.withBody(2)"
call "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)" "org.apache.flume.interceptor.Interceptor.intercept(1)"
contain "org.apache.flume.interceptor.TestRegexFilteringInterceptor" "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.channel.TestMemoryChannelConcurrency"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.val$channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.{...}"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.val$channel"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.Channel.getTransaction(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.this$0"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.access$000(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.val$channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.2.this$0" "org.apache.flume.channel.TestMemoryChannelConcurrency"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.2" "org.apache.flume.channel.TestMemoryChannelConcurrency.2.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.channel.TestMemoryChannelConcurrency"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.val$channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.{...}"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.val$channel"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.Channel.put(1)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.this$0"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.access$000(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.val$channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.1.this$0" "org.apache.flume.channel.TestMemoryChannelConcurrency"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.1" "org.apache.flume.channel.TestMemoryChannelConcurrency.1.this$0"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.ResettableTestStringInputStream"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.LineDeserializer"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.Context"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.LineDeserializer.Builder"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.Event"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.EventDeserializer.Builder"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.EventDeserializerFactory"
reference "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.EventDeserializer"
reference "org.apache.flume.serialization.TestLineDeserializer" "junit.framework.Assert"
reference "org.apache.flume.serialization.TestLineDeserializer" "com.google.common.base.Charsets"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.TestLineDeserializer(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.setup(0)" "org.apache.flume.serialization.TestLineDeserializer.mini"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.setup(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)" "org.apache.flume.serialization.TestLineDeserializer.mini"
call "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)" "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)" "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.serialization.TestLineDeserializer.mini"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.serialization.LineDeserializer.Builder.Builder(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.serialization.EventDeserializer.Builder.build(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)" "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)" "org.apache.flume.serialization.TestLineDeserializer.mini"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)" "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)"
call "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)" "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.TestLineDeserializer.mini"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.EventDeserializer.readEvents(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.EventDeserializer.mark(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)" "org.apache.flume.serialization.EventDeserializer.close(0)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)"
call "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)" "junit.framework.Assert.assertNull(1)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)"
call "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "org.apache.flume.serialization.EventDeserializer.mark(0)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "org.apache.flume.serialization.EventDeserializer.reset(0)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "junit.framework.Assert.assertNull(2)"
call "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)" "org.apache.flume.serialization.EventDeserializer.close(0)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)"
contain "org.apache.flume.serialization.TestLineDeserializer" "org.apache.flume.serialization.TestLineDeserializer.mini"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.Event"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.Event[]"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$takeMapLock"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$committedTakes"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$channel"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$takeMapLock"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$committedTakes"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$takeMapLock"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$committedTakes"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$endGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.5.this$0" "org.apache.flume.channel.TestMemoryChannelConcurrency"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.5" "org.apache.flume.channel.TestMemoryChannelConcurrency.5.this$0"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.Context"
reference "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer" "junit.framework.Assert"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.TestRegexExtractorInterceptorPassThroughSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.RegexExtractorInterceptorPassThroughSerializer(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.configure(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)" "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.serialize(1)"
call "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)" "junit.framework.Assert.assertEquals(2)"
contain "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer" "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$committedPuts"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$channel"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Transaction.commit(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$committedPuts"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$committedPuts"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$endGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.4.this$0" "org.apache.flume.channel.TestMemoryChannelConcurrency"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.4" "org.apache.flume.channel.TestMemoryChannelConcurrency.4.this$0"
reference "org.apache.flume.source.TestAvroSource.1" "org.apache.flume.source.TestAvroSource"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.this$0"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$channel"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$committedPuts"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$channel"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Transaction.commit(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$committedPuts"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.Transaction.close(0)"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$endGate"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$startGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$channel"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$committedPuts"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$endGate"
reference "org.apache.flume.channel.TestMemoryChannelConcurrency.3.this$0" "org.apache.flume.channel.TestMemoryChannelConcurrency"
contain "org.apache.flume.channel.TestMemoryChannelConcurrency.3" "org.apache.flume.channel.TestMemoryChannelConcurrency.3.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.50.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.50.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.channel.TestBasicChannelSemantics.50.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.50.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.50.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.channel.TestBasicChannelSemantics.50.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.channel.TestBasicChannelSemantics.50.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.50.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.50" "org.apache.flume.channel.TestBasicChannelSemantics.50.this$0"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.serialization.SyslogAvroEventSerializer"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer.Builder"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.Context"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.slf4j.Logger"
reference "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.serialization.EventSerializer"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.Builder(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)" "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)" "org.apache.flume.serialization.SyslogAvroEventSerializer.configure(1)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)" "org.apache.flume.serialization.SyslogAvroEventSerializer.access$000(0)"
call "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)" "org.slf4j.Logger.error(2)"
contain "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder" "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.53.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.53.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.channel.TestBasicChannelSemantics.53.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.53.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.53.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.channel.TestBasicChannelSemantics.53.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.channel.TestBasicChannelSemantics.53.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.53.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.53" "org.apache.flume.channel.TestBasicChannelSemantics.53.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.54.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.54.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.channel.TestBasicChannelSemantics.54.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.54.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.54.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.channel.TestBasicChannelSemantics.54.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.channel.TestBasicChannelSemantics.54.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.54.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.54" "org.apache.flume.channel.TestBasicChannelSemantics.54.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.51.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.51.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.channel.TestBasicChannelSemantics.51.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.51.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.51.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.channel.TestBasicChannelSemantics.51.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.channel.TestBasicChannelSemantics.51.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.51.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.51" "org.apache.flume.channel.TestBasicChannelSemantics.51.this$0"
reference "org.apache.flume.interceptor.CensoringInterceptor.1" "org.apache.flume.interceptor.CensoringInterceptor"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.52.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.52.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.channel.TestBasicChannelSemantics.52.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.52.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.52.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.channel.TestBasicChannelSemantics.52.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.channel.TestBasicChannelSemantics.52.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.52.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.52" "org.apache.flume.channel.TestBasicChannelSemantics.52.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.68.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.68.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.channel.TestBasicChannelSemantics.68.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.68.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.68.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.channel.TestBasicChannelSemantics.68.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.channel.TestBasicChannelSemantics.68.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.68.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.68" "org.apache.flume.channel.TestBasicChannelSemantics.68.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.69.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.69.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.channel.TestBasicChannelSemantics.69.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.69.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.69.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.channel.TestBasicChannelSemantics.69.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.channel.TestBasicChannelSemantics.69.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.69.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.69" "org.apache.flume.channel.TestBasicChannelSemantics.69.this$0"
reference "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.CensoringInterceptor"
reference "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.Interceptor.Builder"
reference "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.Interceptor"
contain "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.CensoringInterceptor.Builder.Builder(0)"
call "org.apache.flume.interceptor.CensoringInterceptor.Builder.build(0)" "org.apache.flume.interceptor.CensoringInterceptor.CensoringInterceptor(1)"
contain "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.CensoringInterceptor.Builder.build(0)"
contain "org.apache.flume.interceptor.CensoringInterceptor.Builder" "org.apache.flume.interceptor.CensoringInterceptor.Builder.configure(1)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.66.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.66.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.channel.TestBasicChannelSemantics.66.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.66.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.66.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.channel.TestBasicChannelSemantics.66.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.channel.TestBasicChannelSemantics.66.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.66.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.66" "org.apache.flume.channel.TestBasicChannelSemantics.66.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.67.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.67.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.channel.TestBasicChannelSemantics.67.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.67.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.67.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.channel.TestBasicChannelSemantics.67.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.channel.TestBasicChannelSemantics.67.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.67.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.67" "org.apache.flume.channel.TestBasicChannelSemantics.67.this$0"
reference "org.apache.flume.source.TestSyslogParser" "org.apache.flume.source.SyslogParser"
reference "org.apache.flume.source.TestSyslogParser" "org.apache.flume.source.SyslogUtils"
reference "org.apache.flume.source.TestSyslogParser" "org.joda.time.format.DateTimeFormatter"
reference "org.apache.flume.source.TestSyslogParser" "org.joda.time.format.ISODateTimeFormat"
reference "org.apache.flume.source.TestSyslogParser" "com.google.common.base.Charsets"
reference "org.apache.flume.source.TestSyslogParser" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestSyslogParser" "org.apache.flume.Event"
contain "org.apache.flume.source.TestSyslogParser" "org.apache.flume.source.TestSyslogParser.TestSyslogParser(0)"
call "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)" "org.apache.flume.source.SyslogParser.SyslogParser(0)"
call "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)" "org.joda.time.format.ISODateTimeFormat.dateTimeParser(0)"
call "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)" "org.joda.time.format.DateTimeFormatter.parseMillis(1)"
call "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)" "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)"
contain "org.apache.flume.source.TestSyslogParser" "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)"
call "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "org.apache.flume.source.SyslogParser.SyslogParser(0)"
reference "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "com.google.common.collect.Lists.newArrayList(0)"
call "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "org.apache.flume.source.SyslogParser.parseMessage(3)"
call "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "org.apache.flume.Event.getHeaders(0)"
call "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)" "org.apache.flume.Event.getBody(0)"
contain "org.apache.flume.source.TestSyslogParser" "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.Context"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.source.ExecSource"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.channel.ChannelProcessor"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.source.ExecSourceConfigurationConstants"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.Transaction"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.Event"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.lifecycle.LifecycleException"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestExecSource" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestExecSource" "org.apache.flume.source.AbstractSource"
reference "org.apache.flume.source.TestExecSource" "org.apache.commons.io.FileUtils"
reference "org.apache.flume.source.TestExecSource" "org.apache.commons.lang.RandomStringUtils"
reference "org.apache.flume.source.TestExecSource" "org.apache.commons.lang.SystemUtils"
reference "org.apache.flume.source.TestExecSource" "com.google.common.io.Files"
reference "org.apache.flume.source.TestExecSource" "com.google.common.base.Charsets"
call "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
reference "org.apache.flume.source.TestExecSource.TestExecSource(0)" "org.apache.flume.source.TestExecSource.rcs"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.TestExecSource(0)"
reference "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.conf.Configurables.configure(2)"
reference "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.TestExecSource.rcs"
call "org.apache.flume.source.TestExecSource.setUp(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.ExecSource.ExecSource(0)"
reference "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
call "org.apache.flume.source.TestExecSource.setUp(0)" "org.apache.flume.source.AbstractSource.setChannelProcessor(1)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.setUp(0)"
reference "org.apache.flume.source.TestExecSource.tearDown(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.tearDown(0)" "org.apache.flume.source.AbstractSource.stop(0)"
call "org.apache.flume.source.TestExecSource.tearDown(0)" "org.apache.flume.source.AbstractSource.getName(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.tearDown(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(1)"
reference "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
reference "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestExecSource.testProcess(0)" "org.apache.commons.io.FileUtils.checksumCRC32(1)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testProcess(0)"
reference "org.apache.flume.source.TestExecSource.testShellCommandSimple(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShellCommandSimple(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShellCommandSimple(0)"
reference "org.apache.flume.source.TestExecSource.testShellCommandBackTicks(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShellCommandBackTicks(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShellCommandBackTicks(0)"
reference "org.apache.flume.source.TestExecSource.testShellCommandComplex(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShellCommandComplex(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShellCommandComplex(0)"
reference "org.apache.flume.source.TestExecSource.testShellCommandScript(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShellCommandScript(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShellCommandScript(0)"
reference "org.apache.flume.source.TestExecSource.testShellCommandEmbeddingAndEscaping(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShellCommandEmbeddingAndEscaping(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShellCommandEmbeddingAndEscaping(0)"
reference "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
reference "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)" "org.apache.flume.source.AbstractSource.getName(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)"
reference "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
reference "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.flume.source.AbstractSource.stop(0)"
call "org.apache.flume.source.TestExecSource.testBatchTimeout(0)" "org.apache.commons.io.FileUtils.forceDelete(1)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testBatchTimeout(0)"
reference "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
reference "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Event.getBody(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "com.google.common.io.Files.readLines(2)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.commons.io.FileUtils.forceDelete(1)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
reference "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
reference "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.source.AbstractSource.start(0)"
reference "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.source.TestExecSource.channel"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Channel.take(0)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Event.getBody(0)"
reference "org.apache.flume.source.TestExecSource.testRestart(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.source.TestExecSource.testRestart(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testRestart(0)"
reference "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
call "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.source.TestExecSource.exec(1)"
reference "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.source.TestExecSource.context"
call "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.Context.put(2)"
reference "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.source.TestExecSource.source"
call "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.source.AbstractSource.start(0)"
call "org.apache.flume.source.TestExecSource.testShutdown(0)" "org.apache.flume.source.AbstractSource.stop(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.testShutdown(0)"
call "org.apache.flume.source.TestExecSource.exec(1)" "com.google.common.collect.Lists.newArrayList(0)"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.exec(1)"
reference "org.apache.flume.source.TestExecSource.source" "org.apache.flume.source.AbstractSource"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.source"
reference "org.apache.flume.source.TestExecSource.channel" "org.apache.flume.Channel"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.channel"
reference "org.apache.flume.source.TestExecSource.context" "org.apache.flume.Context"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.context"
reference "org.apache.flume.source.TestExecSource.rcs" "org.apache.flume.ChannelSelector"
contain "org.apache.flume.source.TestExecSource" "org.apache.flume.source.TestExecSource.rcs"
reference "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.SimpleTextLineEventReader"
reference "org.apache.flume.client.avro.TestBufferedLineReader" "com.google.common.io.Files"
reference "org.apache.flume.client.avro.TestBufferedLineReader" "com.google.common.base.Charsets"
reference "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestSpoolingFileLineReader"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.TestBufferedLineReader(0)"
call "org.apache.flume.client.avro.TestBufferedLineReader.before(0)" "com.google.common.io.Files.createTempDir(0)"
reference "org.apache.flume.client.avro.TestBufferedLineReader.before(0)" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.before(0)"
reference "org.apache.flume.client.avro.TestBufferedLineReader.after(0)" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.after(0)"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
reference "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "com.google.common.base.Charsets.UTF_8"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "com.google.common.io.Files.write(3)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)"
call "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)" "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)"
contain "org.apache.flume.client.avro.TestBufferedLineReader" "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
reference "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.reader"
reference "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.charset"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
call "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAuthType(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getCookies(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getDateHeader(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeader(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeaders(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeaderNames(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getIntHeader(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getMethod(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getPathInfo(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getPathTranslated(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContextPath(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getQueryString(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteUser(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isUserInRole(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getUserPrincipal(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestedSessionId(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestURI(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestURL(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServletPath(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getSession(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getSession(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdValid(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromCookie(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromURL(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromUrl(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAttribute(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAttributeNames(0)"
reference "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getCharacterEncoding(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.charset"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getCharacterEncoding(0)"
reference "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.setCharacterEncoding(1)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.charset"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.setCharacterEncoding(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContentLength(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContentType(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getInputStream(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameter(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterNames(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterValues(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterMap(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getProtocol(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getScheme(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServerName(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServerPort(0)"
reference "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getReader(0)" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.reader"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getReader(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteAddr(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteHost(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.setAttribute(2)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.removeAttribute(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocale(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocales(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isSecure(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestDispatcher(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRealPath(1)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemotePort(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalName(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalAddr(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalPort(0)"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.reader"
contain "org.apache.flume.source.http.FlumeHttpServletRequestWrapper" "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.charset"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1" "com.google.gson.reflect.TypeToken"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.{...}" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.this$0"
call "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.{...}" "com.google.gson.reflect.TypeToken.TypeToken(0)"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.{...}"
reference "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.this$0" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer"
contain "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1" "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.this$0"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.PollableSourceRunner"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.Context"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.channel.ReplicatingChannelSelector"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.Channel"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.source.TestPollableSourceRunner" "com.google.common.collect.Lists"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.ChannelSelector"
reference "org.apache.flume.source.TestPollableSourceRunner" "org.slf4j.LoggerFactory"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.TestPollableSourceRunner(0)"
call "org.apache.flume.source.TestPollableSourceRunner.setUp(0)" "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)"
reference "org.apache.flume.source.TestPollableSourceRunner.setUp(0)" "org.apache.flume.source.TestPollableSourceRunner.sourceRunner"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.setUp(0)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "com.google.common.collect.Lists.newArrayList(1)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.ChannelSelector.setChannels(1)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.source.TestPollableSourceRunner.1.{...}"
reference "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.source.TestPollableSourceRunner.sourceRunner"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.source.PollableSourceRunner.setSource(1)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.source.PollableSourceRunner.start(0)"
call "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)" "org.apache.flume.source.PollableSourceRunner.stop(0)"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.access$000(0)"
call "org.apache.flume.source.TestPollableSourceRunner.static {...}" "org.slf4j.LoggerFactory.getLogger(1)"
reference "org.apache.flume.source.TestPollableSourceRunner.static {...}" "org.apache.flume.source.TestPollableSourceRunner.logger"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.static {...}"
reference "org.apache.flume.source.TestPollableSourceRunner.logger" "org.slf4j.Logger"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.logger"
reference "org.apache.flume.source.TestPollableSourceRunner.sourceRunner" "org.apache.flume.source.PollableSourceRunner"
contain "org.apache.flume.source.TestPollableSourceRunner" "org.apache.flume.source.TestPollableSourceRunner.sourceRunner"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.MemoryChannel"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.Context"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.ChannelException"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestMemoryChannel" "byte[]"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.event.EventBuilder"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.conf.Configurables"
reference "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.Channel"
reference "org.apache.flume.channel.TestMemoryChannel" "org.fest.reflect.core.Reflection"
reference "org.apache.flume.channel.TestMemoryChannel" "org.fest.reflect.field.FieldName"
reference "org.apache.flume.channel.TestMemoryChannel" "org.fest.reflect.field.FieldType"
reference "org.apache.flume.channel.TestMemoryChannel" "org.fest.reflect.field.Invoker"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.TestMemoryChannel(0)"
call "org.apache.flume.channel.TestMemoryChannel.setUp(0)" "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
reference "org.apache.flume.channel.TestMemoryChannel.setUp(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.setUp(0)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Context.Context(0)"
reference "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)" "org.apache.flume.Channel.put(1)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)" "org.apache.flume.Channel.take(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.rollback(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Transaction.close(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Channel.stop(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Channel.start(0)"
call "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Channel.getTransaction(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Transaction.begin(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.event.EventBuilder.withBody(1)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Channel.put(1)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Transaction.commit(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.apache.flume.Context.putAll(1)"
reference "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.apache.flume.channel.TestMemoryChannel.channel"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.apache.flume.conf.Configurables.configure(2)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.fest.reflect.core.Reflection.field(1)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.fest.reflect.field.FieldName.ofType(1)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.fest.reflect.field.FieldType.in(1)"
call "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)" "org.fest.reflect.field.Invoker.get(0)"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)"
reference "org.apache.flume.channel.TestMemoryChannel.channel" "org.apache.flume.Channel"
contain "org.apache.flume.channel.TestMemoryChannel" "org.apache.flume.channel.TestMemoryChannel.channel"
reference "org.apache.flume.channel.MockEvent" "org.apache.flume.Event"
call "org.apache.flume.channel.MockEvent.MockEvent(0)" "org.apache.flume.channel.MockEvent.MockEvent(2)"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.MockEvent(0)"
reference "org.apache.flume.channel.MockEvent.MockEvent(2)" "org.apache.flume.channel.MockEvent.headers"
reference "org.apache.flume.channel.MockEvent.MockEvent(2)" "org.apache.flume.channel.MockEvent.body"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.MockEvent(2)"
reference "org.apache.flume.channel.MockEvent.getHeaders(0)" "org.apache.flume.channel.MockEvent.headers"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.getHeaders(0)"
reference "org.apache.flume.channel.MockEvent.setHeaders(1)" "org.apache.flume.channel.MockEvent.headers"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.setHeaders(1)"
reference "org.apache.flume.channel.MockEvent.getBody(0)" "org.apache.flume.channel.MockEvent.body"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.getBody(0)"
reference "org.apache.flume.channel.MockEvent.setBody(1)" "org.apache.flume.channel.MockEvent.body"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.setBody(1)"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.headers"
reference "org.apache.flume.channel.MockEvent.body" "byte[]"
contain "org.apache.flume.channel.MockEvent" "org.apache.flume.channel.MockEvent.body"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.60.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.60.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.channel.TestBasicChannelSemantics.60.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.60.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.60.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.channel.TestBasicChannelSemantics.60.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.channel.TestBasicChannelSemantics.60.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.60.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.60" "org.apache.flume.channel.TestBasicChannelSemantics.60.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.61.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.61.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.channel.TestBasicChannelSemantics.61.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.61.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.61.run(0)" "org.apache.flume.Transaction.commit(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.channel.TestBasicChannelSemantics.61.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.channel.TestBasicChannelSemantics.61.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.61.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.61" "org.apache.flume.channel.TestBasicChannelSemantics.61.this$0"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.EventDeliveryException"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.AbstractSink"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.Sink.Status"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.Event"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.Channel"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.Sink"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)" "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.events"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.fail"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.id"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.events"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getId(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.id"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getId(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.fail"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.fail"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getChannel(0)"
call "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.Channel.take(0)"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.Sink.Status.BACKOFF"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.events"
reference "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)" "org.apache.flume.Sink.Status.READY"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.id"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.events"
contain "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink" "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.fail"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.64.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.64.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.channel.TestBasicChannelSemantics.64.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.64.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.64.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.channel.TestBasicChannelSemantics.64.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.channel.TestBasicChannelSemantics.64.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.64.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.64" "org.apache.flume.channel.TestBasicChannelSemantics.64.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.65.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.65.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.channel.TestBasicChannelSemantics.65.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.65.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.65.run(0)" "org.apache.flume.Transaction.close(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.channel.TestBasicChannelSemantics.65.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.channel.TestBasicChannelSemantics.65.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.65.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.65" "org.apache.flume.channel.TestBasicChannelSemantics.65.this$0"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.Context"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.FailoverSinkProcessor"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.DefaultSinkFactory"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.LoadBalancingSinkProcessor"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.SinkFactory"
reference "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.SinkProcessorFactory"
contain "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.SinkProcessorFactoryTest.SinkProcessorFactoryTest(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)" "org.apache.flume.sink.DefaultSinkFactory.DefaultSinkFactory(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)" "org.apache.flume.SinkFactory.create(2)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)" "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
contain "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)" "org.apache.flume.Context.Context(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)" "org.apache.flume.Context.put(2)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)" "org.apache.flume.sink.DefaultSinkFactory.DefaultSinkFactory(0)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)" "org.apache.flume.SinkFactory.create(2)"
call "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)" "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
contain "org.apache.flume.sink.SinkProcessorFactoryTest" "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.62.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.62.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.channel.TestBasicChannelSemantics.62.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.62.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.62.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.channel.TestBasicChannelSemantics.62.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.channel.TestBasicChannelSemantics.62.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.62.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.62" "org.apache.flume.channel.TestBasicChannelSemantics.62.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.channel.TestBasicChannelSemantics"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.Transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.63.this$0"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63.{...}" "org.apache.flume.channel.TestBasicChannelSemantics.63.val$transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.channel.TestBasicChannelSemantics.63.{...}"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63.run(0)" "org.apache.flume.channel.TestBasicChannelSemantics.63.val$transaction"
call "org.apache.flume.channel.TestBasicChannelSemantics.63.run(0)" "org.apache.flume.Transaction.rollback(0)"
contain "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.channel.TestBasicChannelSemantics.63.run(0)"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63.val$transaction" "org.apache.flume.Transaction"
contain "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.channel.TestBasicChannelSemantics.63.val$transaction"
reference "org.apache.flume.channel.TestBasicChannelSemantics.63.this$0" "org.apache.flume.channel.TestBasicChannelSemantics"
contain "org.apache.flume.channel.TestBasicChannelSemantics.63" "org.apache.flume.channel.TestBasicChannelSemantics.63.this$0"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.tearDown(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader(1)"
CGNodeType Method "org.joda.time.DateTime.isAfter(1)"
CGNodeType Method "org.mortbay.jetty.Server.join(0)"
CGNodeType Method "org.apache.http.StatusLine.getStatusCode(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.spyAndConfigure(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.values(0)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.clean(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.build(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.19.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.setChannelSize(1)"
CGNodeType Method "org.apache.flume.source.SyslogParser.1.load(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleAware.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.getName(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader10(0)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.getBaseDirectory(0)"
CGNodeType Method "org.apache.flume.tools.TestTimestampRoundDownUtil.TestTimestampRoundDownUtil(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalName(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testClose3(0)"
CGNodeType Method "org.apache.flume.source.AbstractSource.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$000(1)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.afterReopen(0)"
CGNodeType Method "com.google.common.cache.CacheBuilder.build(1)"
CGNodeType Method "org.apache.flume.channel.MockChannel.take(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.1.static {...}"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.take(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.get(1)"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.setUp(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.mark(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.AbstractChannelSelector(0)"
CGNodeType Method "org.apache.flume.source.AbstractEventDrivenSource.AbstractEventDrivenSource(0)"
CGNodeType Method "org.apache.thrift.transport.TNonblockingServerSocket.TNonblockingServerSocket(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.ConsumeOrder(2)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode.valueOf(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.44.{...}"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShellCommandScript(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.intercept(1)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.rollback(0)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.TestBasicChannelSemantics(0)"
CGNodeType Method "org.apache.flume.source.MockSource.setName(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.tell(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.get(1)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.start(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.get(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequireValidPatternInConfiguration(0)"
CGNodeType Method "org.apache.thrift.transport.TFastFramedTransport.Factory.Factory(0)"
CGNodeType Method "org.apache.flume.serialization.LengthMeasurable.length(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getEvents(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromCookie(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.Constants.static {...}"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.getState(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getChannelSize(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.setMode(1)"
CGNodeType Method "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.TestHeaderAndBodyTextEventSerializer(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorChain.initialize(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.append(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRuntimeException(1)"
CGNodeType Method "org.apache.flume.conf.source.SourceType.equals(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getEventAcceptedCount(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.read(3)"
CGNodeType Method "org.apache.flume.sink.AvroSink.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.49.run(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.ResultWrapper(2)"
CGNodeType Method "org.joda.time.DateTime.toString(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.65.{...}"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testDateFormatHours(0)"
CGNodeType Method "org.apache.commons.cli.CommandLine.hasOption(1)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testMultipleLargeEvents(0)"
CGNodeType Method "org.apache.flume.source.TestSequenceGeneratorSource.setUp(0)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.TestLineDeserializer(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.AdvancedChannelPipelineFactory(7)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.MockAvroServer.appendBatch(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$000(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.formulateShellCommand(2)"
CGNodeType Method "com.google.common.base.Optional.isPresent(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.SpoolDirectoryRunnable(2)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.incrPosition(2)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback6(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.49.{...}"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicSpooling(0)"
CGNodeType Method "com.google.gson.reflect.TypeToken.TypeToken(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testTrace(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.CountingLifecycleAware(0)"
CGNodeType Method "org.apache.flume.Event.getHeaders(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.start(0)"
CGNodeType Method "org.apache.flume.SinkFactory.create(2)"
CGNodeType Method "org.mortbay.jetty.nio.SelectChannelConnector.SelectChannelConnector(0)"
CGNodeType Method "org.apache.flume.sink.TestLoggerSink.TestLoggerSink(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.1.{...}"
CGNodeType Method "org.apache.avro.file.DataFileWriter.append(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.PollingRunner(0)"
CGNodeType Method "org.apache.flume.api.ThriftTestingSource.setDelay(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStopTime(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(1)"
CGNodeType Method "org.apache.mina.core.session.IoSession.setAttribute(2)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.allocate(1)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShellCommandSimple(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.NoOpTransaction(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestChannel(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.60.{...}"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.tell(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.4.{...}"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testFullChannel(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.retireCurrentFile(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.fields(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testHappyPath2(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$000(2)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.3.1.{...}"
CGNodeType Method "org.apache.flume.serialization.PositionTracker.getTarget(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.start(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.getParser(0)"
CGNodeType Method "org.apache.flume.source.AbstractSource.start(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.take(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.28.{...}"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.toString(0)"
CGNodeType Method "org.apache.avro.generic.GenericData.deepCopy(2)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.access$100(1)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.flip(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogTCPSource(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.TestFailoverSinkProcessor(0)"
CGNodeType Method "org.apache.flume.interceptor.TestStaticInterceptor.testReplace(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.getSourceCounter(0)"
CGNodeType Method "org.apache.flume.sink.FixedOrderSelector.getSinks(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getContext(2)"
CGNodeType Method "org.apache.flume.source.NetcatSource.configure(1)"
CGNodeType Method "org.apache.flume.Event.setHeaders(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(1)"
CGNodeType Method "org.apache.flume.interceptor.Interceptor.initialize(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLength(0)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShellCommandBackTicks(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$302(2)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getFacility(0)"
CGNodeType Method "org.apache.flume.source.ExecSourceConfigurationConstants.ExecSourceConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.stop(0)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.access$300(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader9(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.StderrReader.setDaemon(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$700(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.static {...}"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.testDoStopThrowsException(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.SpoolDirectorySource(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.stop(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.createTransaction(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitAlways(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.allocate(2)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State.State(2)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.put(1)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelSelectorType.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.access$000(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.read(3)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.close(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.Purger(0)"
CGNodeType Method "org.apache.flume.event.SimpleEvent.setBody(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testException(2)"
CGNodeType Method "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.IpFilterRuleHandler(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.stop(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventReceivedCount(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.setSinks(1)"
CGNodeType Method "org.apache.http.client.methods.HttpPost.HttpPost(1)"
CGNodeType Method "org.apache.flume.Transaction.TransactionState.TransactionState(2)"
CGNodeType Method "org.apache.flume.source.SyslogSourceConfigurationConstants.SyslogSourceConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.57.run(0)"
CGNodeType Method "org.apache.flume.source.SyslogParser.access$000(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage(2)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.initialize(0)"
CGNodeType Method "com.google.common.io.Files.equal(2)"
CGNodeType Method "org.joda.time.format.DateTimeFormatter.parseMillis(1)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactory.SinkProcessorFactory(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.ParsedBuffer(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.read(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.5.{...}"
CGNodeType Method "org.apache.flume.conf.sink.SinkProcessorType.getSinkProcessorClassName(0)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.VersionInfo(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel9(0)"
CGNodeType Method "org.apache.flume.TestContext.testSubProperties(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(1)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.getFileIndex(0)"
CGNodeType Method "org.apache.flume.sink.TestDefaultSinkFactory.testSinkCreation(0)"
CGNodeType Method "org.apache.avro.file.CodecFactory.fromString(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.checkHostAndPort(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.parseHeaders(1)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.setBaseDirectory(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.setSinks(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getSrcChecksum(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.stop(0)"
CGNodeType Method "org.apache.flume.Sink.Status[].clone(0)"
CGNodeType Method "org.apache.flume.source.MockSource.stop(0)"
CGNodeType Method "org.apache.avro.Schema.setFields(1)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.processEvent(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.setUp(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.toString(0)"
CGNodeType Method "org.apache.flume.VersionAnnotation.branch(0)"
CGNodeType Method "org.apache.flume.PollableSource.stop(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.getName(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent2(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterRollback(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.TransferStateFileMeta(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testByteCapacityOverload(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.setUp(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.getEvents(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.valueOf(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.getType(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.getDirectory(0)"
CGNodeType Method "org.apache.flume.source.SyslogParser.parseMessage(3)"
CGNodeType Method "org.joda.time.DateTime.getMillis(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContentType(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.replaceShorthand(2)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.setCodec(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.{...}"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.Builder.build(2)"
CGNodeType Method "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(2)"
CGNodeType Method "org.mortbay.jetty.Server.stop(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.access$000(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testBegin(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.CensoringInterceptor(1)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testDeserializarion(0)"
CGNodeType Method "org.apache.flume.sink.NullSink.static {...}"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutMatchIds(0)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.testBatch(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.dispose(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.readLine(2)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$502(2)"
CGNodeType Method "org.apache.flume.Transaction.commit(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.getSessionConfig(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.interruptTest(1)"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.put(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSourceCounter(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.createConnection(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testBasicExceptions(1)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.isStarted(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getEventPutSuccessCount(0)"
CGNodeType Method "org.apache.avro.ipc.NettyTransceiver.NettyTransceiver(1)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.CensoringInterceptor(0)"
CGNodeType Method "org.apache.flume.interceptor.TestTimestampInterceptor.TestTimestampInterceptor(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.Mode(2)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.setSinks(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionFailed(1)"
CGNodeType Method "org.apache.flume.Context.putAll(1)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testRestart(0)"
CGNodeType Method "org.apache.avro.io.DecoderFactory.get(0)"
CGNodeType Method "org.apache.flume.TestCounterGroup.testAddAndGet(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern(1)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.getRequiredChannels(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.53.{...}"
CGNodeType Method "org.apache.flume.Sink.Status.values(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.2.{...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeader(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getChannelFillPercentage(0)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.close(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.2.getPipeline(0)"
CGNodeType Method "org.apache.flume.TestCounterGroup.testGet(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.ThriftSource(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.getSchema(0)"
CGNodeType Method "org.apache.flume.PollableSource.Status.Status(2)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.replaceShorthand(8)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientOnly(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchUnderflow(1)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.afterCreate(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.ChannelUtils(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getRandomName(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.parseCommandLine(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.35.run(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.BucketPath(0)"
CGNodeType Method "org.apache.flume.source.AbstractSource.stop(0)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getPackage(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainSuccess(1)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testPutFilenameHeader(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.replaceShorthand(7)"
CGNodeType Method "org.apache.avro.io.EncoderFactory.binaryEncoder(2)"
CGNodeType Method "org.apache.flume.source.TestExecSource.setUp(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesYOUNGEST(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.3.run(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSupervise(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getBatchUnderflowCount(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableEventReader.commit(0)"
CGNodeType Method "org.apache.flume.instrumentation.util.JMXTestUtils.JMXTestUtils(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.values(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.createServer(1)"
CGNodeType Method "org.apache.flume.channel.DefaultChannelFactory.static {...}"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.stop(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.4.call(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(14)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.46.run(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.fill(2)"
CGNodeType Method "org.mortbay.jetty.security.SecurityHandler.setConstraintMappings(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode[].clone(0)"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.testProcess(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.68.run(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.LoadBalancingSinkProcessor(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.directoryFilter(0)"
CGNodeType Method "org.apache.flume.source.TestDefaultSourceFactory.testSourceCreation(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.24.run(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.setHandler(1)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ReliableSpoolingFileEventReader(15)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.name(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.AvroCLIClient(0)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.process(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testSingleEvent(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.read(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setChannel(1)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.replaceShorthand(5)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.static {...}"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.access$200(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback2(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.getSourcePort(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.intercept(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.toString(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestRfc3164HeaderApacheLogWithNulls(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitorService.stop(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.51.{...}"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getUrl(0)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testCustomHeader(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.54.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeAttempt(1)"
CGNodeType Method "org.mortbay.jetty.security.ConstraintMapping.ConstraintMapping(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.ResettableTestStringInputStream(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.37.{...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServletPath(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.JSONHandler(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.1.getType(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.stop(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestSyslogUtils(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.13.run(0)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.getCurrentFile(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.start(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.4.run(0)"
CGNodeType Method "org.mortbay.jetty.Server.isStarted(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getAttribute(2)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(3)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.mark(0)"
CGNodeType Method "org.apache.avro.ipc.NettyTransceiver.close(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementBatchUnderflowCount(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.initialValue(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.configure(1)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.configure(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getUserPrincipal(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doTake(0)"
CGNodeType Method "org.slf4j.Logger.isInfoEnabled(0)"
CGNodeType Method "org.apache.flume.Context.getBoolean(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel1(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testWrongThread(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType.valueOf(1)"
CGNodeType Method "com.google.gson.GsonBuilder.create(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doCommit(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.write(2)"
CGNodeType Method "org.apache.flume.client.avro.SimpleTextLineEventReader.close(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogParser.testRfc5424DateParsing(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemotePort(0)"
CGNodeType Method "org.apache.http.client.methods.HttpPost.setEntity(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSource(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.setCharacterEncoding(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isSecure(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.SinkRunner.getPolicy(0)"
CGNodeType Method "org.apache.flume.Context.getBoolean(2)"
CGNodeType Method "org.apache.flume.serialization.TestSyslogAvroEventSerializer.generateSyslogEvents(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getProtocol(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.6.run(0)"
CGNodeType Method "org.apache.flume.conf.sink.SinkGroupConfiguration.SinkGroupConfiguration(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.sink.NullSink.toString(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleAware.start(0)"
CGNodeType Method "org.apache.flume.sink.NullSink.stop(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.MultiportSyslogHandler(8)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.32.{...}"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode.Mode(2)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.setUp(0)"
CGNodeType Method "org.apache.commons.lang.RandomStringUtils.randomAlphanumeric(1)"
CGNodeType Method "org.apache.flume.api.ThriftTestingSource.ThriftTestingSource(2)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.values(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getConnectionClosedCount(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.toString(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testGoodEventBadEvent(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.isValid(2)"
CGNodeType Method "org.apache.flume.source.TestStressSource.getEvent(1)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.testSimple(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.writeBigBadUtf8Sequence(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testRuntimeException(0)"
CGNodeType Method "org.apache.flume.serialization.TestDurablePositionTracker.testGoodTrackerFile(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.FailedSink(3)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getLastModified(0)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.name(0)"
CGNodeType Method "org.apache.flume.Event.getBody(0)"
CGNodeType Method "com.google.common.collect.ImmutableMap.of(2)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.Constants.Constants(0)"
CGNodeType Method "org.apache.commons.lang.StringUtils.isEmpty(1)"
CGNodeType Method "org.apache.flume.annotations.InterfaceAudience.InterfaceAudience(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.generateRule(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.RandomOrderSinkSelector(1)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorChain.InterceptorChain(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.1.{...}"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.process(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.access$100(1)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.doProcess(0)"
CGNodeType Method "junit.framework.Assert.assertNotNull(1)"
CGNodeType Method "org.apache.flume.CounterGroup.CounterGroup(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.static {...}"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.Constants(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.access$000(1)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.setChannel(1)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.parseRfc3164Date(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.setKeepFields(1)"
CGNodeType Method "org.apache.avro.ipc.specific.SpecificRequestor.getClient(2)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.BasicTransactionSemantics(0)"
CGNodeType Method "com.google.common.util.concurrent.ThreadFactoryBuilder.build(0)"
CGNodeType Method "com.google.common.base.Preconditions.checkNotNull(3)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.Constants.Constants(0)"
CGNodeType Method "org.apache.flume.SinkRunner.start(0)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.MultiplexingChannelSelector(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode.static {...}"
CGNodeType Method "org.apache.flume.interceptor.InterceptorChain.intercept(1)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setFacility(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType[].clone(0)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.testNotStarted(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSrcCounterState(7)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getEventDrainAttemptCount(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithIllegalRegex(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.commit(0)"
CGNodeType Method "org.apache.flume.channel.ChannelSelectorFactory.ChannelSelectorFactory(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.isStarted(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.setOpenConnectionCount(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testReset(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.tearDown(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.stop(0)"
CGNodeType Method "org.fest.reflect.field.Invoker.get(0)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.testSelection(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getEventTakeAttemptCount(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.setUp(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testFileChangesDuringRead(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.close(0)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.getOptionalChannels(1)"
CGNodeType Method "org.apache.flume.serialization.TransientPositionTracker.storePosition(1)"
CGNodeType Method "org.apache.flume.source.TestExecSource.runTestShellCmdHelper(3)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getVersion(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateLatin1InvalidSequence(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.35.{...}"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.SyslogTcpSource(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.configure(1)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.stop(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.put(1)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getOutputStream(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setKeepFields(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.get(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy[].clone(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndDifferentFile(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinPersistentFailure(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.supportsReopen(0)"
CGNodeType Method "org.apache.flume.SystemClock.SystemClock(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.62.{...}"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath(1)"
CGNodeType Method "org.apache.flume.Channel.put(1)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.intercept(1)"
CGNodeType Method "com.google.common.base.Preconditions.checkNotNull(1)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsAtFileBoundary(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAttribute(1)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.beforeClose(0)"
CGNodeType Method "org.apache.flume.source.StressSource.process(0)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.main(1)"
CGNodeType Method "com.google.common.base.Optional.get(0)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.TestBufferedLineReader(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeaderNames(0)"
CGNodeType Method "org.apache.flume.PollableSource.getName(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.configure(1)"
CGNodeType Method "org.jboss.netty.buffer.ChannelBuffer.writeBytes(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.seek(1)"
CGNodeType Method "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvents(1)"
CGNodeType Method "org.apache.flume.conf.sink.SinkGroupConfiguration.configure(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingIgnore(0)"
CGNodeType Method "org.apache.avro.io.BinaryEncoder.flush(0)"
CGNodeType Method "org.apache.flume.PollableSource.Status.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.valueOf(1)"
CGNodeType Method "org.apache.flume.source.TestSequenceGeneratorSource.testProcess(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.getName(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.static {...}"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.stop(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.stop(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.testWaitForState(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterMap(0)"
CGNodeType Method "com.google.common.base.Preconditions.checkNotNull(2)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.1.1.run(0)"
CGNodeType Method "org.apache.flume.VersionAnnotation.url(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testSslWithCompression(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.11.{...}"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder[].clone(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testTransact(3)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.getAcceptedIssuers(0)"
CGNodeType Method "org.apache.flume.SinkProcessor.start(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doRollback(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getCookies(0)"
CGNodeType Method "org.apache.flume.conf.Configurables.Configurables(0)"
CGNodeType Method "org.apache.flume.channel.DefaultChannelFactory.DefaultChannelFactory(0)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.static {...}"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doBegin(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus.SyslogStatus(3)"
CGNodeType Method "org.apache.avro.Schema.toString(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$000(1)"
CGNodeType Method "org.apache.flume.tools.TimestampRoundDownUtil.roundDownField(3)"
CGNodeType Method "org.apache.flume.source.ThriftSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.afterCreate(0)"
CGNodeType Method "org.apache.avro.file.DataFileReader.previousSync(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.67.{...}"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.1.run(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(3)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.compareTo(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.findFreePort(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.readLine(0)"
CGNodeType Method "org.apache.flume.FlumeException.FlumeException(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testTransact(2)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getName(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType[].clone(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getFile(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.HTTPSource(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.start(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2.accept(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.static {...}"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.process(0)"
CGNodeType Method "org.apache.flume.source.AbstractSource.setName(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.10.run(0)"
CGNodeType Method "org.apache.commons.cli.HelpFormatter.HelpFormatter(0)"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.PollingRunner(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionClosed(1)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.escapeString(2)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.RegexExtractorInterceptor(2)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.commit(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.static {...}"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.static {...}"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.tearDown(0)"
CGNodeType Method "org.apache.flume.api.RpcClientFactory.getInstance(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader2(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DeletePolicy(2)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.ReplicatingChannelSelector(0)"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getType(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.mark(0)"
CGNodeType Method "org.apache.avro.file.DataFileReader.DataFileReader(2)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactory.getProcessor(2)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.configure(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testInvalidIpFilter(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType.getBuilderClass(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.setAttribute(2)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.access$100(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.2.{...}"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setEventSize(1)"
CGNodeType Method "org.apache.flume.channel.MockChannel.createMockChannel(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.static {...}"
CGNodeType Method "com.google.common.collect.Lists.newArrayList(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.25.1.{...}"
CGNodeType Method "org.apache.flume.channel.DefaultChannelFactory.getClass(1)"
CGNodeType Method "com.google.common.collect.ImmutableMap.containsKey(1)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.getDefaultDirectMemorySize(0)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.appendTo(1)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.setMeta(2)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.doRequest(3)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.stop(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.14.{...}"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.start(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testSingleHTMLEvent(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.1.{...}"
CGNodeType Method "org.apache.flume.source.AvroSource.access$100(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.TestAvroSource(0)"
CGNodeType Method "org.apache.flume.PollableSource.Status[].clone(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorChain.close(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnServerOnly(0)"
CGNodeType Method "com.google.common.collect.Lists.newArrayList(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.configure(1)"
CGNodeType Method "org.apache.flume.FlumeException.FlumeException(2)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.hasFatalError(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.checkHeader(5)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.TestMemoryChannelTransaction(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testInvalid(0)"
CGNodeType Method "org.apache.flume.tools.TestVersionInfo.static {...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.30.{...}"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testSimpleUTF16(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.readEventsForFilesInDir(3)"
CGNodeType Method "org.apache.flume.source.AvroSource.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.conf.sink.SinkProcessorType.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.MockEvent.getHeaders(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableEventReader.readEvents(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.StderrReader.StderrReader(2)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.informSinkFailed(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.append(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.increment(1)"
CGNodeType Method "org.apache.flume.EventDeliveryException.EventDeliveryException(1)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.create(2)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.serialize(1)"
CGNodeType Method "org.apache.flume.CounterGroup.get(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.static {...}"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.run(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(3)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.escapeString(5)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.32.run(0)"
CGNodeType Method "org.apache.flume.source.TestExecSource.TestExecSource(0)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.16.{...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getStartTime(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.getBuilderClass(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowEmptyNames(0)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testDateFormatTimeZone(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionCreated(1)"
CGNodeType Method "org.apache.flume.event.JSONEvent.JSONEvent(0)"
CGNodeType Method "org.apache.avro.generic.GenericDatumWriter.write(2)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.close(0)"
CGNodeType Method "org.apache.flume.EventDeliveryException.EventDeliveryException(2)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.initUtf8DecodeTest(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.19.{...}"
CGNodeType Method "org.apache.flume.source.TestAvroSource.doIpFilterTest(4)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testHappyPath5(0)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.initReader(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.getProcessor(2)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testGoodEventGoodEvent(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.take(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.setChannels(1)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.process(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.LifecycleController(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.43.run(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerFactory.EventDeserializerFactory(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.setSinks(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.toString(0)"
CGNodeType Method "com.google.common.base.Joiner.on(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.2.run(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.seek(1)"
CGNodeType Method "org.apache.flume.interceptor.TestStaticInterceptor.TestStaticInterceptor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.68.{...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.65.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getBatchCompleteCount(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.21.run(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$100(1)"
CGNodeType Method "org.apache.flume.tools.HTTPServerConstraintUtil.enforceConstraints(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelProcessorCounter.ChannelProcessorCounter(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionRolledBack(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getEventReceivedCount(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.static {...}"
CGNodeType Method "org.joda.time.format.DateTimeFormat.forPattern(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.reset(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.checkServerTrusted(2)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.static {...}"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testNullEmptyEvent(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getConnectionCreatedCount(0)"
CGNodeType Method "org.mockito.Mockito.mock(1)"
CGNodeType Method "org.apache.flume.SinkRunner.getLifecycleState(0)"
CGNodeType Method "org.jboss.netty.channel.Channel.close(0)"
CGNodeType Method "org.apache.flume.source.TestSequenceGeneratorSource.testLifecycle(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcEventAcceptedCount(1)"
CGNodeType Method "org.apache.thrift.server.TServer.AbstractServerArgs.protocolFactory(1)"
CGNodeType Method "org.apache.flume.sink.AvroSink.setChannel(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.getOffset(0)"
CGNodeType Method "org.jboss.netty.handler.codec.compression.ZlibDecoder.ZlibDecoder(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.static {...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestURL(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$400(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.run(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.static {...}"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollableSourceRunner(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.createSinkIterator(0)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testDateRace(0)"
CGNodeType Method "org.jboss.netty.handler.ipfilter.PatternRule.PatternRule(2)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameter(1)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.reset(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.waitForOneOf(2)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.getStartException(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.setup(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testFail(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.configureSource(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldestWithLexicographicalComparision(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.take(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.56.run(0)"
CGNodeType Method "junit.framework.Assert.assertFalse(2)"
CGNodeType Method "org.apache.flume.SourceRunner.SourceRunner(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getStopTime(0)"
CGNodeType Method "org.jboss.netty.bootstrap.ConnectionlessBootstrap.setOption(2)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.1.doConfigure(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkConnectionClosed(1)"
CGNodeType Method "org.apache.flume.source.ThriftSource.1.run(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxnRollBack(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.increment(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getStartTime(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.testAppendBigBatch(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF16(0)"
CGNodeType Method "org.apache.flume.TestCounterGroup.testGetCounter(0)"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.start(0)"
CGNodeType Method "org.apache.commons.codec.binary.Hex.encodeHexString(1)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.DataFileWriter(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testReset(0)"
CGNodeType Method "org.joda.time.format.ISODateTimeFormat.dateTimeParser(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.MonitorRunnable(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.1.{...}"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.MockEvent(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.readEvents(1)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.static {...}"
CGNodeType Method "org.apache.flume.serialization.PositionTracker.getPosition(0)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactory.static {...}"
CGNodeType Method "org.apache.avro.io.EncoderFactory.get(0)"
CGNodeType Method "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory.DefaultIoSessionDataStructureFactory(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementAppendAcceptedCount(0)"
CGNodeType Method "org.apache.flume.client.avro.SimpleTextLineEventReader.SimpleTextLineEventReader(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.valueOf(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.initialize(0)"
CGNodeType Method "org.apache.flume.source.avro.AvroFlumeEvent.setHeaders(1)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerNullCompression(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.access$300(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.setUp(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.25.{...}"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError.TestError(0)"
CGNodeType Method "org.apache.avro.ipc.NettyServer.NettyServer(2)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testOptions(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerFactory.static {...}"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.1.run(0)"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.take(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.setChannelCapacity(1)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.initialize(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.createGangliaMessage31(2)"
CGNodeType Method "com.google.common.base.Preconditions.checkState(2)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.access$100(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.take(0)"
CGNodeType Method "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampSeconds(2)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.setName(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.26.run(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterTakeCommit(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getReader(0)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.initializeRpcClient(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.close(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testTake3(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.createServerSSLContext(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.2.{...}"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.getChannelListFromNames(2)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.1.{...}"
CGNodeType Method "org.apache.flume.conf.sink.SinkProcessorType.equals(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsAcrossFileBoundary(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.incFails(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testPutBasenameHeader(0)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.stop(0)"
CGNodeType Method "org.apache.flume.source.avro.AvroFlumeEvent.getHeaders(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getMessage(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.flushEventBatch(1)"
CGNodeType Method "com.google.common.base.Preconditions.checkState(3)"
CGNodeType Method "org.apache.avro.file.DataFileReader.getSchema(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testSslProcess(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testSeek(0)"
CGNodeType Method "org.apache.flume.Event.setBody(1)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroupsIgnoringMissingIds(0)"
CGNodeType Method "org.apache.flume.Context.getLong(1)"
CGNodeType Method "org.slf4j.Logger.error(1)"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.access$202(2)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.stop(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonSslServer(0)"
CGNodeType Method "org.apache.flume.api.RpcClientFactory.ClientType.name(0)"
CGNodeType Method "org.apache.flume.ChannelFactory.getClass(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.static {...}"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.setSinks(1)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.access$600(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.63.{...}"
CGNodeType Method "org.apache.flume.source.TestThriftSource.setUp(0)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.before(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testFileDeletion(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName(1)"
CGNodeType Method "org.apache.flume.TestContext.TestContext(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.main(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.isComponentInErrorState(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testCommit2(0)"
CGNodeType Method "org.apache.avro.specific.SpecificDatumReader.SpecificDatumReader(1)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.{...}"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.BasicChannelSemantics(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.access$000(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.34.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getOpenConnectionCount(0)"
CGNodeType Method "org.apache.flume.Context.getLong(2)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.put(2)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(3)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.7.{...}"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.AvroSchemaType(2)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.getString(1)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailure(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.GangliaServer(0)"
CGNodeType Method "org.mortbay.jetty.Server.setConnectors(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.static {...}"
CGNodeType Method "org.apache.flume.conf.sink.SinkType.equals(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.static {...}"
CGNodeType Method "com.google.common.base.Preconditions.checkState(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.59.{...}"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.setUp(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.set(2)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.access$000(1)"
CGNodeType Method "org.mortbay.jetty.servlet.ServletHolder.ServletHolder(1)"
CGNodeType Method "org.apache.flume.TestCounterGroup.testIncrementAndGet(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.NioSocketAcceptor(1)"
CGNodeType Method "org.apache.flume.sink.AvroSink.getUnderlyingClient(0)"
CGNodeType Method "org.apache.flume.ChannelSelector.configure(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testTimeout(0)"
CGNodeType Method "org.jboss.netty.channel.ChannelPipeline.addLast(2)"
CGNodeType Method "com.google.common.io.Files.write(3)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testChannelException(1)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType.EventSerializerType(3)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getEventAcceptedCount(0)"
CGNodeType Method "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampHours(2)"
CGNodeType Method "org.mockito.stubbing.OngoingStubbing.thenReturn(2)"
CGNodeType Method "org.apache.flume.instrumentation.util.TestJMXPollUtil.testJMXPoll(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$300(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.name(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.intercept(1)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.start(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.incrementEventPutAttemptCount(0)"
CGNodeType Method "org.apache.mina.core.session.IoSession.getAttribute(1)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.NioSocketAcceptor(0)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.write(1)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.take(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.setFail(1)"
CGNodeType Method "com.google.common.io.Files.write(2)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShutdown(0)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.configure(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.getTransaction(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.hasOffset(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testRuntimeException(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.getPayload(1)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.rollback(0)"
CGNodeType Method "org.mockito.stubbing.OngoingStubbing.thenReturn(1)"
CGNodeType Method "org.apache.flume.channel.MockEvent.setBody(1)"
CGNodeType Method "org.apache.flume.SourceRunner.forSource(1)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.initialize(0)"
CGNodeType Method "org.apache.flume.source.StressSource.start(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.2.{...}"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getEventTakeSuccessCount(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.{...}"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus[].clone(0)"
CGNodeType Method "org.mortbay.jetty.nio.SelectChannelConnector.setReuseAddress(1)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.configureInterceptors(1)"
CGNodeType Method "org.mortbay.jetty.security.SslSocketConnector.setKeyPassword(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.getStartTime(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldRequirePatternInConfiguration(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testChannelResize(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.build(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.1.run(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testSslRequest(0)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.rotate(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.getTransaction(0)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactoryTest.testInstantiatingLoadBalancingSinkProcessor(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.MockTransaction(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.StderrReader.run(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.12.run(0)"
CGNodeType Method "org.apache.flume.source.TestSequenceGeneratorSource.TestSequenceGeneratorSource(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.createTransaction(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileWindows(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testMode(2)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$500(1)"
CGNodeType Method "com.google.common.collect.ImmutableMap.entrySet(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode[].clone(0)"
CGNodeType Method "org.apache.flume.conf.ConfigurationException.ConfigurationException(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.stopAll(1)"
CGNodeType Method "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testWithNewline(0)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.processEventBatch(1)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.bind(1)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.LineDeserializer(2)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowMisconfiguredSerializers(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doCommit(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.begin(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.access$000(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getUser(0)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.setUp(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.access$000(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementConnectionClosedCount(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.getSinks(0)"
CGNodeType Method "org.mockito.Mockito.verify(2)"
CGNodeType Method "org.apache.flume.interceptor.Interceptor.intercept(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogFormatter.SyslogFormatter(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.start(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.syslogHandler.messageReceived(2)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doCommit(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(4)"
CGNodeType Method "org.apache.flume.api.HostInfo.getPortNumber(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testHappyPath1(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.AbstractSink(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testTrace(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.62.run(0)"
CGNodeType Method "org.mortbay.jetty.servlet.Context.Context(3)"
CGNodeType Method "org.jboss.netty.channel.Channels.pipeline(1)"
CGNodeType Method "com.google.common.collect.Lists.newArrayListWithCapacity(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.9.run(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.55.{...}"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.HeaderAndBodyTextEventSerializer(2)"
CGNodeType Method "org.apache.flume.VersionAnnotation.srcChecksum(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.Builder.build(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testError(1)"
CGNodeType Method "org.jboss.netty.buffer.ChannelBuffers.buffer(1)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShellCommandEmbeddingAndEscaping(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback3(0)"
CGNodeType Method "org.apache.flume.CounterGroup.incrementAndGet(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.get(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodiesAsStrings(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.40.run(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getWritten(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.stop(0)"
CGNodeType Method "org.apache.flume.source.SyslogParser.parseRfc3164Time(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.testRollBack(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalState(1)"
CGNodeType Method "com.google.gson.Gson.toJson(2)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testPreserve(0)"
CGNodeType Method "org.jboss.netty.channel.Channels.pipeline(0)"
CGNodeType Method "org.apache.flume.interceptor.TestCensoringInterceptor.TestCensoringInterceptor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.54.{...}"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.informSinkFailed(1)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testPut1(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$400(1)"
CGNodeType Method "com.google.gson.Gson.Gson(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testExceptions(1)"
CGNodeType Method "org.apache.flume.TestContext.testClear(0)"
CGNodeType Method "org.apache.flume.conf.sink.SinkType.getSinkClassName(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testHandlerThrowingException(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.before(0)"
CGNodeType Method "org.apache.flume.Channel.take(0)"
CGNodeType Method "org.apache.flume.formatter.output.TextDelimitedOutputFormatter.format(1)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.MockTransaction(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.length(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.flush(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.getSlice(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.access$000(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.deleteDir(1)"
CGNodeType Method "org.apache.flume.sink.NullSink.getChannel(0)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.testMultiplePorts(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getBody(0)"
CGNodeType Method "org.slf4j.Logger.error(3)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.1.{...}"
CGNodeType Method "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.newChannel(1)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelSelectorConfiguration.getType(0)"
CGNodeType Method "org.apache.http.impl.client.DefaultHttpClient.execute(1)"
CGNodeType Method "org.apache.avro.Schema.Field.schema(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.50.{...}"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testValidIpFilterDenys(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.TestJSONHandler(0)"
CGNodeType Method "org.apache.flume.Clock.currentTimeMillis(0)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$200(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.waitForState(2)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.getUnderlyingClient(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.doConfigure(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getDate(0)"
CGNodeType Method "org.apache.flume.source.StressSource.prepEventData(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.clearOffset(0)"
CGNodeType Method "org.apache.flume.thrift.ThriftFlumeEvent.getBody(0)"
CGNodeType Method "org.apache.flume.serialization.Resettable.reset(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getLifecycleState(0)"
CGNodeType Method "org.slf4j.Logger.error(2)"
CGNodeType Method "org.apache.flume.thrift.ThriftSourceProtocol.Processor.Processor(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testNullConsumeOrder(0)"
CGNodeType Method "org.apache.flume.source.TestExecSource.exec(1)"
CGNodeType Method "org.apache.flume.Transaction.TransactionState.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.testConcurrentSinksAndSources(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvents(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.markPosition(1)"
CGNodeType Method "org.apache.flume.conf.Configurables.ensureOptionalNonNull(2)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getPathTranslated(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException.TestRuntimeException(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.informSinkFailed(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteUser(0)"
CGNodeType Method "org.apache.flume.event.EventHelper.EventHelper(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.InterceptorType(3)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.checkClientTrusted(2)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$202(2)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.initHeaderFormats(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader6(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getType(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getTransaction(0)"
CGNodeType Method "org.apache.flume.sink.AvroSink.AvroSink(0)"
CGNodeType Method "org.apache.flume.Sink.getChannel(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.takeWithEncoding(3)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.static {...}"
CGNodeType Method "org.apache.flume.serialization.TransientPositionTracker.TransientPositionTracker(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$902(2)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.1.getPipeline(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.29.run(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testTransactionPutCapacityOverload(0)"
CGNodeType Method "org.apache.flume.event.EventHelper.static {...}"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseBroken(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.CompressionChannelFactory(1)"
CGNodeType Method "org.apache.flume.SinkRunner.static {...}"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.syslogHandler.setFormater(1)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerFactory.static {...}"
CGNodeType Method "org.apache.flume.Context.getInteger(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.ResettableInputStream(0)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.getChannelNameMap(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.stop(0)"
CGNodeType Method "org.apache.avro.ipc.Server.start(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.valueOf(1)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType.static {...}"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.setup(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.BasicSourceSemantics(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doPut(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doTake(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.static {...}"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesRANDOM(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testRequestWithNoCompression(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel6(0)"
CGNodeType Method "org.apache.flume.source.SyslogParser.static {...}"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.getSourcePort(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.GangliaCollector(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.setUp(0)"
CGNodeType Method "org.apache.flume.Context.getInteger(2)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setRemaining(1)"
CGNodeType Method "org.apache.flume.CounterGroup.getCounters(0)"
CGNodeType Method "org.apache.flume.interceptor.Interceptor.close(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.waitForState(3)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainAttemptCount(0)"
CGNodeType Method "org.apache.http.impl.client.DefaultHttpClient.DefaultHttpClient(0)"
CGNodeType Method "org.apache.flume.Transaction.close(0)"
CGNodeType Method "org.joda.time.format.DateTimeFormatter.parseDateTime(1)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.data(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testNoBody(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testExceptions(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.8.{...}"
CGNodeType Method "org.apache.flume.serialization.TestDurablePositionTracker.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionClosedCount(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.3.{...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getDateHeader(1)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(2)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.toString(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.4.verify(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.50.run(0)"
CGNodeType Method "org.joda.time.DateTime.minusMonths(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryChannel(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getOpenConnectionCount(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.TestLifecycleController(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.1.{...}"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.initInputStream(1)"
CGNodeType Method "org.jboss.netty.channel.socket.oio.OioDatagramChannelFactory.OioDatagramChannelFactory(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.refillBuf(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.source.AvroSource.configure(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(0)"
CGNodeType Method "com.google.common.collect.Maps.newHashMap(0)"
CGNodeType Method "org.apache.avro.ipc.NettyServer.getNumActiveConnections(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.RollingFileSink(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.process(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testFailedConnect(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.run(0)"
CGNodeType Method "org.apache.flume.serialization.TransientPositionTracker.getPosition(0)"
CGNodeType Method "org.apache.avro.file.DataFileReader.close(0)"
CGNodeType Method "org.mortbay.jetty.security.ConstraintMapping.setPathSpec(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.valueOf(1)"
CGNodeType Method "org.apache.flume.source.avro.AvroFlumeEvent.setBody(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.TestAbstractPollableSource(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.LineSplitter(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.getChannelNameMap(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.access$200(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.24.{...}"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.process(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.createExpectedFromFilesInSetup(1)"
CGNodeType Method "org.apache.flume.sink.AvroSink.initializeRpcClient(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.intercept(1)"
CGNodeType Method "org.apache.flume.api.ThriftTestingSource.HandlerType.name(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.reset(0)"
CGNodeType Method "org.apache.avro.reflect.ReflectDatumWriter.ReflectDatumWriter(1)"
CGNodeType Method "org.apache.flume.SourceFactory.getClass(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testDefaultConfiguration(0)"
CGNodeType Method "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory.NioServerSocketChannelFactory(2)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.close(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferChangeConfig(0)"
CGNodeType Method "org.apache.avro.io.DatumReader.read(2)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testBadEventGoodEvent(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getEventDrainAttemptCount(0)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.TestMultiportSyslogTCPSource(0)"
CGNodeType Method "org.mortbay.jetty.Server.start(0)"
CGNodeType Method "org.apache.flume.event.EventHelper.dumpEvent(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel0(0)"
CGNodeType Method "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.size(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.getRollInterval(0)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoSelection(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.getTransaction(0)"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.TestAvroEventDeserializer(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.increment(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$200(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testHttpsSourceNonHttpsClient(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.read(3)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.readEvent(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$100(0)"
CGNodeType Method "org.apache.flume.Sink.Status.Status(2)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.setUp(0)"
CGNodeType Method "org.apache.flume.ChannelFactory.create(2)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.getMode(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.start(0)"
CGNodeType Method "org.apache.flume.SourceFactory.create(2)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.getName(0)"
CGNodeType Method "org.apache.flume.event.EventHelper.dumpEvent(2)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.setChannels(1)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.2.run(0)"
CGNodeType Method "org.apache.flume.source.MockSource.MockSource(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.wrap(1)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testDateFormatMinutes(0)"
CGNodeType Method "org.apache.thrift.server.TServer.isServing(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.3.{...}"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.initialize(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.toString(0)"
CGNodeType Method "org.apache.flume.Transaction.begin(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.HTTPMetricsHandler(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.72.run(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.testSimpleRead(0)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.AbstractPollableSource(0)"
CGNodeType Method "org.apache.avro.generic.GenericRecordBuilder.set(2)"
CGNodeType Method "org.apache.flume.source.StressSource.configure(1)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.configure(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$302(2)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getPipeline(0)"
CGNodeType Method "org.apache.flume.sink.NullSink.NullSink(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testError(0)"
CGNodeType Method "org.apache.flume.interceptor.TestStaticInterceptor.testDefaultKeyValue(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2.{...}"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.flush(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogTcpHandler(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.1.{...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.addAndGet(2)"
CGNodeType Method "org.mockito.Mockito.when(1)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.xdr_int(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.start(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testBasicRead(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.31.run(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader3(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.setPollFrequency(1)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getLongAttribute(2)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.getEscapeMapping(5)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchComplete(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.configure(1)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.SubmitHelper.run(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.AbstractSinkProcessor(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.access$502(2)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.getTarget(0)"
CGNodeType Method "com.google.common.collect.Sets.newHashSet(0)"
CGNodeType Method "org.fest.reflect.field.Invoker.set(1)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.getPosition(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.56.{...}"
CGNodeType Method "org.slf4j.Logger.debug(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.setEventSize(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.setChannel(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.1.doStop(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.ThriftSourceHandler.append(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.getSinks(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogHandler(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.static {...}"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.47.run(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doPut(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testInterrupt(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.5.{...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.58.{...}"
CGNodeType Method "org.apache.flume.Channel.stop(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.start(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testNameCorrespondsToLatestRead(0)"
CGNodeType Method "com.google.gson.Gson.fromJson(2)"
CGNodeType Method "org.apache.avro.generic.GenericData.Record.Record(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestURI(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.HostInterceptor(3)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.appendBatch(1)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.testFailover(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.25.run(0)"
CGNodeType Method "org.slf4j.Logger.debug(2)"
CGNodeType Method "org.apache.flume.source.MockSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.access$200(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doPut(1)"
CGNodeType Method "org.apache.flume.CounterGroup.add(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testOptions(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.SyslogUDPSource(0)"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.testFailedConnect(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.stop(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.stop(0)"
CGNodeType Method "org.mortbay.jetty.servlet.Context.addServlet(2)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.close(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.TestRegexExtractorInterceptorPassThroughSerializer(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.mark(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionCommitted(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorChain.setInterceptors(1)"
CGNodeType Method "org.jboss.netty.channel.ChannelPipeline.addFirst(2)"
CGNodeType Method "org.apache.flume.serialization.TestDurablePositionTracker.testBasicTracker(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.69.run(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.StderrReader.setName(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.put(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.MockAvroServer.MockAvroServer(1)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.valueOf(1)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.after(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.29.{...}"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.assertEventBodyEquals(2)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestDispatcher(1)"
CGNodeType Method "org.slf4j.Logger.debug(3)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.6.{...}"
CGNodeType Method "org.apache.flume.source.MockSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.1.static {...}"
CGNodeType Method "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampHours(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getRefresh(0)"
CGNodeType Method "org.apache.avro.io.DecoderFactory.binaryDecoder(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.53.run(0)"
CGNodeType Method "org.fest.reflect.core.Reflection.field(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel9(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setChannel(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader(1)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.DefaultSinkProcessor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.27.{...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.16.run(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testMode(2)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.stop(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testChannelCounter(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.NetcatSocketHandler(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode.ordinal(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.run(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.setUp(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getQueryString(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.LifecycleSupervisor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testInterrupt(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SpoolDirectorySourceConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(1)"
CGNodeType Method "org.mortbay.jetty.security.SslSocketConnector.SslSocketConnector(0)"
CGNodeType Method "org.apache.flume.SinkRunner.SinkRunner(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.readEvent(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(2)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.static {...}"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaLiteral(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.5.run(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.{...}"
CGNodeType Method "org.mortbay.jetty.Server.getHandler(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.RegexExtractorInterceptorMillisSerializer(0)"
CGNodeType Method "org.joda.time.DateTime.now(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.start(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.static {...}"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.ConsumeXSink(1)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.close(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventTakeSuccess(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.testReEntTxn(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.setClock(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.formatHeaders(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.readChar(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkFactory.DefaultSinkFactory(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.static {...}"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.close(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$102(2)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setSeverity(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.21.{...}"
CGNodeType Method "org.apache.flume.source.TestAvroSource.static {...}"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testBasicExceptions(1)"
CGNodeType Method "org.apache.flume.util.RoundRobinOrderSelector.RoundRobinOrderSelector(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchReceivedCount(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.getName(0)"
CGNodeType Method "org.apache.flume.serialization.TestBodyTextEventSerializer.testWithNewline(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.FileInfo(2)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.Builder(0)"
CGNodeType Method "org.apache.avro.SchemaNormalization.parsingFingerprint(2)"
CGNodeType Method "org.apache.flume.serialization.PositionTracker.storePosition(1)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.doStop(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.44.run(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.{...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.66.run(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.5.run(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.access$202(2)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getEventPutAttemptCount(0)"
CGNodeType Method "org.apache.avro.file.DataFileReader.next(1)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.setChannel(1)"
CGNodeType Method "com.google.common.base.Joiner.join(3)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testSourceDoesNotDieOnFullChannel(0)"
CGNodeType Method "org.apache.flume.source.TestStressSource.testBatchEvents(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.forceDeleteOnExit(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.start(0)"
CGNodeType Method "org.apache.flume.source.NetcatSourceConfigurationConstants.NetcatSourceConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.readChar(0)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.testAppend2(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.2.{...}"
CGNodeType Method "com.google.common.cache.CacheLoader.CacheLoader(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType(1)"
CGNodeType Method "org.apache.flume.sink.FixedOrderSelector.FixedOrderSelector(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType.values(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.5.{...}"
CGNodeType Method "org.apache.flume.source.ThriftSource.access$100(1)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(4)"
CGNodeType Method "org.apache.flume.Sink.process(0)"
CGNodeType Method "org.apache.flume.source.SyslogParser.parseRfc5424Date(1)"
CGNodeType Method "org.apache.commons.cli.ParseException.getMessage(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinOneActiveSink(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.26.{...}"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.testCommit(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.configure(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testSimple(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testProcess(0)"
CGNodeType Method "org.apache.flume.SinkFactory.getClass(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.close(0)"
CGNodeType Method "org.apache.flume.tools.PlatformDetect.isWindows(0)"
CGNodeType Method "org.apache.flume.serialization.PositionTracker.close(0)"
CGNodeType Method "org.apache.flume.CounterGroup.getName(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.tell(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.testOnlyOptional(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.access$000(0)"
CGNodeType Method "org.mortbay.jetty.security.Constraint.Constraint(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.StaticInterceptor(3)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testSinkCounter(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.MockSink(2)"
CGNodeType Method "org.apache.flume.thrift.ThriftFlumeEvent.getHeaders(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.3.{...}"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$102(2)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getBatchEmptyCount(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.readEvent(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.20.{...}"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.getTransaction(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF32(0)"
CGNodeType Method "org.apache.flume.conf.Configurables.configure(2)"
CGNodeType Method "org.apache.flume.source.TestSyslogParser.TestSyslogParser(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Status.Status(0)"
CGNodeType Method "org.mockito.stubbing.Stubber.when(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.validate(2)"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.close(0)"
CGNodeType Method "org.apache.flume.interceptor.StaticInterceptor.static {...}"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.3.doStop(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.PermissiveTrustManager(1)"
CGNodeType Method "org.apache.avro.ipc.Server.join(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.afterReopen(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.readEvents(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.38.run(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBatchedReadsWithinAFile(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.sleep(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.4.{...}"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.configure(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.put(2)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerDeflateCompression(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus.values(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.1.{...}"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.read(3)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerFactory.getInstance(3)"
CGNodeType Method "org.apache.flume.conf.ConfigurableComponent.configure(1)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.configure(1)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.1.run(0)"
CGNodeType Method "com.google.common.collect.ImmutableMap.get(1)"
CGNodeType Method "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampMinutes(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.1.{...}"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType.MonitoringType(3)"
CGNodeType Method "org.jboss.netty.bootstrap.ConnectionlessBootstrap.ConnectionlessBootstrap(1)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.access$000(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.beforeClose(0)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.LoggerSink(0)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelSelectorType.equals(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.configure(1)"
CGNodeType Method "org.jboss.netty.bootstrap.ServerBootstrap.setPipelineFactory(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.PermissiveTrustManager.PermissiveTrustManager(0)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testBasic(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.put(1)"
CGNodeType Method "org.apache.flume.source.StressSource.stop(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.setUp(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.register(0)"
CGNodeType Method "org.apache.flume.tools.GetJavaProperty.GetJavaProperty(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.read(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.addAndGet(2)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.start(0)"
CGNodeType Method "org.apache.flume.source.avro.AvroFlumeEvent.getBody(0)"
CGNodeType Method "org.mortbay.jetty.Request.setHandled(1)"
CGNodeType Method "org.apache.flume.source.TestDefaultSourceFactory.verifySourceCreation(3)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.addToEventPutSuccessCount(1)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.testPortCharsetHandling(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.increment(1)"
CGNodeType Method "org.apache.flume.channel.MockEvent.getBody(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.valueOf(1)"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.stop(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.22.{...}"
CGNodeType Method "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(1)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.TestRegexExtractorInterceptor(0)"
CGNodeType Method "org.apache.avro.file.DataFileReader.getMetaString(1)"
CGNodeType Method "org.apache.flume.sink.FixedOrderSelector.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback7(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocales(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkFactory.create(2)"
CGNodeType Method "org.apache.flume.TestContext.testPutAll(0)"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.testTimeout(0)"
CGNodeType Method "org.apache.flume.SinkRunner.SinkRunner(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.addToEventDrainSuccessCount(1)"
CGNodeType Method "org.mortbay.jetty.Server.Server(0)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testBatchTimeout(0)"
CGNodeType Method "org.apache.flume.formatter.output.EventFormatter.format(1)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.static {...}"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.2.{...}"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.addAndGet(2)"
CGNodeType Method "org.apache.flume.api.RpcClient.append(1)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.expandShorthand(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelCapacity(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.start(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setHostname(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.23.{...}"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doConfigure(1)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.supportsReopen(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.ThriftSourceHandler.ThriftSourceHandler(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy.OnceOnlyPolicy(0)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.getDirectMemorySize(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.reset(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.stop(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.{...}"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroEventDeserializer(3)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.52.run(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.reset(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.client.avro.TestBufferedLineReader.testBatchedReadsWithinAFile(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdValid(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.start(0)"
CGNodeType Method "org.apache.thrift.server.TServer.AbstractServerArgs.outputTransportFactory(1)"
CGNodeType Method "org.apache.flume.Context.Context(1)"
CGNodeType Method "org.jboss.netty.bootstrap.ConnectionlessBootstrap.bind(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.11.run(0)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.initialize(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.57.{...}"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF8(0)"
CGNodeType Method "org.jboss.netty.channel.MessageEvent.getMessage(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.parseLine(3)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.getSchema(0)"
CGNodeType Method "org.joda.time.DateTime.withYear(1)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.2.run(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionCreated(1)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.beforeClose(0)"
CGNodeType Method "org.apache.avro.Schema.createRecord(4)"
CGNodeType Method "org.apache.mina.transport.socket.SocketSessionConfig.setIdleTime(2)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.getRequiredChannels(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.start(0)"
CGNodeType Method "org.apache.flume.sink.AvroSink.process(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.{...}"
CGNodeType Method "org.apache.flume.tools.TimestampRoundDownUtil.TimestampRoundDownUtil(0)"
CGNodeType Method "org.apache.flume.Context.Context(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.openFile(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.values(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel1(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testCommit1(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.putWithEncoding(2)"
CGNodeType Method "org.apache.flume.Channel.getTransaction(0)"
CGNodeType Method "org.apache.flume.Transaction.TransactionState[].clone(0)"
CGNodeType Method "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory.getAttributeMap(1)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.commit(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doGet(2)"
CGNodeType Method "org.mortbay.jetty.handler.AbstractHandler.AbstractHandler(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State[].clone(0)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.tearDown(0)"
CGNodeType Method "org.apache.flume.interceptor.TestTimestampInterceptor.testClobber(0)"
CGNodeType Method "org.apache.flume.sink.TestDefaultSinkFactory.setUp(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configureSerializers(1)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.sendToGangliaNodes(0)"
CGNodeType Method "org.mockito.Mockito.doThrow(1)"
CGNodeType Method "org.apache.flume.api.RpcClient.isActive(0)"
CGNodeType Method "org.apache.flume.channel.DefaultChannelFactory.create(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.63.run(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testMultipleEventsUTF8(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.write(1)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.TestRollingFileSink(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testStopServce(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.close(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.22.run(0)"
CGNodeType Method "org.apache.http.entity.StringEntity.setContentType(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelProcessor.testNullFromGetTransaction(0)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.static {...}"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testHappyPath4(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.41.run(0)"
CGNodeType Method "org.apache.flume.interceptor.TestStaticInterceptor.testPreserve(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doClose(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.doTestForbiddenMethods(2)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.TestSpoolDirectorySource(0)"
CGNodeType Method "org.apache.flume.serialization.TestDurablePositionTracker.TestDurablePositionTracker(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.getStopTime(0)"
CGNodeType Method "org.apache.flume.source.TestStressSource.testMaxTotalEvents(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.isGanglia3(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.9.{...}"
CGNodeType Method "org.apache.flume.source.ThriftSource.static {...}"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.readChar(0)"
CGNodeType Method "org.apache.flume.event.TestEventHelper.TestEventHelper(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testLineExceedsMaxLineLength(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testEscapedJSON(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAuthType(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.static {...}"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.ThreadSafeDecoder(1)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.configure(1)"
CGNodeType Method "org.apache.flume.sink.NullSink.start(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateWideCharLine(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalAddr(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.mark(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.clear(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader0(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPBadRequestException.getMessage(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.31.{...}"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType.EventDeserializerType(3)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.10.{...}"
CGNodeType Method "org.apache.flume.sink.FixedOrderSelector.createSinkIterator(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.addToEventTakeSuccessCount(1)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.{...}"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateData(4)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testUseHostname(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.close(0)"
CGNodeType Method "org.apache.commons.cli.CommandLine.getOptionValue(1)"
CGNodeType Method "org.apache.avro.specific.SpecificDatumWriter.SpecificDatumWriter(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.TestReliableSpoolingFileEventReader(0)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.setUp(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.tell(0)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(3)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.values(0)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.testLifecycle(0)"
CGNodeType Method "org.apache.flume.VersionAnnotation.revision(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.doTestForbidden(1)"
CGNodeType Method "org.apache.mina.transport.socket.SocketSessionConfig.setReadBufferSize(1)"
CGNodeType Method "org.apache.flume.sink.TestThriftSink.TestThriftSink(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementConnectionCreatedCount(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.accept(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.run(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.33.run(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus.getSyslogStatus(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.setBody(1)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.position(0)"
CGNodeType Method "org.apache.flume.channel.ChannelSelectorFactory.getSelectorForType(1)"
CGNodeType Method "org.apache.thrift.server.TServer.serve(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitorService.start(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.Type(2)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.destroyConnection(0)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.DirectMemoryUtils(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.4.{...}"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.access$100(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.setUp(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testTake2(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.checksumCRC32(1)"
CGNodeType Method "org.apache.flume.source.AbstractSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$402(2)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.process(0)"
CGNodeType Method "org.apache.flume.ChannelException.getMessage(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.36.{...}"
CGNodeType Method "org.apache.flume.Source.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializer(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchAcceptedCount(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.start(0)"
CGNodeType Method "org.apache.flume.source.TestDefaultSourceFactory.TestDefaultSourceFactory(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testMultiThreadedHappyPath(0)"
CGNodeType Method "org.apache.flume.sink.SinkGroup.SinkGroup(1)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.stop(0)"
CGNodeType Method "org.apache.flume.Source.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.start(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.stop(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkFactory.getClass(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.TestSpoolingFileLineReader(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getEventDrainSuccessCount(0)"
CGNodeType Method "org.apache.flume.Sink.Status.static {...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServerPort(0)"
CGNodeType Method "org.apache.flume.event.TestEventHelper.testPrintable(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorBuilderFactory.InterceptorBuilderFactory(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.setOffset(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.put(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getMethod(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testLifecycle(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$100(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungest(0)"
CGNodeType Method "org.mortbay.jetty.Server.isRunning(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testValidIpFilterAllows(0)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.setUp(0)"
CGNodeType Method "org.apache.flume.util.OrderSelector.setObjects(1)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State.static {...}"
CGNodeType Method "org.apache.flume.event.JSONEvent.setHeaders(1)"
CGNodeType Method "org.apache.thrift.server.TServer.AbstractServerArgs.processor(1)"
CGNodeType Method "com.google.common.base.Optional.absent(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testResume(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.handle(4)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffInitialFailure(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.1.run(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.getName(0)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(2)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.Supervisoree(0)"
CGNodeType Method "org.apache.flume.source.StressSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.Supervisoree(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.toString(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.appendBatch(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testChannelException(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.ExecRunnable(10)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.processEvents(2)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.static {...}"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.TestSyslogUdpSource(0)"
CGNodeType Method "org.mortbay.jetty.servlet.Context.addHandler(1)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.write(1)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.setChannel(1)"
CGNodeType Method "org.apache.avro.specific.SpecificRecordBuilderBase.SpecificRecordBuilderBase(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.14.run(0)"
CGNodeType Method "org.slf4j.Logger.warn(1)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getType(0)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.FlumeEventAvroEventSerializer(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.1.run(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader7(0)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.static {...}"
CGNodeType Method "org.apache.flume.source.TestExecSource.tearDown(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doTake(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.createSinkIterator(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.setName(1)"
CGNodeType Method "com.google.common.io.Files.readLines(2)"
CGNodeType Method "org.apache.flume.source.AbstractSource.toString(0)"
CGNodeType Method "org.apache.flume.instrumentation.util.JMXPollUtil.getAllMBeans(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getEventReceivedCount(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendBatchAcceptedCount(1)"
CGNodeType Method "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getAlgorithm(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.getDeserializer(0)"
CGNodeType Method "org.apache.flume.formatter.output.TextDelimitedOutputFormatter.TextDelimitedOutputFormatter(0)"
CGNodeType Method "org.apache.flume.Constants.Constants(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.61.{...}"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.setReuseAddress(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getCharacterEncoding(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback4(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.setRollInterval(1)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.AbstractAvroEventSerializer(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$1002(2)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.setSinks(1)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.1.{...}"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testError(0)"
CGNodeType Method "org.apache.flume.TestCounterGroup.TestCounterGroup(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.addToEventDrainAttemptCount(1)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doStart(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.SourceCounter(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.TestChannelUtils(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.getChannelProcessor(0)"
CGNodeType Method "org.slf4j.Logger.warn(3)"
CGNodeType Method "org.apache.flume.VersionAnnotation.user(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.RegexExtractorInterceptorPassThroughSerializer(0)"
CGNodeType Method "org.apache.flume.client.avro.AvroCLIClient.static {...}"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.static {...}"
CGNodeType Method "org.apache.flume.CounterGroup.setName(1)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.ChannelProcessor(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testMode(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.48.{...}"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.access$100(0)"
CGNodeType Method "org.apache.flume.SinkProcessor.stop(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testClose1(0)"
CGNodeType Method "org.jboss.netty.bootstrap.ServerBootstrap.ServerBootstrap(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.unsupervise(1)"
CGNodeType Method "org.apache.flume.client.avro.EventReader.readEvents(1)"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.access$002(2)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(0)"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.testSchemaHash(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.getType(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.remaining(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getStartTime(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.createServerSSLContext(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getTimestamp(0)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.BodyTextEventSerializer(2)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.getChannel(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.toString(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testDefaultBehavior(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.interruptTest(1)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.testReplicatingSelector(0)"
CGNodeType Method "org.slf4j.Logger.warn(2)"
CGNodeType Method "com.google.common.collect.ImmutableSet.iterator(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkFactory.static {...}"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.singleLineFileInit(2)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.MockChannel(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.1.{...}"
CGNodeType Method "org.apache.flume.source.AvroSource.initChannelPipelineFactory(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.resizeQueue(1)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.stop(0)"
CGNodeType Method "org.apache.flume.api.ThriftTestingSource.stop(0)"
CGNodeType Method "org.apache.flume.annotations.InterfaceStability.InterfaceStability(0)"
CGNodeType Method "org.apache.flume.source.MockSource.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.43.{...}"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.DecodeErrorPolicy(2)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State.equals(1)"
CGNodeType Method "org.apache.avro.file.DataFileReader.sync(1)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.pad(0)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannelsSameChannelTwice(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType[].clone(0)"
CGNodeType Method "org.apache.flume.api.RpcClient.close(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteHost(0)"
CGNodeType Method "org.slf4j.Logger.trace(1)"
CGNodeType Method "org.apache.flume.conf.sink.SinkGroupConfiguration.getProcessorContext(0)"
CGNodeType Method "com.google.gson.GsonBuilder.GsonBuilder(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.compare(2)"
CGNodeType Method "org.apache.flume.sink.TestRollingFileSink.testAppend(0)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.toString(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.testAppendBatch(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.30.run(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRealPath(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.run(0)"
CGNodeType Method "org.apache.flume.serialization.Seekable.seek(1)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.TestHTTPMetricsServer(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doRollback(0)"
CGNodeType Method "org.apache.flume.PollableSource.start(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.tearDown(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.toString(0)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.storePosition(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testLargeNumberOfFilesOLDEST(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.1.getPipeline(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.values(0)"
CGNodeType Method "org.mockito.stubbing.OngoingStubbing.thenThrow(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.toString(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testJSON(0)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelType.valueOf(1)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.setup(0)"
CGNodeType Method "org.apache.flume.conf.sink.SinkType.valueOf(1)"
CGNodeType Method "org.apache.flume.tools.TestVersionInfo.TestVersionInfo(0)"
CGNodeType Method "org.apache.flume.source.avro.AvroSourceProtocol.append(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.{...}"
CGNodeType Method "org.slf4j.Logger.trace(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.45.{...}"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.initialize(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testSingleEvent(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.static {...}"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.getSource(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.8.run(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.isValidValue(2)"
CGNodeType Method "org.apache.commons.cli.Options.Options(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.register(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getId(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendAcceptedCount(1)"
CGNodeType Method "org.apache.flume.source.DefaultSourceFactory.static {...}"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelProcessor.testExceptionFromGetTransaction(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getChannelCapacity(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.1.{...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.52.{...}"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.access$200(1)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.testMultipleClients(0)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaFactory(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testInclusion(0)"
CGNodeType Method "org.slf4j.Logger.trace(3)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer.shouldReturnSameValue(0)"
CGNodeType Method "org.apache.flume.api.RpcClientFactory.getThriftInstance(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testRepeatedCallsWithCommitOnSuccess(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.containsTag(1)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.configure(1)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.TestHostInterceptor(0)"
CGNodeType Method "org.jboss.netty.buffer.ChannelBuffer.readByte(0)"
CGNodeType Method "com.google.common.base.Optional.of(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.setName(1)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.start(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.FlumeHttpServletRequestWrapper(2)"
CGNodeType Method "org.mockito.Mockito.spy(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRequestedSessionId(0)"
CGNodeType Method "org.apache.flume.conf.ComponentConfiguration.getType(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.defaultValue(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.configure(1)"
CGNodeType Method "org.apache.flume.util.OrderSelector.informFailure(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffIncreasingBackoffs(0)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.getChannelListFromNames(2)"
CGNodeType Method "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.getPipeline(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.access$100(1)"
CGNodeType Method "org.apache.avro.ipc.specific.SpecificResponder.SpecificResponder(2)"
CGNodeType Method "org.apache.flume.source.AvroSource.access$000(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.17.run(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getPathInfo(0)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testValidSortOrder(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.getName(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback1(0)"
CGNodeType Method "org.apache.http.client.methods.HttpOptions.HttpOptions(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.1.doProcess(0)"
CGNodeType Method "junit.framework.Assert.assertNull(1)"
CGNodeType Method "junit.framework.Assert.assertEquals(3)"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.init(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutSuccess(1)"
CGNodeType Method "org.apache.flume.SinkProcessor.setSinks(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.smallerLexicographical(2)"
CGNodeType Method "org.apache.flume.instrumentation.util.JMXTestUtils.checkChannelCounterParams(1)"
CGNodeType Method "org.apache.flume.source.TestDefaultSourceFactory.testDuplicateCreate(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.templateTestForLargeNumberOfFiles(3)"
CGNodeType Method "org.mockito.Mockito.times(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.64.{...}"
CGNodeType Method "org.apache.flume.source.StressSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementAppendReceivedCount(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus.static {...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testPut3(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.1.1.{...}"
CGNodeType Method "org.apache.flume.source.SyslogUtils.getEventSize(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getAttributeNames(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.ordinal(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.tearDownClass(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.2.run(0)"
CGNodeType Method "org.jboss.netty.bootstrap.ServerBootstrap.bind(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.getConnectionFailedCount(0)"
CGNodeType Method "junit.framework.Assert.assertNull(2)"
CGNodeType Method "junit.framework.Assert.assertEquals(2)"
CGNodeType Method "org.apache.flume.Source.setName(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.1.{...}"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.run(0)"
CGNodeType Method "org.apache.flume.TestContext.setUp(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitorService.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementEventAcceptedCount(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.2.doStart(0)"
CGNodeType Method "com.google.gson.GsonBuilder.disableHtmlEscaping(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.createSslServer(1)"
CGNodeType Method "org.apache.flume.source.SyslogParser.1.{...}"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.{...}"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.TestAvroSink(0)"
CGNodeType Method "org.apache.flume.tools.TestVersionInfo.testVersionInfoUnknown(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.newChannel(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.static {...}"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.hitChannelException(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelProcessor.TestChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.SeekableResettableInputBridge(1)"
CGNodeType Method "org.apache.flume.source.StressSource.static {...}"
CGNodeType Method "org.apache.flume.source.AvroSource.initSocketChannelFactory(0)"
CGNodeType Method "org.mortbay.jetty.Connector.setHost(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.toString(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$202(2)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.configure(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testWideCharRead(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertChCounterState(6)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.hasRemaining(0)"
CGNodeType Method "org.apache.flume.VersionAnnotation.date(0)"
CGNodeType Method "org.joda.time.DateTime.getYear(0)"
CGNodeType Method "com.google.common.util.concurrent.ThreadFactoryBuilder.ThreadFactoryBuilder(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.static {...}"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.static {...}"
CGNodeType Method "org.mortbay.jetty.security.ConstraintMapping.setConstraint(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.getAllChannels(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.setUp(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$702(2)"
CGNodeType Method "org.apache.flume.channel.ChannelSelectorFactory.static {...}"
CGNodeType Method "org.apache.flume.serialization.EventDeserializerType.getBuilderClass(0)"
CGNodeType Method "org.apache.flume.sink.SinkGroup.configure(1)"
CGNodeType Method "org.apache.avro.Schema.Field.Field(3)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.TestPollableSourceRunner(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.getSchema(0)"
CGNodeType Method "com.google.common.io.Files.createParentDirs(1)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.access$100(2)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType[].clone(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.stop(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.TestThriftSource(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testError(1)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorBuilderFactory.lookup(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.3.{...}"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.testLargePayload(0)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.values(0)"
CGNodeType Method "org.joda.time.format.DateTimeFormatter.print(1)"
CGNodeType Method "org.apache.flume.serialization.TransientPositionTracker.close(0)"
CGNodeType Method "org.apache.flume.Transaction.rollback(0)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.getChannel(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.access$400(1)"
CGNodeType Method "org.apache.avro.file.DataFileReader.hasNext(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testWrongThread(1)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.start(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.process(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContextPath(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.39.run(0)"
CGNodeType Method "org.apache.flume.source.DefaultSourceFactory.create(2)"
CGNodeType Method "org.apache.flume.serialization.TestSyslogAvroEventSerializer.test(0)"
CGNodeType Method "org.apache.flume.Context.getString(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.access$100(1)"
CGNodeType Method "org.apache.flume.Context.clear(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testInvalidSortOrder(0)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.testAvroSerializerSnappyCompression(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.access$400(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getRemoteAddr(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.getClock(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testByteCapacityBufferEmptyingAfterRollback(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.access$002(1)"
CGNodeType Method "org.apache.flume.sink.NullSink.getName(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.1.run(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.13.{...}"
CGNodeType Method "org.apache.flume.sink.NullSink.process(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.ThriftSourceHandler.appendBatch(1)"
CGNodeType Method "org.apache.flume.PollableSource.Status.equals(1)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.static {...}"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.initialize(0)"
CGNodeType Method "org.jboss.netty.handler.codec.compression.ZlibEncoder.ZlibEncoder(1)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.SubmitHelper.SubmitHelper(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.DelayMockAvroServer(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.28.run(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.run(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.stop(0)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.allocate(1)"
CGNodeType Method "org.apache.flume.tools.DirectMemoryUtils.static {...}"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactoryTest.SinkProcessorFactoryTest(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getHeaders(1)"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.configure(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.setUpClass(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.testRemoveFields(0)"
CGNodeType Method "org.apache.flume.Transaction.TransactionState.static {...}"
CGNodeType Method "org.apache.flume.source.ThriftSource.stop(0)"
CGNodeType Method "org.apache.flume.event.EventBuilder.withBody(3)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementBatchEmptyCount(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterNames(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testHappyPath(0)"
CGNodeType Method "org.joda.time.format.DateTimeFormatter.withZoneUTC(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testLifecycle(0)"
CGNodeType Method "org.apache.flume.sink.TestDefaultSinkFactory.verifySinkCreation(3)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.transact(2)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.testFragmented(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.static {...}"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.run(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.AbstractBasicChannelSemanticsTest(0)"
CGNodeType Method "org.apache.flume.source.avro.AvroFlumeEvent.AvroFlumeEvent(0)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.testMaxLineLength(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder.Builder(0)"
CGNodeType Method "org.apache.avro.Schema.Parser.parse(1)"
CGNodeType Method "org.apache.flume.source.TestStressSource.setUp(0)"
CGNodeType Method "org.apache.flume.source.AbstractPollableSource.getStartException(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.exceptionCaught(2)"
CGNodeType Method "org.apache.flume.CounterGroup.addAndGet(2)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.34.{...}"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer.configure(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogParser.testMessageParsing(0)"
CGNodeType Method "org.apache.flume.event.EventBuilder.withBody(2)"
CGNodeType Method "org.jboss.netty.channel.SimpleChannelHandler.SimpleChannelHandler(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.static {...}"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.1.getType(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.3.call(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.getTransaction(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer.serialize(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getAppendBatchAcceptedCount(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testCustomSelector(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader4(0)"
CGNodeType Method "org.apache.flume.Context.getString(2)"
CGNodeType Method "org.apache.flume.serialization.Seekable.tell(0)"
CGNodeType Method "com.google.common.base.Preconditions.checkArgument(1)"
CGNodeType Method "org.apache.flume.CounterGroup.getCounter(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Status.toString(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.runKeepFieldsTest(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.removeAttribute(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableTestStringInputStream.close(0)"
CGNodeType Method "com.google.common.base.Strings.padStart(3)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockChannel(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.5.getType(0)"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.afterCreate(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.roundDown(3)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.59.run(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSocketAcceptor.unbind(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getStartTime(0)"
CGNodeType Method "org.slf4j.Logger.info(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.start(0)"
CGNodeType Method "org.apache.flume.event.EventBuilder.withBody(1)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.getOffset(0)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.getChannel(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteCurrentFile(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.resetConnection(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.1.start(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerDe.Builder.build(3)"
CGNodeType Method "org.apache.flume.instrumentation.util.JMXPollUtil.JMXPollUtil(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.access$300(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(2)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.setFormater(1)"
CGNodeType Method "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.NioClientSocketChannelFactory(2)"
CGNodeType Method "org.slf4j.Logger.info(2)"
CGNodeType Method "org.apache.flume.source.AbstractSource.AbstractSource(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getNextFile(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.1.{...}"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.kill(0)"
CGNodeType Method "org.jboss.netty.channel.ChannelFuture.await(2)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doMode(0)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.flush(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.getCustomSerializer(2)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.SleeperLifecycleDelegate(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8Latin1Sequence(1)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.setUp(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.TestLoadBalancingSinkProcessor(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.48.run(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.toString(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.ResettableFileInputStream(5)"
CGNodeType Method "org.apache.flume.Context.put(2)"
CGNodeType Method "org.apache.flume.client.avro.EventReader.readEvent(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.configure(1)"
CGNodeType Method "org.apache.avro.ipc.Server.close(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testBadEvent(0)"
CGNodeType Method "org.apache.flume.ChannelFullException.ChannelFullException(2)"
CGNodeType Method "org.apache.flume.event.JSONEvent.setBody(1)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelType.getChannelClassName(0)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.testMultipleOptionalChannels(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.put(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.seek(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.15.{...}"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testInterrupt(0)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.rollback(0)"
CGNodeType Method "com.google.common.base.Preconditions.checkArgument(3)"
CGNodeType Method "org.slf4j.Logger.info(3)"
CGNodeType Method "org.apache.flume.Context.getParameters(0)"
CGNodeType Method "org.apache.flume.serialization.RemoteMarkable.getMarkPosition(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.testRegisterTwice(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSession.setAttributeMap(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getEventPutAttemptCount(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.estimateEventSize(1)"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.newTestFile(1)"
CGNodeType Method "org.apache.commons.cli.Options.addOption(4)"
CGNodeType Method "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory.NioClientSocketChannelFactory(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getInputStream(0)"
CGNodeType Method "org.apache.flume.ChannelFullException.ChannelFullException(1)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.afterReopen(0)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TestFlumeEventAvroEventSerializer(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.66.{...}"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBehaviorWithEmptyFile(0)"
CGNodeType Method "org.apache.flume.sink.DefaultSinkProcessor.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomPersistentFailure(0)"
CGNodeType Method "org.apache.flume.source.TestStressSource.testBatchEventsWithoutMatTotalEvents(0)"
CGNodeType Method "com.google.common.base.Preconditions.checkArgument(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.37.run(0)"
CGNodeType Method "org.apache.mina.transport.socket.nio.NioSession.getLocalAddress(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.71.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.addAndGet(2)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.begin(0)"
CGNodeType Method "org.mortbay.jetty.security.SecurityHandler.SecurityHandler(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.getName(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.stop(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.wasLastTransactionClosed(0)"
CGNodeType Method "org.jboss.netty.channel.Channel.getCloseFuture(0)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testNoRounding(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.doRequest(3)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testNegativeCapacities(0)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.getSeriesTimestamp(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.25.1.run(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingReplace(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSrcAppendReceivedCount(1)"
CGNodeType Method "org.mortbay.jetty.Connector.setPort(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.close(0)"
CGNodeType Method "org.apache.flume.Transaction.TransactionState.values(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.put(1)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileYoungestWithLexicographicalComparision(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.getType(0)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelSelectorType.toString(0)"
CGNodeType Method "org.apache.thrift.transport.TServerSocket.TServerSocket(1)"
CGNodeType Method "org.apache.flume.source.TestDefaultSourceFactory.setUp(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.get(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.static {...}"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.static {...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testClose4(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType.values(0)"
CGNodeType Method "org.apache.flume.SourceRunner.getSource(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$402(2)"
CGNodeType Method "org.apache.flume.source.TestStressSource.testMaxSuccessfulEvents(0)"
CGNodeType Method "org.apache.flume.interceptor.Interceptor.Builder.build(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType.static {...}"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomNoFailure(0)"
CGNodeType Method "com.google.common.collect.ImmutableMap.size(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.stop(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType.getMonitorClass(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.getName(0)"
CGNodeType Method "org.apache.flume.serialization.RemoteMarkable.markPosition(1)"
CGNodeType Method "org.apache.flume.conf.source.SourceType.getSourceClassName(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.60.run(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.supportsReopen(0)"
CGNodeType Method "org.mockito.Mockito.doNothing(0)"
CGNodeType Method "org.apache.flume.SinkRunner.stop(0)"
CGNodeType Method "org.apache.flume.sink.TestDefaultSinkFactory.testDuplicateCreate(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getBatchUnderflowCount(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$100(1)"
CGNodeType Method "org.apache.avro.ipc.NettyServer.NettyServer(5)"
CGNodeType Method "org.apache.flume.instrumentation.util.JMXPollUtil.static {...}"
CGNodeType Method "org.mortbay.jetty.Server.setHandler(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.69.{...}"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getPriority(0)"
CGNodeType Method "org.apache.flume.VersionAnnotation.version(0)"
CGNodeType Method "com.google.common.io.Files.createTempDir(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.toString(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.18.{...}"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.multiLineFileInit(2)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.createSinkIterator(0)"
CGNodeType Method "org.apache.flume.source.MockSource.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy[].clone(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.getSink(0)"
CGNodeType Method "org.apache.flume.TestContext.testPutGet(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.supervise(3)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setTimestamp(1)"
CGNodeType Method "org.apache.flume.tools.TimestampRoundDownUtil.roundDownTimeStampMinutes(2)"
CGNodeType Method "org.apache.flume.channel.ChannelProcessor.getSelector(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.SSLChannelFactory.newChannel(1)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.setSleepTime(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.getChannel(0)"
CGNodeType Method "junit.framework.Assert.fail(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.17.{...}"
CGNodeType Method "org.apache.avro.AvroRuntimeException.AvroRuntimeException(1)"
CGNodeType Method "org.apache.flume.Source.stop(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.stop(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.2.getType(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.1.static {...}"
CGNodeType Method "org.apache.flume.serialization.BodyTextEventSerializer.afterReopen(0)"
CGNodeType Method "org.apache.flume.serialization.TestBodyTextEventSerializer.testNoNewline(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.access$002(2)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.setRestart(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.15.run(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.messageReceived(2)"
CGNodeType Method "junit.framework.Assert.assertTrue(2)"
CGNodeType Method "com.google.common.cache.CacheBuilder.maximumSize(1)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.setMessage(1)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.TestMultiplexingChannelSelector(0)"
CGNodeType Method "com.google.common.collect.Lists.reverse(1)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.process(0)"
CGNodeType Method "org.apache.commons.cli.CommandLineParser.parse(2)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.syslogHandler.setKeepFields(1)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexFilteringInterceptor.TestRegexFilteringInterceptor(0)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.SequenceGeneratorSource(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.initializeRpcClient(1)"
CGNodeType Method "org.apache.flume.interceptor.TestCensoringInterceptor.testCensor(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getEventPutSuccessCount(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.build(0)"
CGNodeType Method "com.google.common.io.Files.append(3)"
CGNodeType Method "org.apache.flume.SourceRunner.setSource(1)"
CGNodeType Method "org.apache.flume.source.TestStressSource.getCounterGroup(1)"
CGNodeType Method "org.apache.flume.source.ThriftSource.access$200(1)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.beforeClose(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.extractEvent(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState[].clone(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testExtractGoodEvent(0)"
CGNodeType Method "org.apache.http.entity.StringEntity.StringEntity(1)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.static {...}"
CGNodeType Method "org.apache.avro.generic.GenericRecordBuilder.GenericRecordBuilder(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.45.run(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.getOutputStream(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.addToEventAcceptedCount(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.3.checkClientTrusted(2)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexFilteringInterceptor.testExclusion(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.shouldReturnMillisFromPattern(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.TestMemoryChannelConcurrency(0)"
CGNodeType Method "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory.AdaptiveReceiveBufferSizePredictorFactory(3)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.getInstance(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.67.run(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.adjustRefresh(0)"
CGNodeType Method "org.apache.flume.Sink.start(0)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.start(0)"
CGNodeType Method "org.apache.flume.tools.HTTPServerConstraintUtil.HTTPServerConstraintUtil(0)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.takeEvent(1)"
CGNodeType Method "org.apache.flume.CounterGroup.set(2)"
CGNodeType Method "org.apache.http.entity.StringEntity.StringEntity(2)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.static {...}"
CGNodeType Method "org.apache.flume.SinkRunner.setSink(1)"
CGNodeType Method "org.apache.http.HttpResponse.getStatusLine(0)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.escapeString(7)"
CGNodeType Method "org.joda.time.DateTime.DateTime(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.static {...}"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.access$200(1)"
CGNodeType Method "junit.framework.Assert.fail(1)"
CGNodeType Method "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.38.{...}"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getAppendAcceptedCount(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelSize(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithCompressionOnClientAndServerOnLevel6(0)"
CGNodeType Method "junit.framework.Assert.assertTrue(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.run(0)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.setChannelProcessor(1)"
CGNodeType Method "org.mortbay.jetty.security.SslSocketConnector.setReuseAddress(1)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.PseudoTxnMemoryChannel(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.stop(0)"
CGNodeType Method "org.apache.commons.cli.ParseException.ParseException(1)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.validateMiniParse(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.init(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.71.{...}"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecSource(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.3.{...}"
CGNodeType Method "org.apache.flume.channel.BasicChannelSemantics.createTransaction(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.70.run(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.TestTransaction(1)"
CGNodeType Method "org.mortbay.jetty.security.SslSocketConnector.setKeystore(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getServerName(0)"
CGNodeType Method "org.apache.flume.serialization.TestAvroEventDeserializer.resetTest(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.tearDown(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.wideCharFileInit(2)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.testWaitForOneOf(0)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.afterCreate(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.33.{...}"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.testRemoveFields(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.testConfigureCalledWhenStarted(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.testWithPort(1)"
CGNodeType Method "org.apache.flume.interceptor.TestTimestampInterceptor.testPreserve(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogUtils(1)"
CGNodeType Method "org.apache.flume.source.DefaultSourceFactory.DefaultSourceFactory(0)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.getSource(0)"
CGNodeType Method "org.apache.flume.Sink.setChannel(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF32(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testRollback5(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.setDesiredState(2)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.static {...}"
CGNodeType Method "org.apache.thrift.server.TServer.AbstractServerArgs.inputTransportFactory(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.testManyThreads(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testSingleEventInArray(0)"
CGNodeType Method "org.apache.flume.conf.Configurable.configure(1)"
CGNodeType Method "org.apache.avro.generic.GenericDatumWriter.GenericDatumWriter(1)"
CGNodeType Method "org.apache.flume.source.StressSource.StressSource(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkBatchEmpty(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomBackoff(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.getName(0)"
CGNodeType Method "org.apache.commons.io.HexDump.dump(4)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getContentLength(0)"
CGNodeType Method "org.jboss.netty.bootstrap.ConnectionlessBootstrap.setPipelineFactory(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogUtils(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.stop(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.access$302(2)"
CGNodeType Method "org.apache.flume.source.ExecSource.ExecRunnable.timeout(0)"
CGNodeType Method "com.google.common.cache.CacheBuilder.newBuilder(0)"
CGNodeType Method "org.apache.flume.api.HostInfo.HostInfo(3)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getSkEventDrainAttempt(1)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.process(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.configure(1)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.setLifecycleState(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.interruptTest(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.7.run(0)"
CGNodeType Method "org.apache.flume.interceptor.TestStaticInterceptor.testCustomKeyValue(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.64.run(0)"
CGNodeType Method "org.apache.http.client.methods.HttpTrace.HttpTrace(1)"
CGNodeType Method "org.apache.flume.formatter.output.BucketPath.static {...}"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.SupervisorPolicy(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isUserInRole(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementEventReceivedCount(0)"
CGNodeType Method "org.apache.flume.Sink.setName(1)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.ThriftSink(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoringType.values(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.listFiles(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.12.{...}"
CGNodeType Method "org.apache.flume.util.RandomOrderSelector.RandomOrderSelector(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.getSinks(0)"
CGNodeType Method "org.apache.commons.cli.GnuParser.GnuParser(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(2)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocalPort(0)"
CGNodeType Method "org.slf4j.Logger.isDebugEnabled(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.access$200(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testClose2(0)"
CGNodeType Method "org.apache.flume.channel.ChannelSelectorFactory.create(2)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.doBegin(0)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.close(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.4.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.assertSkCounterState(9)"
CGNodeType Method "org.apache.flume.util.OrderSelector.setMaxTimeOut(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.configure(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.stop(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRandomOneActiveSink(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.testHappyPath3(0)"
CGNodeType Method "org.apache.flume.PollableSource.Status.values(0)"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.convert(1)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.setSyncInterval(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.static {...}"
CGNodeType Method "org.apache.flume.TestCounterGroup.setUp(0)"
CGNodeType Method "org.apache.mina.core.service.IoHandlerAdapter.IoHandlerAdapter(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.isValid(2)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.TimestampInterceptor(1)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.validateAvroFile(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.setSource(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.18.run(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.NamedComponent.setName(1)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.static {...}"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State.values(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.51.run(0)"
CGNodeType Method "org.apache.flume.ChannelSelector.setChannels(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset(1)"
CGNodeType Method "org.apache.flume.sink.SinkProcessorFactoryTest.test(0)"
CGNodeType Method "org.apache.flume.source.AbstractSource.getName(0)"
CGNodeType Method "org.apache.flume.channel.MockEvent.MockEvent(2)"
CGNodeType Method "org.apache.flume.source.ThriftSource.getName(0)"
CGNodeType Method "org.apache.flume.Sink.Status.equals(1)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testIgnorePattern(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.readEvents(1)"
CGNodeType Method "org.apache.flume.client.avro.SimpleTextLineEventReader.readEvent(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testTake1(0)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.EventDrivenSourceRunner(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.informSinkFailed(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.47.{...}"
CGNodeType Method "org.apache.flume.serialization.AbstractAvroEventSerializer.supportsReopen(0)"
CGNodeType Method "org.joda.time.DateTime.plusMonths(1)"
CGNodeType Method "org.apache.flume.interceptor.TestTimestampInterceptor.testBasic(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getAppendBatchAcceptedCount(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getSession(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.3.run(0)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.stop(0)"
CGNodeType Method "org.apache.flume.source.TestSpoolDirectorySource.testReconfigure(0)"
CGNodeType Method "org.apache.flume.PollableSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.flush(0)"
CGNodeType Method "org.slf4j.LoggerFactory.getLogger(1)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer.TestRegexExtractorInterceptorMillisSerializer(0)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.getEvent(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getAppendBatchReceivedCount(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.getLastFileRead(0)"
CGNodeType Method "org.apache.flume.serialization.EventDeserializer.readEvent(0)"
CGNodeType Method "org.apache.flume.serialization.TestDurablePositionTracker.testPartialTrackerFile(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.SSLChannelFactory.SSLChannelFactory(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getSession(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$300(1)"
CGNodeType Method "org.fest.reflect.field.FieldName.ofType(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelConcurrency.testTransactionConcurrency(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.setBackOff(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.41.{...}"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.getHeaders(0)"
CGNodeType Method "org.apache.flume.ChannelSelector.getOptionalChannels(1)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.sink.AvroSink.stop(0)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.createAvroFile(2)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkProcessor.setSinks(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.1.doStart(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.convert(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.mark(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.AvroSource(0)"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.close(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkProcessorCounter.SinkProcessorCounter(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogUtils(3)"
CGNodeType Method "org.apache.flume.channel.MockEvent.MockEvent(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.42.{...}"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.MonitoredCounterGroup(3)"
CGNodeType Method "com.google.common.collect.Lists.newLinkedList(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.23.run(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersForAllMatchGroups(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.AbstractRpcSink(0)"
CGNodeType Method "org.apache.flume.util.OrderSelector.createIterator(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.setName(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getChannelFillPercentage(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.static {...}"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.3.{...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.register(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.incrementEventTakeAttemptCount(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testSslProcessWithTrustStore(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.TestMemoryChannel(0)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$202(2)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.access$200(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChChannelSize(1)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.start(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerFactory.EventSerializerFactory(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinBackoffFailureRecovery(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.getMarkPosition(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.process(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromUrl(0)"
CGNodeType Method "org.apache.flume.CounterGroup.toString(0)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.stop(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.TestLifecycleSupervisor(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.static {...}"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader8(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.getSimpleEvents(1)"
CGNodeType Method "org.apache.flume.tools.GetJavaProperty.main(1)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.init(0)"
CGNodeType Method "org.apache.flume.instrumentation.util.TestJMXPollUtil.TestJMXPollUtil(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.setName(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.AcceptHandler(1)"
CGNodeType Method "org.apache.flume.serialization.AvroEventDeserializer.close(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testExtractBadEvent1(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.access$002(2)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.messageReceived(2)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.static {...}"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementBatchCompleteCount(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.getName(0)"
CGNodeType Method "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getParameterValues(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getAppendAcceptedCount(0)"
CGNodeType Method "org.apache.flume.sink.TestDefaultSinkFactory.TestDefaultSinkFactory(0)"
CGNodeType Method "org.apache.flume.ChannelException.ChannelException(2)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.TestHTTPSource(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannelTransaction.setUp(0)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.Type[].clone(0)"
CGNodeType Method "org.apache.flume.serialization.DurablePositionTracker.DurablePositionTracker(2)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer.serialize(1)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.State.valueOf(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8OverlyLongSequence(1)"
CGNodeType Method "org.apache.flume.SystemClock.currentTimeMillis(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSourceHandler.configure(1)"
CGNodeType Method "org.apache.flume.conf.Configurables.ensureRequiredNonNull(2)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsServer(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.getName(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.static {...}"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.toString(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.FlumeHTTPServlet(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.39.{...}"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileRandomly(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.start(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingFailMalformed(0)"
CGNodeType Method "org.apache.flume.source.http.JSONHandler.static {...}"
CGNodeType Method "org.apache.flume.source.TestStressSource.TestStressSource(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getHostname(0)"
CGNodeType Method "org.apache.flume.source.BasicSourceSemantics.doStart(0)"
CGNodeType Method "org.jboss.netty.handler.ssl.SslHandler.SslHandler(1)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.verifyConnection(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.static {...}"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.setHeaders(1)"
CGNodeType Method "org.apache.flume.source.ThriftSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getRevision(0)"
CGNodeType Method "org.apache.avro.generic.GenericRecord.get(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testBadEventBadEvent(0)"
CGNodeType Method "org.apache.mina.core.session.IoSession.getLocalAddress(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.getName(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalArgument(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.setName(1)"
CGNodeType Method "org.apache.flume.source.SyslogUDPSource.access$000(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getStopTime(0)"
CGNodeType Method "org.apache.flume.source.ExecSource.StderrReader.start(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.isValid(2)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.setIsGanglia3(1)"
CGNodeType Method "org.apache.avro.generic.GenericDatumReader.GenericDatumReader(1)"
CGNodeType Method "org.apache.flume.Sink.Status.valueOf(1)"
CGNodeType Method "org.apache.flume.sink.AvroSink.static {...}"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.ensureOpen(0)"
CGNodeType Method "org.apache.flume.Sink.getName(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.close(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext(1)"
CGNodeType Method "org.apache.flume.api.RpcClient.getBatchSize(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.Builder(2)"
CGNodeType Method "org.apache.thrift.protocol.TCompactProtocol.Factory.Factory(0)"
CGNodeType Method "org.joda.time.DateTime.isBefore(1)"
CGNodeType Method "org.apache.flume.serialization.DecodeErrorPolicy.ordinal(0)"
CGNodeType Method "org.apache.flume.api.RpcClientFactory.getDefaultInstance(3)"
CGNodeType Method "org.apache.flume.ChannelException.ChannelException(1)"
CGNodeType Method "org.mortbay.jetty.security.ConstraintMapping.setMethod(1)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.getSchema(0)"
CGNodeType Method "org.apache.flume.source.http.TestJSONHandler.testMultipleEvents(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.46.{...}"
CGNodeType Method "org.apache.flume.serialization.EventSerializerFactory.getInstance(3)"
CGNodeType Method "org.apache.flume.source.ExecSource.start(0)"
CGNodeType Method "org.apache.avro.Schema.Parser.Parser(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSourceHandler.getEvents(1)"
CGNodeType Method "junit.framework.TestCase.assertTrue(2)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.58.run(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleException.LifecycleException(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.buildEvent(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(2)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testMarkReset(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.generateUtf8NonUnicodeSequence(1)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.getChannel(0)"
CGNodeType Method "org.apache.flume.serialization.TestSyslogAvroEventSerializer.TestSyslogAvroEventSerializer(0)"
CGNodeType Method "org.apache.flume.Source.start(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.start(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounterMBean.getEventTakeSuccessCount(0)"
CGNodeType Method "org.apache.flume.Sink.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.bodyAsString(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.stop(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.configure(1)"
CGNodeType Method "org.apache.flume.sink.TestLoggerSink.testAppend(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.4.{...}"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.PathManager(0)"
CGNodeType Method "org.apache.flume.Context.getSubProperties(1)"
CGNodeType Method "org.apache.flume.event.TestEventHelper.testNonPrintable(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.NameAndSerializer(2)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.testOptionalChannels(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleException.LifecycleException(2)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.RegexFilteringInterceptor(3)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testProcess(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.ChannelCounter(1)"
CGNodeType Method "org.apache.flume.sink.ThriftSink.process(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy(1)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.access$600(1)"
CGNodeType Method "org.apache.flume.api.HostInfo.getHostName(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.intercept(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.static {...}"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.run(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.getSeverity(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.reset(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.parseEvent(2)"
CGNodeType Method "org.apache.flume.source.AbstractSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionFailedCount(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testIllegalArgument(1)"
CGNodeType Method "org.apache.flume.PollableSource.Status.valueOf(1)"
CGNodeType Method "org.apache.flume.source.SyslogParser.SyslogParser(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(2)"
CGNodeType Method "org.apache.flume.serialization.TestLineDeserializer.testSimpleViaBuilder(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader5(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.xdr_string(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix(1)"
CGNodeType Method "org.apache.avro.AvroRemoteException.AvroRemoteException(2)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testInitiallyEmptyDirectory(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testDestinationExistsAndSameFileNotOnWindows(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.72.{...}"
CGNodeType Method "org.apache.flume.serialization.ResettableInputStream.reset(0)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.channel.MultiplexingChannelSelector.getOptionalChannels(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testHttps(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(2)"
CGNodeType Method "org.apache.flume.sink.SinkGroup.getProcessor(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.set(2)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.getAlgorithm(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testCapacityOverload(0)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testUtf8DecodeErrorHandlingReplace(0)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.TestBucketPath(0)"
CGNodeType Method "org.fest.reflect.field.FieldType.in(1)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.testDoConfigureThrowsException(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.fail(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.{...}"
CGNodeType Method "org.apache.flume.serialization.LineDeserializer.mark(0)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelSelectorType.getChannelSelectorClassName(0)"
CGNodeType Method "org.apache.flume.event.JSONEvent.setCharset(1)"
CGNodeType Method "org.apache.flume.instrumentation.MonitoredCounterGroup.get(1)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testShellCommandComplex(0)"
CGNodeType Method "org.apache.flume.source.TestStressSource.getLastProcessedEventList(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.40.{...}"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(1)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.Mode.values(0)"
CGNodeType Method "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.AvroEventSerializerConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.getChannelProcessor(0)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.testExceptionStartup(0)"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoMandatory(0)"
CGNodeType Method "org.apache.flume.PollableSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.70.{...}"
CGNodeType Method "org.apache.flume.serialization.TestBodyTextEventSerializer.TestBodyTextEventSerializer(0)"
CGNodeType Method "com.google.common.io.Files.touch(1)"
CGNodeType Method "org.apache.avro.Schema.create(1)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.getChannel(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.36.run(0)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.getAllChannels(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.newBuilder(0)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.FailoverSinkProcessor(0)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testUseIP(0)"
CGNodeType Method "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.write(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getBatchCompleteCount(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(0)"
CGNodeType Method "org.apache.flume.source.DefaultSourceFactory.getClass(1)"
CGNodeType Method "org.apache.flume.interceptor.TestHostInterceptor.testClobber(0)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testPutTake(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.static {...}"
CGNodeType Method "org.apache.flume.SinkRunner.toString(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.incrementAppendBatchReceivedCount(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.testException(3)"
CGNodeType Method "org.apache.flume.source.MockSource.getName(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleController.static {...}"
CGNodeType Method "org.apache.avro.generic.GenericRecordBuilder.build(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testLifecycle(0)"
CGNodeType Method "org.apache.flume.client.avro.EventReader.close(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.TestSyslogTcpSource(0)"
CGNodeType Method "org.apache.flume.channel.MockChannel.MockTransaction.begin(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.LifecycleState(2)"
CGNodeType Method "org.apache.flume.Channel.start(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testPut2(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.stop(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.getName(0)"
CGNodeType Method "org.apache.flume.channel.ReplicatingChannelSelector.getChannelNameMap(0)"
CGNodeType Method "org.apache.flume.interceptor.Interceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.3.run(0)"
CGNodeType Method "org.apache.avro.file.DataFileWriter.sync(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.DoNothingSource(1)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType.values(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.rollCurrentFile(1)"
CGNodeType Method "org.apache.flume.formatter.output.TestBucketPath.testDateFormatSeconds(0)"
CGNodeType Method "org.apache.flume.event.SimpleEvent.SimpleEvent(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.61.run(0)"
CGNodeType Method "org.apache.flume.serialization.FlumeEventAvroEventSerializer.convert(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getIntHeader(1)"
CGNodeType Method "org.apache.flume.serialization.Resettable.mark(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.20.run(0)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.seek(1)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.set(2)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getEventDrainSuccessCount(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.42.run(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.getAppendReceivedCount(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.access$202(2)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.access$000(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.1.{...}"
CGNodeType Method "org.apache.flume.source.TestSyslogTcpSource.testKeepFields(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource.doStop(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.getEventTakeAttemptCount(0)"
CGNodeType Method "org.apache.flume.sink.AbstractRpcSink.access$000(1)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.2.{...}"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.runKeepFieldsTest(1)"
CGNodeType Method "org.apache.flume.channel.TestReplicatingChannelSelector.TestReplicatingChannelSelector(0)"
CGNodeType Method "org.apache.flume.SinkProcessor.process(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleException.LifecycleException(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testIllegalState(1)"
CGNodeType Method "org.apache.flume.SinkRunner.PollingRunner.access$102(2)"
CGNodeType Method "org.apache.flume.sink.AbstractSink.start(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.Constants.Constants(0)"
CGNodeType Method "org.apache.commons.io.FileUtils.forceDelete(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.setSinks(1)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorType[].clone(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy.AlwaysRestartPolicy(0)"
CGNodeType Method "org.apache.flume.channel.ChannelUtils.1.run(0)"
CGNodeType Method "com.google.common.cache.Cache.get(1)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testBigBatchDeserializarionUTF16(0)"
CGNodeType Method "org.apache.flume.conf.channel.ChannelType.equals(1)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.access$200(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.register(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleAware.stop(0)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deleteMetaFile(0)"
CGNodeType Method "org.apache.flume.CounterGroup.setCounters(1)"
CGNodeType Method "org.apache.flume.sink.AbstractSinkSelector.AbstractSinkSelector(0)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getBranch(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.55.run(0)"
CGNodeType Method "org.apache.flume.ChannelSelector.getRequiredChannels(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.after(0)"
CGNodeType Method "org.jboss.netty.buffer.ChannelBuffer.readable(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(0)"
CGNodeType Method "org.apache.flume.source.SpoolDirectorySource.toString(0)"
CGNodeType Method "org.apache.flume.instrumentation.ChannelCounter.static {...}"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testSslSinkWithNonTrustedCert(0)"
CGNodeType Method "org.apache.flume.sink.NullSink.configure(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleState.equals(1)"
CGNodeType Method "org.apache.flume.channel.BasicTransactionSemantics.doClose(0)"
CGNodeType Method "org.apache.commons.cli.HelpFormatter.printHelp(5)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.reset(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getBatchEmptyCount(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testGetTransaction(0)"
CGNodeType Method "org.apache.flume.source.TestThriftSource.testAppend(0)"
CGNodeType Method "org.apache.flume.source.TestExecSource.testMonitoredCounterGroup(0)"
CGNodeType Method "org.apache.flume.tools.PlatformDetect.PlatformDetect(0)"
CGNodeType Method "com.google.common.base.Throwables.propagate(1)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.setName(1)"
CGNodeType Method "org.apache.flume.serialization.TransientPositionTracker.getTarget(0)"
CGNodeType Method "org.apache.thrift.server.TServer.stop(0)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.static {...}"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testChannelException(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.ordinal(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.getSleepTime(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.Constants.static {...}"
CGNodeType Method "org.apache.flume.ChannelSelector.getAllChannels(0)"
CGNodeType Method "org.jboss.netty.channel.Channel.getLocalAddress(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.take(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(2)"
CGNodeType Method "org.apache.flume.source.TestSyslogUdpSource.testKeepFields(0)"
CGNodeType Method "org.apache.flume.channel.TestChannelUtils.3.1.run(0)"
CGNodeType Method "org.apache.flume.Channel.setName(1)"
CGNodeType Method "org.apache.flume.sink.TestLoggerSink.setUp(0)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.Builder.configure(1)"
CGNodeType Method "org.apache.flume.tools.VersionInfo.getBuildVersion(0)"
CGNodeType Method "org.apache.flume.NamedComponent.getName(0)"
CGNodeType Method "org.apache.flume.source.SequenceGeneratorSource.configure(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.TestResettableFileInputStream(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryTransaction.MemoryTransaction(2)"
CGNodeType Method "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.static {...}"
CGNodeType Method "org.apache.flume.channel.TestMultiplexingChannelSelector.testNoDefault(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.27.run(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializerType.valueOf(1)"
CGNodeType Method "org.apache.flume.serialization.TestResettableFileInputStream.testLatin1DecodeErrorHandlingFailMalformed(0)"
CGNodeType Method "org.apache.flume.source.TestMultiportSyslogTCPSource.testCharsetParsing(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.static {...}"
CGNodeType Method "org.apache.flume.Channel.getName(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.toStringMap(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPBadRequestException.HTTPBadRequestException(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.doPost(2)"
CGNodeType Method "org.apache.flume.channel.AbstractChannelSelector.getName(0)"
CGNodeType Method "com.google.common.util.concurrent.ThreadFactoryBuilder.setNameFormat(1)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.TestMonitoredCounterGroup(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.get(1)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.moveActiveToDeadAndGetNext(0)"
CGNodeType Method "org.apache.flume.sink.LoggerSink.start(0)"
CGNodeType Method "org.apache.flume.source.ThriftSource.start(0)"
CGNodeType Method "org.apache.flume.sink.TestLoadBalancingSinkProcessor.testRoundRobinNoFailure(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.addFormats(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.access$100(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testBasicCommitFailureAndBufferSizeChanges(0)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.accept(1)"
CGNodeType Method "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory(1)"
CGNodeType Method "org.apache.flume.sink.FailoverSinkProcessor.configure(1)"
CGNodeType Method "org.apache.flume.channel.TestMemoryChannel.testCapacityBufferEmptyingAfterTakeCommit(0)"
CGNodeType Method "org.apache.flume.instrumentation.TestMonitoredCounterGroup.getChEventPutAttempt(1)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.testDoStartThrowsException(0)"
CGNodeType Method "org.apache.flume.interceptor.TimestampInterceptor.initialize(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.3.checkServerTrusted(2)"
CGNodeType Method "org.apache.flume.tools.TestTimestampRoundDownUtil.testRoundDownTimeStampSeconds(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getAppendBatchReceivedCount(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.MockAvroServer.append(1)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testSuperviseSupervisor(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.getOutputStream(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementConnectionFailedCount(0)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getScheme(0)"
CGNodeType Method "org.apache.flume.source.TestBasicSourceSemantics.TestBasicSourceSemantics(0)"
CGNodeType Method "org.apache.flume.conf.source.SourceType.valueOf(1)"
CGNodeType Method "org.apache.flume.api.RpcClient.appendBatch(1)"
CGNodeType Method "org.apache.flume.source.http.HTTPSourceConfigurationConstants.HTTPSourceConfigurationConstants(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.testConsumeFileOldest(0)"
CGNodeType Method "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sessionOpened(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.incrementEventDrainSuccessCount(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.testBatchWithVariousEncoding(1)"
CGNodeType Method "org.apache.flume.source.TestAbstractPollableSource.1.doConfigure(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.getLocale(0)"
CGNodeType Method "org.apache.flume.channel.AbstractChannel.AbstractChannel(0)"
CGNodeType Method "org.apache.flume.source.SyslogUtils.SyslogStatus.valueOf(1)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.configure(1)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.getPollFrequency(0)"
CGNodeType Method "org.apache.flume.source.TestSequenceGeneratorSource.testBatchProcessWithLifeCycle(0)"
CGNodeType Method "org.apache.flume.PollableSource.process(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.3.getAcceptedIssuers(0)"
CGNodeType Method "org.apache.flume.sink.RollingFileSink.setDirectory(1)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getStopTime(0)"
CGNodeType Method "org.apache.flume.channel.MockEvent.setHeaders(1)"
CGNodeType Method "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.run(0)"
CGNodeType Method "org.apache.flume.source.SyslogTcpSource.access$300(1)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounter.SinkCounter(1)"
CGNodeType Method "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.isRequestedSessionIdFromURL(0)"
CGNodeType Method "org.apache.avro.specific.SpecificRecordBase.SpecificRecordBase(0)"
CGNodeType Method "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler.addAll(1)"
CGNodeType Method "org.apache.flume.serialization.ResettableFileInputStream.length(0)"
CGNodeType Method "org.apache.flume.source.NetcatSource.NetcatSocketHandler.access$802(2)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounterMBean.getAppendReceivedCount(0)"
CGNodeType Method "org.apache.flume.SinkRunner.access$300(0)"
CGNodeType Method "org.apache.flume.instrumentation.SinkCounterMBean.getConnectionCreatedCount(0)"
CGNodeType Method "org.apache.flume.source.EventDrivenSourceRunner.setSource(1)"
CGNodeType Method "org.apache.flume.source.NetcatSource.AcceptHandler.run(0)"
CGNodeType Method "org.apache.flume.interceptor.HostInterceptor.close(0)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testRequestWithNoCompression(0)"
CGNodeType Method "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.commit(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.setUp(2)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.testExtractBadEventLarge(0)"
CGNodeType Method "org.apache.flume.formatter.output.PathManager.nextFile(0)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.RoundRobinSinkSelector(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.getLifecycleState(0)"
CGNodeType Method "org.apache.flume.instrumentation.http.HTTPMetricsServer.start(0)"
CGNodeType Method "org.apache.flume.interceptor.InterceptorBuilderFactory.newInstance(1)"
CGNodeType Method "org.apache.flume.source.TestAvroSource.testLifecycle(0)"
CGNodeType Method "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.setOffset(1)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.access$200(0)"
CGNodeType Method "org.mortbay.jetty.security.Constraint.setAuthenticate(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.static {...}"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.testRequestWithCompressionOnClientAndServerOnLevel0(0)"
CGNodeType Method "org.apache.flume.channel.TestBasicChannelSemantics.testClose5(0)"
CGNodeType Method "org.apache.flume.source.TestPollableSourceRunner.testLifecycle(0)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.{...}"
CGNodeType Method "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate.value(0)"
CGNodeType Method "org.apache.flume.serialization.EventSerializer.flush(0)"
CGNodeType Method "org.apache.flume.serialization.TransferStateFileMeta.Builder.fieldSetFlags(0)"
CGNodeType Method "org.apache.flume.source.http.TestHTTPSource.1.getType(0)"
CGNodeType Method "org.apache.flume.source.AvroSource.setChannelProcessor(1)"
CGNodeType Method "org.apache.flume.client.avro.TestSpoolingFileLineReader.testEmptyDirectoryAfterCommittingFile(0)"
CGNodeType Method "org.apache.mina.core.buffer.IoBuffer.rewind(0)"
CGNodeType Method "org.apache.flume.source.TestSyslogUtils.TestHeader1(0)"
CGNodeType Method "org.apache.flume.instrumentation.SourceCounter.addToEventReceivedCount(1)"
CGNodeType Method "org.apache.flume.source.PollableSourceRunner.PollingRunner.run(0)"
CGNodeType Method "org.apache.flume.channel.MemoryChannel.MemoryTransaction.doRollback(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldNotAllowConfigurationWithoutRegex(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogAvroEventSerializer(1)"
CGNodeType Method "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector.start(0)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.SSLChannelPipelineFactory(3)"
CGNodeType Method "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testNoNewline(0)"
CGNodeType Method "org.apache.flume.interceptor.TestRegexExtractorInterceptor.shouldExtractAddHeadersUsingSpecifiedSerializer(0)"
CGNodeType Method "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.SyslogEvent(0)"
CGNodeType Method "org.mortbay.jetty.nio.SelectChannelConnector.setPort(1)"
CGNodeType Method "org.apache.flume.lifecycle.TestLifecycleSupervisor.testUnsuperviseServce(0)"
CGNodeType Method "org.apache.flume.interceptor.CensoringInterceptor.Builder.Builder(0)"
CGNodeType Method "org.apache.flume.source.http.HTTPSource.start(0)"
CGNodeType Method "org.apache.flume.instrumentation.GangliaServer.getHostsFromString(1)"
CGNodeType Method "org.apache.flume.sink.TestAvroSink.setUp(0)"
CGNodeType Method "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.run(0)"
CGNodeType Class "org.apache.flume.source.DefaultSourceFactory"
CGNodeType Class "org.apache.flume.interceptor.TimestampInterceptor.1"
CGNodeType Class "org.jboss.netty.channel.AdaptiveReceiveBufferSizePredictorFactory"
CGNodeType Class "org.apache.flume.serialization.EventSerializerType"
CGNodeType Class "org.apache.commons.lang.StringUtils"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptorPassThroughSerializer"
CGNodeType Class "org.apache.flume.api.ThriftTestingSource"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleController"
CGNodeType Class "org.apache.flume.source.NetcatSource.NetcatSocketHandler"
CGNodeType Class "org.apache.flume.serialization.Resettable"
CGNodeType Class "org.apache.flume.thrift.ThriftSourceProtocol.Iface"
CGNodeType Class "org.apache.flume.source.TestAvroSource"
CGNodeType Class "org.apache.mina.transport.socket.nio.NioSession"
CGNodeType Class "org.apache.flume.source.ExecSource.ExecRunnable"
CGNodeType Class "org.apache.flume.source.NetcatSourceConfigurationConstants"
CGNodeType Class "org.apache.flume.sink.RollingFileSink.1"
CGNodeType Class "com.google.gson.GsonBuilder"
CGNodeType Class "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4"
CGNodeType Class "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.1"
CGNodeType Class "org.apache.flume.source.http.HTTPSource.1"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5"
CGNodeType Class "org.apache.flume.serialization.TransferStateFileMeta"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1"
CGNodeType Class "org.apache.flume.source.SequenceGeneratorSource"
CGNodeType Class "org.apache.flume.SourceRunner"
CGNodeType Class "org.apache.flume.interceptor.TestRegexExtractorInterceptorMillisSerializer"
CGNodeType Class "org.apache.thrift.protocol.TCompactProtocol"
CGNodeType Class "org.apache.avro.generic.GenericData.Record"
CGNodeType Class "org.apache.flume.serialization.PositionTracker"
CGNodeType Class "org.apache.flume.serialization.LineDeserializer.Builder"
CGNodeType Class "org.apache.avro.Schema"
CGNodeType Class "org.jboss.netty.channel.ChannelException"
CGNodeType Class "org.apache.flume.ChannelSelector"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable"
CGNodeType Class "org.mortbay.jetty.security.SecurityHandler"
CGNodeType Class "org.apache.thrift.transport.TFastFramedTransport.Factory"
CGNodeType Class "org.apache.flume.Transaction.TransactionState"
CGNodeType Class "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory"
CGNodeType Class "org.apache.flume.serialization.TransferStateFileMeta.1"
CGNodeType Class "org.apache.flume.serialization.TestAvroEventDeserializer"
CGNodeType Class "org.jboss.netty.handler.codec.compression.ZlibDecoder"
CGNodeType Class "org.apache.flume.source.ThriftSource.1"
CGNodeType Class "org.apache.flume.tools.PlatformDetect"
CGNodeType Class "com.google.common.base.Joiner"
CGNodeType Class "org.apache.avro.AvroRemoteException"
CGNodeType Class "org.apache.flume.source.TestSpoolDirectorySource"
CGNodeType Class "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder[]"
CGNodeType Class "org.apache.flume.sink.LoggerSink"
CGNodeType Class "org.jboss.netty.channel.SimpleChannelHandler"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest"
CGNodeType Class "org.apache.avro.generic.GenericData"
CGNodeType Class "org.apache.flume.source.MockSource"
CGNodeType Class "com.google.common.base.Strings"
CGNodeType Class "org.apache.flume.annotations.InterfaceStability"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer"
CGNodeType Class "org.apache.flume.source.ThriftSource"
CGNodeType Class "junit.framework.TestCase"
CGNodeType Class "org.apache.avro.Schema.Type"
CGNodeType Class "org.apache.flume.source.ExecSourceConfigurationConstants"
CGNodeType Class "org.jboss.netty.handler.ipfilter.PatternRule"
CGNodeType Class "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants"
CGNodeType Class "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1"
CGNodeType Class "org.apache.flume.source.AvroSource.2"
CGNodeType Class "com.google.common.base.Throwables"
CGNodeType Class "org.apache.flume.source.AvroSource.1"
CGNodeType Class "org.apache.commons.io.FileUtils"
CGNodeType Class "org.apache.flume.sink.DefaultSinkProcessor"
CGNodeType Class "org.apache.flume.sink.TestDefaultSinkFactory"
CGNodeType Class "byte[]"
CGNodeType Class "org.apache.flume.sink.AbstractSinkSelector"
CGNodeType Class "org.apache.flume.formatter.output.BucketPath"
CGNodeType Class "org.apache.flume.serialization.ResettableTestStringInputStream"
CGNodeType Class "org.apache.http.impl.client.DefaultHttpClient"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel"
CGNodeType Class "org.apache.flume.channel.ChannelSelectorFactory"
CGNodeType Class "org.apache.flume.sink.AbstractRpcSink.1"
CGNodeType Class "org.apache.flume.conf.sink.SinkProcessorType"
CGNodeType Class "org.fest.reflect.field.FieldType"
CGNodeType Class "org.apache.mina.core.session.DefaultIoSessionDataStructureFactory"
CGNodeType Class "org.apache.avro.Schema.Parser"
CGNodeType Class "org.apache.flume.source.SyslogParser.1"
CGNodeType Class "org.apache.flume.tools.DirectMemoryUtils"
CGNodeType Class "org.apache.flume.source.SyslogParser"
CGNodeType Class "org.apache.flume.serialization.AbstractAvroEventSerializer"
CGNodeType Class "org.apache.flume.serialization.FlumeEventAvroEventSerializer.1"
CGNodeType Class "org.apache.thrift.server.TServer.AbstractServerArgs"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleState[]"
CGNodeType Class "org.apache.thrift.server.TNonblockingServer"
CGNodeType Class "org.apache.avro.data.RecordBuilder"
CGNodeType Class "org.apache.flume.source.SyslogSourceConfigurationConstants"
CGNodeType Class "org.jboss.netty.handler.ipfilter.IpFilterRuleHandler"
CGNodeType Class "org.apache.avro.ipc.specific.SpecificResponder"
CGNodeType Class "org.apache.flume.sink.TestLoadBalancingSinkProcessor"
CGNodeType Class "org.apache.flume.lifecycle.TestLifecycleController"
CGNodeType Class "org.apache.flume.source.SyslogUtils.SyslogFormatter"
CGNodeType Class "org.apache.flume.source.AbstractPollableSource"
CGNodeType Class "org.apache.flume.lifecycle.TestLifecycleSupervisor.1"
CGNodeType Class "org.apache.flume.interceptor.InterceptorType[]"
CGNodeType Class "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptorSerializer"
CGNodeType Class "org.apache.flume.serialization.EventDeserializer"
CGNodeType Class "org.apache.avro.specific.SpecificRecord"
CGNodeType Class "org.apache.thrift.transport.TNonblockingServerSocket"
CGNodeType Class "org.mortbay.jetty.security.ConstraintMapping"
CGNodeType Class "org.jboss.netty.channel.ChannelHandlerContext"
CGNodeType Class "org.apache.commons.cli.CommandLine"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer"
CGNodeType Class "org.jboss.netty.bootstrap.ConnectionlessBootstrap"
CGNodeType Class "org.apache.avro.generic.GenericRecord"
CGNodeType Class "org.apache.flume.util.RoundRobinOrderSelector"
CGNodeType Class "org.apache.flume.channel.MockChannel"
CGNodeType Class "org.apache.flume.conf.ConfigurableComponent"
CGNodeType Class "org.joda.time.DateTime"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleState"
CGNodeType Class "org.apache.flume.sink.TestAvroSink.MockAvroServer"
CGNodeType Class "org.apache.flume.serialization.ResettableFileInputStream.1"
CGNodeType Class "org.apache.flume.instrumentation.MonitoredCounterGroup.Type[]"
CGNodeType Class "org.apache.flume.sink.ThriftSink"
CGNodeType Class "org.apache.flume.serialization.TestResettableFileInputStream"
CGNodeType Class "org.apache.flume.channel.BasicTransactionSemantics.State"
CGNodeType Class "junit.framework.Assert"
CGNodeType Class "org.apache.flume.interceptor.TimestampInterceptor"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.AlwaysRestartPolicy"
CGNodeType Class "org.jboss.netty.channel.MessageEvent"
CGNodeType Class "org.apache.flume.conf.sink.SinkGroupConfiguration"
CGNodeType Class "org.apache.mina.transport.socket.nio.NioSocketAcceptor"
CGNodeType Class "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants"
CGNodeType Class "org.apache.flume.PollableSource"
CGNodeType Class "org.apache.flume.channel.BasicChannelSemantics"
CGNodeType Class "org.apache.http.client.methods.HttpPost"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils.3"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils.2"
CGNodeType Class "org.apache.flume.source.BasicSourceSemantics"
CGNodeType Class "org.apache.flume.serialization.ResettableFileInputStream"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils.1"
CGNodeType Class "org.apache.flume.instrumentation.MonitoringType[]"
CGNodeType Class "org.apache.flume.serialization.DecodeErrorPolicy"
CGNodeType Class "org.apache.flume.instrumentation.util.JMXTestUtils"
CGNodeType Class "org.apache.flume.source.http.TestJSONHandler.1"
CGNodeType Class "org.apache.thrift.server.TServer"
CGNodeType Class "org.apache.thrift.transport.TFastFramedTransport"
CGNodeType Class "org.apache.flume.channel.MemoryChannel"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer.Builder"
CGNodeType Class "org.apache.flume.channel.BasicTransactionSemantics.State[]"
CGNodeType Class "org.apache.flume.api.RpcClientConfigurationConstants"
CGNodeType Class "org.apache.http.StatusLine"
CGNodeType Class "org.apache.flume.source.AbstractSource"
CGNodeType Class "org.apache.flume.serialization.LengthMeasurable"
CGNodeType Class "org.apache.flume.client.avro.TestSpoolingFileLineReader"
CGNodeType Class "org.jboss.netty.channel.ChannelPipeline"
CGNodeType Class "org.apache.flume.sink.LoadBalancingSinkProcessor"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptor.1"
CGNodeType Class "org.apache.flume.annotations.InterfaceAudience"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.Status"
CGNodeType Class "org.apache.flume.source.TestSyslogUdpSource"
CGNodeType Class "com.google.common.base.Optional"
CGNodeType Class "org.apache.mina.core.session.IdleStatus"
CGNodeType Class "org.apache.flume.client.avro.SimpleTextLineEventReader"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils.3.1"
CGNodeType Class "org.apache.flume.annotations.InterfaceAudience.Private"
CGNodeType Class "org.apache.http.conn.ssl.SSLSocketFactory"
CGNodeType Class "org.apache.flume.conf.ConfigurationException"
CGNodeType Class "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet"
CGNodeType Class "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter"
CGNodeType Class "org.apache.flume.instrumentation.GangliaServer.GangliaCollector"
CGNodeType Class "org.apache.flume.formatter.output.TextDelimitedOutputFormatter"
CGNodeType Class "org.apache.avro.generic.GenericDatumWriter"
CGNodeType Class "org.apache.flume.interceptor.TestTimestampInterceptor"
CGNodeType Class "org.apache.flume.source.MultiportSyslogTCPSource"
CGNodeType Class "org.fest.reflect.field.Invoker"
CGNodeType Class "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel"
CGNodeType Class "org.apache.http.client.methods.HttpOptions"
CGNodeType Class "org.apache.flume.FlumeException"
CGNodeType Class "org.apache.avro.file.DataFileWriter"
CGNodeType Class "org.apache.flume.interceptor.RegexFilteringInterceptor"
CGNodeType Class "org.mortbay.jetty.nio.SelectChannelConnector"
CGNodeType Class "org.apache.avro.io.DatumReader"
CGNodeType Class "org.apache.avro.io.BinaryEncoder"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy"
CGNodeType Class "org.apache.flume.channel.TestChannelProcessor"
CGNodeType Class "org.apache.mina.core.buffer.IoBuffer"
CGNodeType Class "org.apache.flume.source.SyslogUtils.1"
CGNodeType Class "org.apache.avro.SchemaNormalization"
CGNodeType Class "org.apache.flume.tools.TestTimestampRoundDownUtil"
CGNodeType Class "org.jboss.netty.handler.ssl.SslHandler"
CGNodeType Class "org.apache.flume.instrumentation.ChannelCounterMBean"
CGNodeType Class "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent"
CGNodeType Class "org.jboss.netty.bootstrap.ServerBootstrap"
CGNodeType Class "org.mortbay.jetty.Request"
CGNodeType Class "org.fest.reflect.core.Reflection"
CGNodeType Class "org.jboss.netty.buffer.ChannelBuffers"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.Purger"
CGNodeType Class "org.apache.flume.tools.GetJavaProperty"
CGNodeType Class "org.mortbay.jetty.security.SslSocketConnector"
CGNodeType Class "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction"
CGNodeType Class "org.apache.http.client.methods.HttpTrace"
CGNodeType Class "org.apache.flume.api.RpcClient"
CGNodeType Class "org.apache.flume.source.TestSyslogTcpSource"
CGNodeType Class "org.apache.flume.interceptor.TestHostInterceptor"
CGNodeType Class "org.jboss.netty.handler.codec.compression.ZlibEncoder"
CGNodeType Class "org.apache.flume.Event"
CGNodeType Class "org.apache.avro.reflect.ReflectDatumWriter"
CGNodeType Class "org.apache.flume.source.avro.AvroFlumeEvent"
CGNodeType Class "org.mockito.stubbing.OngoingStubbing"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode[]"
CGNodeType Class "org.jboss.netty.channel.Channel"
CGNodeType Class "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.Builder"
CGNodeType Class "org.apache.flume.sink.FailoverSinkProcessor"
CGNodeType Class "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer"
CGNodeType Class "org.apache.flume.interceptor.TimestampInterceptor.Constants"
CGNodeType Class "org.apache.flume.serialization.TestBodyTextEventSerializer"
CGNodeType Class "org.apache.flume.conf.ComponentConfiguration"
CGNodeType Class "org.apache.flume.instrumentation.SourceCounterMBean"
CGNodeType Class "org.apache.flume.instrumentation.SinkCounter"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelTransaction"
CGNodeType Class "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector"
CGNodeType Class "org.apache.flume.source.TestAbstractPollableSource"
CGNodeType Class "org.apache.flume.serialization.BodyTextEventSerializer.Builder"
CGNodeType Class "org.apache.flume.tools.VersionInfo"
CGNodeType Class "org.apache.flume.source.StressSource"
CGNodeType Class "org.apache.flume.source.TestBasicSourceSemantics"
CGNodeType Class "org.mortbay.jetty.Server"
CGNodeType Class "org.apache.flume.source.TestThriftSource.SubmitHelper"
CGNodeType Class "org.apache.flume.source.ExecSource"
CGNodeType Class "org.apache.flume.event.JSONEvent"
CGNodeType Class "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink"
CGNodeType Class "org.apache.flume.sink.TestRollingFileSink"
CGNodeType Class "org.joda.time.format.DateTimeFormat"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType"
CGNodeType Class "org.apache.flume.annotations.InterfaceStability.Unstable"
CGNodeType Class "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler"
CGNodeType Class "org.apache.flume.formatter.output.TestBucketPath"
CGNodeType Class "org.apache.avro.io.DatumWriter"
CGNodeType Class "com.google.common.collect.ImmutableMap"
CGNodeType Class "org.apache.flume.ChannelFullException"
CGNodeType Class "org.apache.flume.source.SyslogTcpSource.1"
CGNodeType Class "org.apache.flume.sink.SinkGroup"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.25.1"
CGNodeType Class "org.apache.commons.cli.ParseException"
CGNodeType Class "org.apache.flume.source.avro.Status"
CGNodeType Class "org.apache.flume.interceptor.HostInterceptor"
CGNodeType Class "com.google.common.cache.CacheBuilder"
CGNodeType Class "org.apache.avro.generic.GenericDatumReader"
CGNodeType Class "com.google.common.util.concurrent.ThreadFactoryBuilder"
CGNodeType Class "org.apache.flume.annotations.InterfaceStability.Stable"
CGNodeType Class "org.apache.flume.source.SyslogUtils.Mode"
CGNodeType Class "org.apache.flume.interceptor.TestRegexFilteringInterceptor"
CGNodeType Class "org.apache.avro.ipc.NettyTransceiver"
CGNodeType Class "org.apache.flume.serialization.EventSerializerFactory"
CGNodeType Class "org.apache.commons.cli.GnuParser"
CGNodeType Class "org.apache.flume.instrumentation.GangliaServer"
CGNodeType Class "org.apache.flume.Sink"
CGNodeType Class "org.apache.flume.api.RpcClientFactory"
CGNodeType Class "org.apache.flume.interceptor.TestRegexExtractorInterceptorPassThroughSerializer"
CGNodeType Class "org.apache.flume.source.PollableSourceRunner"
CGNodeType Class "org.apache.flume.interceptor.CensoringInterceptor.1"
CGNodeType Class "org.apache.flume.interceptor.CensoringInterceptor.Builder"
CGNodeType Class "org.apache.flume.interceptor.StaticInterceptor.Builder"
CGNodeType Class "org.apache.flume.source.TestExecSource"
CGNodeType Class "org.apache.flume.api.ThriftTestingSource.HandlerType"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy"
CGNodeType Class "org.apache.flume.source.http.FlumeHttpServletRequestWrapper"
CGNodeType Class "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1"
CGNodeType Class "com.google.common.collect.Maps"
CGNodeType Class "org.apache.flume.source.TestPollableSourceRunner"
CGNodeType Class "org.apache.flume.source.ThriftSource.ThriftSourceHandler"
CGNodeType Class "org.apache.flume.sink.NullSink"
CGNodeType Class "org.apache.flume.sink.SinkProcessorFactory"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannel"
CGNodeType Class "org.apache.flume.source.avro.AvroSourceProtocol"
CGNodeType Class "org.apache.flume.source.ExecSource.StderrReader"
CGNodeType Class "org.apache.flume.serialization.EventDeserializerType"
CGNodeType Class "org.apache.flume.channel.MockEvent"
CGNodeType Class "org.apache.flume.serialization.EventSerializerType[]"
CGNodeType Class "org.mortbay.jetty.handler.AbstractHandler"
CGNodeType Class "org.apache.flume.SinkRunner.PollingRunner"
CGNodeType Class "org.apache.flume.sink.SinkProcessorFactoryTest"
CGNodeType Class "org.apache.flume.interceptor.Interceptor"
CGNodeType Class "org.apache.flume.source.http.HTTPBadRequestException"
CGNodeType Class "org.apache.flume.EventDrivenSource"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge"
CGNodeType Class "org.apache.flume.source.SyslogUDPSource.1"
CGNodeType Class "org.apache.flume.thrift.ThriftFlumeEvent"
CGNodeType Class "org.apache.flume.instrumentation.SourceCounter"
CGNodeType Class "org.apache.mina.transport.socket.SocketSessionConfig"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.3"
CGNodeType Class "org.apache.flume.instrumentation.ChannelCounter"
CGNodeType Class "org.apache.flume.interceptor.HostInterceptor.Constants"
CGNodeType Class "org.apache.flume.channel.MultiplexingChannelSelector"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.4"
CGNodeType Class "org.apache.flume.interceptor.CensoringInterceptor"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.1"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.2"
CGNodeType Class "org.apache.commons.lang.SystemUtils"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.5"
CGNodeType Class "org.apache.flume.serialization.TestSyslogAvroEventSerializer"
CGNodeType Class "org.apache.flume.source.http.HTTPSource"
CGNodeType Class "org.apache.flume.serialization.EventSerDe"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.1"
CGNodeType Class "org.apache.thrift.transport.TNonblockingServerTransport"
CGNodeType Class "org.apache.flume.channel.BasicTransactionSemantics"
CGNodeType Class "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder"
CGNodeType Class "org.apache.flume.interceptor.StaticInterceptor.1"
CGNodeType Class "org.apache.flume.source.SyslogUtils.SyslogStatus"
CGNodeType Class "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.2"
CGNodeType Class "org.mortbay.jetty.servlet.Context"
CGNodeType Class "org.mortbay.jetty.Connector[]"
CGNodeType Class "org.apache.flume.sink.TestFailoverSinkProcessor"
CGNodeType Class "org.apache.flume.source.http.HTTPSourceConfigurationConstants"
CGNodeType Class "org.apache.flume.conf.BasicConfigurationConstants"
CGNodeType Class "org.apache.flume.tools.TestVersionInfo"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree"
CGNodeType Class "org.apache.flume.serialization.EventDeserializer.Builder"
CGNodeType Class "org.apache.flume.ChannelException"
CGNodeType Class "org.apache.flume.thrift.Status"
CGNodeType Class "org.apache.flume.instrumentation.MonitoredCounterGroup.Type"
CGNodeType Class "org.apache.flume.serialization.BodyTextEventSerializer.1"
CGNodeType Class "org.apache.flume.SinkFactory"
CGNodeType Class "org.apache.flume.serialization.SyslogAvroEventSerializer"
CGNodeType Class "org.apache.flume.source.AvroSource"
CGNodeType Class "org.apache.flume.sink.RollingFileSink"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo"
CGNodeType Class "org.apache.flume.sink.LoadBalancingSinkProcessor.SinkSelector"
CGNodeType Class "org.apache.flume.conf.channel.ChannelSelectorConfiguration"
CGNodeType Class "org.mockito.stubbing.Stubber"
CGNodeType Class "org.apache.flume.channel.TestReplicatingChannelSelector"
CGNodeType Class "org.apache.flume.source.SpoolDirectorySource"
CGNodeType Class "org.apache.avro.ipc.specific.SpecificRequestor"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.9"
CGNodeType Class "org.apache.flume.EventDeliveryException"
CGNodeType Class "com.google.common.collect.Lists"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.8"
CGNodeType Class "org.apache.flume.sink.TestThriftSink"
CGNodeType Class "org.apache.flume.SinkProcessor"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.3"
CGNodeType Class "org.apache.flume.source.ExecSource.ExecRunnable.1"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.2"
CGNodeType Class "org.apache.flume.SinkRunner"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.1"
CGNodeType Class "org.apache.flume.Channel"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.7"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.6"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.5"
CGNodeType Class "org.jboss.netty.channel.ChannelHandler"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.4"
CGNodeType Class "org.apache.flume.channel.PseudoTxnMemoryChannel"
CGNodeType Class "org.apache.flume.channel.MockChannel.1"
CGNodeType Class "com.google.common.base.Charsets"
CGNodeType Class "org.apache.flume.instrumentation.SinkProcessorCounter"
CGNodeType Class "org.apache.flume.conf.Configurable"
CGNodeType Class "org.apache.avro.Schema.Field"
CGNodeType Class "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer"
CGNodeType Class "org.apache.flume.source.TestSequenceGeneratorSource"
CGNodeType Class "org.apache.avro.specific.SpecificRecordBase"
CGNodeType Class "int[]"
CGNodeType Class "org.apache.flume.instrumentation.MonitorService"
CGNodeType Class "org.apache.flume.sink.AbstractSink"
CGNodeType Class "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware"
CGNodeType Class "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate"
CGNodeType Class "org.apache.flume.instrumentation.http.TestHTTPMetricsServer"
CGNodeType Class "org.apache.flume.client.avro.ReliableEventReader"
CGNodeType Class "org.apache.avro.AvroRuntimeException"
CGNodeType Class "org.apache.flume.channel.AbstractChannel"
CGNodeType Class "org.apache.http.HttpResponse"
CGNodeType Class "com.google.common.base.Preconditions"
CGNodeType Class "org.apache.flume.Transaction"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency"
CGNodeType Class "org.apache.flume.util.RandomOrderSelector"
CGNodeType Class "org.mortbay.jetty.servlet.ServletHolder"
CGNodeType Class "org.apache.flume.source.http.HTTPSourceHandler"
CGNodeType Class "org.apache.flume.source.TestAvroSource.CompressionChannelFactory"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils.1.1"
CGNodeType Class "org.apache.flume.sink.AvroSink"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError"
CGNodeType Class "org.apache.flume.event.TestEventHelper"
CGNodeType Class "org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory"
CGNodeType Class "org.apache.flume.source.TestDefaultSourceFactory"
CGNodeType Class "org.apache.flume.serialization.EventDeserializerFactory"
CGNodeType Class "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer"
CGNodeType Class "org.apache.thrift.protocol.TCompactProtocol.Factory"
CGNodeType Class "com.google.gson.Gson"
CGNodeType Class "org.apache.flume.source.SyslogUtils.Mode[]"
CGNodeType Class "org.jboss.netty.channel.Channels"
CGNodeType Class "org.apache.flume.conf.sink.SinkType"
CGNodeType Class "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable"
CGNodeType Class "org.apache.flume.source.NetcatSource.AcceptHandler"
CGNodeType Class "org.apache.avro.file.DataFileConstants"
CGNodeType Class "org.apache.flume.instrumentation.ChannelProcessorCounter"
CGNodeType Class "org.apache.avro.io.EncoderFactory"
CGNodeType Class "org.apache.flume.sink.TestLoggerSink"
CGNodeType Class "org.joda.time.format.ISODateTimeFormat"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy[]"
CGNodeType Class "com.google.common.collect.ImmutableSet"
CGNodeType Class "org.apache.flume.source.TestPollableSourceRunner.1"
CGNodeType Class "org.apache.flume.sink.TestAvroSink"
CGNodeType Class "org.apache.flume.channel.MemoryChannel.MemoryTransaction"
CGNodeType Class "org.apache.http.entity.StringEntity"
CGNodeType Class "org.apache.flume.source.EventDrivenSourceRunner"
CGNodeType Class "com.google.common.cache.CacheLoader"
CGNodeType Class "org.apache.flume.serialization.EventSerDe.Builder"
CGNodeType Class "org.apache.flume.interceptor.TestRegexExtractorInterceptor"
CGNodeType Class "org.apache.flume.source.SyslogUtils.SyslogStatus[]"
CGNodeType Class "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector"
CGNodeType Class "org.apache.flume.interceptor.HostInterceptor.Builder"
CGNodeType Class "org.apache.flume.thrift.ThriftSourceProtocol"
CGNodeType Class "org.apache.flume.serialization.BodyTextEventSerializer"
CGNodeType Class "org.apache.flume.source.TestAbstractPollableSource.1"
CGNodeType Class "org.apache.commons.cli.Options"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType[]"
CGNodeType Class "org.apache.flume.interceptor.TestCensoringInterceptor"
CGNodeType Class "org.apache.commons.codec.binary.Hex"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode"
CGNodeType Class "org.apache.flume.TestContext"
CGNodeType Class "org.apache.flume.Transaction.TransactionState[]"
CGNodeType Class "org.apache.flume.instrumentation.http.HTTPMetricsServer.1"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor.SupervisorPolicy.OnceOnlyPolicy"
CGNodeType Class "org.apache.flume.source.SyslogUtils"
CGNodeType Class "org.apache.flume.source.PollableSourceRunner.PollingRunner"
CGNodeType Class "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1"
CGNodeType Class "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer"
CGNodeType Class "com.google.common.io.Files"
CGNodeType Class "org.jboss.netty.channel.ChannelFuture"
CGNodeType Class "org.jboss.netty.channel.socket.oio.OioDatagramChannelFactory"
CGNodeType Class "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory"
CGNodeType Class "org.mortbay.jetty.security.Constraint"
CGNodeType Class "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction"
CGNodeType Class "org.apache.avro.file.SeekableInput"
CGNodeType Class "org.apache.flume.formatter.output.PathManager"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader"
CGNodeType Class "org.apache.flume.formatter.output.EventFormatter"
CGNodeType Class "org.slf4j.Logger"
CGNodeType Class "org.apache.flume.source.SyslogTcpSource"
CGNodeType Class "org.joda.time.format.DateTimeFormatter"
CGNodeType Class "org.apache.commons.cli.CommandLineParser"
CGNodeType Class "com.google.gson.JsonSyntaxException"
CGNodeType Class "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder"
CGNodeType Class "org.apache.flume.source.TestThriftSource"
CGNodeType Class "org.apache.flume.util.OrderSelector"
CGNodeType Class "org.apache.flume.serialization.Seekable"
CGNodeType Class "com.google.common.cache.Cache"
CGNodeType Class "org.apache.flume.Event[]"
CGNodeType Class "org.apache.flume.channel.DefaultChannelFactory"
CGNodeType Class "org.apache.flume.channel.ChannelUtils"
CGNodeType Class "org.apache.flume.sink.FixedOrderSelector"
CGNodeType Class "org.apache.flume.serialization.TestDurablePositionTracker"
CGNodeType Class "org.jboss.netty.channel.ChannelFactory"
CGNodeType Class "org.apache.flume.client.avro.AvroCLIClient"
CGNodeType Class "org.apache.flume.sink.AbstractSinkProcessor"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.35"
CGNodeType Class "org.apache.flume.interceptor.RegexFilteringInterceptor.1"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.36"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.33"
CGNodeType Class "com.google.gson.reflect.TypeToken"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.34"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.39"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.37"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.38"
CGNodeType Class "org.apache.flume.SystemClock"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleSupervisor"
CGNodeType Class "org.apache.avro.ipc.Server"
CGNodeType Class "org.apache.flume.interceptor.StaticInterceptor.Constants"
CGNodeType Class "org.apache.flume.instrumentation.http.HTTPMetricsServer"
CGNodeType Class "org.apache.flume.instrumentation.MonitoringType"
CGNodeType Class "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader"
CGNodeType Class "org.apache.flume.sink.TestAvroSink.1"
CGNodeType Class "org.apache.flume.tools.HTTPServerConstraintUtil"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.31"
CGNodeType Class "org.apache.flume.source.AbstractEventDrivenSource"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.32"
CGNodeType Class "org.apache.flume.interceptor.TimestampInterceptor.Builder"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.30"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1"
CGNodeType Class "org.apache.flume.channel.MockChannel.MockTransaction"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.46"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.47"
CGNodeType Class "org.apache.flume.source.http.TestJSONHandler"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.44"
CGNodeType Class "org.apache.flume.PollableSource.Status[]"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.45"
CGNodeType Class "org.apache.flume.channel.TestMultiplexingChannelSelector"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.48"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.49"
CGNodeType Class "org.apache.commons.io.HexDump"
CGNodeType Class "org.apache.flume.source.TestBasicSourceSemantics.1"
CGNodeType Class "org.apache.flume.source.http.TestHTTPSource.ResultWrapper"
CGNodeType Class "org.apache.flume.source.SyslogUDPSource.syslogHandler"
CGNodeType Class "org.apache.flume.tools.TimestampRoundDownUtil"
CGNodeType Class "org.apache.flume.interceptor.Interceptor.Builder"
CGNodeType Class "org.apache.flume.channel.AbstractChannelSelector"
CGNodeType Class "org.apache.flume.sink.AbstractRpcSink"
CGNodeType Class "org.apache.flume.interceptor.StaticInterceptor"
CGNodeType Class "org.apache.flume.serialization.DurablePositionTracker"
CGNodeType Class "org.apache.flume.PollableSource.Status"
CGNodeType Class "org.apache.flume.source.TestBasicSourceSemantics.3"
CGNodeType Class "org.apache.flume.source.TestBasicSourceSemantics.2"
CGNodeType Class "org.apache.flume.source.TestStressSource"
CGNodeType Class "org.apache.flume.client.avro.TestSpoolingFileLineReader.1"
CGNodeType Class "org.apache.flume.Constants"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.42"
CGNodeType Class "org.apache.flume.serialization.EventSerializer"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.43"
CGNodeType Class "org.apache.flume.source.TestAvroSource.SSLChannelFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.40"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.41"
CGNodeType Class "org.apache.avro.generic.GenericRecordBuilder"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.13"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.14"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.11"
CGNodeType Class "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.12"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.17"
CGNodeType Class "org.apache.flume.ChannelFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.18"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.15"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.16"
CGNodeType Class "org.apache.flume.event.EventBuilder"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.19"
CGNodeType Class "org.apache.commons.cli.HelpFormatter"
CGNodeType Class "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder"
CGNodeType Class "org.apache.flume.conf.Configurables"
CGNodeType Class "org.apache.avro.specific.SpecificDatumWriter"
CGNodeType Class "org.apache.flume.sink.TestLoadBalancingSinkProcessor.1"
CGNodeType Class "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder"
CGNodeType Class "org.apache.flume.api.HostInfo"
CGNodeType Class "org.apache.avro.specific.SpecificRecordBuilderBase"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.10"
CGNodeType Class "org.fest.reflect.field.FieldName"
CGNodeType Class "org.apache.flume.channel.TestChannelUtils"
CGNodeType Class "org.apache.flume.instrumentation.util.TestJMXPollUtil"
CGNodeType Class "org.apache.commons.lang.RandomStringUtils"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.24"
CGNodeType Class "org.apache.flume.source.NetcatSource"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.25"
CGNodeType Class "org.apache.flume.serialization.TransferStateFileMeta.Builder"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.22"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.23"
CGNodeType Class "org.apache.mina.core.service.IoHandlerAdapter"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.28"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.29"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.26"
CGNodeType Class "org.apache.flume.serialization.FlumeEventAvroEventSerializer.Builder"
CGNodeType Class "org.apache.flume.source.TestMultiportSyslogTCPSource"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.27"
CGNodeType Class "org.apache.thrift.TException"
CGNodeType Class "org.apache.flume.conf.channel.ChannelSelectorType"
CGNodeType Class "org.apache.flume.SourceFactory"
CGNodeType Class "org.apache.flume.channel.ChannelUtils.3"
CGNodeType Class "org.apache.flume.channel.ChannelUtils.2"
CGNodeType Class "org.apache.flume.channel.ChannelUtils.1"
CGNodeType Class "org.apache.avro.ipc.NettyServer"
CGNodeType Class "org.apache.flume.channel.ChannelUtils.4"
CGNodeType Class "org.apache.flume.source.TestBasicSourceSemantics.DoNothingSource"
CGNodeType Class "org.apache.flume.serialization.RemoteMarkable"
CGNodeType Class "org.apache.flume.instrumentation.SinkCounterMBean"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.20"
CGNodeType Class "org.apache.flume.sink.DefaultSinkFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.21"
CGNodeType Class "org.apache.flume.Source"
CGNodeType Class "org.apache.flume.annotations.InterfaceStability.Evolving"
CGNodeType Class "org.apache.flume.annotations.InterfaceAudience.Public"
CGNodeType Class "org.jboss.netty.buffer.ChannelBuffer"
CGNodeType Class "org.slf4j.LoggerFactory"
CGNodeType Class "org.apache.flume.Clock"
CGNodeType Class "org.apache.flume.source.SyslogUDPSource"
CGNodeType Class "org.apache.flume.thrift.ThriftSourceProtocol.Processor"
CGNodeType Class "org.apache.flume.source.TestSyslogUtils"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.71"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.72"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.70"
CGNodeType Class "org.apache.flume.event.EventHelper"
CGNodeType Class "org.apache.avro.file.CodecFactory"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleException"
CGNodeType Class "org.apache.flume.lifecycle.TestLifecycleSupervisor"
CGNodeType Class "org.apache.flume.api.RpcClientFactory.ClientType"
CGNodeType Class "org.apache.flume.instrumentation.TestMonitoredCounterGroup"
CGNodeType Class "org.apache.flume.interceptor.TestStaticInterceptor"
CGNodeType Class "org.apache.avro.specific.SpecificDatumReader"
CGNodeType Class "com.google.common.collect.Sets"
CGNodeType Class "org.apache.flume.lifecycle.LifecycleAware"
CGNodeType Class "org.apache.thrift.transport.TServerTransport"
CGNodeType Class "org.apache.flume.conf.source.SourceType"
CGNodeType Class "org.apache.flume.event.SimpleEvent"
CGNodeType Class "org.apache.thrift.server.TNonblockingServer.AbstractNonblockingServerArgs"
CGNodeType Class "org.apache.flume.serialization.EventSerializer.Builder"
CGNodeType Class "org.jboss.netty.channel.ChannelPipelineFactory"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer.1"
CGNodeType Class "org.apache.flume.Sink.Status"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics"
CGNodeType Class "org.apache.avro.file.DataFileReader"
CGNodeType Class "org.apache.flume.serialization.TransientPositionTracker"
CGNodeType Class "org.apache.flume.NamedComponent"
CGNodeType Class "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler"
CGNodeType Class "org.apache.flume.sink.FailoverSinkProcessor.FailedSink"
CGNodeType Class "org.apache.flume.serialization.LineDeserializer"
CGNodeType Class "org.apache.flume.serialization.EventDeserializerType[]"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.57"
CGNodeType Class "org.apache.flume.annotations.InterfaceAudience.LimitedPrivate"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.58"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.55"
CGNodeType Class "org.apache.flume.source.http.JSONHandler.1"
CGNodeType Class "org.apache.flume.TestCounterGroup"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.56"
CGNodeType Class "org.mortbay.jetty.Connector"
CGNodeType Class "org.apache.flume.source.TestAvroSource.PermissiveTrustManager"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.59"
CGNodeType Class "org.apache.flume.conf.channel.ChannelType"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency.2"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency.1"
CGNodeType Class "org.apache.flume.channel.ReplicatingChannelSelector"
CGNodeType Class "org.apache.flume.serialization.TestLineDeserializer"
CGNodeType Class "org.apache.flume.channel.ChannelProcessor"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency.5"
CGNodeType Class "org.apache.flume.Sink.Status[]"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency.4"
CGNodeType Class "org.apache.flume.source.TestAvroSource.1"
CGNodeType Class "org.apache.flume.channel.TestMemoryChannelConcurrency.3"
CGNodeType Class "org.apache.flume.instrumentation.MonitoredCounterGroup"
CGNodeType Class "org.apache.flume.interceptor.HostInterceptor.1"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.50"
CGNodeType Class "org.apache.flume.serialization.SyslogAvroEventSerializer.Builder"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.53"
CGNodeType Class "org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.54"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.51"
CGNodeType Class "org.apache.flume.interceptor.InterceptorBuilderFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.52"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.68"
CGNodeType Class "org.apache.flume.interceptor.InterceptorType"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.69"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.66"
CGNodeType Class "org.apache.flume.interceptor.InterceptorChain"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.67"
CGNodeType Class "org.apache.flume.serialization.AvroEventDeserializer"
CGNodeType Class "org.apache.flume.source.TestSyslogParser"
CGNodeType Class "org.apache.flume.VersionAnnotation"
CGNodeType Class "org.apache.flume.client.avro.TestBufferedLineReader"
CGNodeType Class "org.apache.flume.instrumentation.util.JMXPollUtil"
CGNodeType Class "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants"
CGNodeType Class "org.apache.flume.CounterGroup"
CGNodeType Class "org.apache.flume.source.http.JSONHandler"
CGNodeType Class "char[]"
CGNodeType Class "org.apache.thrift.transport.TServerSocket"
CGNodeType Class "org.mockito.Mockito"
CGNodeType Class "org.apache.flume.serialization.ResettableInputStream"
CGNodeType Class "org.apache.flume.Context"
CGNodeType Class "org.apache.flume.interceptor.RegexExtractorInterceptor"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.60"
CGNodeType Class "org.apache.flume.client.avro.EventReader"
CGNodeType Class "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.61"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.64"
CGNodeType Class "org.apache.mina.core.session.IoSession"
CGNodeType Class "org.apache.flume.serialization.DecodeErrorPolicy[]"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.65"
CGNodeType Class "org.apache.avro.io.DecoderFactory"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.62"
CGNodeType Class "org.apache.flume.serialization.FlumeEventAvroEventSerializer"
CGNodeType Class "org.apache.flume.channel.TestBasicChannelSemantics.63"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.OLDEST"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.maxLineLength"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.COUNTER_GROUP_START_TIME"
CGNodeType Field "org.apache.flume.source.TestAvroSource.selectedPort"
CGNodeType Field "org.apache.flume.sink.LoggerSink.logger"
CGNodeType Field "org.apache.flume.thrift.Status.OK"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerType.LINE"
CGNodeType Field "org.apache.flume.serialization.TestResettableFileInputStream.file"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.TEXT"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.desiredState"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.60.this$0"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.defaultCharset"
CGNodeType Field "org.apache.flume.Transaction.TransactionState.Closed"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.DEFAULT_MULTIPLEX_HEADER"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.logger"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.2.this$0"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.byteBuf"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.backoff"
CGNodeType Field "org.apache.flume.Sink.Status.$VALUES"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.51.val$transaction"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_LOG_STDERR"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.54.val$transaction"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.header"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.68.this$0"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.serialVersionUID"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.hostname"
CGNodeType Field "org.apache.flume.sink.TestRollingFileSink.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.57.val$transaction"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.file"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.48.val$transaction"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DELETE_POLICY"
CGNodeType Field "org.apache.flume.sink.DefaultSinkProcessor.lifecycleState"
CGNodeType Field "org.apache.flume.source.ExecSource.StderrReader.input"
CGNodeType Field "org.apache.flume.serialization.BodyTextEventSerializer.appendNewline"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$startGate"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.INPUT_CHARSET"
CGNodeType Field "org.apache.flume.source.NetcatSource.acceptThreadShouldStop"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogStatus.$VALUES"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.eventSize"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.jettyServer"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_INPUT_CHARSET"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.syslogHandler.this$0"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.keepFields"
CGNodeType Field "org.apache.flume.conf.channel.ChannelSelectorType.OTHER"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_BATCHSIZE"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.1.this$0"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.counterGroup"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DELETE_POLICY"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.counterGroup"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.maxsize"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_BATCH_ACCEPTED"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.regex"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BUFFER_MAX_LINE_LENGTH"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.patternRuleConfigDefinition"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.server"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.context"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.1.this$0"
CGNodeType Field "org.apache.flume.source.SyslogParser.rfc3164Format"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.4.val$max"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockChannel.events"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$startGate"
CGNodeType Field "org.apache.flume.sink.NullSink.DFLT_BATCH_SIZE"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP_DFLT"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.baseNameHeader"
CGNodeType Field "org.apache.flume.source.StressSource.lastSent"
CGNodeType Field "org.apache.flume.SinkRunner.counterGroup"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.counterGroup"
CGNodeType Field "org.apache.flume.source.AvroSource.port"
CGNodeType Field "org.apache.flume.channel.MockChannel.events"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_CHANNEL_CAPACITY"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.logger"
CGNodeType Field "org.apache.flume.formatter.output.PathManager.baseDirectory"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.sourceCounter"
CGNodeType Field "org.apache.commons.lang.SystemUtils.IS_OS_WINDOWS"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.keyStorePath"
CGNodeType Field "org.apache.flume.source.ThriftSource.server"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_SELECTOR_PREFIX"
CGNodeType Field "org.apache.flume.serialization.AbstractAvroEventSerializer.dataFileWriter"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.1.this$0"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.$VALUES"
CGNodeType Field "org.apache.flume.source.SyslogParser.timestampCache"
CGNodeType Field "org.apache.flume.event.EventHelper.LOGGER"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.$VALUES"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_SPOOLED_FILE_SUFFIX"
CGNodeType Field "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.MAXLINE_DFLT"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.72.val$transaction"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.this$0"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleController.maxNumberOfChecks"
CGNodeType Field "org.apache.flume.source.AvroSource.logger"
CGNodeType Field "org.apache.flume.serialization.TestResettableFileInputStream.meta"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.46.this$0"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.target"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.excludeEvents"
CGNodeType Field "org.apache.flume.source.TestDefaultSourceFactory.sourceFactory"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.$VALUES"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.purger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.49.this$0"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.logStderr"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.failedSinks"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.basenameHeader"
CGNodeType Field "org.apache.flume.source.NetcatSource.counterGroup"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.builderClass"
CGNodeType Field "org.apache.flume.source.BasicSourceSemantics.name"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.BATCH_SIZE"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SINK_OBJ_NAME_PREFIX"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.data1"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.8.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.keystore"
CGNodeType Field "org.apache.flume.source.SyslogParser.logger"
CGNodeType Field "org.apache.flume.serialization.TestFlumeEventAvroEventSerializer.TESTFILE"
CGNodeType Field "org.apache.flume.serialization.TestDurablePositionTracker.logger"
CGNodeType Field "org.apache.flume.source.NetcatSource.NetcatSocketHandler.counterGroup"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC3164_1"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.this$0"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.lastPushToChannel"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.random"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.33.val$transaction"
CGNodeType Field "org.apache.flume.sink.SinkGroup.conf"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.4.this$0"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_BATCH_SIZE"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$committedTakes"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFileName"
CGNodeType Field "org.apache.flume.source.ExecSource.sourceCounter"
CGNodeType Field "org.apache.flume.source.AvroSource.enableIpFilter"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.id"
CGNodeType Field "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_ACKEVENT"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.11.this$0"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ATTR_STOP_TIME"
CGNodeType Field "org.apache.flume.source.NetcatSource.hostName"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.19.this$0"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.bodyWithTandH"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.38.this$0"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SERIALIZER"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.time"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.71.this$0"
CGNodeType Field "org.apache.flume.Sink.Status.READY"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_HANDLER_PREFIX"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.runner"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.60.val$transaction"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.logger"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystore"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.DEFAULT_BIND"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.hitChannelException"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeByteCounter"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.63.val$transaction"
CGNodeType Field "com.google.common.base.Charsets.UTF_8"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerType"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.57.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.52.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.rules"
CGNodeType Field "org.apache.flume.sink.NullSink.DFLT_LOG_EVERY_N_EVENTS"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.66.val$transaction"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.39.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_RECEIVED"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionRolledBack"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.36.val$transaction"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.SAVED_BUF"
CGNodeType Field "org.apache.flume.source.NetcatSource.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.42.val$transaction"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.acceptor"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.queue"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.spoolDirectory"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.45.val$transaction"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.channelProcessor"
CGNodeType Field "org.apache.flume.source.NetcatSource.acceptThread"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.this$0"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.pollFrequency"
CGNodeType Field "org.apache.flume.sink.DefaultSinkProcessor.sink"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.lastModified"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.record"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.excludeEvents"
CGNodeType Field "org.apache.flume.source.SyslogUtils.prio"
CGNodeType Field "org.apache.flume.SinkRunner.PollingRunner.shouldStop"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.69.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_COMPLETE"
CGNodeType Field "org.apache.flume.source.SyslogUtils.1.$SwitchMap$org$apache$flume$source$SyslogUtils$Mode"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_CLOSED"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.30.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.41.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.16.this$0"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.channel"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.STOP_OR_ERROR"
CGNodeType Field "org.apache.flume.source.ExecSource.logStderr"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.27.this$0"
CGNodeType Field "org.apache.flume.source.AbstractSource.name"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.restart"
CGNodeType Field "org.apache.flume.channel.TestMultiplexingChannelSelector.config"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.trackerDirPath"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.time"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.fileNameHeader"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystoreType"
CGNodeType Field "org.apache.flume.client.avro.TestSpoolingFileLineReader.bufferMaxLineLength"
CGNodeType Field "org.apache.flume.source.AvroSource.PORT_KEY"
CGNodeType Field "org.apache.flume.source.ExecSource.bufferCount"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ROOT_OBJ_NAME_PREFIX"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_BIND"
CGNodeType Field "org.apache.flume.tools.DirectMemoryUtils.MAX_DIRECT_MEMORY_PARAM"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.spoolDirectory"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.VALUE_DEFAULT"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_CREATED"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.clientProps"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CHANNEL_OBJ_NAME_PREFIX"
CGNodeType Field "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_MAX_LINE_LENGTH"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.host1"
CGNodeType Field "org.apache.flume.source.SyslogUtils.msgBody"
CGNodeType Field "org.apache.flume.source.http.TestJSONHandler.handler"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.queueStored"
CGNodeType Field "org.apache.flume.channel.AbstractChannel.name"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.firstSeen"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_CHANNEL_SIZE"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptorMillisSerializer.formatter"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerType.OTHER"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.port"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_TAKE_ATTEMPT"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.KEY_DEFAULT"
CGNodeType Field "org.apache.flume.channel.ReplicatingChannelSelector.CONFIG_OPTIONAL"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.policy"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.logger"
CGNodeType Field "org.apache.flume.client.avro.TestSpoolingFileLineReader.tmpDir"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.33.this$0"
CGNodeType Field "org.apache.flume.source.NetcatSource.serverSocket"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.35.this$0"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.3.this$0"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$takeMapLock"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$committedPuts"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.ignorePattern"
CGNodeType Field "org.apache.flume.source.ThriftSource.CONFIG_BIND"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.mapType"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.24.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.22.this$0"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putByteCounter"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.offset"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.2.val$transaction"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.logger"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_BATCH_RECEVIED_COUNT"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_SHELL"
CGNodeType Field "org.apache.flume.source.StressSource.eventBatchList"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.shell"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.lastByteCapacity"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.sink"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.CONFIG_PORT"
CGNodeType Field "org.apache.flume.serialization.FlumeEventAvroEventSerializer.SCHEMA"
CGNodeType Field "org.apache.flume.SinkRunner.backoffSleepIncrement"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.ports"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.5.val$transaction"
CGNodeType Field "org.apache.flume.source.NetcatSourceConfigurationConstants.DEFAULT_MAX_LINE_LENGTH"
CGNodeType Field "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.out"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.8.val$transaction"
CGNodeType Field "org.apache.flume.source.AvroSource.2.this$0"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.remaining"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.maxBackoff"
CGNodeType Field "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.SYNC_INTERVAL_BYTES"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.metaFile"
CGNodeType Field "org.apache.flume.client.avro.SimpleTextLineEventReader.reader"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portCharsets"
CGNodeType Field "org.apache.flume.CounterGroup.name"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.written"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.name"
CGNodeType Field "org.apache.flume.instrumentation.util.TestJMXPollUtil.memChannel"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleController.shortestSleepDuration"
CGNodeType Field "org.apache.flume.source.TestAbstractPollableSource.1.this$0"
CGNodeType Field "org.apache.flume.source.avro.Status.OK"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogStatus.INVALID"
CGNodeType Field "org.apache.flume.serialization.BodyTextEventSerializer.logger"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.srv"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_EVENT_DRAIN_ATTEMPT"
CGNodeType Field "org.apache.flume.source.StressSource.maxSuccessfulEvents"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$startGate"
CGNodeType Field "org.apache.flume.serialization.TransferStateFileMeta.Builder.offset"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$endGate"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateFileName"
CGNodeType Field "org.apache.flume.instrumentation.MonitoringType.monitoringClass"
CGNodeType Field "org.apache.flume.source.AvroSource.patternRuleConfigDefinition"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.HEADER_AND_TEXT"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.cxnResetInterval"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.keepFields"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.deserializerContext"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_EVENT_DRAIN_ATTEMPT"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.schemaHashString"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.2.this$0"
CGNodeType Field "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.testFile"
CGNodeType Field "org.apache.flume.source.AvroSource.connectionCountUpdater"
CGNodeType Field "org.apache.flume.source.TestAvroSource.localhost"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.executor"
CGNodeType Field "org.apache.flume.interceptor.TimestampInterceptor.Constants.TIMESTAMP"
CGNodeType Field "org.apache.flume.source.ExecSource.restart"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.liveSinks"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.1.val$channel"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.baseNameHeader"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.val$channel"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.initialThreadId"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.ATTRIBUTES"
CGNodeType Field "org.apache.flume.source.ThriftSource.CONFIG_THREADS"
CGNodeType Field "org.apache.flume.source.SyslogUtils.isUdp"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_MSG_RFC3164_0"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.2.this$0"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sink"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.ThreadSafeDecoder.charset"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_HOST"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateBaseName"
CGNodeType Field "org.apache.flume.source.BasicSourceSemantics.channelProcessor"
CGNodeType Field "org.apache.flume.source.TestAbstractPollableSource.source"
CGNodeType Field "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.logger"
CGNodeType Field "org.apache.flume.source.AvroSource.keystoreType"
CGNodeType Field "org.apache.flume.source.SyslogUtils.isBadEvent"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deletePolicy"
CGNodeType Field "org.apache.flume.source.StressSource.maxTotalEvents"
CGNodeType Field "org.apache.flume.conf.sink.SinkProcessorType.OTHER"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.position"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.decodeErrorPolicy"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Supervisoree.status"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.body"
CGNodeType Field "org.apache.flume.source.ExecSource.StderrReader.logStderr"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_CHARSET"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.val$channel"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.inputCharset"
CGNodeType Field "org.apache.flume.sink.SinkGroup.processor"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.port"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.MAXLINE_KEY"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.keepFields"
CGNodeType Field "org.apache.flume.channel.AbstractChannelSelector.name"
CGNodeType Field "org.apache.flume.PollableSource.Status.READY"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.4.val$channel"
CGNodeType Field "org.apache.flume.instrumentation.util.TestJMXPollUtil.pmemChannel"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.logger"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Builder.header"
CGNodeType Field "org.apache.flume.source.SyslogUtils.Mode.PRIO"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.IGNORE_PAT"
CGNodeType Field "org.apache.flume.source.TestThriftSource.client"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.batchSize"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_PUT_SUCCESS"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.GANGLIA_DOUBLE_TYPE"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.schemaHash"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystoreType"
CGNodeType Field "org.apache.flume.sink.NullSink.logger"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.schema"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.channel"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.SERIALIZERS"
CGNodeType Field "org.apache.flume.source.http.TestJSONHandler.1.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.62.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.66.this$0"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.handler"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeen"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.trackerDirPath"
CGNodeType Field "org.apache.flume.source.avro.Status.FAILED"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.this$0"
CGNodeType Field "org.apache.flume.formatter.output.PathManager.currentFile"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.client"
CGNodeType Field "org.apache.flume.channel.ChannelSelectorFactory.LOGGER"
CGNodeType Field "org.apache.flume.sink.AbstractSink.name"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.BASE_TEST_SYSLOG_PORT"
CGNodeType Field "org.apache.flume.source.ThriftSource.logger"
CGNodeType Field "org.apache.flume.source.TestThriftSource.SubmitHelper.this$0"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.completedSuffix"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.counterGroup"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.regex"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.HASH"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.9.val$transaction"
CGNodeType Field "org.apache.flume.client.avro.TestSpoolingFileLineReader.logger"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.3.val$transaction"
CGNodeType Field "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE_DFLT"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.stamp1"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_MAX_BACKOFF"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.HOST"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.hostname"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.1.$SwitchMap$org$apache$flume$serialization$DecodeErrorPolicy"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.annotateFileName"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.serializer"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.sequence"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.val$test"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_EMPTY"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.SLEEP"
CGNodeType Field "org.apache.flume.source.ThriftSource.serverTransport"
CGNodeType Field "org.apache.flume.formatter.output.BucketPath.clock"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.55.this$0"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.datumWriter"
CGNodeType Field "org.apache.flume.sink.TestRollingFileSink.sink"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.keyStorePassword"
CGNodeType Field "org.apache.flume.source.AvroSource.IP_FILTER_KEY"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.36.this$0"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.fileName"
CGNodeType Field "org.apache.flume.source.AvroSource.server"
CGNodeType Field "org.apache.flume.source.ExecSource.runner"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.priority"
CGNodeType Field "org.apache.flume.sink.AbstractSinkProcessor.state"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_CHANNEL"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.lifecycleAware"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.hostname"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.51.this$0"
CGNodeType Field "org.apache.flume.SourceRunner.source"
CGNodeType Field "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.APPEND_NEWLINE_DFLT"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.fileReader"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.headers"
CGNodeType Field "org.apache.flume.sink.DefaultSinkFactory.logger"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.file"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_BATCH_UNDERFLOW"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.reader"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.buffer"
CGNodeType Field "org.apache.flume.source.ThriftSource.bindAddress"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.optionalChannels"
CGNodeType Field "org.apache.flume.source.SyslogParser.timePat"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_ERROR"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SOURCE"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DECODE_ERROR_POLICY"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_CHANNEL_SIZE"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.64.val$transaction"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.serverSocket"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.sslPort"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_SELECTOR"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.source"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.CONF_HOSTS"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.AVRO_EVENT"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.1.this$0"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.value"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.14.this$0"
CGNodeType Field "org.apache.flume.conf.channel.ChannelType.OTHER"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.collectorRunnable"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_SEARCH"
CGNodeType Field "org.apache.flume.source.TestStressSource.mockProcessor"
CGNodeType Field "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.memChannel"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_PUT_ATTEMPT"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.State.CLOSED"
CGNodeType Field "org.apache.mina.core.session.IdleStatus.BOTH_IDLE"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.3.1.this$1"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.counterMap"
CGNodeType Field "org.apache.flume.source.ThriftSource.servingExecutor"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.5.this$0"
CGNodeType Field "org.apache.flume.Transaction.TransactionState.RolledBack"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.25.this$0"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.handlerService"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.service"
CGNodeType Field "org.apache.flume.serialization.TestResettableFileInputStream.WORK_DIR"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SPOOLED_FILE_SUFFIX"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.logger"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.logger"
CGNodeType Field "org.apache.flume.Transaction.TransactionState.Started"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.source"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.events"
CGNodeType Field "org.apache.flume.serialization.TestResettableFileInputStream.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.44.this$0"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$endGate"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.monitorFutures"
CGNodeType Field "org.apache.flume.serialization.EventSerializer.CTX_PREFIX"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.3.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BUFFER_MAX_LINES"
CGNodeType Field "org.apache.flume.serialization.ResettableTestStringInputStream.curPos"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.needToPurge"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.encoder"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.channel"
CGNodeType Field "org.apache.flume.channel.BasicChannelSemantics.initialized"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.selector"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.ignorePattern"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.defaultByteCapacityBufferPercentage"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_PUT_SUCCESS"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.sinkCounter"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.response"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deletePolicy"
CGNodeType Field "org.apache.flume.source.SyslogUtils.hostName"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.maxCharWidth"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.keepAlive"
CGNodeType Field "org.apache.flume.serialization.TestBodyTextEventSerializer.expectedFile"
CGNodeType Field "org.apache.flume.sink.SinkGroup.sinks"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.2.this$0"
CGNodeType Field "org.apache.flume.serialization.TestBodyTextEventSerializer.testFile"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.batchSize"
CGNodeType Field "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_PORT"
CGNodeType Field "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.COMPRESSION_CODEC"
CGNodeType Field "org.apache.flume.interceptor.TestRegexExtractorInterceptor.fixtureBuilder"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystore"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.TEST_SYSLOG_PORT"
CGNodeType Field "org.apache.flume.SinkRunner.runner"
CGNodeType Field "org.apache.flume.sink.AbstractSink.lifecycleState"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.logger"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.port"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.error"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.port"
CGNodeType Field "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.pmemChannel"
CGNodeType Field "org.apache.flume.api.ThriftTestingSource.HandlerType.OK"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleSupervisor.1.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.bindAddress"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.1.val$channel"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.fileNameHeader"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.state"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt1"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.dateFmt2"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_FACILITY"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.monitorService"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.CONFIG_BACKOFF"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerType.AVRO"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.logger"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.DEFAULT_PORT"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.serializerList"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.batchSize"
CGNodeType Field "org.apache.flume.serialization.ResettableTestStringInputStream.markPos"
CGNodeType Field "org.apache.flume.source.TestAvroSource.CompressionChannelFactory.compressionLevel"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.NoOpTransaction.sharedInstance"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.3.val$channel"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockEvent.EMPTY_HEADERS"
CGNodeType Field "org.apache.flume.source.TestThriftSource.port"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.GangliaCollector.this$0"
CGNodeType Field "org.apache.flume.source.SyslogUtils.Mode.DATA"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.defaultRollInterval"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.mode"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.sourceCounter"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.command"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_EVENT_ACCEPTED_COUNT"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_ROUND_ROBIN_BACKOFF"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.$VALUES"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.host"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.sourceCounter"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.logger"
CGNodeType Field "org.apache.flume.source.AvroSource.THREADS"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.1.this$0"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.State.NEW"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.executor"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_CHARSET"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.fileSize"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.69.this$0"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_UNDERFLOW"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.rollInterval"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannel.channel"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.systemClock"
CGNodeType Field "org.apache.flume.tools.DirectMemoryUtils.DEFAULT_SIZE"
CGNodeType Field "org.apache.flume.source.ThriftSource.ThriftSourceHandler.this$0"
CGNodeType Field "org.apache.flume.serialization.TransientPositionTracker.position"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_PREFIX_OPTIONAL"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.val$mainThread"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Builder.key"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BATCH_SIZE"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.STATIC"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_ENABLED"
CGNodeType Field "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.lifecycleState"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.31.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.keystorePassword"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.registered"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.batchSize"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BUFFER_MAX_LINE_LENGTH"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerType.builderClass"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.65.val$transaction"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableSsl"
CGNodeType Field "org.apache.flume.serialization.TestAvroEventDeserializer.logger"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleController.logger"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.EXCLUDE_EVENTS"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.20.this$0"
CGNodeType Field "org.apache.flume.source.TestExecSource.source"
CGNodeType Field "org.apache.flume.source.SyslogUtils.Mode.START"
CGNodeType Field "org.apache.flume.source.TestExecSource.rcs"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.DEFAULT_TMAX"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.channelCounter"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BATCH_SIZE"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.LOGGER"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_RESTART_THROTTLE"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_RESTART"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.58.this$0"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.data1"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.shouldStop"
CGNodeType Field "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.gson"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.this$0"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.future"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_KEYSTORE_PASSWORD"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_DATEFORMAT"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.logger"
CGNodeType Field "org.apache.flume.source.TestThriftSource.SubmitHelper.i"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.DEFAULT_MAX_PENALTY"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_HOSTNAME_POS"
CGNodeType Field "org.apache.flume.source.SyslogUtils.EVENT_STATUS"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.State.COMPLETED"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.out"
CGNodeType Field "org.apache.flume.interceptor.TimestampInterceptor.preserveExisting"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.VALUE"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.basenameHeaderKey"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.COUNTER_GROUP_STOP_TIME"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_NUMPROCESSORS"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.FlumeHTTPServlet.this$0"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_OPEN_CONNECTION_COUNT"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.INTERCEPTOR"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.1.this$0"
CGNodeType Field "org.apache.flume.SinkRunner.lifecycleState"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleSupervisor.supervisor"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.47.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.41.val$transaction"
CGNodeType Field "org.apache.flume.source.AvroSource.KEYSTORE_PASSWORD_KEY"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.inputCharset"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.LOGGER"
CGNodeType Field "org.apache.flume.tools.TestVersionInfo.logger"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.TRACKER_DIR"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.42.this$0"
CGNodeType Field "org.apache.flume.interceptor.TimestampInterceptor.Builder.preserveExisting"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_CREATED"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.CH_ATTR_EVENT_TAKE_SUCCESS"
CGNodeType Field "org.apache.flume.source.SyslogParser.TS_CACHE_MAX"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.logger"
CGNodeType Field "org.apache.flume.serialization.TestLineDeserializer.mini"
CGNodeType Field "org.apache.flume.serialization.BodyTextEventSerializer.APPEND_NEWLINE"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.5.this$0"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.MAX_PENALTY_PREFIX"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.MAX_LINE_LENGTH"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$channel"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.eventsSent"
CGNodeType Field "org.apache.flume.formatter.output.BucketPath.tagPattern"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.YOUNGEST"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.buf"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.1.this$0"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_PORT_HEADER"
CGNodeType Field "org.apache.flume.source.MockSource.name"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.38.val$transaction"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_RESTART_THROTTLE"
CGNodeType Field "org.apache.flume.source.SyslogUtils.isIncompleteEvent"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.47.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_TAKE_SUCCESS"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_BODY_POS"
CGNodeType Field "org.apache.flume.source.AbstractSource.channelProcessor"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.hosts"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.ris"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.schemaType"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.queue"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.50.val$transaction"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.PollingRunner.shouldStop"
CGNodeType Field "org.apache.flume.sink.NullSink.logEveryNEvents"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.LOG"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_RESTART"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.defaultKeepAlive"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.56.val$transaction"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.70.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BASENAME_HEADER"
CGNodeType Field "org.apache.flume.sink.NullSink.counterGroup"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.53.this$0"
CGNodeType Field "org.apache.flume.serialization.TestSyslogAvroEventSerializer.schemaFile"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_EVENT_DRAIN_SUCCESS"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.1.$SwitchMap$org$apache$flume$lifecycle$LifecycleState"
CGNodeType Field "org.apache.flume.source.TestThriftSource.props"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_EVENTSIZE"
CGNodeType Field "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.mapType"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.TestTransaction.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DESERIALIZER"
CGNodeType Field "org.apache.flume.source.AbstractSource.lifecycleState"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.State.OPEN"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.data1"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.dirName"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.takeList"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.preserveExisting"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.OUT_CHARSET_KEY"
CGNodeType Field "org.apache.flume.formatter.output.TestBucketPath.cal"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.host"
CGNodeType Field "org.apache.flume.source.http.JSONHandler.LOG"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.ATTRIBUTES"
CGNodeType Field "org.apache.flume.Transaction.TransactionState.Committed"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.NORMAL"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.readBufferSize"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.ERROR"
CGNodeType Field "org.apache.flume.source.ExecSource.charset"
CGNodeType Field "org.apache.flume.source.TestThriftSource.random"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.64.this$0"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_POS"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_KEEP_FIELDS"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORTS"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.byteCapacityBufferPercentage"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.batchTimeout"
CGNodeType Field "org.apache.flume.instrumentation.http.TestHTTPMetricsServer.1.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.events"
CGNodeType Field "org.apache.flume.api.ThriftTestingSource.flumeEvents"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_REGEX"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.HOST"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.ignorePattern"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.length"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.hasFatalError"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.bufferCount"
CGNodeType Field "org.apache.flume.tools.VersionInfo.version"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.1.this$1"
CGNodeType Field "org.apache.flume.source.TestExecSource.context"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.logger"
CGNodeType Field "org.apache.flume.sink.AvroSink.logger"
CGNodeType Field "org.apache.flume.source.SyslogUtils.formats"
CGNodeType Field "org.apache.flume.client.avro.TestBufferedLineReader.tmpDir"
CGNodeType Field "org.apache.flume.serialization.FlumeEventAvroEventSerializer.out"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.FILENAME_HEADER_KEY"
CGNodeType Field "org.apache.flume.instrumentation.MonitoringType.HTTP"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_RECEVIED_COUNT"
CGNodeType Field "org.apache.flume.source.StressSource.batchSize"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.isOpen"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.$VALUES"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.sleepTime"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerType.$VALUES"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.Mode.THROW_RUNTIME"
CGNodeType Field "org.apache.flume.channel.AbstractChannelSelector.channels"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.PRESERVE"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_LOG_STDERR"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_EVENTS_ACCEPTED"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.deserializerContext"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.maxTimeOut"
CGNodeType Field "org.apache.flume.serialization.TransferStateFileMeta.__PARANAMER_DATA"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.LITERAL"
CGNodeType Field "org.apache.flume.source.ExecSource.batchTimeout"
CGNodeType Field "org.apache.flume.source.SyslogUtils.baos"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_SEVERITY"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.channel"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.name"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.DEFAULT_HANDLER"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FAILURE_PENALTY"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.spoolDirectory"
CGNodeType Field "org.apache.flume.instrumentation.MonitoringType.$VALUES"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.serializer"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.MemoryTransaction.putList"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_BATCHSIZE"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.tracker"
CGNodeType Field "org.apache.flume.TestCounterGroup.counterGroup"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableCompression"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.CONF_ISGANGLIA3"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.IMMEDIATE"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.logger"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_RANDOM"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.serializerType"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.outputStream"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionCommitted"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.metaCache"
CGNodeType Field "org.apache.flume.source.StressSource.buffer"
CGNodeType Field "org.apache.flume.source.NetcatSource.NetcatSocketHandler.source"
CGNodeType Field "org.apache.flume.source.SyslogUtils.timeStamp"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.logger"
CGNodeType Field "org.apache.flume.tools.DirectMemoryUtils.LOG"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.channel"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.CONFIG_SCHEMA_TYPE_KEY"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultCapacity"
CGNodeType Field "org.apache.flume.source.SyslogParser.RFC3164_LEN"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.stopTime"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.completedSuffix"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.DEFAULT_INITIAL_SIZE"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.5.this$0"
CGNodeType Field "org.apache.flume.source.SyslogUtils.keepFields"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CHARSET"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.val$test"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.2.this$0"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.socket"
CGNodeType Field "org.apache.flume.source.http.HTTPBadRequestException.serialVersionUID"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.transCapacity"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_DEFAULT_CHANNEL"
CGNodeType Field "org.apache.flume.source.SyslogUtils.DEFAULT_SIZE"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_BATCH_SIZE"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.barrier"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.port"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.mbServer"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Purger.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.9.this$0"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.CHANNEL_PROCESSOR"
CGNodeType Field "org.apache.flume.source.TestSpoolDirectorySource.channel"
CGNodeType Field "org.apache.flume.TestContext.context"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.AvroSchemaType.$VALUES"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BASENAME_HEADER_KEY"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.resetConnectionFlag"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.sinks"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.7.val$transaction"
CGNodeType Field "org.apache.flume.channel.BasicTransactionSemantics.State.$VALUES"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.timestamp"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_READBUF_SIZE"
CGNodeType Field "org.apache.flume.sink.SinkProcessorFactory.logger"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_KEEP_FIELDS"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.cp"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.TEST_SYSLOG_PORT"
CGNodeType Field "org.apache.flume.source.StressSource.eventBatchListToProcess"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.1.this$0"
CGNodeType Field "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.1.this$0"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_CLOSED"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.port"
CGNodeType Field "org.apache.flume.channel.ChannelProcessor.LOG"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.bytesRemaining"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_FILE_HEADER"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.sourceCounter"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.name"
CGNodeType Field "org.apache.flume.sink.FixedOrderSelector.SET_ME"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.$VALUES"
CGNodeType Field "org.apache.flume.PollableSource.Status.BACKOFF"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_4"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.failures"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_2"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SOURCE_OBJ_NAME_PREFIX"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_3"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_TIMESTAMP_FORMAT_RFC5424_1"
CGNodeType Field "org.apache.flume.source.NetcatSource.port"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.PollingRunner.counterGroup"
CGNodeType Field "org.apache.flume.conf.sink.SinkType.OTHER"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.1.val$eventList"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.incomplete"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_DECODE_ERROR_POLICY"
CGNodeType Field "org.apache.flume.serialization.DecodeErrorPolicy.IGNORE"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.maxEventSize"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.schema"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.deletePolicy"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.25.1.this$1"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_ACCEPTED"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.headerName"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.Builder.defaultSerializer"
CGNodeType Field "org.apache.flume.serialization.TransferStateFileMeta.SCHEMA$"
CGNodeType Field "org.apache.flume.sink.SinkProcessorFactory.TYPE"
CGNodeType Field "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.charset"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.KEY"
CGNodeType Field "org.apache.flume.source.StressSource.counterGroup"
CGNodeType Field "org.apache.flume.serialization.TestResettableFileInputStream.CLEANUP"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.DEFAULT_BATCH_TIME_OUT"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_EVENT_RECEVIED_COUNT"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.directory"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.NEVER"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.keystorePassword"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.message"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.defaultDecoder"
CGNodeType Field "org.apache.http.conn.ssl.SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.channel"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.keepFields"
CGNodeType Field "org.apache.flume.serialization.TestSyslogAvroEventSerializer.testFile"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestRuntimeException.serialVersionUID"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogStatus.INCOMPLETE"
CGNodeType Field "org.apache.flume.serialization.EventSerializerFactory.logger"
CGNodeType Field "org.apache.flume.source.AvroSource.compressionType"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.syslogUtils"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.defaultBatchSize"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.4.val$transaction"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.replacePattern"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.3.this$0"
CGNodeType Field "org.apache.flume.source.NetcatSource.NetcatSocketHandler.maxLineLength"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.this$0"
CGNodeType Field "org.apache.flume.source.ThriftSource.1.this$0"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleException.serialVersionUID"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.regexPattern"
CGNodeType Field "org.apache.flume.source.NetcatSource.ackEveryEvent"
CGNodeType Field "org.apache.flume.serialization.TransferStateFileMeta.Builder.__PARANAMER_DATA"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.37.val$transaction"
CGNodeType Field "org.apache.flume.interceptor.TestCensoringInterceptor.logger"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.SeekableResettableInputBridge.ris"
CGNodeType Field "org.apache.flume.serialization.TransientPositionTracker.target"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.61.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_BASENAME_HEADER_KEY"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.67.this$0"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_READBUF_SIZE"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.DEFAULT_SLOPE"
CGNodeType Field "org.apache.flume.formatter.output.PathManager.seriesTimestamp"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.3.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_IGNORE_PAT"
CGNodeType Field "org.apache.flume.sink.TestRollingFileSink.tmpDir"
CGNodeType Field "org.apache.flume.source.TestAvroSource.logger"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.logger"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.inputCharset"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.host"
CGNodeType Field "org.apache.flume.source.ExecSourceConfigurationConstants.CONFIG_BATCH_TIME_OUT"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.reader"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.consumeOrder"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.annotateBaseName"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_CONSUME_ORDER"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.keepAlive"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.REGEX"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.sslEnabled"
CGNodeType Field "org.apache.flume.sink.NullSink.batchSize"
CGNodeType Field "org.apache.flume.source.BasicSourceSemantics.exception"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$committedPuts"
CGNodeType Field "org.apache.flume.SinkRunner.maxBackoffSleep"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.defaultTransCapacity"
CGNodeType Field "org.apache.flume.source.http.FlumeHttpServletRequestWrapper.reader"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.CONSUME_ORDER"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.SPOOL_DIRECTORY"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.28.this$0"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.executor"
CGNodeType Field "org.apache.flume.source.NetcatSource.maxLineLength"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.72.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.KEYSTORE_KEY"
CGNodeType Field "org.apache.flume.serialization.HeaderAndBodyTextEventSerializer.appendNewline"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.completedSuffix"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.49.val$transaction"
CGNodeType Field "org.apache.flume.source.StressSource.event"
CGNodeType Field "org.apache.flume.channel.TestReplicatingChannelSelector.channels"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.50.this$0"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_PORT"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.DEFAULT_DMAX"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.channelCounter"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.1.1.this$1"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.maxLineLength"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.ResultWrapper.events"
CGNodeType Field "org.apache.flume.source.ExecSource.shell"
CGNodeType Field "org.apache.flume.source.http.JSONHandler.1.this$0"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.logger"
CGNodeType Field "org.apache.flume.serialization.ResettableTestStringInputStream.str"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_PREFIX_MAPPING"
CGNodeType Field "org.apache.flume.channel.TestMultiplexingChannelSelector.selector"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.RoundRobinSinkSelector.selector"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.nettyChannel"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.postRequest"
CGNodeType Field "org.apache.flume.source.ExecSource.command"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.REGEX"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.events"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.52.val$transaction"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.queue"
CGNodeType Field "org.apache.flume.tools.DirectMemoryUtils.allocated"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.55.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.GANGLIA_CONTEXT"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.43.val$transaction"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.DEFAULT_BUF_SIZE"
CGNodeType Field "org.apache.flume.source.SyslogParser.timeParser"
CGNodeType Field "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.logger"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.46.val$transaction"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.40.val$transaction"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestError.serialVersionUID"
CGNodeType Field "org.apache.flume.source.SyslogUtils.m"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.34.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_APPEND_BATCH_RECEIVED"
CGNodeType Field "org.apache.flume.serialization.DecodeErrorPolicy.FAIL"
CGNodeType Field "org.apache.flume.channel.ReplicatingChannelSelector.optionalChannels"
CGNodeType Field "org.apache.flume.formatter.output.TestBucketPath.headers"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerContext"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.45.this$0"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.HOST_HEADER"
CGNodeType Field "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.DEFAULT_SYNC_INTERVAL_BYTES"
CGNodeType Field "org.apache.flume.source.EventDrivenSourceRunner.lifecycleState"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.58.val$transaction"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.7.this$0"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.facility"
CGNodeType Field "org.apache.flume.sink.AbstractSinkSelector.sinkList"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.addYear"
CGNodeType Field "org.apache.flume.source.NetcatSourceConfigurationConstants.CONFIG_HOSTNAME"
CGNodeType Field "org.apache.flume.conf.channel.ChannelSelectorType.REPLICATING"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.httpClient"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.4.this$0"
CGNodeType Field "org.apache.flume.tools.VersionInfo.myPackage"
CGNodeType Field "org.apache.flume.source.SyslogParser.1.this$0"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.DelayMockAvroServer.delay"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.deserializerType"
CGNodeType Field "org.apache.flume.source.SyslogUtils.Mode.$VALUES"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.channelCounter"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.RandomOrderSinkSelector.maxTimeOut"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.deserializerType"
CGNodeType Field "org.apache.flume.source.SyslogParser.TWO_SPACES"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.40.this$0"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.REGEX_FILTER"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.hostname"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Builder.preserveExisting"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.17.this$0"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.ATTRIBUTES"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.sourceCounter"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.KEEP_FIELDS"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.hostname"
CGNodeType Field "org.apache.flume.channel.PseudoTxnMemoryChannel.defaultKeepAlive"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.timedFlushService"
CGNodeType Field "org.apache.flume.event.EventHelper.DEFAULT_MAX_BYTES"
CGNodeType Field "org.apache.flume.ChannelException.serialVersionUID"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.bodyWithTandH"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.RANDOM"
CGNodeType Field "org.apache.flume.source.TestThriftSource.source"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.39.this$0"
CGNodeType Field "org.apache.flume.instrumentation.MonitoringType.OTHER"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.maxEventSize"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.3.1.this$1"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.56.this$0"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.batchSize"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.POLL_DELAY_MS"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelTransaction.channel"
CGNodeType Field "org.apache.flume.api.ThriftTestingSource.batchCount"
CGNodeType Field "org.apache.flume.source.TestAvroSource.channel"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.30.val$finalTransaction"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.cxnResetExecutor"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.sourceCounter"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.logger"
CGNodeType Field "org.apache.flume.source.AvroSource.enableSsl"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.trackerFile"
CGNodeType Field "org.apache.flume.source.AvroSource.1.this$0"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.charBuf"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.refresh"
CGNodeType Field "org.apache.flume.source.SyslogParser.RFC5424_PREFIX_LEN"
CGNodeType Field "org.apache.flume.source.AvroSource.maxThreads"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.host"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.decodeErrorPolicy"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_TAKE_ATTEMPT"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.portHeader"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Builder.value"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.host1"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.sent"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.schemaFile"
CGNodeType Field "org.apache.flume.source.AvroSource.COMPRESSION_TYPE"
CGNodeType Field "org.apache.flume.source.AvroSource.IP_FILTER_RULES_KEY"
CGNodeType Field "org.apache.flume.SinkRunner.runnerThread"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.isOpen"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.rollService"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.queueLock"
CGNodeType Field "org.apache.flume.Transaction.TransactionState.$VALUES"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.ParsedBuffer.buffer"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.1.this$0"
CGNodeType Field "org.apache.flume.channel.BasicChannelSemantics.currentTransaction"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.1.val$test"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.12.this$0"
CGNodeType Field "org.apache.flume.source.ThriftSource.CONFIG_PORT"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.out"
CGNodeType Field "com.google.common.base.Charsets.ISO_8859_1"
CGNodeType Field "org.apache.flume.sink.AbstractSinkSelector.maxTimeOut"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.34.this$0"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_REPLACE"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.PRESERVE_DFLT"
CGNodeType Field "org.apache.flume.api.ThriftTestingSource.HandlerType.ALTERNATE"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.23.this$0"
CGNodeType Field "org.apache.flume.Constants.SYSPROP_CALLED_FROM_SERVICE"
CGNodeType Field "org.apache.flume.source.ThriftSource.port"
CGNodeType Field "org.apache.flume.source.AvroSource.sourceCounter"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.STOP"
CGNodeType Field "org.apache.flume.instrumentation.util.JMXPollUtil.mbeanServer"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.key"
CGNodeType Field "org.apache.flume.source.TestSequenceGeneratorSource.source"
CGNodeType Field "org.apache.flume.sink.TestDefaultSinkFactory.sinkFactory"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.DEFAULT_CHARSET"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.Constants.PRESERVE_DEFAULT"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.logger"
CGNodeType Field "org.apache.flume.channel.AbstractChannel.lifecycleState"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.totalEvents"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.LineSplitter.NEWLINE"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.logger"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.SSL_KEYSTORE"
CGNodeType Field "org.apache.flume.CounterGroup.counters"
CGNodeType Field "org.apache.flume.SinkRunner.PollingRunner.counterGroup"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.SSLChannelPipelineFactory.keystorePassword"
CGNodeType Field "org.apache.flume.PollableSource.Status.$VALUES"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.DEFAULT_REGEX"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.6.val$transaction"
CGNodeType Field "org.apache.flume.thrift.Status.FAILED"
CGNodeType Field "org.apache.flume.source.ExecSource.runnerFuture"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.5.$SwitchMap$org$apache$flume$channel$AbstractBasicChannelSemanticsTest$TestChannel$Mode"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.val$latch"
CGNodeType Field "org.apache.flume.channel.ChannelProcessor.selector"
CGNodeType Field "org.apache.flume.serialization.AbstractAvroEventSerializer.writer"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.CHARSET_DFLT"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.queueRemaining"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.ConsumeOrder.$VALUES"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.type"
CGNodeType Field "org.apache.flume.conf.source.SourceType.OTHER"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.OTHER"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.dateFormat"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.port"
CGNodeType Field "org.apache.flume.source.NetcatSource.NetcatSocketHandler.socketChannel"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.host1"
CGNodeType Field "org.apache.flume.serialization.DecodeErrorPolicy.$VALUES"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.src"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.OTHER"
CGNodeType Field "org.apache.flume.channel.DefaultChannelFactory.logger"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleSupervisor.CountingLifecycleAware.lifecycleState"
CGNodeType Field "org.apache.avro.Schema.Type.STRING"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.59.this$0"
CGNodeType Field "org.apache.flume.instrumentation.SourceCounter.COUNTER_EVENTS_RECEIVED"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.serializerContext"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.FileInfo.deserializer"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.nettyChannel"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.httpsSource"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.IDLE"
CGNodeType Field "org.apache.flume.api.RpcClientFactory.ClientType.THRIFT"
CGNodeType Field "org.apache.flume.serialization.TestAvroEventDeserializer.schema"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.70.val$transaction"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT_HEADER"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.in"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Builder.regex"
CGNodeType Field "org.apache.flume.conf.sink.SinkProcessorType.DEFAULT"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.ATTR_START_TIME"
CGNodeType Field "org.apache.flume.serialization.AbstractAvroEventSerializer.logger"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.CONFIG_MULTIPLEX_HEADER_NAME"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.byteCapacitySlotSize"
CGNodeType Field "org.apache.flume.lifecycle.TestLifecycleController.SleeperLifecycleDelegate.state"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.this$0"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.portCharsets"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.lineSplitter"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.chan"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.severity"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.61.val$transaction"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.charset"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.18.val$finalTransaction"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.67.val$transaction"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.MAX_BOUNDS"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.supervisedProcesses"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.maxPenalty"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.1.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.32.this$0"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.counterGroup"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.10.this$0"
CGNodeType Field "org.apache.flume.source.AvroSource.BIND_KEY"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.18.this$0"
CGNodeType Field "org.apache.flume.event.EventHelper.HEXDUMP_OFFSET"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.BUFFER_SIZE"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.29.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.21.this$0"
CGNodeType Field "org.apache.flume.source.TestAvroSource.source"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_ROUND_ROBIN"
CGNodeType Field "org.apache.flume.source.AvroSource.KEYSTORE_TYPE_KEY"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.lastFileRead"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.channelProcessor"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.43.this$0"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.logger"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.Builder.consumeOrder"
CGNodeType Field "org.apache.flume.sink.TestLoggerSink.sink"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_FORMAT_PREFIX"
CGNodeType Field "org.apache.flume.serialization.TransferStateFileMeta.offset"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.this$0"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.Type.SINK_PROCESSOR"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.1.val$event"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.6.this$0"
CGNodeType Field "org.apache.flume.source.TestSyslogTcpSource.source"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BUFFER_MAX_LINES"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.fileHeaderKey"
CGNodeType Field "org.apache.flume.source.BasicSourceSemantics.logger"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.stamp1"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.monitorService"
CGNodeType Field "org.apache.flume.source.SyslogUtils.maxSize"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_FILENAME_HEADER_KEY"
CGNodeType Field "org.apache.flume.sink.AbstractSink.channel"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.2.val$channel"
CGNodeType Field "org.apache.flume.source.AvroSource.SSL_KEY"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.events"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.4.val$channel"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.FILENAME_HEADER"
CGNodeType Field "org.apache.flume.instrumentation.MonitoringType.GANGLIA"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.START_OR_ERROR"
CGNodeType Field "org.apache.flume.serialization.DecodeErrorPolicy.REPLACE"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.logger"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.batchArrayList"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.isGanglia3"
CGNodeType Field "org.apache.flume.source.AvroSource.AdvancedChannelPipelineFactory.enableIpFilter"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.shouldRotate"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.13.this$0"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.MonitorRunnable.supervisoree"
CGNodeType Field "org.apache.flume.serialization.EventSerializerType.builderClass"
CGNodeType Field "org.apache.flume.source.SyslogUtils.logger"
CGNodeType Field "org.apache.flume.source.SyslogUtils.MIN_SIZE"
CGNodeType Field "org.apache.flume.channel.TestChannelUtils.1.val$mode"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.syslogHandler.syslogUtils"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.process"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Builder.useIP"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.NameAndSerializer.headerName"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.decoder"
CGNodeType Field "org.apache.flume.source.TestSpoolDirectorySource.source"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.fileHeader"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.FailedSink.sequentialFailures"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_ACCEPTED_COUNT"
CGNodeType Field "org.apache.flume.source.http.HTTPSource.LOG"
CGNodeType Field "org.apache.flume.source.ThriftSource.sourceCounter"
CGNodeType Field "org.apache.flume.client.avro.TestReliableSpoolingFileEventReader.WORK_DIR"
CGNodeType Field "org.apache.flume.source.SyslogSourceConfigurationConstants.CONFIG_PORT_CHARSET_PREFIX"
CGNodeType Field "org.apache.flume.source.http.JSONHandler.gson"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_COMPLETE"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$test"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.decodeErrorPolicy"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.startTime"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.AVRO_SCHEMA_HEADER_HASH"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Constants.USE_IP"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.portHeader"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleState.START"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.PRIORITY_PREFIX"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.sinkCounter"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.channel"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.Builder.preserveExisting"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.selector"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.DEFAULT_UNITS"
CGNodeType Field "org.apache.flume.event.EventHelper.EOL"
CGNodeType Field "org.apache.flume.SinkRunner.logger"
CGNodeType Field "org.apache.flume.client.avro.AvroCLIClient.rpcClientPropsFile"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.addresses"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_BATCH_EMPTY"
CGNodeType Field "org.apache.flume.formatter.output.PathManager.fileIndex"
CGNodeType Field "org.apache.flume.channel.MockEvent.headers"
CGNodeType Field "org.apache.flume.channel.ReplicatingChannelSelector.requiredChannels"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SYSLOG_MSG_RFC5424_0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.63.this$0"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.syncPosition"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.sourceRunner"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.65.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.sourceCounter"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.defaultCapacity"
CGNodeType Field "org.apache.flume.source.ExecSource.restartThrottle"
CGNodeType Field "org.apache.flume.source.SequenceGeneratorSource.logger"
CGNodeType Field "org.apache.flume.source.ExecSource.executor"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.val$exceptionClass"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.source"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.discard"
CGNodeType Field "org.apache.flume.interceptor.StaticInterceptor.preserveExisting"
CGNodeType Field "org.apache.flume.sink.AbstractSinkProcessor.sinkList"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.ackEveryEvent"
CGNodeType Field "org.apache.flume.source.NetcatSource.NetcatSocketHandler.ackEveryEvent"
CGNodeType Field "org.apache.flume.serialization.SyslogAvroEventSerializer.SyslogEvent.hostname"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.regex"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.maxBackoffSleep"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.2.val$events"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.lifecycleState"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.maxLineLength"
CGNodeType Field "org.apache.flume.source.http.JSONHandler.listType"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.LOG"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.26.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.59.val$transaction"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.port"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.71.val$transaction"
CGNodeType Field "org.apache.flume.sink.FailoverSinkProcessor.activeSink"
CGNodeType Field "org.apache.flume.source.TestBasicSourceSemantics.1.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.68.val$transaction"
CGNodeType Field "org.apache.flume.channel.MockEvent.body"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.62.val$transaction"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.random"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.committed"
CGNodeType Field "org.apache.flume.sink.AbstractSinkSelector.state"
CGNodeType Field "org.apache.flume.sink.LoadBalancingSinkProcessor.SELECTOR_NAME_RANDOM_BACKOFF"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.37.this$0"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.TestChannel.lastTransactionClosed"
CGNodeType Field "org.apache.flume.sink.TestLoadBalancingSinkProcessor.MockSink.fail"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.BASENAME_HEADER"
CGNodeType Field "org.apache.flume.source.ExecSource.logger"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.syslogTcpHandler.this$0"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.54.this$0"
CGNodeType Field "org.apache.flume.instrumentation.http.HTTPMetricsServer.HTTPMetricsHandler.gson"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.CONF_POLL_FREQUENCY"
CGNodeType Field "org.apache.flume.source.TestPollableSourceRunner.1.val$cs"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.shouldStop"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySource.SpoolDirectoryRunnable.reader"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.formaterProp"
CGNodeType Field "org.apache.flume.source.StressSource.logger"
CGNodeType Field "org.apache.flume.ChannelFullException.serialVersionUID"
CGNodeType Field "org.apache.flume.sink.RollingFileSink.pathController"
CGNodeType Field "org.apache.flume.instrumentation.MonitoredCounterGroup.logger"
CGNodeType Field "org.apache.flume.channel.ChannelProcessor.interceptorChain"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.1.val$handler"
CGNodeType Field "org.apache.flume.sink.AbstractRpcSink.DEFAULT_CXN_RESET_INTERVAL"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.syslogParser"
CGNodeType Field "org.apache.flume.serialization.EventDeserializerFactory.logger"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.defaultByteCapacity"
CGNodeType Field "org.apache.flume.instrumentation.util.JMXPollUtil.LOG"
CGNodeType Field "org.apache.flume.instrumentation.GangliaServer.DEFAULT_POLL_FREQUENCY"
CGNodeType Field "org.apache.flume.source.TestThriftSource.channel"
CGNodeType Field "org.apache.flume.client.avro.TestSpoolingFileLineReader.1.this$0"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.channelProcessor"
CGNodeType Field "org.apache.flume.source.AvroSource.1.val$srv"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SK_ATTR_CONN_FAILED"
CGNodeType Field "org.apache.flume.instrumentation.TestMonitoredCounterGroup.SRC_ATTR_APPEND_BATCH_ACCEPTED_COUNT"
CGNodeType Field "org.apache.flume.source.BasicSourceSemantics.lifecycleState"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogStatus.syslogStatus"
CGNodeType Field "org.apache.flume.formatter.output.BucketPath.TAG_REGEX"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.DeletePolicy.DELAY"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.host"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.backoffSleepIncrement"
CGNodeType Field "org.apache.flume.SinkRunner.policy"
CGNodeType Field "org.apache.flume.serialization.TestHeaderAndBodyTextEventSerializer.expectedFile"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.48.this$0"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.MultiportSyslogHandler.defaultDecoder"
CGNodeType Field "org.apache.flume.source.ExecSource.ExecRunnable.restartThrottle"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DEFAULT_TRACKER_DIR"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.stamp1"
CGNodeType Field "org.apache.flume.interceptor.RegexExtractorInterceptor.serializers"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.channelMapping"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.44.val$transaction"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.3.val$endGate"
CGNodeType Field "org.apache.flume.serialization.ResettableFileInputStream.in"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.4.this$0"
CGNodeType Field "org.apache.flume.Sink.Status.BACKOFF"
CGNodeType Field "org.apache.flume.api.ThriftTestingSource.individualCount"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.defaultChannels"
CGNodeType Field "org.apache.flume.client.avro.TestSpoolingFileLineReader.completedSuffix"
CGNodeType Field "org.apache.flume.sink.TestFailoverSinkProcessor.ConsumeXSink.state"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.PollingRunner.source"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_CONNECTION_FAILED"
CGNodeType Field "org.apache.flume.source.NetcatSource.handlerService"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.REGEX_EXTRACTOR"
CGNodeType Field "org.apache.flume.source.SyslogTcpSource.formaterProp"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.currentFile"
CGNodeType Field "org.apache.flume.instrumentation.ChannelCounter.COUNTER_EVENT_PUT_ATTEMPT"
CGNodeType Field "org.apache.flume.serialization.DurablePositionTracker.writer"
CGNodeType Field "org.apache.flume.serialization.AvroEventDeserializer.AVRO_SCHEMA_HEADER_LITERAL"
CGNodeType Field "org.apache.flume.serialization.LineDeserializer.outputCharset"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.15.this$0"
CGNodeType Field "org.apache.flume.interceptor.HostInterceptor.logger"
CGNodeType Field "org.apache.flume.interceptor.TimestampInterceptor.Constants.PRESERVE_DFLT"
CGNodeType Field "org.apache.flume.channel.AbstractBasicChannelSemanticsTest.2.this$0"
CGNodeType Field "org.apache.flume.source.TestSpoolDirectorySource.tmpDir"
CGNodeType Field "org.apache.flume.channel.TestMemoryChannelConcurrency.4.this$0"
CGNodeType Field "org.apache.flume.source.ThriftSource.maxThreads"
CGNodeType Field "org.apache.flume.serialization.BodyTextEventSerializer.out"
CGNodeType Field "org.apache.flume.source.TestSyslogUdpSource.channel"
CGNodeType Field "org.apache.flume.instrumentation.SinkCounter.COUNTER_EVENT_DRAIN_SUCCESS"
CGNodeType Field "org.apache.flume.source.TestMultiportSyslogTCPSource.time"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.53.val$transaction"
CGNodeType Field "org.apache.flume.source.MultiportSyslogTCPSource.numProcessors"
CGNodeType Field "org.apache.flume.channel.MemoryChannel.byteCapacity"
CGNodeType Field "org.apache.flume.channel.MultiplexingChannelSelector.EMPTY_LIST"
CGNodeType Field "org.apache.flume.channel.TestMultiplexingChannelSelector.channels"
CGNodeType Field "org.apache.flume.serialization.AvroEventSerializerConfigurationConstants.DEFAULT_COMPRESSION_CODEC"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogFormatter.searchPattern"
CGNodeType Field "org.apache.flume.channel.TestBasicChannelSemantics.35.val$transaction"
CGNodeType Field "org.apache.flume.channel.ChannelUtils.2.val$channel"
CGNodeType Field "org.apache.flume.sink.TestAvroSink.sink"
CGNodeType Field "org.apache.flume.source.DefaultSourceFactory.logger"
CGNodeType Field "org.apache.flume.lifecycle.LifecycleSupervisor.Status.lastSeenState"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.1.this$0"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.MAX_BACKOFF"
CGNodeType Field "org.apache.flume.source.TestExecSource.channel"
CGNodeType Field "org.apache.flume.client.avro.ReliableSpoolingFileEventReader.consumeOrder"
CGNodeType Field "org.apache.flume.source.SyslogUDPSource.DEFAULT_MIN_SIZE"
CGNodeType Field "org.apache.flume.sink.TestThriftSink.channel"
CGNodeType Field "org.apache.flume.source.SyslogUtils.SyslogStatus.OTHER"
CGNodeType Field "org.apache.flume.source.PollableSourceRunner.runnerThread"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.selectedPort"
CGNodeType Field "org.apache.flume.interceptor.InterceptorType.TIMESTAMP"
CGNodeType Field "org.apache.flume.source.http.TestHTTPSource.3.this$0"
CGNodeType Field "org.apache.flume.interceptor.RegexFilteringInterceptor.Constants.DEFAULT_EXCLUDE_EVENTS"
CGNodeType Field "org.apache.flume.interceptor.InterceptorChain.interceptors"
CGNodeType Field "org.apache.flume.channel.TestReplicatingChannelSelector.selector"
CGNodeType Field "org.apache.flume.source.NetcatSource.AcceptHandler.source"
CGNodeType Field "org.apache.flume.source.SpoolDirectorySourceConfigurationConstants.DESERIALIZER"
CGNodeType Field "org.apache.flume.source.http.HTTPSourceConfigurationConstants.CONFIG_HANDLER"
CGNodeType Field "org.apache.flume.SinkRunner.PollingRunner.policy"
