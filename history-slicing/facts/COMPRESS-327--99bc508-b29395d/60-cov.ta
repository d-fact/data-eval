FACT TUPLE :
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.flushDeflater(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BitStream.nextByte(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readPackInfo(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.cfhBbuf"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writeRecord(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_X86_FILTER"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.setupFileOutputStream(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues_len"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.readLittleEndianInt(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.getCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setEncoding(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodePathExtraField.UnicodePathExtraField(0)"
Coverage "test" "org.apache.commons.compress.changes.Change.isReplaceMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.perform(2)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asInt(3)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.setCacheLZMAAvailablity(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createCentralFileHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getTime(0)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.X000A_NTFS(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.getIno(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainSimpleSort(5)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatUnsignedOctalString(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.getBytesWrittenForLastEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainSort(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.clone(0)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.UTF_16"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.platform"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getCreationDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.getOptionsFromCoder(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.parse(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.OutputStreamWrapper(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.fill(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.ZipArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.BoundedInputStream"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getHasCrc(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.NioZipEncoding.encode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExtraFields(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeCentralDirectoryEnd(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setCreateTime(1)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.resize(1)"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.deflate(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setSimpleName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.closeEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.stack_hh"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.name"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BindPair.BindPair(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.nameBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.write(4)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.CLRI"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DummyByteAddingInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.addExtraField(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.find(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.deflate(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.size"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.NioZipEncoding.NioZipEncoding(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.appendSurrogate(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.ParallelScatterZipCreator(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.isTooLageForZip32(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldAsciiEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.CompressedEntry.CompressedEntry(4)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BZIP2"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ArchiveInputStreamIterator.getInputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.SevenZMethodConfiguration(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.ZipArchiveInputStream(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.convert32(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues7(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.getContentMethods(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.DumpArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getAccessJavaTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setDeviceMaj(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coder"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.withZlibHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.COPY"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.init(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.applyPaxHeadersToCurrentEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.wordBbuf"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.utils.Iterators.addAll(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.END"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.SevenZArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.decompressConcatenated"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.TarArchiveOutputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.FallbackZipEncoding.FallbackZipEncoding(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.tlScatterStreams"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setAccessTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.ZipArchiveInputStream(4)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.create(2)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveSummary.isCompressed(0)"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.closeForWriting(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.setUID(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.method"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.mergeExtraFields(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.deflate(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setRemoteDevice(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.isEqual(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getBytes(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.putLong(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.create(2)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.expandCopy(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.ZERO"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.HEADER_ID"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.expandLiteral(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.ZipEightByteInteger(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(3)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.hitCentralDirectory"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.ensureOpen(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.setCompressedSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.SeekableByteChannelCompressor.SeekableByteChannelCompressor(2)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ZipFileIterator.ZipFileIterator(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readCLRI(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCreationDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.failForBigNumbers(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.currentEntryIndex"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DeflateDecoder.encode(2)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.add(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(5)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readAsciiLong(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator.hasNext(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.setNameAndCommentFromExtraFields(3)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.clearBitCache(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.bytesWritten"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.unseqToSeq"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.AbstractUnicodeExtraField(4)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainQSort3(5)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readCrc(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveException.DumpArchiveException(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextCPIOEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.ArchiveStreamFactory(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.SevenZFile(4)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getLength(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseOctal(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.SETGUI"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.allowStoredEntriesWithDataDescriptor"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.SINGLETON"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasAccessDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE.COMPRESSION_TYPE(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.UnrecognizedExtraField(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.FallbackZipEncoding"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.finalize(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.getCodeSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer.get(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorException"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.toString(0)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.matchAsciiBuffer(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.chksum"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.copyStream(3)"
Coverage "test" "org.apache.commons.compress.utils.CRC32VerifyingInputStream.CRC32VerifyingInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.OffsetEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField.SKIP"
Coverage "test" "org.apache.commons.compress.changes.Change.getEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getEntrySize(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.GzipCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.setLocalFileDataData(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge.getInputView(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.closed"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.utils.Lists.newArrayList(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.IWORK_ARCHIVE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createCentralFileHeader(4)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.currBlkIdx"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.putLong(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.getCount(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readLocalFileHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.getUnpackSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioUtil.fileType(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.twoDwordBuf"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.createArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.runLength"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.size"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.currentFolderInputStream"
Coverage "test" "org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge.TempFileCachingStreamBridge(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getOptions(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Utils.normalize(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fallbackSimpleSort(4)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.addedFromChangeSet"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fallbackSort(3)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ZipFileIterator.next(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp"
Coverage "test" "org.apache.commons.compress.utils.BoundedInputStream.BoundedInputStream(2)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.US_ASCII"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.compressionLevel"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.ZipShort(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.ZipShort(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SubStreamsInfo"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.StartHeader.StartHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getGID(0)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.position(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.finalize(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.TarArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getUID(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.CompressorStreamFactory(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.supportsEncryptionOf(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getMethod(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.getNextDumpEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeNewEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.create(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry.causedUseOfZip64"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Utils"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.entryBytesRead"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.Folder(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream.JarArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setUID(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.getUnsignedByte(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.addSizes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.getMethod(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.toString(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.Entry"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.CpioArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.currentEntry"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeStreamsInfo(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.inode"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.ADDR"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.addDeletion(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skipRemainderOfLastBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.fillGNUSparse1xData(2)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.getBytesWritten(0)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.BitInputStream(2)"
Coverage "test" "org.apache.commons.compress.utils.FlushShieldFilterOutputStream.FlushShieldFilterOutputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.CountingInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.addUnicodeExtraFields(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.writeTo(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveOutputStream(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.readLiteralLength(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.oneByte"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.LocalFileHeader"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.ArchiveInputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.contentMethods"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.closeArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.isArrayZero(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64Mode.Zip64Mode(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.GzipCompressorOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getLongValue(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getDictionarySize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getLongValue(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.LZMA"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.writeCounted(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.putArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.addRawArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.destroy(0)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64Mode"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.evaluateType(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodePathExtraField.UnicodePathExtraField(4)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.recvDecodingTables_pos"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.HEADER_ID"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setUserId(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addPaxHeadersForBigNumbers(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.mode"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BZIP2Decoder.BZIP2Decoder(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsGetUByte(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.createCallable(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setInode(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.toDosTime(4)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.DumpArchiveEntry(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.copyOf(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getUnicodeName(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.SnappyCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeUint64(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeLocalFileHeader(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DummyByteAddingInputStream"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setAccessDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.comment"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.getBytes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField.UCOM_ID"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.parse(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.isSparseRecord(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.TarArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.handleSizesAndCrc(3)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.ArchiveOutputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.GROUP_WRITE"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.readBits(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.ENCRYPTION"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.nameMap"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.blockSort(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setUseLanguageEncodingFlag(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.createArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry.dataStart"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.setDecompressConcatenated(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.entriesRead"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addPaxHeadersForNonAsciiNames"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.HEADER_MAGIC"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.supportsMethodOf(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.TIME_ATTR_TAG"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.endReached"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.bytesWritten"
Coverage "test" "org.apache.commons.compress.compressors.CompressorOutputStream.CompressorOutputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setUnixMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readCString(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.hasStreamIdentifier(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge.inputLock"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getInternalAttributes(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.TapeSegmentHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.getType(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setGroupId(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getHeaderType(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0019_EncryptionRecipientCertificateList"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getDataPadCount(0)"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.copy(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getNameCRC32(0)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.closed"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.fill(3)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.read8(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.useStrongEncryption(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.isUnixSymlink(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.buffer"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.writeRun(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.addEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.ShortFileException.ShortFileException(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setWindowsAttributes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.totalWrittenToOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.UnshrinkingInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.usesDataDescriptor(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.getAddedFromChangeSet(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getRelativeHeaderOffset(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.languageEncodingFlag"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.Entry.Entry(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BZIP2Decoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getRemoteDevice(0)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.shouldBeReplaced(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.canWriteEntryData(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipUtils"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.perform(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.entryOffset"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.ZIP64_MAGIC"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.canReadEntryData(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.moveToFrontCodeAndSend(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.PKWareExtraHeader.PKWareExtraHeader(1)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.items"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.getSlidingDictionarySize(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.DefaultBackingStoreSupplier.storeNum"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.getCompressionLevel(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BitStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.getBytesRead(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getDevMajor(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.getOptions(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.encryptionFlag"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setRemoteDeviceMin(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getFlags(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.idBuf"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.isDeflatedToOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.ZipShort(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.oneByte"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setModifyTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.outputBuffer"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.blockBuffer"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readNewEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readOnce(3)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.resetBlockSize(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.min"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.LZMA"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsFinishedWithStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asLong(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.FramedSnappyDialect(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.isCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BZIP2Decoder"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.readNextCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.GROUP_EXEC"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.canAcceptOptions(1)"
Coverage "test" "org.apache.commons.compress.PasswordRequiredException.PasswordRequiredException(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.base"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.resolveLocalFileHeaderData(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fvswap(4)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.SETUID"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeBits(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.filesize"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveEntry.manifestAttributes"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.findAvailableCompressorOutputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_IA64_FILTER"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getLongNameData(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.ShortFileException"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.entryOffset"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.DEFLATE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.PPMD"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.HEADER_ID"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setFlags(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.readRecord(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.initTT(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.failForBigNumberWithPosixMessage(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream.ExplodingInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.getBytesWritten(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveException.ArchiveException(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.BLKDEV"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.Zip64ExtendedInformationExtraField(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnshrinkingInputStream"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.blockSort(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.crc32Table"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipUtils.getCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setGroupName(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setLastModifiedDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.addEncoder(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.lengthBuf"
Coverage "test" "org.apache.commons.compress.archivers.dump.Dirent.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.ZipMethod(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.USER_READ"
Coverage "test" "org.apache.commons.compress.utils.BoundedInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.getId(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.entries"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getBSDLongName(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.serviceLoaderIterator(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.finished"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.hasZip64Extra(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNULongNameEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getLongValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BCJDecoder.BCJDecoder(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setLastModifiedDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtra(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.fileBytesWritten"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.oneByte"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.NONE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.zip64Mode"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.fileModeBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.ensureOpen(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.DefaultBackingStoreSupplier.get(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.byId(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.hasStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.LFH_SIG"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.BoundedInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C.PureJavaCrc32C(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeCounted(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.getFeature(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.LZMACompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.endBlock(0)"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.closeQuietly(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.setContentMethods(1)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.bitsCached"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.STORED"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.NioZipEncoding"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.CopyDecoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.SINGLE_SEGMENT_SPLIT_MARKER"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.skipBuf"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.mergeCentralDirectoryData(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.NameAndComment.NameAndComment(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.header"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.usesStrongEncryption(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.vswap(4)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.TarArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.type"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.Pack200CompressorOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.failForBigNumber(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeOut(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.dataDescriptorFlag"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isCheckSumOK(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.getEntries(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.expectedChecksum"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.read16(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.DELTA_FILTER"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.INODE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.UnicodeExtraFieldPolicy"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues5(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getExtendedName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.FallbackZipEncoding.encode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.utils.Charsets"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.addDummy(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.endBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.ZipEightByteInteger(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.JarMarker(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.useDataDescriptor(1)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.sanitize(1)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveEntry"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.getAndMoveToFrontDecode0(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.name"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.removeExtraField(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.DeflateCompressorOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.DEFLATED"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_ARM_FILTER"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.DIRECTORY"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveException"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream.ChecksumVerifyingInputStream(4)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeader(3)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.previousCode"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.TAPE"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.writeHeader(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.internalIsLZMACompressionAvailable(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getDevice(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.BoundedInputStream.BoundedInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.ArjArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.writeArchiveHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.CpioArchiveOutputStream(4)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.FALLBACK_ENCODING"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge.getInput(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.peek(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ArchiveInputStreamIterator"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipUtils.getUncompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ArchiveInputStreamIterator.next(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.TapeInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.ZCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.findByMethod(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.consumeRemainderOfLastBlock(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fpop(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.TarArchiveOutputStream(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.unsignedIntToSignedByte(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.tryToLocateSignature(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.SimpleEncodingHolder"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.getNumberOfShannonFanoTrees(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getCompressedCrcValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.currentInputStream"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.Feature(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.generateMTFValues_yy"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainSort_runningOrder"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.bigToLong(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.findEocdRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.setClearCode(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.uid"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.flushDeflater(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.gid"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.readToNull(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getName(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.haveUnclosedEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.useEncryption(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.UNKNOWN"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.HEX_DIGITS"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.getOptionsAsProperties(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.BSD_LONGNAME_PREFIX_LEN"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.skipRemainderOfArchive(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileATimes(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.hasBeenAdded(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.DumpArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.UNKNOWN"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatBigIntegerBinary(5)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartB(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.BZip2CompressorOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZERO"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.SevenZOutputFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0014_X509Certificates"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.getFilename(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BitStream.nextBits(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setChksum(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.versionNeededToExtract(2)"
Coverage "test" "org.apache.commons.compress.archivers.StreamingNotSupportedException.StreamingNotSupportedException(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCreateJavaTime(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SubStreamsInfo.SubStreamsInfo(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.dosToJavaTime(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.setCompressionLevel(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.JPEG"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.LZMA2Decoder(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Archive.Archive(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C.reset(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.ScatterZipOutputStream(2)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.UTF_16LE"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExternalAttributes(1)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream.jarMarkerAdded"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setOffset(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.findCompressorStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.FramedSnappyCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getChksum(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.rewriteSizesAndCrc(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.permissions"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.canEncode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.UnparseableExtraFieldData(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.sixBytesBuf"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.stripTo7Bits(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.putAll(4)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setGID(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.offsetComparator"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZIP64_EOCD_SIG"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.getValue(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry.bytesRead"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeader(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.cdata"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.crc"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getZip64Extra(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.addEntry(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.find(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.UNSHRINKING"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.EMPTY"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.StreamMap.StreamMap(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ZipFileIterator"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.setGroupId(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues0(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.copyFromZipInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.CopyDecoder.CopyDecoder(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.readOffset"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setGroupId(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.selector"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.getCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.readFully(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.lfhBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0015_CertificateIdForFile.X0015_CertificateIdForFile(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getOptionsAsProperties(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getCompressedSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.NioZipEncoding.decode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.ZipLong(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.BZip2CompressorOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterStatistics.ScatterStatistics(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.createExtraField(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileNames(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.skipBytesFully(2)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.deleteDir(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.computeCheckSum(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.Entry.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getHostOs(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writeEOFRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField.READ"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.TarArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.EMPTY_TAR_ARCHIVE_ENTRIES"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.CompressorInputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.namebuffer"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.clone(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.ZipMethod(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getCrcValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.closed"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.readFully(4)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.getFinalCRC(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CFH"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseName(4)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.CachedAvailability"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatLongOctalBytes(4)"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.adjustToLong(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.readTimeAttr(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField.UnparseableExtraField(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isSparse(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.currentLocalFileHeader"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.slideBuffer(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.ZipArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.BoundedInputStream.pos"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setDirectory(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.transferModTime(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainSort_bigDone"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.SPLITTING"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.writeEntryHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream.buffer"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil.isCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.shortBuf"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.delete(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.addArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.reset(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.GROUP_READ"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZipArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.UTF_16BE"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileCTimes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.futures"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getRawInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readStreamsInfo(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getHasWindowsAttributes(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.CompressedEntry.transferToArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader.X0017_StrongEncryptionHeader(0)"
Coverage "test" "org.apache.commons.compress.utils.FlushShieldFilterOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.hbAssignCodes(5)"
Coverage "test" "org.apache.commons.compress.utils.FlushShieldFilterOutputStream.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.DEFAULT"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.useUTF8Flag"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.setGID(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.version"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.endCompression(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64Mode.Always"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.isCompressed"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.copy(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.smallBuf"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.BZip2CompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.cfhBuf"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.recvDecodingTables(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeCString(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.addedFromStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.StartHeader"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatOctalBytes(4)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.matchAsciiBuffer(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.setLinkedFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.handleZip64Extra(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.skipBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.closed"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.isHostOsUnix(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.encode(1)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream.JarArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.med3(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCompressedSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getLinkedFile(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getUserId(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.fill(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.finished"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream.fillBuffer(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.stack_dd"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.ScatterGatherBackingStoreCompressor.ScatterGatherBackingStoreCompressor(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.initBlock(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.unmask(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getRemoteDeviceMin(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseBinaryBigInteger(4)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.LZMADecoder(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues6(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BCJDecoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.copyBuffer"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.entryEOF"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.toKey(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.SevenZFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.DefaultBackingStoreSupplier.DefaultBackingStoreSupplier(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.ONE_THOUSAND"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.trimLeadingZeroesForceMinLength(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.EMPTY"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.getComment(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.updateCRC(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.FallbackZipEncoding.canEncode(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createLocalFileHeader(4)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.normalizeFileName(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writeRecord(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.failForBigNumber(3)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.writeTrailer(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.SevenZFile(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setGeneralPurposeBit(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.ZipArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.getOptionsFromCoder(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer.CircularBuffer(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.ArjArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.getZipArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.oneByte"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.toString(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getLastModified(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.setWithZlibHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.setDirectory(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.zipToDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.checkNewFormat(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.isLZMACompressionAvailable(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.nextArtificalDeviceAndInode"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveSummary"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setModTime(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.verifyLastChecksumAndReset(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BitStream.BitStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Strategy.TEMP_FILE"
Coverage "test" "org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isPaxHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.modifyTime"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fpush(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getDeviceMaj(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.NameAndComment"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.copyOf(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setDevice(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ZipFileIterator.getInputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.blockSize"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.ZERO"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.CachedAvailability.DONT_CACHE"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.StreamMap"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZIP64_EOCD_LOC_SIG"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.getMethod(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setAccessTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getHasAccessDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveSummary.DumpArchiveSummary(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.write(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.findAvailableCompressorInputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setContentMethods(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getOriginalName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterStatistics"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.Simple8BitChar"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.CachedAvailability.CACHED_AVAILABLE"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.AsiExtraField(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder.AES256SHA256Decoder(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.names"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.checksig(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.ArArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.streams"
Coverage "test" "org.apache.commons.compress.archivers.arj.MainHeader"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.deflateBuffer"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setUserId(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsGetInt(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getSimpleName(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getLongGroupId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.reverse(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeOldBinaryEntry(2)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.isEqual(7)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.ZipLong(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.decode(4)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.CAFE_DOOD"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.FileBasedScatterGatherBackingStore(1)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ONE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.Entry.getOffsetEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Strategy"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.readerBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.level"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.getCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getHasCreationDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.getPayloadStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.reset(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.SIG_LENGTH"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.addDummyByte"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.reparseCentralDirectoryData(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtra(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getAccessTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BCJDecoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.ArArchiveEntry(6)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.DD_SIG"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.canReadEntryData(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.initialiseCRC(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.isCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.WAVPACK"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream.JarArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getLinkName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.ZipEightByteInteger(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.NO_BYTES"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.ftab"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.setSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.register(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.handleLongName(7)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveSummary.getNTRec(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.mergeLocalFileDataData(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getNextArEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setSize(1)"
Coverage "test" "org.apache.commons.compress.utils.Sets.newHashSet(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BZIP2Decoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZipArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.fallbackToUTF8"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.usesUTF8ForNames(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.isFirstByteOfEocdSig(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.verifyCheckSum(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getGroupId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.link"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.compressedCrc32"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readAllOrBits(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.javaTimeToNtfsTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getDiskStartNumber(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.getCompressorInputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.clearCode"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setDeviceMin(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.BoundedInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFilesInfo(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer.copy(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.canEncodeChar(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE.find(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.inf"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.METHOD"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.getCompressionLevel(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.BITS"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.UnsupportedZipFeatureException(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE.ZLIB"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.Zip64ExtendedInformationExtraField(0)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.closeEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.getMetaData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.SnappyCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseName(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.SevenZOutputFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.setLongFileMode(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues_code"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.getUnpackSizeForCoder(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.closed"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.LFH"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.buf"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.CopyDecoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.getOperatingSystem(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.getVolume(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getHeaderCount(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.CHRDEV"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readBits(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.getValue(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge.stop(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.setEntryEncoding(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecodingStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.toAsciiBytes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.PKWareExtraHeader.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.LZMA2"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.fileBased(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setName(2)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.StreamingNotSupportedException.getFormat(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.DEFAULT_ENCODING"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setDefaults(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getInode(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.addDecoder(5)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getHeaderPadCount(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readBITS(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.inUse"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodePathExtraField"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGlobalPaxHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.getOptionsFromCoder(2)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.checkIfNeedsZip64(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_2"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeAsciiLong(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsGetBit(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.useUTF8ForNames(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.additionalSizes"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getUnixMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeBinaryLong(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.encode(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readStartHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.addPaxHeaderForBigNumber(5)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.BoundedSeekableByteChannelInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setLinkName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.toDosTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator.next(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature.DATA_DESCRIPTOR"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.checkOldFormat(0)"
Coverage "test" "org.apache.commons.compress.utils.BoundedInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseBinaryLong(4)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.decode(5)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.getUncompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.USER_EXEC"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExtraField(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.create(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(4)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.UTF8_ZIP_ENCODING"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.ntfsTimeToJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.fileBased(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.ArArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getBytesInflated(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.setTableSize(1)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.reAlignReading(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioUtil.long2byteArray(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.ParallelScatterZipCreator(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.reverse(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readOneByte(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getDeviceMin(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.AbstractUnicodeExtraField(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.getOptionsAsProperties(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.getInputStreamCompressorNames(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.cftab"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.files"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DeflateDecoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getCreateJavaTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.CpioArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.STICKY"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.findArchiveStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.writeTo(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isSymbolicLink(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer.available(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE.BZLIB"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.rmin"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.addEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.createHuffmanDecodingTables(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNULongLinkEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readStreamIdentifier(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.minLens"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.findAvailableArchiveInputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.changes.Change.Change(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.hasUsedZip64"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setRawFlag(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.pushedBackBytes(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.pending"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeaderField(5)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.parse(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream.init(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasCrc(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil.FileNameUtil(3)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.isDeletedLater(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.createArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.init(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.BCJDecoder"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.CachedAvailability.CachedAvailability(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.setAddPaxHeadersForNonAsciiNames(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.CachedAvailability.DONT_CACHE"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DeflateDecoder"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeSingleCodec(2)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.HEADER_MAGIC"
Coverage "test" "org.apache.commons.compress.utils.CRC32VerifyingInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.createCallable(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Utils.normalize(4)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.hbCreateDecodeTables(7)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getModifyJavaTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.clone(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.generateMTFValues(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setName(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setLastModifiedDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writePackInfo(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.summary"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.bytesRead"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.tryToConsumeSecondEOFRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.DOS_TIME_MIN"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatNameBytes(5)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.usesEncryption(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.mode"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getUnixMode(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.readFromStack(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.PKWareExtraHeader"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setMode(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.buf"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.finished"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.processZip64Extra(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.longFileMode"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.WORLD_WRITE"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil.getCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.selector"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.CountingOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.ZipLong(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.CFH_SIG"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ArchiveInputStreamIterator.hasNext(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.readNextCode(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.initBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getBytes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.version"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.isUTF8(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.dwordBuf"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.readGNUStringTable(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.updateCRC(2)"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator.ServiceLoaderIterator(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getBytes(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsPutInt(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.Data(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readFully(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartC(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.operatingSystem"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.getPath(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.readCentralDirectoryEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.LFH_SIG"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.haveUnclosedEntry"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.USER_WRITE"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setRemoteDeviceMaj(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.shouldAddZip64Extra(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.FILE"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_SPARC_FILTER"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.getAddedFromStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.crc32"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.ZipArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.cdLength"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.oneByte"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.getOptionsAsProperties(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnsupportedZipFeatureException.Feature"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.writeEntryHeader(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data"
Coverage "test" "org.apache.commons.compress.utils.Lists.newArrayList(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BinaryTree.addLeaf(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.assembleData(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.getEntryEncoding(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.encodeHighChar(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.createDeferred(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.BZIP2"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.validateSizeInformation(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.UnicodeExtraFieldPolicy.NOT_ENCODEABLE"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.bufUsed"
Coverage "test" "org.apache.commons.compress.utils.IOUtils"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.readFully(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.hbMakeCodeLengths(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.copyRawEntries(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2Utils.getUncompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.ensureOpen(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.serviceLoaderIterator(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.entries"
Coverage "test" "org.apache.commons.compress.archivers.dump.UnrecognizedFormatException.UnrecognizedFormatException(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.toDosTime(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues4(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.OutputStreamCompressor.writeOut(3)"
Coverage "test" "org.apache.commons.compress.archivers.arj.LocalFileHeader.extendedHeaders"
Coverage "test" "org.apache.commons.compress.utils.Charsets.toCharset(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.ArArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isExtended(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getDevMinor(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveException"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.isGNULongName(1)"
Coverage "test" "org.apache.commons.compress.utils.Iterators"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_PPC_FILTER"
Coverage "test" "org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge.InMemoryCachingStreamBridge(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0014_X509Certificates.X0014_X509Certificates(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.findBindPairForInStream(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ChangeSetPerformer(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.findBindPairForOutStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.parse(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setMethod(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.IMPLODING"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.wordBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.populateFromCentralDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.hashCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.getStatisticsMessage(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.sevenZSignature"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.markSupported(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.ChangeSet(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.HEADER_ID"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getGeneralPurposeBits(2)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.changes"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.BoundedInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.bytesRead"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readEncodedHeader(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.ASCII"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.CpioArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getGeneralPurposeBit(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.FramedSnappyCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.seqToUnseq"
Coverage "test" "org.apache.commons.compress.archivers.arj.MainHeader.MainHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getDictSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeZip64CentralDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getEntries(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory64(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.makeMaps(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.setupNoRandPartA(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.SevenZFile(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coder.Coder(0)"
Coverage "test" "org.apache.commons.compress.utils.BoundedInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDataDescriptor(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.GzipCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.TOKENIZATION"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.drainCurrentEntryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.getBytes(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.clone(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.writeDeflated(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE.SEGMENT_TYPE(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_3"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getModifyJavaTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.getTotalBytesWritten(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.cdOffset"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.checksum"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.compressionDoneAt"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.addRepeatOfPreviousCode(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.selectorMtf"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.supportsDataDescriptorFor(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasLastModifiedDate(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.addedFromChangeSet(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.getBytesWritten(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.getValue(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.convert64(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.crc"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.getValue(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.setCacheXZAvailablity(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.gpb"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.readOneByte(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.Dirent.getParentIno(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setUserName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.NioZipEncoding.canEncode(1)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getGroupId(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.unzftab"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getGID(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getModTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsPutUByte(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.setBigNumberMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.OffsetEntry.dataOffset"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getEntryEncoding(1)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.getUncompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.isXZCompressionAvailable(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge.StreamBridge(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodePathExtraField.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.toAsciiString(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.X7875_NewUnix(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DummyByteAddingInputStream.addDummyByte"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.closeArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.utils.Lists"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readStored(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil.getUncompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorException.CompressorException(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_1"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.TarArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasCreationDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.Simple8BitChar.compareTo(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.twoBytesBuf"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.mainSort_copy"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.closeArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.finish(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.getValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.numberOptionOrDefault(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.repositionIfNecessary(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.isBit2_createTimePresent(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.preClose(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.currentState"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readDirectoryEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setMode(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C.update(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.endReached"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.size(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFolder(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.nlink"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.isBit0_modifyTimePresent(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.LocalFileHeader.LocalFileHeader(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.toAsciiString(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.dateToZip(1)"
Coverage "test" "org.apache.commons.compress.changes.Change"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.getIno(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.getModificationTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.PERMISSION(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeSubStreamsInfo(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fallbackQSort3(4)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveEntry.certificates"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.SeekableInMemoryByteChannel(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.verify(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.Dirent.Dirent(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.clone(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readOldBinaryEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.CpioArchiveInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getFormat(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.ENHANCED_DEFLATED"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.getUnicodeStringIfOriginalMatches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readOneByte(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveOutputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.reset(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.closeQuietly(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.toKey(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.clone(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.CpioArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.getDecompressConcatenated(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil.compressSuffix"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.setRelativeHeaderOffset(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.SINGLETON"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.gid"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry.CurrentEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.Dirent.getIno(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.decodeByte(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getContentMethods(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.UnicodeExtraFieldPolicy.UnicodeExtraFieldPolicy(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.signedByteToUnsignedInt(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.STANDARD"
Coverage "test" "org.apache.commons.compress.changes.Change.getInput(0)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream.JarArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.toDosTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.longFileMode"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils.isEqual(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.longToBig(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.init(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getUID(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.parameters"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.hasCompressionLevelChanged"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.FIFO"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.encode(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getUnparseableOnly(0)"
Coverage "test" "org.apache.commons.compress.changes.Change.targetFile(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.CompressedEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getLocalFileDataExtra(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.CachedAvailability.CACHED_AVAILABLE"
Coverage "test" "org.apache.commons.compress.compressors.CompressorOutputStream"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.skip(2)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeDataDescriptor(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setUseZip64(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BitStream.nextBit(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2Utils"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isGNUSparse(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.Simple8BitZipEncoding(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues2_pos"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.totalCodesRead"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMACompressorOutputStream.LZMACompressorOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.ZipArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.getAndMoveToFrontDecode_yy"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.WORLD_EXEC"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.getValue(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getPlatform(0)"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.SKIP_BUF"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.positionAtEndOfCentralDirectoryRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readString(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.UnrecognizedFormatException"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.reset(0)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.decompressNextSymbol(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.lastModifiedBuf"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.weight"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.maj"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField.UnicodeCommentExtraField(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFirstLocalFileHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.DefaultBackingStoreSupplier"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.FallbackZipEncoding.decode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.ScatterGatherBackingStoreCompressor.writeOut(3)"
Coverage "test" "org.apache.commons.compress.PasswordRequiredException"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.calculateChecksum(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodeCommentExtraField"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.skipBytes(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fmin(2)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.readBlock(1)"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.bitsCachedSize"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues1(2)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.expandCodeToOutputStack(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.heap"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.writeHeader(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.checkRequestedFeatures(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DeflateDecoder.DeflateDecoder(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.CachedAvailability.CACHED_UNAVAILABLE"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.CpioArchiveEntry(3)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveEntry.JarArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.CoderBase(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.getCrc32(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.TIME_ATTR_SIZE"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.startedAt"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readFully(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.putArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C.T"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setCreateTime(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues_rfreq"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.readFully(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.getValue(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setCreateJavaTime(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.setFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues_fave"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sentMTFValues4_inUse16"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.SEGMENT_TYPE"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.getBytesRead(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.AES256SHA256"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.getAndMoveToFrontDecode(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.incrementCodeSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TapeSegmentHeader.getCdata(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fswap(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.getBytesRead(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.ArchiveStreamFactory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0019_EncryptionRecipientCertificateList.X0019_EncryptionRecipientCertificateList(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.DumpArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getNextZipEntry(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.addedFromStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.ScatterGatherBackingStoreCompressor"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.DD_SIG"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.calendarInstance"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.SOCKET"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(5)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.ArArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.Dirent"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.temp_charArray2d"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.padAsNeeded(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.WHITEOUT"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField.getKey(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.DummyByteAddingInputStream.DummyByteAddingInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.readBuf"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveConstants.COMPRESSION_TYPE.LZO"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.Simple8BitChar.Simple8BitChar(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coder.properties"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.encoding"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues3(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.EXPANDING_LEVEL_4"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64Mode.Never"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.fallbackSort(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.DD"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.getChanges(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipUtil.canHandleEntryData(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.readNextBlock(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.deflateUntilInputIsNeeded(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CFH_SIG"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.getCompressorOutputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ArchiveInputStreamIterator.ArchiveInputStreamIterator(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setAccessTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.writtenToOutputStreamForLastEntry"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCrcValue(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.toCharset(1)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setAntiItem(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.isBSDLongName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getEntries(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.AED_SIG"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.find(1)"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.toByteArray(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.createTime"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFromInflater(3)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.bsW(2)"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.OffsetEntry.OffsetEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.canReadEntryData(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.UnicodeExtraFieldPolicy.NEVER"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.ZipArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.TarArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.rmaj"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.SevenZMethodConfiguration(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.buildDecoderStack(4)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileMTimes(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getCompressedSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseOctalOrBinary(3)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.codeSize"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.readOldGNUSparse(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.isBit1_accessTimePresent(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.perform(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils.UnparseableExtraField.THROW"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.ChangeSetResults(0)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream.getNextJarEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.LINK"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE.TYPE(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory32(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.X5455_ExtendedTimestamp(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.write0(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isPaxGNUSparse(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.mtime"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.CopyDecoder"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.encode(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Coders.CODER_MAP"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.isEOFRecord(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.HEADER_ID"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.current"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setExtraFields(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readMainHeader(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.write(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.getArchiveOutputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnicodePathExtraField.UPATH_ID"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.closeArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.ZipFile(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry.localDataStart"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asInt(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioUtil.byteArray2long(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioUtil"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.CFH_SIG"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.getEclass(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.closed"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipUtils.isCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.CachedAvailability.CACHED_UNAVAILABLE"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.numNonEmptyStreams"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.names"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.ZipArchiveOutputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.CachedAvailability"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.position(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCompressedCrcValue(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.TarArchiveInputStream(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getAccessDate(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.finished"
Coverage "test" "org.apache.commons.compress.archivers.jar.JarArchiveEntry.JarArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getNumberOfLinks(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.available(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setInternalAttributes(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.selectorMtf"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatLongOctalOrBinaryBytes(4)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.flush(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.setCentralDirectoryData(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.fillGNUSparse0xData(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExtraFieldUtils"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setModifyJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setUserId(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfiguration.getOptions(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.CurrentEntry.CurrentEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.paxHeaders(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.shortBuf"
Coverage "test" "org.apache.commons.compress.utils.BitInputStream.MASKS"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.ArjArchiveInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.skip(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.OutputStreamCompressor.OutputStreamCompressor(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.getHeaderId(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.getCurrentStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.UnicodeExtraFieldPolicy.ALWAYS"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong.getBytes(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getWindowsAttributes(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileEmptyFiles(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.parseTarHeader(3)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.deleted(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.PERMISSION.WORLD_READ"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.ParallelScatterZipCreator(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.putShort(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyDialect.usesChecksumWithCompressedChunks(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.TarArchiveInputStream(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.getEffectiveZip64Mode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.StreamCompressor(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry.crc"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getAccessJavaTime(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.Data(1)"
Coverage "test" "org.apache.commons.compress.archivers.StreamingNotSupportedException"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveException.ArchiveException(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.offset"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getEntriesInPhysicalOrder(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.closeCopiedEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.sendMTFValues_cost"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.numberOptionOrDefault(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.currentChar"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.closeArchiveEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.pushback(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.limit"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.createCompressorOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.isLink(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.getZipEncoding(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.parseFromLocalFileData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getAllExtraFieldsNoCopy(0)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.SeekableInMemoryByteChannel(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.EMPTY"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.currentFolderIndex"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.writePaxHeaders(4)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getUserId(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.setMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getModifyTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.SimpleEncodingHolder.SimpleEncodingHolder(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.count(1)"
Coverage "test" "org.apache.commons.compress.utils.ArchiveUtils"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setCreateJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getUnixSymlink(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.growBuffer(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC.CRC(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder.decode(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipLong"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.realSkip(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.accessTime"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.finished"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getParseableExtraFieldsNoCopy(0)"
Coverage "test" "org.apache.commons.compress.changes.Change.type(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setModTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.unparseableExtra"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.createArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.BoundedInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getLongUserId(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.tmpbuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAttributes"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getCentralDirectoryExtra(0)"
Coverage "test" "org.apache.commons.compress.utils.BoundedInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.getEntry(1)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.pad(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.bigNumberMode"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.TYPE"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.decode(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setModifyTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeUnpackInfo(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.setHeaderId(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.inf"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.close(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.getOutputStreamCompressorNames(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.CachedAvailability.CachedAvailability(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.SevenZFile(3)"
Coverage "test" "org.apache.commons.compress.archivers.dump.TapeInputStream.getBytesRead(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64Mode.AsNeeded"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFolder(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.bsR(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.ZipArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.changes.Change.Change(2)"
Coverage "test" "org.apache.commons.compress.compressors.FileNameUtil"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.mark(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readUint64(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.putAll(4)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isOldGNUSparse(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipShort.getBytes(1)"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setAccessJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readHeader(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.BlockSort(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField.parseFromCentralDirectoryData(3)"
Coverage "test" "org.apache.commons.compress.utils.Sets"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.setNumberOfLinks(1)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.SZ_SIGNATURE"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.setContentCompression(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.mtfFreq"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMADecoder.getDictionarySize(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.skipRecordPadding(0)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.setModificationTime(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorOutputStream.XZCompressorOutputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.getCachedXZAvailability(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setAccessDate(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.DeltaDecoder(0)"
Coverage "test" "org.apache.commons.compress.utils.ChecksumVerifyingInputStream"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.calculateStreamMap(1)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.getBytesRead(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.offsets"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.sourcePayloadLength"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2Utils.isCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.perm"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.crc"
Coverage "test" "org.apache.commons.compress.utils.IOUtils.copy(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setHasWindowsAttributes(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.Pack200CompressorOutputStream(4)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.UTF_8"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.writeOut(3)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.setComment(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getParseableExtraFields(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.StreamBridge.StreamBridge(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.addArchiveEntry(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.InMemoryCachingStreamBridge.getInputView(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetPerformer.ZipFileIterator.hasNext(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.BCJ_ARM_THUMB_FILTER"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readUnpackInfo(2)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.getMethodByCode(1)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.zipEncoding"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.array(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZUtils.internalIsXZCompressionAvailable(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEightByteInteger.ZipEightByteInteger(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.INCS"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatNameBytes(4)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.complete(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.method"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.LZMA2Decoder.getOptionsFromCoder(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDeflated(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.isZip64Required(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStream.CpioArchiveOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.createZipArchiveEntryRequest(2)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.readBinaryLong(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read0(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.read32(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveUtil.convert16(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.OutputStreamCompressor"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer.put(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveOutputStream.write(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readSubStreamsInfo(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.dwordBbuf"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.getPrefixesLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.getOutputStreamArchiveNames(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.uid"
Coverage "test" "org.apache.commons.compress.compressors.CompressorStreamFactory.CompressorStreamFactory(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.DeflateCompressorInputStream(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.initializeTables(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.currentEntryHasOutstandingBytes(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.addAsFirstExtraField(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getName(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatLongBinary(5)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.equals(1)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getSize(0)"
Coverage "test" "org.apache.commons.compress.utils.CountingInputStream.count(1)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.truncate(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setVersionRequired(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Archive"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.GeneralPurposeBit(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setGroupId(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.PKWARE_IMPLODING"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.rawName"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream.DeflateCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.setSizesAndOffsetFromZip64Extra(3)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.isAntiItem(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.CircularBuffer"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.Pack200CompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.deferredBlockStreams"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.getMode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.setModifyJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Strategy.Pack200Strategy(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.setCompressionLevel(1)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStream.DeflateCompressorOutputStream(2)"
Coverage "test" "org.apache.commons.compress.utils.CountingOutputStream"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.createUnicodeExtraFields"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asInt(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BoundedSeekableByteChannelInputStream.read(1)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.deleted"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getRawName(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.TempFileCachingStreamBridge"
Coverage "test" "org.apache.commons.compress.archivers.zip.ScatterZipOutputStream.addArchiveEntry(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.OffsetEntry.headerOffset"
Coverage "test" "org.apache.commons.compress.compressors.lzma.LZMAUtils.getCachedLZMAAvailability(0)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200Strategy.IN_MEMORY"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.sendMTFValues2(2)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.DeflateParameters(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.parseBoolean(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit.strongEncryptionFlag"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.noExtraFields"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator.ServiceLoaderIterator(2)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BinaryTree.BinaryTree(1)"
Coverage "test" "org.apache.commons.compress.utils.SeekableInMemoryByteChannel.isOpen(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.lastStoredEntry"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.externalAttributes"
Coverage "test" "org.apache.commons.compress.compressors.snappy.PureJavaCrc32C.getValue(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest.ZipArchiveEntryRequest(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.BZip2CompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.exceptionMessage(5)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFilesInfo(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.getCreateTime(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipEncodingHelper.SimpleEncodingHolder.getEncoding(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X000A_NTFS.setAccessJavaTime(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setCentralDirectoryExtra(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setPlatform(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BinaryTree"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setSize(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.wordBuf"
Coverage "test" "org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore.getInputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.setUserId(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.getNextEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.getNextTarEntry(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.CRC"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.pushedBackBytes(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2Utils.getCompressedFilename(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorInputStream.reset(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.CoderBase.numberOptionOrDefault(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.setOperatingSystem(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.SeekableByteChannelCompressor.writeOut(3)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream.matches(2)"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipParameters.GzipParameters(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.getInputStreamArchiveNames(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.add(3)"
Coverage "test" "org.apache.commons.compress.compressors.CompressorInputStream.count(1)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.getArchiveInputStreamProviders(0)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.LZWInputStream(2)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.read(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnshrinkingInputStream.decompressNextSymbol(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.BindPair"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.getLocalFileDataLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.globalPaxHeaders"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarUtils.formatCheckSumOctalBytes(4)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveEntry.getRemoteDeviceMaj(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestamp.dateToZipLong(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileAntiItems(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.setCreationDate(1)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BlockSort.stack_ll"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.writeCentralDirectoryInChunks(0)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.Data.inUse"
Coverage "test" "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraField.Zip64ExtendedInformationExtraField(4)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipFile.positionAtCentralDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.fourBytesBuf"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.CurrentEntry.entry"
Coverage "test" "org.apache.commons.compress.archivers.zip.GeneralPurposeBit"
Coverage "test" "org.apache.commons.compress.archivers.arj.MainHeader.extendedHeaderBytes"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.getExternalAttributes(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readHeaders(1)"
Coverage "test" "org.apache.commons.compress.compressors.pack200.Pack200CompressorOutputStream.Pack200CompressorOutputStream(3)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSetResults.getDeleted(0)"
Coverage "test" "org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream.readSize(0)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveStreamFactory.createArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFully(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.getTableSize(0)"
Coverage "test" "org.apache.commons.compress.compressors.xz.XZCompressorInputStream.XZCompressorInputStream(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStream.read(0)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveEntry.setType(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X0016_CertificateIdForCentralDirectory.X0016_CertificateIdForCentralDirectory(0)"
Coverage "test" "org.apache.commons.compress.compressors.z.ZCompressorInputStream.clearEntries(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.asInt(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.Folder.getOrderedCoders(0)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream.setLongFileMode(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZFile.readFully(1)"
Coverage "test" "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStream.closeEntry(0)"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveEntry.isDirectory(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getLocalFileDataData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveEntry.setVersionMadeBy(1)"
Coverage "test" "org.apache.commons.compress.utils.Charsets.ISO_8859_1"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.isLink(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ParallelScatterZipCreator.submit(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.X7875_NewUnix.getCentralDirectoryLength(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.SeekableByteChannelCompressor"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnrecognizedExtraField.getCentralDirectoryData(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.UnparseableExtraFieldData.HEADER_ID"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntry.getHasLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.compressionLevel"
Coverage "test" "org.apache.commons.compress.archivers.arj.ArjArchiveInputStream.readExtraData(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BinaryTree.read(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.BinaryTree.decode(2)"
Coverage "test" "org.apache.commons.compress.compressors.bzip2.BZip2CompressorOutputStream.Data.parent"
Coverage "test" "org.apache.commons.compress.compressors.deflate.DeflateParameters.zlibHeader"
Coverage "test" "org.apache.commons.compress.archivers.zip.AsiExtraField.dirFlag"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.LZERO"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.NULL"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod"
Coverage "test" "org.apache.commons.compress.compressors.gzip.GzipCompressorOutputStream.GzipCompressorOutputStream(2)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.getCurrentOutputStream(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveEntry.getLastModifiedDate(0)"
Coverage "test" "org.apache.commons.compress.changes.ChangeSet.addAddition(1)"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.parsePaxHeaders(1)"
Coverage "test" "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream.DumpArchiveInputStream(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.ID"
Coverage "test" "org.apache.commons.compress.utils.ServiceLoaderIterator.getNextServiceLoader(0)"
Coverage "test" "org.apache.commons.compress.archivers.ar.ArArchiveInputStream.isGNUStringTable(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZMethod.SevenZMethod(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.DeltaDecoder.getOptionsFromCoder(1)"
Coverage "test" "org.apache.commons.compress.compressors.lzw.LZWInputStream.getClearCode(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.setCreateUnicodeExtraFields(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream.EOCD_SIG"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveEntry.setName(1)"
Coverage "test" "org.apache.commons.compress.archivers.zip.JarMarker.getInstance(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.Simple8BitZipEncoding.pushEncodedChar(2)"
Coverage "test" "org.apache.commons.compress.archivers.ArchiveInputStream.single"
Coverage "test" "org.apache.commons.compress.archivers.zip.StreamCompressor.writeCounted(3)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ExplodingInputStream"
Coverage "test" "org.apache.commons.compress.archivers.tar.TarArchiveInputStream.readRecord(0)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.OutputStreamWrapper.close(0)"
Coverage "test" "org.apache.commons.compress.archivers.zip.ZipMethod.AES_ENCRYPTED"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileEmptyStreams(1)"
Coverage "test" "org.apache.commons.compress.archivers.sevenz.SevenZOutputFile.writeFileWindowsAttributes(1)"
