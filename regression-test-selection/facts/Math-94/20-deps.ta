FACT TUPLE :
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "int[]"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeBackwardDifferencesArray(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.coeffs"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.step"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.copy(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.previousF"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.step"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.stepSize"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.addEndTimeChecker(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.start(6)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.coeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.truncateStep(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.rotatePreviousSteps(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.getCoeffs(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.coeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.getCoeffs(0)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.getCoeffs(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeBackwardDifferencesArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)" "org.apache.commons.math.fraction.Fraction.ONE"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)" "org.apache.commons.math.fraction.Fraction.subtract(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.METHOD_NAME"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.coeffs" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.coeffs"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.step"
reference "org.apache.commons.math.stat.Frequency.1" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.util.CompositeFormat"
reference "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(2)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.util.CompositeFormat.CompositeFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getAvailableLocales(0)"
call "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)" "org.apache.commons.math.complex.ComplexFormat.getInstance(0)"
call "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.formatDouble(4)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.format(3)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.ComplexFormat.format(3)"
call "org.apache.commons.math.complex.ComplexFormat.format(3)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.format(3)"
reference "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getInstance(0)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(1)" "org.apache.commons.math.complex.ComplexFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.complex.ComplexFormat.getInstance(1)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
reference "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.realFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.parse(1)" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(1)" "org.apache.commons.math.MathRuntimeException.createParseException(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parse(1)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseNumber(3)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseNextCharacter(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormat.parse(2)" "org.apache.commons.math.complex.ComplexFormat.parseFixedstring(3)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
call "org.apache.commons.math.complex.ComplexFormat.parseObject(2)" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.parseObject(2)"
reference "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
reference "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
reference "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)" "org.apache.commons.math.complex.ComplexFormat.realFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.serialVersionUID"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.DEFAULT_IMAGINARY_CHARACTER"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.imaginaryCharacter"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.imaginaryFormat"
contain "org.apache.commons.math.complex.ComplexFormat" "org.apache.commons.math.complex.ComplexFormat.realFormat"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeBinStats(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.computeStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.inputStream"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.this$0"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeBinStats(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.this$0"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.BiDiagonalTransformer"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "double[]"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecomposition"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.EigenDecomposition"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.m"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.n"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedS"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedVt"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.transformer"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getMainDiagonalRef(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainBidiagonal"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getSecondaryDiagonalRef(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainTridiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryTridiagonal"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.eigenDecomposition"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.m"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.n"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.eigenDecomposition"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.transformer"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedUt"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedS"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS(0)" "org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getS(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSingularValues(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSingularValues(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSingularValues(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.m"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.n"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.transformer"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.eigenDecomposition"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedVt"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getVT(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getNorm(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getNorm(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getConditionNumber(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getRank(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.m"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getRank(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.n"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getRank(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getRank(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getUT(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getRank(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(5)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.serialVersionUID"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.m"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.n"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.transformer" "org.apache.commons.math.linear.BiDiagonalTransformer"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.transformer"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainBidiagonal" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryBidiagonal" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryBidiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainTridiagonal" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.mainTridiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryTridiagonal" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.secondaryTridiagonal"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.eigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.eigenDecomposition"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedU" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedUt" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedUt"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedS" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedS"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedV" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedVt" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl" "org.apache.commons.math.linear.SingularValueDecompositionImpl.cachedVt"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDev"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.dev"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(0)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.nDevSq"
reference "org.apache.commons.math.MathException.translate(2)" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.translate(2)"
call "org.apache.commons.math.MathException.buildMessage(3)" "org.apache.commons.math.MathException.translate(2)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(0)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(0)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(0)"
call "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(2)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.getMessage(0)"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(1)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.buildMessage(3)"
reference "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.MathException(3)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.MathException(3)"
reference "org.apache.commons.math.MathException.getPattern(0)" "org.apache.commons.math.MathException.pattern"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getPattern(0)"
reference "org.apache.commons.math.MathException.getArguments(0)" "org.apache.commons.math.MathException.arguments"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getArguments(0)"
reference "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.pattern"
reference "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.arguments"
call "org.apache.commons.math.MathException.getMessage(1)" "org.apache.commons.math.MathException.buildMessage(3)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getMessage(1)"
call "org.apache.commons.math.MathException.getLocalizedMessage(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.getLocalizedMessage(0)"
call "org.apache.commons.math.MathException.printStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.printStackTrace(0)"
call "org.apache.commons.math.MathException.printStackTrace(1)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.printStackTrace(1)"
reference "org.apache.commons.math.MathException.static {...}" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.static {...}"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.serialVersionUID"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.cachedResources"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.pattern"
contain "org.apache.commons.math.MathException" "org.apache.commons.math.MathException.arguments"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.setSumLogImpl(1)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getSumLogImpl(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.copy(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.checkEmpty(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMean.checkEmpty(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.checkEmpty(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.sumOfLogs"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumOfLogs(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumOfLogs(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumOfLogs(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.setSumLogImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.checkEmpty(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.copy(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.secondMoment"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum" "org.apache.commons.math.stat.descriptive.summary.Sum"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.min" "org.apache.commons.math.stat.descriptive.rank.Min"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.max" "org.apache.commons.math.stat.descriptive.rank.Max"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.SummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics.varianceImpl"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.1" "org.apache.commons.math.linear.EigenDecompositionImpl"
reference "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.getScale(0)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
contain "org.apache.commons.math.distribution.WeibullDistribution" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "double[].clone(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.initializeCoefficients(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.initializeCoefficients(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.reinitialize(4)"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.initializeCoefficients(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.currentState"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.currentState"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.initializeCoefficients(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT" "double[]"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.previousF"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "double[]"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.TriDiagonalTransformer"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecomposition"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.isSymmetric(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.splitTolerance"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "double[].clone(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.transformer"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.splitTolerance"
call "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.isSymmetric(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.isSymmetric(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.isSymmetric(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.isSymmetric(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedD"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedVt"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
call "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.decompose(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)" "org.apache.commons.math.linear.RealMatrix.setColumnVector(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getD(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedD"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getD(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getD(0)" "org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getD(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedVt"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)" "org.apache.commons.math.linear.RealMatrix.setRowVector(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getVT(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalue(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalue(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getImagEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getImagEigenvalues(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getImagEigenvalues(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getImagEigenvalue(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getImagEigenvalue(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(1)" "org.apache.commons.math.linear.RealVectorImpl.copy(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getDeterminant(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getDeterminant(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(4)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.transformer"
call "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getMainDiagonalRef(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
call "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getSecondaryDiagonalRef(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.transformToTridiagonal(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.lowerSpectra"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.upperSpectra"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.minPivot"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.process1RowBlock(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.countEigenValues(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.minPivot"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.ldlTDecomposition(3)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvalues(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.splitTolerance"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.computeSplits(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process1RowBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process1RowBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.process1RowBlock(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
call "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.process2RowsBlock(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
call "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.process3RowsBlock(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
call "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.initialSplits(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.tType"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.sigma"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.sigmaLow"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
call "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.processGeneralBlock(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.initialSplits(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.initialSplits(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.initialSplits(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.g"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.sigma"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
call "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.qMax"
call "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
call "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.updateSigma(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.tType"
call "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.goodStep(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.flipIfWarranted(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.minPivot"
call "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.countEigenValues(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvaluesRange(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.countEigenValues(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.countEigenValues(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.countEigenValues(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.ldlTDecomposition(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.ldlTDecomposition(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.ldlTDecomposition(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.ldlTDecomposition(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.eMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dqds(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.eMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dqd(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.tType"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.dN2"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.g"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.computeShiftIncrement(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.updateSigma(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.sigma"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.updateSigma(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.sigmaLow"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.updateSigma(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenVectors(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.stationaryQuotientDifferenceWithShift(3)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.progressiveQuotientDifferenceWithShift(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.transformer"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.findEigenvector(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.stationaryQuotientDifferenceWithShift(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.stationaryQuotientDifferenceWithShift(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.progressiveQuotientDifferenceWithShift(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.progressiveQuotientDifferenceWithShift(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.serialVersionUID"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.TOLERANCE_2"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.splitTolerance"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.main" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.main"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.secondary" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.secondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.squaredSecondary"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.transformer" "org.apache.commons.math.linear.TriDiagonalTransformer"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.transformer"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.lowerSpectra"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.upperSpectra"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.minPivot"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.sigma"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.sigmaLow"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.tau"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.work" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.work"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.pingPong"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.qMax"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.eMin"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.tType"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin1"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dMin2"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dN"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dN1"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.dN2"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.g"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.imagEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors" "org.apache.commons.math.linear.RealVectorImpl[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.eigenvectors"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.cachedV" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedV"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.cachedD" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedD"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.cachedVt" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.EigenDecompositionImpl" "org.apache.commons.math.linear.EigenDecompositionImpl.cachedVt"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.MathUtils(0)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtils.addAndCheck(2)" "org.apache.commons.math.util.MathUtils.addAndCheck(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtils.addAndCheck(3)" "org.apache.commons.math.util.MathUtils.addAndCheck(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.addAndCheck(3)"
call "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.cosh(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtils.equals(2)" "org.apache.commons.math.util.MathUtils.equals(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtils.factorial(1)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtils.factorialDouble(1)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.gcd(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtils.lcm(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.util.MathUtils.lcm(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.lcm(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.log(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.util.MathUtils.mulAndCheck(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.scalb(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.normalizeAngle(2)"
call "org.apache.commons.math.util.MathUtils.round(2)" "org.apache.commons.math.util.MathUtils.round(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtils.round(2)" "org.apache.commons.math.util.MathUtils.round(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtils.round(3)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtils.round(3)" "org.apache.commons.math.util.MathUtils.roundUnscaled(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtils.roundUnscaled(3)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.roundUnscaled(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.sinh(1)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtils.subAndCheck(2)" "org.apache.commons.math.util.MathUtils.addAndCheck(3)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.EPSILON"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.SAFE_MIN"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.NB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.NS"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.PB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.PS"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.ZB"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.ZS"
contain "org.apache.commons.math.util.MathUtils" "org.apache.commons.math.util.MathUtils.TWO_PI"
reference "org.apache.commons.math.ode.sampling.StepHandler" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.sampling.StepHandler" "org.apache.commons.math.ode.sampling.StepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.sampling.StepHandler" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
contain "org.apache.commons.math.ode.sampling.StepHandler" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.main"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQ"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQt"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedT"
call "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.transform(0)"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQ"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQt"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)" "org.apache.commons.math.linear.RealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedT"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.main"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getHouseholderVectorsRef(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getHouseholderVectorsRef(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getMainDiagonalRef(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.main"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getMainDiagonalRef(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.getSecondaryDiagonalRef(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.getSecondaryDiagonalRef(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.transform(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.transform(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.main"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.transform(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.transform(0)"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.serialVersionUID"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors" "double[][]"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.main" "double[]"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.main"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.secondary" "double[]"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.secondary"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQ" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQ"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQt" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedQt"
reference "org.apache.commons.math.linear.TriDiagonalTransformer.cachedT" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.TriDiagonalTransformer" "org.apache.commons.math.linear.TriDiagonalTransformer.cachedT"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.GillIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.GillIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.GillIntegrator.b"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.GillIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GillIntegrator" "org.apache.commons.math.ode.nonstiff.GillIntegrator.b"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.FractionFormat"
reference "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(3)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.format(3)" "org.apache.commons.math.fraction.ProperFractionFormat.getDenominatorFormat(0)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.format(3)"
reference "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.parseNextCharacter(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.fraction.ProperFractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)" "org.apache.commons.math.util.MathUtils.sign(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.parse(2)"
reference "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.serialVersionUID"
contain "org.apache.commons.math.fraction.ProperFractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat.wholeFormat"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.UniformRandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.PointCostPair[]"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.CostFunction"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(7)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(6)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(4)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(5)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.random.RandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.setSingleStart(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.setMultiStart(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima(0)" "org.apache.commons.math.optimization.PointCostPair[].clone(0)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.getMinima(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.ConvergenceChecker.converged(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.iterateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.buildSimplex(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minimize(3)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.iterateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)" "org.apache.commons.math.optimization.CostFunction.cost(1)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateCost(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluateSimplex(0)"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.replaceWorstPoint(1)"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.{...}"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.static {...}"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.pointCostPairComparator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex" "org.apache.commons.math.optimization.PointCostPair[]"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.simplex"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.f" "org.apache.commons.math.optimization.CostFunction"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.f"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.evaluations"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.starts"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.generator" "org.apache.commons.math.random.RandomVectorGenerator"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.generator"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.minima" "org.apache.commons.math.optimization.PointCostPair[]"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer" "org.apache.commons.math.optimization.DirectSearchOptimizer.minima"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.Solver"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecomposition"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQ"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQT"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedR"
reference "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedH"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedR"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
call "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQ"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getQ(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQT"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)" "org.apache.commons.math.linear.RealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getQT(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)" "org.apache.commons.math.linear.QRDecompositionImpl.cachedH"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
call "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
reference "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.Solver(3)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.serialVersionUID"
reference "org.apache.commons.math.linear.QRDecompositionImpl.qrt" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.qrt"
reference "org.apache.commons.math.linear.QRDecompositionImpl.rDiag" "double[]"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.rDiag"
reference "org.apache.commons.math.linear.QRDecompositionImpl.cachedQ" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQ"
reference "org.apache.commons.math.linear.QRDecompositionImpl.cachedQT" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.cachedQT"
reference "org.apache.commons.math.linear.QRDecompositionImpl.cachedR" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.cachedR"
reference "org.apache.commons.math.linear.QRDecompositionImpl.cachedH" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.QRDecompositionImpl" "org.apache.commons.math.linear.QRDecompositionImpl.cachedH"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.fraction.Fraction"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedH"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.AdamsBashforthStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.rollback"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeBackwardDifferencesArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.bdArray"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.gamma"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.initializeCoefficients(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedH"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.storeTime(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.h"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.truncateStep(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedH"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolatedTime"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateDerivatives(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousT"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeRollback(2)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.h"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.interpolateState(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.gamma"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.bdArray"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.computeRollback(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.neville" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.rollback" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.gamma" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.gamma"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.bdArray" "int[][]"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.bdArray"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthStepInterpolator.nonTruncatedH"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularMatrixException"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "double[]"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "double[][]"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.Solver(2)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.qrt"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.Solver(2)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.Solver(2)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.isNonSingular(0)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.isNonSingular(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.qrt"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "double[].clone(0)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getData(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.qrt"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.DenseRealMatrix.createBlocksLayout(2)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(5)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.solve(1)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.getInverse(0)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.Solver(3)"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.serialVersionUID"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.qrt" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.qrt"
reference "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag" "double[]"
contain "org.apache.commons.math.linear.QRDecompositionImpl.Solver" "org.apache.commons.math.linear.QRDecompositionImpl.Solver.rDiag"
reference "org.apache.commons.math.analysis.UnivariateRealFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealFunction" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.ode.events.EventException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ode.events.EventException.EventException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ode.events.EventException" "org.apache.commons.math.ode.events.EventException.EventException(2)"
call "org.apache.commons.math.ode.events.EventException.EventException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ode.events.EventException" "org.apache.commons.math.ode.events.EventException.EventException(1)"
contain "org.apache.commons.math.ode.events.EventException" "org.apache.commons.math.ode.events.EventException.serialVersionUID"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
contain "org.apache.commons.math.estimation.EstimationProblem" "org.apache.commons.math.estimation.EstimationProblem.getAllParameters(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
reference "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
call "org.apache.commons.math.stat.descriptive.summary.Product.Product(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.summary.Product.Product(1)" "org.apache.commons.math.stat.descriptive.summary.Product.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.Product(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
reference "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.getN(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
reference "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.Product.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Product.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.summary.Product.copy(0)" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
call "org.apache.commons.math.stat.descriptive.summary.Product.copy(0)" "org.apache.commons.math.stat.descriptive.summary.Product.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.copy(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Product.copy(2)" "org.apache.commons.math.stat.descriptive.summary.Product.n"
reference "org.apache.commons.math.stat.descriptive.summary.Product.copy(2)" "org.apache.commons.math.stat.descriptive.summary.Product.value"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.n"
contain "org.apache.commons.math.stat.descriptive.summary.Product" "org.apache.commons.math.stat.descriptive.summary.Product.value"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
call "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.test(3)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.Variance.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
call "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Variance.moment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Variance" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected"
reference "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator"
reference "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.EndTimeChecker(1)" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.endTime"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.EndTimeChecker(1)"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.eventOccurred(2)"
reference "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.g(2)" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.endTime"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.g(2)"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.resetState(2)"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.serialVersionUID"
contain "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.endTime"
contain "org.apache.commons.math.genetics.StoppingCondition" "org.apache.commons.math.genetics.StoppingCondition.isSatisfied(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.n"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.dev"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.nDev"
reference "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(0)"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.compare(2)"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(1)"
contain "org.apache.commons.math.stat.Frequency.NaturalComparator" "org.apache.commons.math.stat.Frequency.NaturalComparator.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.copy(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.test(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.serialVersionUID"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.EstimatedParameter[]"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.WeightedMeasurement[]"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.SimpleEstimationProblem(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.parameters"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.SimpleEstimationProblem(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.measurements"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.SimpleEstimationProblem(0)"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.getAllParameters(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.parameters"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.getAllParameters(0)"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.getUnboundParameters(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.parameters"
call "org.apache.commons.math.estimation.SimpleEstimationProblem.getUnboundParameters(0)" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.getMeasurements(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.measurements"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.getMeasurements(0)"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.addParameter(1)" "org.apache.commons.math.estimation.SimpleEstimationProblem.parameters"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.addParameter(1)"
reference "org.apache.commons.math.estimation.SimpleEstimationProblem.addMeasurement(1)" "org.apache.commons.math.estimation.SimpleEstimationProblem.measurements"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.addMeasurement(1)"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.parameters"
contain "org.apache.commons.math.estimation.SimpleEstimationProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem.measurements"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistribution"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.special.Beta"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)" "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getInitialDomain(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.setNumeratorDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getNumeratorDegreesOfFreedom(0)"
reference "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.getDenominatorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.numeratorDegreesOfFreedom"
contain "org.apache.commons.math.distribution.FDistributionImpl" "org.apache.commons.math.distribution.FDistributionImpl.denominatorDegreesOfFreedom"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getL(0)"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getU(0)"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getP(0)"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getPivot(0)"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getDeterminant(0)"
contain "org.apache.commons.math.linear.LUDecomposition" "org.apache.commons.math.linear.LUDecomposition.getSolver(0)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "double[][]"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.AbstractMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newYSampleData(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newYSampleData(1)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newYSampleData(1)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newXSampleData(1)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.validateSampleData(2)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.validateCovarianceData(2)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParameters(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBeta(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParameters(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParameters(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBeta(0)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersVariance(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBetaVariance(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersVariance(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersVariance(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersStandardErrors(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersVariance(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersStandardErrors(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateYVariance(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressionParametersStandardErrors(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressandVariance(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateYVariance(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.estimateRegressandVariance(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBeta(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBetaVariance(0)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateYVariance(0)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateBeta(0)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.calculateResiduals(0)"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.X"
reference "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.Y"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.CompositeFormat(0)"
call "org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat(0)" "org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat(1)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat(0)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.util.CompositeFormat.parseAndIgnoreWhitespace(2)" "org.apache.commons.math.util.CompositeFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.parseAndIgnoreWhitespace(2)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.parseNumber(3)"
call "org.apache.commons.math.util.CompositeFormat.parseNumber(3)" "org.apache.commons.math.util.CompositeFormat.parseNumber(3)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.parseNumber(3)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.parseFixedstring(3)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.formatDouble(4)"
contain "org.apache.commons.math.util.CompositeFormat" "org.apache.commons.math.util.CompositeFormat.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkDimension(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getDimension(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getDimension(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getResults(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.append(5)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.append(5)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.clear(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkEmpty(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkDimension(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMinImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMinImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[].clone(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setImpl(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkEmpty(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkEmpty(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkEmpty(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkDimension(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkDimension(1)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.checkDimension(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.k"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.n"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumSqImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.sumLogImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.geoMeanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic[]"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.covarianceImpl"
reference "org.apache.commons.math.MathRuntimeException.translate(2)" "org.apache.commons.math.MathRuntimeException.cachedResources"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.translate(2)"
call "org.apache.commons.math.MathRuntimeException.buildMessage(3)" "org.apache.commons.math.MathRuntimeException.translate(2)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)" "org.apache.commons.math.MathRuntimeException.pattern"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)" "org.apache.commons.math.MathRuntimeException.arguments"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
call "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)" "org.apache.commons.math.MathRuntimeException.getMessage(0)"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)" "org.apache.commons.math.MathRuntimeException.pattern"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)" "org.apache.commons.math.MathRuntimeException.arguments"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)"
call "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)" "org.apache.commons.math.MathRuntimeException.pattern"
reference "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)" "org.apache.commons.math.MathRuntimeException.arguments"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)"
reference "org.apache.commons.math.MathRuntimeException.getPattern(0)" "org.apache.commons.math.MathRuntimeException.pattern"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.getPattern(0)"
reference "org.apache.commons.math.MathRuntimeException.getArguments(0)" "org.apache.commons.math.MathRuntimeException.arguments"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.getArguments(0)"
reference "org.apache.commons.math.MathRuntimeException.getMessage(1)" "org.apache.commons.math.MathRuntimeException.pattern"
reference "org.apache.commons.math.MathRuntimeException.getMessage(1)" "org.apache.commons.math.MathRuntimeException.arguments"
call "org.apache.commons.math.MathRuntimeException.getMessage(1)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.getMessage(1)"
call "org.apache.commons.math.MathRuntimeException.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.getMessage(1)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.getLocalizedMessage(0)"
call "org.apache.commons.math.MathRuntimeException.printStackTrace(0)" "org.apache.commons.math.MathRuntimeException.printStackTrace(1)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.printStackTrace(0)"
call "org.apache.commons.math.MathRuntimeException.printStackTrace(1)" "org.apache.commons.math.MathRuntimeException.printStackTrace(1)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.printStackTrace(1)"
call "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)" "org.apache.commons.math.MathRuntimeException.1.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)" "org.apache.commons.math.MathRuntimeException.2.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)"
call "org.apache.commons.math.MathRuntimeException.createEOFException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createEOFException(2)" "org.apache.commons.math.MathRuntimeException.3.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createEOFException(2)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
call "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)" "org.apache.commons.math.MathRuntimeException.4.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)" "org.apache.commons.math.MathRuntimeException.5.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
call "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)" "org.apache.commons.math.MathRuntimeException.6.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)"
call "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)" "org.apache.commons.math.MathRuntimeException.7.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)"
call "org.apache.commons.math.MathRuntimeException.createParseException(3)" "org.apache.commons.math.MathRuntimeException.buildMessage(3)"
call "org.apache.commons.math.MathRuntimeException.createParseException(3)" "org.apache.commons.math.MathRuntimeException.8.{...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.createParseException(3)"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.access$000(3)"
reference "org.apache.commons.math.MathRuntimeException.static {...}" "org.apache.commons.math.MathRuntimeException.cachedResources"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.static {...}"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.cachedResources"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.pattern"
contain "org.apache.commons.math.MathRuntimeException" "org.apache.commons.math.MathRuntimeException.arguments"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "double[]"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "double[][]"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "double[].clone(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getGenerator(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getGenerator(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.decompose(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
call "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.root"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.rank"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator" "org.apache.commons.math.random.NormalizedRandomGenerator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGenerator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.normalized"
reference "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
contain "org.apache.commons.math.ode.FirstOrderDifferentialEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
contain "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
contain "org.apache.commons.math.analysis.SplineInterpolator" "org.apache.commons.math.analysis.SplineInterpolator.interpolate(2)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistribution"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.ZipfDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.ZipfDistributionImpl(2)" "org.apache.commons.math.distribution.ZipfDistributionImpl.setNumberOfElements(1)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.ZipfDistributionImpl(2)" "org.apache.commons.math.distribution.ZipfDistributionImpl.setExponent(1)"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.ZipfDistributionImpl(2)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.getNumberOfElements(0)" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.getNumberOfElements(0)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.setNumberOfElements(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.setNumberOfElements(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.setNumberOfElements(1)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.getExponent(0)" "org.apache.commons.math.distribution.ZipfDistributionImpl.exponent"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.getExponent(0)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.setExponent(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.setExponent(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.exponent"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.setExponent(1)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.probability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.getNumberOfElements(0)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.probability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.exponent"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.probability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.probability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.generalizedHarmonic(2)"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.getNumberOfElements(0)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.exponent"
call "org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.generalizedHarmonic(2)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.getDomainLowerBound(1)"
reference "org.apache.commons.math.distribution.ZipfDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.generalizedHarmonic(2)"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.numberOfElements"
contain "org.apache.commons.math.distribution.ZipfDistributionImpl" "org.apache.commons.math.distribution.ZipfDistributionImpl.exponent"
reference "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
contain "org.apache.commons.math.ode.SecondOrderDifferentialEquations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.computeSecondDerivatives(4)"
reference "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
contain "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
contain "org.apache.commons.math.ArgumentOutsideDomainException" "org.apache.commons.math.ArgumentOutsideDomainException.serialVersionUID"
reference "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)"
reference "org.apache.commons.math.random.AbstractRandomGenerator.clear(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.clear(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextBytes(1)" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextBytes(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(1)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextInt(1)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextLong(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextLong(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextBoolean(0)"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextFloat(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
reference "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
call "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)" "org.apache.commons.math.random.AbstractRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.serialVersionUID"
contain "org.apache.commons.math.random.AbstractRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator.cachedNormalDeviate"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.1" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.NotARotationMatrixException"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.CardanEulerSingularityException"
reference "org.apache.commons.math.geometry.Rotation" "double[]"
reference "org.apache.commons.math.geometry.Rotation" "double[][]"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.RotationOrder"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(5)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q1"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q2"
call "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(2)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA1(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA2(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.RotationOrder.getA3(0)"
call "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.Rotation(4)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.revert(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.revert(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ0(0)" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ0(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ1(0)" "org.apache.commons.math.geometry.Rotation.q1"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ1(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ2(0)" "org.apache.commons.math.geometry.Rotation.q2"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ2(0)"
reference "org.apache.commons.math.geometry.Rotation.getQ3(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getQ3(0)"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Rotation.getAxis(0)" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getAngle(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.Rotation.getAngles(1)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getAngles(1)"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.getMatrix(0)" "org.apache.commons.math.geometry.Rotation.q3"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.getMatrix(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.applyTo(1)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q0"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q1"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q2"
reference "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.q3"
call "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.orthogonalizeMatrix(2)"
call "org.apache.commons.math.geometry.Rotation.distance(2)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.Rotation.distance(2)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.distance(2)"
call "org.apache.commons.math.geometry.Rotation.static {...}" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
reference "org.apache.commons.math.geometry.Rotation.static {...}" "org.apache.commons.math.geometry.Rotation.IDENTITY"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.static {...}"
reference "org.apache.commons.math.geometry.Rotation.IDENTITY" "org.apache.commons.math.geometry.Rotation"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.IDENTITY"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.serialVersionUID"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q0"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q1"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q2"
contain "org.apache.commons.math.geometry.Rotation" "org.apache.commons.math.geometry.Rotation.q3"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.f"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.f"
call "org.apache.commons.math.analysis.BisectionSolver.solve(2)" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(4)" "org.apache.commons.math.analysis.BisectionSolver.solve(2)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(4)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.clearResult(0)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.verifyInterval(2)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.maximalIterationCount"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.analysis.BisectionSolver.setResult(2)"
call "org.apache.commons.math.analysis.BisectionSolver.solve(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
contain "org.apache.commons.math.analysis.BisectionSolver" "org.apache.commons.math.analysis.BisectionSolver.serialVersionUID"
reference "org.apache.commons.math.stat.inference.OneWayAnova" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.OneWayAnova" "org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnova" "org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnova" "org.apache.commons.math.stat.inference.OneWayAnova.anovaTest(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.1" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.isLoaded(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getBinCount(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(4)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.isBiasCorrected(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.isBiasCorrected(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(2)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.copy(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviation" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.variance"
reference "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.util.CompositeFormat"
reference "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)" "org.apache.commons.math.linear.RealVectorFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(1)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(1)"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(3)" "org.apache.commons.math.linear.RealVectorFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(3)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(3)"
call "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.util.CompositeFormat.CompositeFormat(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.prefix"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.suffix"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.separator"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator"
reference "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)" "org.apache.commons.math.linear.RealVectorFormat.format"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getAvailableLocales(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.getPrefix(0)" "org.apache.commons.math.linear.RealVectorFormat.prefix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getPrefix(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.getSuffix(0)" "org.apache.commons.math.linear.RealVectorFormat.suffix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getSuffix(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.getSeparator(0)" "org.apache.commons.math.linear.RealVectorFormat.separator"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getSeparator(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.getFormat(0)" "org.apache.commons.math.linear.RealVectorFormat.format"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormat.getInstance(0)" "org.apache.commons.math.linear.RealVectorFormat.getInstance(1)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getInstance(0)"
call "org.apache.commons.math.linear.RealVectorFormat.getInstance(1)" "org.apache.commons.math.linear.RealVectorFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.linear.RealVectorFormat.getInstance(1)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(1)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.getInstance(1)"
call "org.apache.commons.math.linear.RealVectorFormat.formatRealVector(1)" "org.apache.commons.math.linear.RealVectorFormat.getInstance(0)"
call "org.apache.commons.math.linear.RealVectorFormat.formatRealVector(1)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.formatRealVector(1)"
reference "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.prefix"
call "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.separator"
call "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
reference "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.format"
call "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.formatDouble(4)"
reference "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.suffix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.format(3)"
call "org.apache.commons.math.linear.RealVectorFormat.format(3)" "org.apache.commons.math.linear.RealVectorFormat.format(3)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.format(3)"
call "org.apache.commons.math.linear.RealVectorFormat.parse(1)" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
call "org.apache.commons.math.linear.RealVectorFormat.parse(1)" "org.apache.commons.math.MathRuntimeException.createParseException(3)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.parse(1)"
call "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.parseAndIgnoreWhitespace(2)"
reference "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix"
call "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.parseFixedstring(3)"
reference "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator"
reference "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.format"
call "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.parseNumber(3)"
reference "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix"
call "org.apache.commons.math.linear.RealVectorFormat.parse(2)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
call "org.apache.commons.math.linear.RealVectorFormat.parseObject(2)" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.parseObject(2)"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.serialVersionUID"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_PREFIX"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SUFFIX"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.DEFAULT_SEPARATOR"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.prefix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.suffix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.separator"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.trimmedPrefix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.trimmedSuffix"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.trimmedSeparator"
contain "org.apache.commons.math.linear.RealVectorFormat" "org.apache.commons.math.linear.RealVectorFormat.format"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.copy(0)"
reference "org.apache.commons.math.util.NumberTransformer" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.util.NumberTransformer" "org.apache.commons.math.util.NumberTransformer.transform(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "double[]"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.this$0"
reference "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.ConvergenceException"
call "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
reference "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
reference "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
reference "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.serialVersionUID"
contain "org.apache.commons.math.MaxIterationsExceededException" "org.apache.commons.math.MaxIterationsExceededException.maxIterations"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.4.this$0"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.4.val$destination"
call "org.apache.commons.math.linear.AbstractRealMatrix.4.{...}" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.{...}"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.4.startRow"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.4.startColumn"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.start(6)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.4.val$destination"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.4.startRow"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.4.startColumn"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.visit(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.serialVersionUID"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.startRow"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.startColumn"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.val$destination" "double[][]"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.val$destination"
reference "org.apache.commons.math.linear.AbstractRealMatrix.4.this$0" "org.apache.commons.math.linear.AbstractRealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.4" "org.apache.commons.math.linear.AbstractRealMatrix.4.this$0"
reference "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.getScale(0)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.setMedian(1)"
contain "org.apache.commons.math.distribution.CauchyDistribution" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m2"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.m3"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Skewness.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(0)"
call "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Skewness.moment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Skewness" "org.apache.commons.math.stat.descriptive.moment.Skewness.incMoment"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.5.this$0"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.5.val$out"
call "org.apache.commons.math.linear.AbstractRealMatrix.5.{...}" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix.5.{...}"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.5.val$out"
call "org.apache.commons.math.linear.AbstractRealMatrix.5.visit(3)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix.5.visit(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix.5.serialVersionUID"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5.val$out" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix.5.val$out"
reference "org.apache.commons.math.linear.AbstractRealMatrix.5.this$0" "org.apache.commons.math.linear.AbstractRealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.5" "org.apache.commons.math.linear.AbstractRealMatrix.5.this$0"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.2.this$0"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.{...}"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.2.sum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.start(6)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.2.sum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.visit(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2.end(0)" "org.apache.commons.math.linear.AbstractRealMatrix.2.sum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.serialVersionUID"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.sum"
reference "org.apache.commons.math.linear.AbstractRealMatrix.2.this$0" "org.apache.commons.math.linear.AbstractRealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.2" "org.apache.commons.math.linear.AbstractRealMatrix.2.this$0"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Gamma" "org.apache.commons.math.util.ContinuedFraction"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.Gamma(0)"
reference "org.apache.commons.math.special.Gamma.logGamma(1)" "org.apache.commons.math.special.Gamma.lanczos"
reference "org.apache.commons.math.special.Gamma.logGamma(1)" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.logGamma(1)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(2)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.special.Gamma.regularizedGammaP(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.1.{...}"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
call "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
reference "org.apache.commons.math.special.Gamma.static {...}" "org.apache.commons.math.special.Gamma.lanczos"
reference "org.apache.commons.math.special.Gamma.static {...}" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.static {...}"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.serialVersionUID"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.DEFAULT_EPSILON"
reference "org.apache.commons.math.special.Gamma.lanczos" "double[]"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.lanczos"
contain "org.apache.commons.math.special.Gamma" "org.apache.commons.math.special.Gamma.HALF_LOG_2_PI"
reference "org.apache.commons.math.linear.DenseRealMatrix" "double[]"
reference "org.apache.commons.math.linear.DenseRealMatrix" "double[][]"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.MatrixVisitorException"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.RealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.createBlocksLayout(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.toBlocksLayout(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)" "double[].clone(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(4)"
call "org.apache.commons.math.linear.DenseRealMatrix.toBlocksLayout(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.toBlocksLayout(1)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.createBlocksLayout(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.createMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.createMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.copy(0)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.copy(0)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.copy(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.copy(0)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.copy(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkAdditionCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkAdditionCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.add(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubtractionCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubtractionCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkMultiplicationCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkMultiplicationCompatible(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.getData(0)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getData(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getFrobeniusNorm(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.DenseRealMatrix.copyBlockPart(10)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.copyBlockPart(10)"
call "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkRowIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkRowIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setRowVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setColumnVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkRowIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getRow(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.DenseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setRow(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
call "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setColumn(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.addToEntry(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.multiplyEntry(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.operate(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.operate(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
call "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
reference "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInRowOrder(5)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.checkSubMatrixIndex(4)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
reference "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.walkInOptimizedOrder(5)"
reference "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
reference "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)" "org.apache.commons.math.linear.DenseRealMatrix.rows"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.blockHeight(1)"
reference "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)" "org.apache.commons.math.linear.DenseRealMatrix.columns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.blockWidth(1)"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.serialVersionUID"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.BLOCK_SIZE"
reference "org.apache.commons.math.linear.DenseRealMatrix.blocks" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.blocks"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.rows"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.columns"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.blockRows"
contain "org.apache.commons.math.linear.DenseRealMatrix" "org.apache.commons.math.linear.DenseRealMatrix.blockColumns"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.3.this$0"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedRows"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedColumns"
call "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.3.this$0"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedRows"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedColumns"
call "org.apache.commons.math.linear.AbstractRealMatrix.3.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.visit(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.serialVersionUID"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedRows" "int[]"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedRows"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedColumns" "int[]"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.val$selectedColumns"
reference "org.apache.commons.math.linear.AbstractRealMatrix.3.this$0" "org.apache.commons.math.linear.AbstractRealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.3" "org.apache.commons.math.linear.AbstractRealMatrix.3.this$0"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
call "org.apache.commons.math.analysis.SecantSolver.SecantSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(0)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.f"
call "org.apache.commons.math.analysis.SecantSolver.solve(2)" "org.apache.commons.math.analysis.SecantSolver.solve(3)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(2)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.f"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.solve(4)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(3)"
call "org.apache.commons.math.analysis.SecantSolver.solve(4)" "org.apache.commons.math.analysis.SecantSolver.solve(3)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(4)"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.clearResult(0)"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.verifyInterval(2)"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.setResult(2)"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.result"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.analysis.SecantSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.SecantSolver.solve(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.solve(3)"
contain "org.apache.commons.math.analysis.SecantSolver" "org.apache.commons.math.analysis.SecantSolver.serialVersionUID"
reference "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.name"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a1"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a2"
reference "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)" "org.apache.commons.math.geometry.RotationOrder.a3"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)"
reference "org.apache.commons.math.geometry.RotationOrder.toString(0)" "org.apache.commons.math.geometry.RotationOrder.name"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.toString(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA1(0)" "org.apache.commons.math.geometry.RotationOrder.a1"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA1(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA2(0)" "org.apache.commons.math.geometry.RotationOrder.a2"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA2(0)"
reference "org.apache.commons.math.geometry.RotationOrder.getA3(0)" "org.apache.commons.math.geometry.RotationOrder.a3"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.getA3(0)"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.RotationOrder(4)"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationOrder.static {...}" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.static {...}"
reference "org.apache.commons.math.geometry.RotationOrder.XYZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationOrder.XZY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationOrder.YXZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationOrder.YZX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationOrder.ZXY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationOrder.ZYX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationOrder.XYX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationOrder.XZX" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationOrder.YXY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationOrder.YZY" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationOrder.ZXZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationOrder.ZYZ" "org.apache.commons.math.geometry.RotationOrder"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.name"
reference "org.apache.commons.math.geometry.RotationOrder.a1" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a1"
reference "org.apache.commons.math.geometry.RotationOrder.a2" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a2"
reference "org.apache.commons.math.geometry.RotationOrder.a3" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.RotationOrder" "org.apache.commons.math.geometry.RotationOrder.a3"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.{...}" "org.apache.commons.math.linear.AbstractRealMatrix.1.this$0"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.{...}"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.1.endRow"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.1.columnSum"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.start(6)" "org.apache.commons.math.linear.AbstractRealMatrix.1.maxColSum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.start(6)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.1.columnSum"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.1.endRow"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.visit(3)" "org.apache.commons.math.linear.AbstractRealMatrix.1.maxColSum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.visit(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.end(0)" "org.apache.commons.math.linear.AbstractRealMatrix.1.maxColSum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.serialVersionUID"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.endRow"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.columnSum"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.maxColSum"
reference "org.apache.commons.math.linear.AbstractRealMatrix.1.this$0" "org.apache.commons.math.linear.AbstractRealMatrix"
contain "org.apache.commons.math.linear.AbstractRealMatrix.1" "org.apache.commons.math.linear.AbstractRealMatrix.1.this$0"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.m1"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.Mean.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
call "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Mean.moment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Mean" "org.apache.commons.math.stat.descriptive.moment.Mean.incMoment"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "int[]"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.Solver"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecomposition"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedL"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedP"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.even"
reference "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedL"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
call "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
call "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)" "org.apache.commons.math.linear.LUDecompositionImpl.cachedP"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getPivot(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.getPivot(0)" "int[].clone(0)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getPivot(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.even"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
reference "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
call "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(4)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.serialVersionUID"
reference "org.apache.commons.math.linear.LUDecompositionImpl.lu" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.lu"
reference "org.apache.commons.math.linear.LUDecompositionImpl.pivot" "int[]"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.pivot"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.even"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.singular"
reference "org.apache.commons.math.linear.LUDecompositionImpl.cachedL" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.cachedL"
reference "org.apache.commons.math.linear.LUDecompositionImpl.cachedU" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.cachedU"
reference "org.apache.commons.math.linear.LUDecompositionImpl.cachedP" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.cachedP"
contain "org.apache.commons.math.linear.LUDecompositionImpl" "org.apache.commons.math.linear.LUDecompositionImpl.DEFAULT_TOO_SMALL"
reference "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
reference "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator"
reference "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)" "org.apache.commons.math.linear.SparseRealMatrix.rowDimension"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
call "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)"
call "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)" "org.apache.commons.math.linear.SparseRealMatrix.rowDimension"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
reference "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.copy(0)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.copy(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.createMatrix(2)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.createMatrix(2)"
reference "org.apache.commons.math.linear.SparseRealMatrix.getColumnDimension(0)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.add(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.add(1)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.add(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.checkAdditionCompatible(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.hasNext(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)"
reference "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.add(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.add(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.add(1)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.checkAdditionCompatible(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.hasNext(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)"
reference "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.SparseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.SparseRealMatrix.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)" "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)"
call "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.SparseRealMatrix.getRowDimension(0)" "org.apache.commons.math.linear.SparseRealMatrix.rowDimension"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)"
call "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)"
reference "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.addToEntry(3)"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)"
reference "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.linear.SparseRealMatrix.entries"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.multiplyEntry(3)"
reference "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.computeKey(2)"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.serialVersionUID"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.rowDimension"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.columnDimension"
reference "org.apache.commons.math.linear.SparseRealMatrix.entries" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
contain "org.apache.commons.math.linear.SparseRealMatrix" "org.apache.commons.math.linear.SparseRealMatrix.entries"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.h"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.1.{...}" "org.apache.commons.math.MathRuntimeException.1.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.1.{...}" "org.apache.commons.math.MathRuntimeException.1.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException.1.{...}"
reference "org.apache.commons.math.MathRuntimeException.1.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.1.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.1.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.1.val$arguments"
call "org.apache.commons.math.MathRuntimeException.1.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException.1.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException.1.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException.1.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.1" "org.apache.commons.math.MathRuntimeException.1.val$arguments"
reference "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.2.{...}" "org.apache.commons.math.MathRuntimeException.2.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.2.{...}" "org.apache.commons.math.MathRuntimeException.2.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException.2.{...}"
reference "org.apache.commons.math.MathRuntimeException.2.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.2.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.2.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.2.val$arguments"
call "org.apache.commons.math.MathRuntimeException.2.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException.2.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException.2.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException.2.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.2" "org.apache.commons.math.MathRuntimeException.2.val$arguments"
reference "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.3.{...}" "org.apache.commons.math.MathRuntimeException.3.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.3.{...}" "org.apache.commons.math.MathRuntimeException.3.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException.3.{...}"
reference "org.apache.commons.math.MathRuntimeException.3.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.3.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.3.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.3.val$arguments"
call "org.apache.commons.math.MathRuntimeException.3.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException.3.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException.3.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException.3.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.3" "org.apache.commons.math.MathRuntimeException.3.val$arguments"
reference "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.4.{...}" "org.apache.commons.math.MathRuntimeException.4.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.4.{...}" "org.apache.commons.math.MathRuntimeException.4.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException.4.{...}"
reference "org.apache.commons.math.MathRuntimeException.4.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.4.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.4.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.4.val$arguments"
call "org.apache.commons.math.MathRuntimeException.4.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException.4.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException.4.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException.4.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.4" "org.apache.commons.math.MathRuntimeException.4.val$arguments"
reference "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.5.{...}" "org.apache.commons.math.MathRuntimeException.5.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.5.{...}" "org.apache.commons.math.MathRuntimeException.5.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException.5.{...}"
reference "org.apache.commons.math.MathRuntimeException.5.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.5.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.5.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.5.val$arguments"
call "org.apache.commons.math.MathRuntimeException.5.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException.5.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException.5.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException.5.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.5" "org.apache.commons.math.MathRuntimeException.5.val$arguments"
reference "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.6.{...}" "org.apache.commons.math.MathRuntimeException.6.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.6.{...}" "org.apache.commons.math.MathRuntimeException.6.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException.6.{...}"
reference "org.apache.commons.math.MathRuntimeException.6.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.6.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.6.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.6.val$arguments"
call "org.apache.commons.math.MathRuntimeException.6.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException.6.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException.6.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException.6.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.6" "org.apache.commons.math.MathRuntimeException.6.val$arguments"
reference "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.ComplexUtils(0)"
call "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexUtils" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
reference "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.7.{...}" "org.apache.commons.math.MathRuntimeException.7.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.7.{...}" "org.apache.commons.math.MathRuntimeException.7.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException.7.{...}"
reference "org.apache.commons.math.MathRuntimeException.7.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.7.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.7.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.7.val$arguments"
call "org.apache.commons.math.MathRuntimeException.7.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException.7.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException.7.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException.7.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.7" "org.apache.commons.math.MathRuntimeException.7.val$arguments"
reference "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
reference "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.Max.Max(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.rank.Max.Max(1)" "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.Max(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.clear(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.getN(0)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.getN(0)"
call "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Max.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.Max.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.Max.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.copy(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Max.n"
reference "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Max.value"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.n"
contain "org.apache.commons.math.stat.descriptive.rank.Max" "org.apache.commons.math.stat.descriptive.rank.Max.value"
reference "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.MathRuntimeException.8.{...}" "org.apache.commons.math.MathRuntimeException.8.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.8.{...}" "org.apache.commons.math.MathRuntimeException.8.val$arguments"
contain "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException.8.{...}"
reference "org.apache.commons.math.MathRuntimeException.8.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.8.val$pattern"
reference "org.apache.commons.math.MathRuntimeException.8.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.8.val$arguments"
call "org.apache.commons.math.MathRuntimeException.8.getLocalizedMessage(0)" "org.apache.commons.math.MathRuntimeException.access$000(3)"
contain "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException.8.getLocalizedMessage(0)"
contain "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException.8.serialVersionUID"
contain "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException.8.val$pattern"
contain "org.apache.commons.math.MathRuntimeException.8" "org.apache.commons.math.MathRuntimeException.8.val$arguments"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getNewtonCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getNewtonCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCenters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCenters(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.computeCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.verifyInputArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.a"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.c"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.coefficientsComputed"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistribution"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.GammaDistribution"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(2)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.density(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.density(1)" "org.apache.commons.math.distribution.GammaDistribution.density(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.density(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getInitialDomain(1)"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.setGamma(1)"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.getGamma(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.density(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.serialVersionUID"
reference "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma" "org.apache.commons.math.distribution.GammaDistribution"
contain "org.apache.commons.math.distribution.ChiSquaredDistributionImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.gamma"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.ChromosomePair"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.StoppingCondition"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.Population"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.SelectionPolicy"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.CrossoverPolicy"
reference "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.MutationPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.GeneticAlgorithm(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.evolve(2)" "org.apache.commons.math.genetics.StoppingCondition.isSatisfied(1)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.evolve(2)" "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.evolve(2)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverPolicy(0)" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverPolicy(0)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverRate(0)" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverRate"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverRate(0)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationPolicy(0)" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationPolicy(0)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationRate(0)" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationRate"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationRate(0)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.getSelectionPolicy(0)" "org.apache.commons.math.genetics.GeneticAlgorithm.selectionPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.getSelectionPolicy(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.Population.nextGeneration(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.Population.getPopulationSize(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.Population.getPopulationLimit(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.getSelectionPolicy(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.SelectionPolicy.select(1)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverRate(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.getCrossoverPolicy(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.ChromosomePair.getFirst(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.ChromosomePair.getSecond(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.CrossoverPolicy.crossover(2)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationRate(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.getMutationPolicy(0)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.MutationPolicy.mutate(1)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.ChromosomePair.ChromosomePair(2)"
call "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)" "org.apache.commons.math.genetics.Population.addChromosome(1)"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.nextGeneration(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.setCrossoverPolicy(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.setCrossoverPolicy(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.setCrossoverRate(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverRate"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.setCrossoverRate(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.setMutationPolicy(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.setMutationPolicy(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.setMutationRate(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationRate"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.setMutationRate(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.setSelectionPolicy(1)" "org.apache.commons.math.genetics.GeneticAlgorithm.selectionPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.setSelectionPolicy(1)"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverPolicy" "org.apache.commons.math.genetics.CrossoverPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.crossoverRate"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.mutationPolicy" "org.apache.commons.math.genetics.MutationPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.mutationRate"
reference "org.apache.commons.math.genetics.GeneticAlgorithm.selectionPolicy" "org.apache.commons.math.genetics.SelectionPolicy"
contain "org.apache.commons.math.genetics.GeneticAlgorithm" "org.apache.commons.math.genetics.GeneticAlgorithm.selectionPolicy"
reference "org.apache.commons.math.linear.LUDecompositionImpl.1" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.computeDividedDifference(2)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolator" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.QRDecomposition"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.linear.DecompositionSolver"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.AbstractMultipleLinearRegression(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.validateSampleData(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newYSampleData(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.newSampleData(3)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newXSampleData(1)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.Y"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBeta(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateBetaVariance(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateResiduals(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateYVariance(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.isUpperTriangular(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.solveUpperTriangular(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.isUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.isUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.isUpperTriangular(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.isUpperTriangular(2)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr" "org.apache.commons.math.linear.QRDecomposition"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.qr"
reference "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics"
reference "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.DimensionMismatchException"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.SynchronizedMultivariateSummaryStatistics(2)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.SynchronizedMultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getDimension(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getDimension(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getDimension(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumSq(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLog(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getCovariance(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.toString(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.toString(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumsqImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumsqImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumsqImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumsqImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMinImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMinImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMinImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMinImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMaxImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMaxImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMaxImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMaxImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLogImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getSumLogImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setSumLogImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setSumLogImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeoMeanImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeoMeanImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getGeoMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setGeoMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setGeoMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMeanImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.getMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.setMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedMultivariateSummaryStatistics.serialVersionUID"
reference "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.ODEIntegrator"
reference "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.IntegratorException"
contain "org.apache.commons.math.ode.SecondOrderIntegrator" "org.apache.commons.math.ode.SecondOrderIntegrator.integrate(7)"
reference "org.apache.commons.math.genetics.ChromosomePair.ChromosomePair(2)" "org.apache.commons.math.genetics.ChromosomePair.first"
reference "org.apache.commons.math.genetics.ChromosomePair.ChromosomePair(2)" "org.apache.commons.math.genetics.ChromosomePair.second"
contain "org.apache.commons.math.genetics.ChromosomePair" "org.apache.commons.math.genetics.ChromosomePair.ChromosomePair(2)"
reference "org.apache.commons.math.genetics.ChromosomePair.getFirst(0)" "org.apache.commons.math.genetics.ChromosomePair.first"
contain "org.apache.commons.math.genetics.ChromosomePair" "org.apache.commons.math.genetics.ChromosomePair.getFirst(0)"
reference "org.apache.commons.math.genetics.ChromosomePair.getSecond(0)" "org.apache.commons.math.genetics.ChromosomePair.second"
contain "org.apache.commons.math.genetics.ChromosomePair" "org.apache.commons.math.genetics.ChromosomePair.getSecond(0)"
reference "org.apache.commons.math.genetics.ChromosomePair.first" "org.apache.commons.math.genetics.Chromosome"
contain "org.apache.commons.math.genetics.ChromosomePair" "org.apache.commons.math.genetics.ChromosomePair.first"
reference "org.apache.commons.math.genetics.ChromosomePair.second" "org.apache.commons.math.genetics.Chromosome"
contain "org.apache.commons.math.genetics.ChromosomePair" "org.apache.commons.math.genetics.ChromosomePair.second"
reference "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
contain "org.apache.commons.math.random.JDKRandomGenerator" "org.apache.commons.math.random.JDKRandomGenerator.serialVersionUID"
reference "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest"
reference "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(3)"
reference "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.HasDensity"
contain "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ChiSquaredDistribution.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.ChiSquaredDistribution" "org.apache.commons.math.distribution.ChiSquaredDistribution.density(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticB"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.METHOD_NAME"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticC" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticA" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticB" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.staticB"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e1_12"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.e2_12"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.util.ContinuedFraction"
reference "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Gamma"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.Beta(0)"
call "org.apache.commons.math.special.Beta.regularizedBeta(3)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
call "org.apache.commons.math.special.Beta.regularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.1.{...}"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.special.Beta.logBeta(4)"
call "org.apache.commons.math.special.Beta.regularizedBeta(5)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.regularizedBeta(5)"
call "org.apache.commons.math.special.Beta.logBeta(2)" "org.apache.commons.math.special.Beta.logBeta(4)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.logBeta(2)"
call "org.apache.commons.math.special.Beta.logBeta(4)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.logBeta(4)"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.serialVersionUID"
contain "org.apache.commons.math.special.Beta" "org.apache.commons.math.special.Beta.DEFAULT_EPSILON"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.MessagesResources_fr(0)"
reference "org.apache.commons.math.MessagesResources_fr.getContents(0)" "org.apache.commons.math.MessagesResources_fr.contents"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.getContents(0)"
reference "org.apache.commons.math.MessagesResources_fr.static {...}" "org.apache.commons.math.MessagesResources_fr.contents"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.static {...}"
contain "org.apache.commons.math.MessagesResources_fr" "org.apache.commons.math.MessagesResources_fr.contents"
reference "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.distribution.Distribution"
reference "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.ContinuousDistribution" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.genetics.SelectionPolicy" "org.apache.commons.math.genetics.SelectionPolicy.select(1)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getU(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getUT(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getS(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getSingularValues(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getV(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getVT(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getNorm(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getConditionNumber(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getRank(0)"
contain "org.apache.commons.math.linear.SingularValueDecomposition" "org.apache.commons.math.linear.SingularValueDecomposition.getSolver(0)"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.RealTransformer"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastSineTransformer.transform2(4)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastSineTransformer.fst(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.fst(1)"
contain "org.apache.commons.math.transform.FastSineTransformer" "org.apache.commons.math.transform.FastSineTransformer.serialVersionUID"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.f"
call "org.apache.commons.math.analysis.RiddersSolver.solve(2)" "org.apache.commons.math.analysis.RiddersSolver.solve(3)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(2)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.f"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.solve(4)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(4)" "org.apache.commons.math.analysis.RiddersSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(4)" "org.apache.commons.math.analysis.RiddersSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(4)" "org.apache.commons.math.analysis.RiddersSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(4)" "org.apache.commons.math.analysis.RiddersSolver.solve(3)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(4)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.setResult(2)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.result"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.util.MathUtils.sign(1)"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.analysis.RiddersSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.RiddersSolver.solve(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.solve(3)"
contain "org.apache.commons.math.analysis.RiddersSolver" "org.apache.commons.math.analysis.RiddersSolver.serialVersionUID"
reference "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
reference "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.getMean(0)"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistribution" "org.apache.commons.math.distribution.PoissonDistribution.normalApproximateProbability(1)"
reference "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.StepHandler"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.DummyStepHandler(0)"
reference "org.apache.commons.math.ode.sampling.DummyStepHandler.getInstance(0)" "org.apache.commons.math.ode.sampling.DummyStepHandler.instance"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.getInstance(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.reset(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.handleStep(2)"
call "org.apache.commons.math.ode.sampling.DummyStepHandler.static {...}" "org.apache.commons.math.ode.sampling.DummyStepHandler.DummyStepHandler(0)"
reference "org.apache.commons.math.ode.sampling.DummyStepHandler.static {...}" "org.apache.commons.math.ode.sampling.DummyStepHandler.instance"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.static {...}"
reference "org.apache.commons.math.ode.sampling.DummyStepHandler.instance" "org.apache.commons.math.ode.sampling.DummyStepHandler"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.instance"
contain "org.apache.commons.math.ode.sampling.DummyStepHandler" "org.apache.commons.math.ode.sampling.DummyStepHandler.serialVersionUID"
reference "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.getNumberOfSuccesses(0)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.PascalDistribution" "org.apache.commons.math.distribution.PascalDistribution.setProbabilityOfSuccess(1)"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.MatrixVisitorException"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.createMatrix(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.copy(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.add(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.scalarMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getData(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getFrobeniusNorm(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(3)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setSubMatrix(3)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setRowMatrix(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setColumnMatrix(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setRowVector(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setColumnVector(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setRow(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setColumn(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.multiplyEntry(3)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.inverse(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getDeterminant(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.isSingular(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.operate(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.operate(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.solve(1)"
contain "org.apache.commons.math.linear.RealMatrix" "org.apache.commons.math.linear.RealMatrix.solve(1)"
reference "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventException"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.g(2)"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.eventOccurred(2)"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.resetState(2)"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.STOP"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.RESET_STATE"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.RESET_DERIVATIVES"
contain "org.apache.commons.math.ode.events.EventHandler" "org.apache.commons.math.ode.events.EventHandler.CONTINUE"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.DormandPrince853StepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doCopy(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.interpolatedState"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.finalizeStep(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.d"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.h"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.equations"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.previousTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.doFinalize(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.d"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.static {...}"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.yDotKLast"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.v"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.b_12"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.c14"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_12"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k14_13"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.c15"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_12"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_13"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k15_14"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.c16"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_01"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_06"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_07"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_08"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_09"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_10"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_11"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_12"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_13"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_14"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.k16_15"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.d" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.d"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(2)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.currentState"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.equations"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.getA(2)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.getB(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(1)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(1)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(2)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(2)" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.util.ContinuedFraction.getA(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.util.ContinuedFraction.getB(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.util.ContinuedFraction.evaluate(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.evaluate(3)"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.serialVersionUID"
contain "org.apache.commons.math.util.ContinuedFraction" "org.apache.commons.math.util.ContinuedFraction.DEFAULT_EPSILON"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomGenerator" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
reference "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)" "org.apache.commons.math.MathException.MathException(0)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)"
call "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)"
contain "org.apache.commons.math.MathConfigurationException" "org.apache.commons.math.MathConfigurationException.serialVersionUID"
reference "org.apache.commons.math.linear.RealVectorImpl" "double[]"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorFormat"
reference "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "double[].clone(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "double[].clone(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)" "double[].clone(0)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "double[].clone(0)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.RealVectorImpl.copy(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.copy(0)"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.add(1)" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAdd(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapAdd(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAdd(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAddToSelf(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAddToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSubtract(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapSubtract(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSubtract(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSubtractToSelf(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSubtractToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapMultiply(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapMultiplyToSelf(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapMultiplyToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapDivideToSelf(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapDivideToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapPow(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapPow(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapPow(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapPowToSelf(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapPowToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapExp(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapExp(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapExp(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapExpToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapExpToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapExpm1(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapExpm1(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapExpm1(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapExpm1ToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapExpm1ToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLog(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapLog(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLog(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLogToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLogToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLog10(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapLog10(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLog10(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLog10ToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLog10ToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLog1p(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapLog1p(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLog1p(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapLog1pToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapLog1pToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCosh(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapCosh(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCosh(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCoshToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCoshToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSinh(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapSinh(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSinh(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSinhToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSinhToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapTanh(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapTanh(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapTanh(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapTanhToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapTanhToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCos(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapCos(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCos(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCosToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCosToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSin(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapSin(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSin(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSinToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSinToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapTan(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapTan(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapTan(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapTanToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapTanToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAcos(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapAcos(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAcos(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAcosToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAcosToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAsin(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapAsin(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAsin(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAsinToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAsinToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAtan(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapAtan(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAtan(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAtanToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAtanToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapInv(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapInv(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapInv(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapInvToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapInvToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAbs(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapAbs(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAbs(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapAbsToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapAbsToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSqrt(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapSqrt(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSqrt(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSqrtToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSqrtToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCbrt(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapCbrt(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCbrt(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCbrtToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCbrtToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCeil(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapCeil(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCeil(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapCeilToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapCeilToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapFloor(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapFloor(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapFloor(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapFloorToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapFloorToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapRint(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapRint(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapRint(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapRintToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapRintToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSignum(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapSignum(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSignum(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapSignumToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapSignumToSelf(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapUlp(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.mapUlp(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapUlp(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.mapUlpToSelf(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.mapUlpToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getData(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getData(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getData(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getNorm(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getNorm(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.getL1Norm(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getL1Norm(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.getLInfNorm(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getLInfNorm(0)"
call "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImpl.unitVector(0)" "org.apache.commons.math.linear.RealVectorImpl.getNorm(0)"
call "org.apache.commons.math.linear.RealVectorImpl.unitVector(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.linear.RealVectorImpl.unitVector(0)" "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.unitVector(0)"
call "org.apache.commons.math.linear.RealVectorImpl.unitize(0)" "org.apache.commons.math.linear.RealVectorImpl.getNorm(0)"
call "org.apache.commons.math.linear.RealVectorImpl.unitize(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.unitize(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.unitize(0)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVector.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVector.mapMultiply(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImpl.mapMultiply(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getEntry(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getEntry(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.getDimension(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImpl.append(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImpl.get(2)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.get(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.get(2)" "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.get(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.set(2)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
reference "org.apache.commons.math.linear.RealVectorImpl.set(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.set(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.toArray(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.toArray(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.toArray(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.toString(0)" "org.apache.commons.math.linear.RealVectorImpl.DEFAULT_FORMAT"
call "org.apache.commons.math.linear.RealVectorImpl.toString(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.toString(0)"
call "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
reference "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)"
call "org.apache.commons.math.linear.RealVectorImpl.isInfinite(0)" "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.isInfinite(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.isInfinite(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.equals(1)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.equals(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImpl.equals(1)" "org.apache.commons.math.linear.RealVector.isNaN(0)"
call "org.apache.commons.math.linear.RealVectorImpl.equals(1)" "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)"
call "org.apache.commons.math.linear.RealVectorImpl.equals(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.equals(1)"
call "org.apache.commons.math.linear.RealVectorImpl.hashCode(0)" "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.hashCode(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImpl.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.hashCode(0)"
call "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)" "org.apache.commons.math.linear.RealVectorImpl.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.checkIndex(1)"
call "org.apache.commons.math.linear.RealVectorImpl.static {...}" "org.apache.commons.math.linear.RealVectorFormat.getInstance(0)"
reference "org.apache.commons.math.linear.RealVectorImpl.static {...}" "org.apache.commons.math.linear.RealVectorImpl.DEFAULT_FORMAT"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.static {...}"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.serialVersionUID"
reference "org.apache.commons.math.linear.RealVectorImpl.DEFAULT_FORMAT" "org.apache.commons.math.linear.RealVectorFormat"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.DEFAULT_FORMAT"
reference "org.apache.commons.math.linear.RealVectorImpl.data" "double[]"
contain "org.apache.commons.math.linear.RealVectorImpl" "org.apache.commons.math.linear.RealVectorImpl.data"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.ArgumentOutsideDomainException"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.isStrictlyIncreasing(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
call "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomialSplineDerivative(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.isStrictlyIncreasing(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.knots" "double[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials" "org.apache.commons.math.analysis.PolynomialFunction[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.polynomials"
contain "org.apache.commons.math.analysis.PolynomialSplineFunction" "org.apache.commons.math.analysis.PolynomialSplineFunction.n"
reference "org.apache.commons.math.ode.sampling.StepNormalizer" "double[]"
reference "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.FixedStepHandler"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.h"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.handler"
call "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastTime"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastState"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastDerivatives"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.forward"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.reset(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastState"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastTime"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "double[].clone(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.lastDerivatives"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.forward"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.h"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.StepNormalizer.handler"
call "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)" "org.apache.commons.math.ode.sampling.FixedStepHandler.handleStep(4)"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.handleStep(2)"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.serialVersionUID"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.h"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.handler" "org.apache.commons.math.ode.sampling.FixedStepHandler"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.handler"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.lastTime"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.lastState" "double[]"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.lastState"
reference "org.apache.commons.math.ode.sampling.StepNormalizer.lastDerivatives" "double[]"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.lastDerivatives"
contain "org.apache.commons.math.ode.sampling.StepNormalizer" "org.apache.commons.math.ode.sampling.StepNormalizer.forward"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.f"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.minimalIterationCount"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.result"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.maximalIterationCount"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.analysis.SimpsonIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.SimpsonIntegrator" "org.apache.commons.math.analysis.SimpsonIntegrator.serialVersionUID"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.UnivariateRealSolverUtils(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.setup(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.static {...}" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.static {...}"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtils" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.factory"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.DataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.computeBinStats(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.inputArray"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0" "org.apache.commons.math.random.EmpiricalDistributionImpl"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.this$0"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.1" "org.apache.commons.math.linear.SingularValueDecompositionImpl"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "int[]"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "int[][]"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.this$0"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.multiDimensionalComplexArray"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.multiDimensionalComplexArray"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.multiDimensionalComplexArray"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getDimensionSizes(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getDimensionSizes(0)" "int[].clone(0)"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getDimensionSizes(0)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getArray(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.multiDimensionalComplexArray"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getArray(0)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.this$0"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(1)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.serialVersionUID"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize" "int[]"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.dimensionSize"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.multiDimensionalComplexArray"
reference "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.this$0" "org.apache.commons.math.transform.FastFourierTransformer"
contain "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.this$0"
contain "org.apache.commons.math.genetics.Population" "org.apache.commons.math.genetics.Population.getPopulationSize(0)"
contain "org.apache.commons.math.genetics.Population" "org.apache.commons.math.genetics.Population.getPopulationLimit(0)"
contain "org.apache.commons.math.genetics.Population" "org.apache.commons.math.genetics.Population.nextGeneration(0)"
contain "org.apache.commons.math.genetics.Population" "org.apache.commons.math.genetics.Population.addChromosome(1)"
contain "org.apache.commons.math.genetics.Population" "org.apache.commons.math.genetics.Population.getFittestChromosome(0)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.b"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.b"
reference "org.apache.commons.math.analysis.RombergIntegrator" "double[][]"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.FunctionEvaluationException"
call "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.maximalIterationCount"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.f"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.minimalIterationCount"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.analysis.RombergIntegrator.result"
call "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.RombergIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.RombergIntegrator" "org.apache.commons.math.analysis.RombergIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "double[][]"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.performTest"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxIter"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxChecks"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stabilityReduction"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl2"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl3"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl4"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl2"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addEventHandler(4)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.coeff"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerTimeUnit"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeArrays(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.useInterpolationError"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.mudif"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sequence"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.performTest"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxChecks"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxIter"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.extrapolate(4)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.coeff"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.extrapolate(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.rescale(3)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.vecRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerTimeUnit"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.initializeStep(9)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepSize"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.tryStep(10)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stabilityReduction"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.filterStep(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.extrapolate(4)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl2"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl3"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl4"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl1"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.getMaxStep(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.mudif"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.useInterpolationError"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl2"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.METHOD_NAME"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxOrder"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sequence" "int[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.sequence"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerStep" "int[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerTimeUnit" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.costPerTimeUnit"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.optimalStep" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.optimalStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.coeff" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.coeff"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.performTest"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxChecks"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.maxIter"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stabilityReduction"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl1"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl2"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl3"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.stepControl4"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl1"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.orderControl2"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.denseOutput"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.useInterpolationError"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.mudif"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.AbstractIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initialStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initialStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.setInitialStepSize(1)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initialStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.setInitialStepSize(1)"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.AbstractIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initialStep"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMinStep(0)"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(9)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMaxStep(0)"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initializeStep(9)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(3)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
call "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(3)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(3)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.filterStep(3)"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getCurrentStepStart(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.stepStart"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getCurrentStepStart(0)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.stepSize"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.resetInternalState(0)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMinStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMinStep(0)"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMaxStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getMaxStep(0)"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.minStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.maxStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.initialStep"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalAbsoluteTolerance"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecRelativeTolerance" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.vecRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.fsal"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.exp"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.AdaptiveStepsizeIntegrator(5)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.fsal"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.exp"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getSafety(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.safety"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getSafety(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(1)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.safety"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.c"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.addEndTimeChecker(3)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.fsal"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.scalAbsoluteTolerance"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getOrder(0)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.initializeStep(9)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.stepSize"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.estimateError(4)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.maxGrowth"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.minReduction"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.safety"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.exp"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.filterStep(3)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
call "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.resetInternalState(0)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMinReduction(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.minReduction"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMinReduction(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(1)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.minReduction"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(1)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMaxGrowth(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.maxGrowth"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMaxGrowth(0)"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(1)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.maxGrowth"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(1)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.estimateError(4)"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.fsal"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.prototype" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.prototype"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.exp"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.safety"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.minReduction"
contain "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.maxGrowth"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractDistribution"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
reference "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.MathException"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.probability(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.AbstractIntegerDistribution" "org.apache.commons.math.distribution.AbstractIntegerDistribution.serialVersionUID"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.ArrayDataAdapter.ArrayDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.MathRuntimeException.createEOFException(2)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.StreamDataAdapter.StreamDataAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.DataAdapterFactory(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapterFactory.getAdapter(1)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.DataAdapter.computeBinStats(2)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.fillBinStats(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.findBin(3)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.findBin(3)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
call "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getNextValue(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getSampleStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinCount(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinCount(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinStats(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getBinStats(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.getUpperBounds(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.isLoaded(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.isLoaded(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$100(4)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$200(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$302(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.access$300(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.binStats"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.sampleStats"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.binCount"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.loaded"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.upperBounds"
reference "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData" "org.apache.commons.math.random.RandomData"
contain "org.apache.commons.math.random.EmpiricalDistributionImpl" "org.apache.commons.math.random.EmpiricalDistributionImpl.randomData"
reference "org.apache.commons.math.distribution.HasDensity" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.HasDensity" "org.apache.commons.math.distribution.HasDensity.density(1)"
reference "org.apache.commons.math.linear.RealMatrixImpl" "double[][]"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.AbstractRealMatrix"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.MatrixVisitorException"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.createMatrix(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.createMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.copy(0)" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copy(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.add(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.checkAdditionCompatible(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.add(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.checkSubtractionCompatible(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.checkMultiplicationCompatible(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.getData(0)" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getEntry(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.setEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.setEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.setEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.setEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.setEntry(3)"
reference "org.apache.commons.math.linear.RealMatrixImpl.addToEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.addToEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.addToEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.addToEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.addToEntry(3)"
reference "org.apache.commons.math.linear.RealMatrixImpl.multiplyEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.multiplyEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiplyEntry(3)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.multiplyEntry(3)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.multiplyEntry(3)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.operate(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInRowOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
reference "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixImpl.data"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.RealMatrixImpl.data"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.serialVersionUID"
reference "org.apache.commons.math.linear.RealMatrixImpl.data" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImpl" "org.apache.commons.math.linear.RealMatrixImpl.data"
reference "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getNumberOfSuccesses(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getPopulationSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.getSampleSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setPopulationSize(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistribution" "org.apache.commons.math.distribution.HypergeometricDistribution.setSampleSize(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getElement(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.setElement(2)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.addElement(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.getElements(0)"
contain "org.apache.commons.math.util.DoubleArray" "org.apache.commons.math.util.DoubleArray.clear(0)"
contain "org.apache.commons.math.optimization.ConvergenceChecker" "org.apache.commons.math.optimization.ConvergenceChecker.converged(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.AbstractEstimator"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.EstimatedParameter"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.AbstractEstimator.AbstractEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initializeEstimate(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateResidualsAndCost(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.updateJacobian(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.residuals"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parameters"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cost"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMParameter(6)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.determineLMDirection(4)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qrDecomposition(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.cols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rows"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacobian"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.qTy(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.solvedCols"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.diagR"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.jacNorm"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.beta"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation" "int[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.permutation"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.rank"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmPar"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.lmDir"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.initialStepBoundFactor"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.costRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.parRelativeTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.orthoTolerance"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimator" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.serialVersionUID"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistribution"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)" "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.setNumberOfSuccesses(1)"
reference "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PascalDistributionImpl.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.PascalDistributionImpl" "org.apache.commons.math.distribution.PascalDistributionImpl.probabilityOfSuccess"
reference "org.apache.commons.math.linear.SingularMatrixException" "org.apache.commons.math.linear.InvalidMatrixException"
call "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
contain "org.apache.commons.math.linear.SingularMatrixException" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
contain "org.apache.commons.math.linear.SingularMatrixException" "org.apache.commons.math.linear.SingularMatrixException.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.events.EventState"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.sampling.StepNormalizer"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.AbstractIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.prototype"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.getStarterIntegrator(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.getStarterIntegrator(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.setStarterIntegrator(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.setStarterIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsStates(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.events.EventState.getEventHandler(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.ResetCheckingWrapper(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.events.EventState.getMaxCheckInterval(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.events.EventState.getConvergence(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.events.EventState.getMaxIterationCount(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearStepHandlers(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.FilteringWrapper(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.StoringStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.resetTime"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.restart(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.getFinalState(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.start(6)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.rotatePreviousSteps(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.rotatePreviousSteps(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.rotatePreviousSteps(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.access$002(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.access$100(1)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter" "org.apache.commons.math.ode.FirstOrderIntegrator"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.starter"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT" "double[]"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.resetTime"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.prototype" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.prototype"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setResult(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.clearResult(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.clearResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMaximalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMaximalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMinimalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setMinimalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getMinimalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetMinimalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setRelativeAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.setRelativeAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.getRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyInterval(2)"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
call "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.serialVersionUID"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.minimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultRelativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMaximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.defaultMinimalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.f"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.mean"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.variance"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.n"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.max"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.min"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.sum"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.MultistepIntegrator(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeBackwardDifferencesArray(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeGammaArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.predictorCoeffs"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.correctorCoeffs"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.step"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.copy(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.previousF"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.step"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.stepSize"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.addEndTimeChecker(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.start(6)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.rotatePreviousSteps(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.predictorCoeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.correctorCoeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.truncateStep(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getPredictorCoeffs(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.predictorCoeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getPredictorCoeffs(0)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getPredictorCoeffs(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getCorrectorCoeffs(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.correctorCoeffs"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getCorrectorCoeffs(0)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getCorrectorCoeffs(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)" "org.apache.commons.math.fraction.Fraction.ONE"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)" "org.apache.commons.math.fraction.Fraction.subtract(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.METHOD_NAME"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.predictorCoeffs" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.predictorCoeffs"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.correctorCoeffs" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.correctorCoeffs"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.step"
reference "org.apache.commons.math.linear.MatrixVisitorException" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.linear.MatrixVisitorException.MatrixVisitorException(2)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
contain "org.apache.commons.math.linear.MatrixVisitorException" "org.apache.commons.math.linear.MatrixVisitorException.MatrixVisitorException(2)"
contain "org.apache.commons.math.linear.MatrixVisitorException" "org.apache.commons.math.linear.MatrixVisitorException.serialVersionUID"
reference "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.optimization.CostException.CostException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.CostException(2)"
call "org.apache.commons.math.optimization.CostException.CostException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.CostException(1)"
contain "org.apache.commons.math.optimization.CostException" "org.apache.commons.math.optimization.CostException.serialVersionUID"
reference "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.MatrixVisitorException"
contain "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
contain "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.start(6)"
contain "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.visit(3)"
contain "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.serialVersionUID"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.value(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.val$p"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution.1" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.this$0"
reference "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.copy(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.add(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.subtract(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.scalarAdd(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.scalarMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getData(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getDataAsDoubleArray(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRoundingMode(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getNorm(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnMatrix(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRow(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowAsDoubleArray(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumn(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnAsDoubleArray(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getEntryAsDouble(2)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getDeterminant(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.isSingular(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.getTrace(0)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.operate(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.solve(1)"
contain "org.apache.commons.math.linear.BigMatrix" "org.apache.commons.math.linear.BigMatrix.solve(1)"
reference "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.NotPositiveDefiniteMatrixException(0)"
contain "org.apache.commons.math.random.NotPositiveDefiniteMatrixException" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException.serialVersionUID"
reference "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(3)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.test(3)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)" "org.apache.commons.math.stat.descriptive.rank.Percentile.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile.quantile"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.DirectSearchOptimizer"
reference "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.CostException"
call "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.rho"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(0)" "org.apache.commons.math.optimization.NelderMead.sigma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.rho"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.NelderMead(4)" "org.apache.commons.math.optimization.NelderMead.sigma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.NelderMead(4)"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.simplex"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.rho"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.evaluateCost(1)"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.replaceWorstPoint(1)"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.khi"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.gamma"
reference "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.sigma"
call "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)" "org.apache.commons.math.optimization.NelderMead.evaluateSimplex(0)"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.iterateSimplex(0)"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.rho"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.khi"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.gamma"
contain "org.apache.commons.math.optimization.NelderMead" "org.apache.commons.math.optimization.NelderMead.sigma"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.DirectSearchOptimizer"
reference "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.CostException"
call "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.DirectSearchOptimizer.DirectSearchOptimizer(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.simplex"
call "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
call "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.khi"
reference "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)" "org.apache.commons.math.optimization.MultiDirectional.gamma"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.iterateSimplex(0)"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
reference "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.MultiDirectional.simplex"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.MultiDirectional.evaluateSimplex(0)"
call "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.evaluateNewSimplex(2)"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.khi"
contain "org.apache.commons.math.optimization.MultiDirectional" "org.apache.commons.math.optimization.MultiDirectional.gamma"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.special.Gamma"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)" "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(2)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.probability(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(4)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
call "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)" "org.apache.commons.math.distribution.NormalDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.normalApproximateProbability(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.getDomainUpperBound(1)"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.setNormal(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.serialVersionUID"
reference "org.apache.commons.math.distribution.PoissonDistributionImpl.normal" "org.apache.commons.math.distribution.NormalDistribution"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.normal"
contain "org.apache.commons.math.distribution.PoissonDistributionImpl" "org.apache.commons.math.distribution.PoissonDistributionImpl.mean"
reference "org.apache.commons.math.optimization.CostFunction" "org.apache.commons.math.optimization.CostException"
contain "org.apache.commons.math.optimization.CostFunction" "org.apache.commons.math.optimization.CostFunction.cost(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.FilteringWrapper(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.this$0"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.FilteringWrapper(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.FilteringWrapper(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.this$0"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.access$100(1)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handleStep(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.requiresDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.requiresDenseOutput(0)" "org.apache.commons.math.ode.sampling.StepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.reset(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.reset(0)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler" "org.apache.commons.math.ode.sampling.StepHandler"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.handler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.this$0" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.FilteringWrapper.this$0"
reference "org.apache.commons.math.linear.QRDecompositionImpl.1" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(0)"
reference "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
call "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)" "org.apache.commons.math.random.RandomGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextBoolean(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextBytes(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextDouble(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)" "org.apache.commons.math.random.RandomGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextFloat(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextGaussian(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextInt(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextInt(0)" "org.apache.commons.math.random.RandomGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextInt(0)"
reference "org.apache.commons.math.random.RandomAdaptor.nextInt(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextInt(1)" "org.apache.commons.math.random.RandomGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextInt(1)"
reference "org.apache.commons.math.random.RandomAdaptor.nextLong(0)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.nextLong(0)" "org.apache.commons.math.random.RandomGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.nextLong(0)"
reference "org.apache.commons.math.random.RandomAdaptor.setSeed(1)" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
call "org.apache.commons.math.random.RandomAdaptor.setSeed(1)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.setSeed(1)"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.serialVersionUID"
reference "org.apache.commons.math.random.RandomAdaptor.randomGenerator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.RandomAdaptor" "org.apache.commons.math.random.RandomAdaptor.randomGenerator"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.AbstractEstimator"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.EstimatedParameter"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.AbstractEstimator.AbstractEstimator(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.setMaxCostEval(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.initializeEstimate(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.parameters"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.incrementJacobianEvaluationsCounter(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.measurements"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealMatrix.add(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealVector.add(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.cost"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.updateResidualsAndCost(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getCostEvaluations(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
reference "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.steadyStateThreshold"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.convergence"
contain "org.apache.commons.math.estimation.GaussNewtonEstimator" "org.apache.commons.math.estimation.GaussNewtonEstimator.serialVersionUID"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.referenceCount"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.next"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.hasNext(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.next"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.hasNext(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.referenceCount"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.current"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$200(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.referenceCount"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.current"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$300(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.referenceCount"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.MathRuntimeException.createConcurrentModificationException(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.next"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.current"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$400(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)" "org.apache.commons.math.MathRuntimeException.createNoSuchElementException(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.referenceCount"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.current"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.next"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.this$0"
reference "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.Distribution"
reference "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
call "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(2)" "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.AbstractDistribution" "org.apache.commons.math.distribution.AbstractDistribution.serialVersionUID"
reference "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ode.DerivativeException.DerivativeException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.DerivativeException(2)"
call "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)"
contain "org.apache.commons.math.ode.DerivativeException" "org.apache.commons.math.ode.DerivativeException.serialVersionUID"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.name"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
reference "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.EstimatedParameter.getName(0)" "org.apache.commons.math.estimation.EstimatedParameter.name"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
reference "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)"
reference "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.name"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.estimate"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.bound"
contain "org.apache.commons.math.estimation.EstimatedParameter" "org.apache.commons.math.estimation.EstimatedParameter.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.b"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.b"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParameters(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParametersVariance(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateResiduals(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressandVariance(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegression" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParametersStandardErrors(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.DuplicateSampleAbscissaException.getPattern(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.DuplicateSampleAbscissaException.getArguments(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingPoints(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingPoints(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingValues(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getInterpolatingValues(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.evaluate(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.computeCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.verifyInterpolationArray(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficients"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.x"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.y"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.coefficientsComputed"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.MatrixUtils(0)"
call "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealDiagonalMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRealVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRealVector(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
call "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.MatrixUtils" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(2)" "org.apache.commons.math.analysis.NewtonSolver.f"
call "org.apache.commons.math.analysis.NewtonSolver.solve(2)" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(2)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.f"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.solve(4)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.midpoint(2)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(3)" "org.apache.commons.math.analysis.NewtonSolver.solve(4)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction.derivative(0)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.NewtonSolver.clearResult(0)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.NewtonSolver.verifySequence(3)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.NewtonSolver.maximalIterationCount"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.NewtonSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.analysis.NewtonSolver.setResult(2)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.analysis.NewtonSolver.solve(4)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.solve(4)"
contain "org.apache.commons.math.analysis.NewtonSolver" "org.apache.commons.math.analysis.NewtonSolver.serialVersionUID"
contain "org.apache.commons.math.genetics.CrossoverPolicy" "org.apache.commons.math.genetics.CrossoverPolicy.crossover(2)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.fraction.Fraction"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.MultistepStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedH"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.AdamsMoultonStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.rollback"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.computeBackwardDifferencesArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.bdArray"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.computeGammaStarArray(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.gammaStar"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.initializeCoefficients(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedH"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.storeTime(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.truncateStep(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.h"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.truncateStep(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedH"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousT"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolatedTime"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateDerivatives(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousT"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeRollback(2)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.previousF"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.h"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.interpolateState(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.gammaStar"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeRollback(2)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.bdArray"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.computeRollback(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.MultistepStepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.writeExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.neville" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.neville"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.rollback" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.rollback"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.gammaStar" "double[]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.gammaStar"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.bdArray" "int[][]"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.bdArray"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedEnd"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator" "org.apache.commons.math.ode.nonstiff.AdamsMoultonStepInterpolator.nonTruncatedH"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.distribution.FDistributionImpl"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "double[]"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnova"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.distribution.FDistribution"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.OneWayAnovaImpl(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaFValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaFValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$000(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaFValue(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$100(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$200(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$000(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)" "org.apache.commons.math.distribution.FDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaTest(2)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaPValue(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaTest(2)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.AnovaStats(3)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.anovaStats(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.count"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.nextPowerOfTwo(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.computeCapacity(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.nextPowerOfTwo(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.perturb(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.probe(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.perturb(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.probe(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.Iterator(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.perturb(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.changeIndexSign(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.perturb(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.probe(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.probe(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.changeIndexSign(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.perturb(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.probe(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.count"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.doRemove(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.changeIndexSign(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.count"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
call "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.findInsertionIndex(4)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.growTable(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.shouldGrowTable(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.hashOf(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$100(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$200(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$300(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.access$400(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.serialVersionUID"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.LOAD_FACTOR"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.DEFAULT_EXPECTED_SIZE"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.RESIZE_MULTIPLIER"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.PERTURB_SHIFT"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.FREE"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.FULL"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.REMOVED"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys" "int[]"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.keys"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.values" "double[]"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.values"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMap.states" "byte[]"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.states"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.missingEntries"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.mask"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMap" "org.apache.commons.math.util.OpenIntToDoubleHashMap.count"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistribution"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)" "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.setShape(1)"
reference "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.WeibullDistributionImpl.getShape(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.WeibullDistributionImpl" "org.apache.commons.math.distribution.WeibullDistributionImpl.beta"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.interpolatedState"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.computeInterpolatedState(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.writeBaseExternal(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.readBaseExternal(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolator.readExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.readExternal(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.RealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.MatrixVisitorException"
contain "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.start(6)"
contain "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.visit(3)"
contain "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.serialVersionUID"
reference "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.distribution.Distribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.Distribution" "org.apache.commons.math.distribution.Distribution.cumulativeProbability(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "double[][]"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.errfac"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(6)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.GraggBulirschStoerStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeCoefficients(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.errfac"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.estimateError(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.h"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.writeExternal(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readBaseExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentState"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.resetTables(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y0Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.y1Dot"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.yMidDots"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.polynoms"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.errfac" "double[]"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.errfac"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.currentDegree"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularMatrixException"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(4)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(4)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(4)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(4)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.nonSingular"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(4)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.set(2)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.multiplyEntry(3)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.isNonSingular(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.nonSingular"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.solve(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.getInverse(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.Solver(5)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.serialVersionUID"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues" "double[]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.singularValues"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.uT"
reference "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.v"
contain "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularValueDecompositionImpl.Solver.nonSingular"
reference "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.HasDensity"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
contain "org.apache.commons.math.distribution.NormalDistribution" "org.apache.commons.math.distribution.NormalDistribution.density(1)"
reference "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getArguments(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaException" "org.apache.commons.math.DuplicateSampleAbscissaException.serialVersionUID"
reference "org.apache.commons.math.complex.Complex" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.complex.Complex" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.complex.Complex.Complex(2)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.Complex(2)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.isInfinite(0)"
reference "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.abs(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.add(1)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.conjugate(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.isInfinite(0)"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.divide(1)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.equals(1)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
reference "org.apache.commons.math.complex.Complex.hashCode(0)" "org.apache.commons.math.complex.Complex.real"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.hashCode(0)"
reference "org.apache.commons.math.complex.Complex.getImaginary(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.getImaginary(0)"
reference "org.apache.commons.math.complex.Complex.getReal(0)" "org.apache.commons.math.complex.Complex.real"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.isNaN(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.isNaN(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.isInfinite(0)" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.isInfinite(0)"
call "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.imaginary"
reference "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.INF"
call "org.apache.commons.math.complex.Complex.multiply(1)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.negate(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.subtract(1)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.sqrt1z(0)"
reference "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.Complex.acos(0)" "org.apache.commons.math.complex.Complex.negate(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.acos(0)"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.sqrt1z(0)"
reference "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.Complex.asin(0)" "org.apache.commons.math.complex.Complex.negate(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.asin(0)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
call "org.apache.commons.math.complex.Complex.atan(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.atan(0)"
call "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.Complex.cos(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.cos(0)"
call "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
reference "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.Complex.cosh(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.cosh(0)"
call "org.apache.commons.math.complex.Complex.exp(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.exp(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.exp(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.exp(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.exp(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.exp(0)"
call "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.imaginary"
reference "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.log(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.Complex.pow(1)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.Complex.pow(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.pow(1)" "org.apache.commons.math.complex.Complex.exp(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.Complex.sin(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.sin(0)"
call "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.complex.Complex.real"
call "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
reference "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.Complex.sinh(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.sinh(0)"
call "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
call "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.Complex.sqrt(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.Complex.sqrt1z(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
call "org.apache.commons.math.complex.Complex.sqrt1z(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.Complex.sqrt1z(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.Complex.sqrt1z(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.sqrt1z(0)"
call "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.Complex.tan(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.tan(0)"
call "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.complex.Complex.imaginary"
call "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.complex.Complex.tanh(0)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.tanh(0)"
call "org.apache.commons.math.complex.Complex.getArgument(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.Complex.getArgument(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.getArgument(0)"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.isNaN(0)"
reference "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.isInfinite(0)"
reference "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.INF"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.getArgument(0)"
call "org.apache.commons.math.complex.Complex.nthRoot(1)" "org.apache.commons.math.complex.Complex.createComplex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.Complex.createComplex(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.createComplex(2)"
call "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.INF"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.Complex.static {...}" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.static {...}"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.serialVersionUID"
reference "org.apache.commons.math.complex.Complex.I" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.Complex.NaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.Complex.INF" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.INF"
reference "org.apache.commons.math.complex.Complex.ONE" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.Complex.ZERO" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.imaginary"
contain "org.apache.commons.math.complex.Complex" "org.apache.commons.math.complex.Complex.real"
reference "org.apache.commons.math.transform.RealTransformer" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.transform.RealTransformer" "org.apache.commons.math.transform.RealTransformer.transform(1)"
contain "org.apache.commons.math.transform.RealTransformer" "org.apache.commons.math.transform.RealTransformer.transform(4)"
contain "org.apache.commons.math.transform.RealTransformer" "org.apache.commons.math.transform.RealTransformer.inversetransform(1)"
contain "org.apache.commons.math.transform.RealTransformer" "org.apache.commons.math.transform.RealTransformer.inversetransform(4)"
reference "org.apache.commons.math.optimization.PointCostPair" "double[]"
call "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)" "double[].clone(0)"
reference "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)" "org.apache.commons.math.optimization.PointCostPair.point"
reference "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.PointCostPair(2)"
reference "org.apache.commons.math.optimization.PointCostPair.getPoint(0)" "org.apache.commons.math.optimization.PointCostPair.point"
call "org.apache.commons.math.optimization.PointCostPair.getPoint(0)" "double[].clone(0)"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
reference "org.apache.commons.math.optimization.PointCostPair.getCost(0)" "org.apache.commons.math.optimization.PointCostPair.cost"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
reference "org.apache.commons.math.optimization.PointCostPair.point" "double[]"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.point"
contain "org.apache.commons.math.optimization.PointCostPair" "org.apache.commons.math.optimization.PointCostPair.cost"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolator.interpolate(2)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.interpolate(2)"
contain "org.apache.commons.math.analysis.NevilleInterpolator" "org.apache.commons.math.analysis.NevilleInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.NaturalComparator"
reference "org.apache.commons.math.stat.Frequency.Frequency(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.stat.Frequency.Frequency(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.Frequency(1)"
reference "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.freqTable"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.toString(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.toString(0)"
reference "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.Frequency.addValue(1)" "org.apache.commons.math.stat.Frequency.addValue(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.Frequency.clear(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.clear(0)"
reference "org.apache.commons.math.stat.Frequency.valuesIterator(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
reference "org.apache.commons.math.stat.Frequency.getSumFreq(0)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.freqTable"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getCount(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getPct(1)" "org.apache.commons.math.stat.Frequency.getPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
reference "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.freqTable"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.NaturalComparator.NaturalComparator(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCount(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumFreq(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.Frequency.getCumPct(1)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.serialVersionUID"
contain "org.apache.commons.math.stat.Frequency" "org.apache.commons.math.stat.Frequency.freqTable"
reference "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.getNumberOfTrials(0)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.setNumberOfTrials(1)"
contain "org.apache.commons.math.distribution.BinomialDistribution" "org.apache.commons.math.distribution.BinomialDistribution.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getDimension(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getCovariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getN(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getSum(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getSumSq(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary" "org.apache.commons.math.stat.descriptive.StatisticalMultivariateSummary.getSumLog(0)"
reference "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)" "org.apache.commons.math.random.UniformRandomGenerator.generator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
reference "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
reference "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.UniformRandomGenerator.generator"
call "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.UniformRandomGenerator.static {...}" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.static {...}"
reference "org.apache.commons.math.random.UniformRandomGenerator.generator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.generator"
contain "org.apache.commons.math.random.UniformRandomGenerator" "org.apache.commons.math.random.UniformRandomGenerator.SQRT3"
reference "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.ConvergenceException"
call "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)"
call "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
contain "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(3)"
contain "org.apache.commons.math.fraction.FractionConversionException" "org.apache.commons.math.fraction.FractionConversionException.serialVersionUID"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "double[]"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "int[]"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.RealTransformer"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.MathRuntimeException"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastHadamardTransformer.transform(4)" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.transform(4)"
call "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "double[].clone(0)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)" "int[].clone(0)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.fht(1)"
contain "org.apache.commons.math.transform.FastHadamardTransformer" "org.apache.commons.math.transform.FastHadamardTransformer.serialVersionUID"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.special.Erf"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)" "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.setMean(1)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.setStandardDeviation(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.density(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.density(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.density(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.density(1)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
call "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Erf.erf(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.NormalDistributionImpl.getStandardDeviation(0)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.density(1)"
reference "org.apache.commons.math.distribution.NormalDistributionImpl.static {...}" "org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.static {...}"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.SQRT2PI"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.mean"
contain "org.apache.commons.math.distribution.NormalDistributionImpl" "org.apache.commons.math.distribution.NormalDistributionImpl.standardDeviation"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolator.HighamHall54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticE"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticB"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticE"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.METHOD_NAME"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticC" "double[]"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticA" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticB" "double[]"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticB"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticE" "double[]"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.staticE"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.EventState"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.EventException"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.first"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.initialized"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.addEventHandler(4)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
call "org.apache.commons.math.ode.events.CombinedEventsManager.addEventHandler(4)" "org.apache.commons.math.ode.events.EventState.EventState(4)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.addEventHandler(4)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsHandlers(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
call "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsHandlers(0)" "org.apache.commons.math.ode.events.EventState.getEventHandler(0)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsHandlers(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.clearEventsHandlers(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.clearEventsHandlers(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsStates(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsStates(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.CombinedEventsManager.first"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.CombinedEventsManager.initialized"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.evaluateStep(1)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.isForward(0)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.getEventTime(0)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(1)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.first"
call "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)" "org.apache.commons.math.ode.events.EventState.getEventTime(0)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
call "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.stepAccepted(2)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(1)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
call "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)" "org.apache.commons.math.ode.events.EventState.stop(0)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
call "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)" "org.apache.commons.math.ode.events.EventState.reset(2)"
call "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(1)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.serialVersionUID"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.states"
reference "org.apache.commons.math.ode.events.CombinedEventsManager.first" "org.apache.commons.math.ode.events.EventState"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.first"
contain "org.apache.commons.math.ode.events.CombinedEventsManager" "org.apache.commons.math.ode.events.CombinedEventsManager.initialized"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventException"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventState"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.events.EventState.1.{...}" "org.apache.commons.math.ode.events.EventState.1.this$0"
reference "org.apache.commons.math.ode.events.EventState.1.{...}" "org.apache.commons.math.ode.events.EventState.1.val$interpolator"
contain "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventState.1.{...}"
reference "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.events.EventState.1.val$interpolator"
call "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.events.EventState.1.this$0"
call "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.events.EventState.access$000(1)"
call "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.ode.events.EventHandler.g(2)"
call "org.apache.commons.math.ode.events.EventState.1.value(1)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
contain "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventState.1.value(1)"
reference "org.apache.commons.math.ode.events.EventState.1.val$interpolator" "org.apache.commons.math.ode.sampling.StepInterpolator"
contain "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventState.1.val$interpolator"
reference "org.apache.commons.math.ode.events.EventState.1.this$0" "org.apache.commons.math.ode.events.EventState"
contain "org.apache.commons.math.ode.events.EventState.1" "org.apache.commons.math.ode.events.EventState.1.this$0"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTest"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.StatUtils"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.distribution.TDistribution"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)" "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.t(2)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)" "org.apache.commons.math.stat.inference.TTestImpl.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.df(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.stat.inference.TTestImpl.t(4)"
reference "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(4)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.t(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.df(4)"
reference "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.tTest(6)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticT(6)"
reference "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.homoscedasticTTest(6)"
reference "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.setDistribution(1)"
reference "org.apache.commons.math.stat.inference.TTestImpl.distribution" "org.apache.commons.math.distribution.TDistribution"
contain "org.apache.commons.math.stat.inference.TTestImpl" "org.apache.commons.math.stat.inference.TTestImpl.distribution"
reference "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.ODEIntegrator"
reference "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.IntegratorException"
contain "org.apache.commons.math.ode.FirstOrderIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.special.Erf" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Gamma"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.Erf(0)"
call "org.apache.commons.math.special.Erf.erf(1)" "org.apache.commons.math.special.Gamma.regularizedGammaP(4)"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.erf(1)"
contain "org.apache.commons.math.special.Erf" "org.apache.commons.math.special.Erf.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.test(3)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.incrementAll(3)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.moment"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
call "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(0)"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.moment"
contain "org.apache.commons.math.stat.descriptive.moment.Kurtosis" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.incMoment"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getN(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfSquares" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.value"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.dev"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.nDev"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(0)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.copy(2)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMoment" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.m2"
reference "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.InvalidMatrixException"
contain "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
contain "org.apache.commons.math.linear.DecompositionSolver" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
reference "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.geometry.CardanEulerSingularityException.CardanEulerSingularityException(1)"
contain "org.apache.commons.math.geometry.CardanEulerSingularityException" "org.apache.commons.math.geometry.CardanEulerSingularityException.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Percentile"
call "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)"
call "org.apache.commons.math.stat.descriptive.rank.Median.Median(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Median.Median(1)"
contain "org.apache.commons.math.stat.descriptive.rank.Median" "org.apache.commons.math.stat.descriptive.rank.Median.serialVersionUID"
reference "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.geometry.NotARotationMatrixException.NotARotationMatrixException(2)"
contain "org.apache.commons.math.geometry.NotARotationMatrixException" "org.apache.commons.math.geometry.NotARotationMatrixException.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatistic.AbstractUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.clear(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.copy(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.increment(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.incrementAll(3)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.equals(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.serialVersionUID"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.mode"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(0)" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.ValueServer(0)"
reference "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.mode"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextDigest(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextReplay(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextUniform(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextExponential(0)"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.getNextGaussian(0)"
reference "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.getNext(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServer.fill(1)" "org.apache.commons.math.random.ValueServer.getNext(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServer.fill(1)" "org.apache.commons.math.random.ValueServer.getNext(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
call "org.apache.commons.math.random.ValueServer.computeDistribution(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.computeDistribution(0)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
reference "org.apache.commons.math.random.ValueServer.computeDistribution(1)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.computeDistribution(1)"
reference "org.apache.commons.math.random.ValueServer.getMode(0)" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getMode(0)"
reference "org.apache.commons.math.random.ValueServer.setMode(1)" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setMode(1)"
reference "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)"
reference "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
reference "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
reference "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)"
reference "org.apache.commons.math.random.ValueServer.resetReplayFile(0)" "org.apache.commons.math.random.ValueServer.filePointer"
reference "org.apache.commons.math.random.ValueServer.resetReplayFile(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
reference "org.apache.commons.math.random.ValueServer.closeReplayFile(0)" "org.apache.commons.math.random.ValueServer.filePointer"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
reference "org.apache.commons.math.random.ValueServer.getMu(0)" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getMu(0)"
reference "org.apache.commons.math.random.ValueServer.setMu(1)" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setMu(1)"
reference "org.apache.commons.math.random.ValueServer.getSigma(0)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getSigma(0)"
reference "org.apache.commons.math.random.ValueServer.setSigma(1)" "org.apache.commons.math.random.ValueServer.sigma"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.setSigma(1)"
reference "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
call "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
call "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
call "org.apache.commons.math.random.ValueServer.getNextDigest(0)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextDigest(0)"
reference "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
call "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
reference "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
call "org.apache.commons.math.random.ValueServer.getNextReplay(0)" "org.apache.commons.math.MathRuntimeException.createEOFException(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextReplay(0)"
reference "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.getNextUniform(0)" "org.apache.commons.math.random.RandomData.nextUniform(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextUniform(0)"
reference "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.ValueServer.mu"
call "org.apache.commons.math.random.ValueServer.getNextExponential(0)" "org.apache.commons.math.random.RandomData.nextExponential(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextExponential(0)"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.randomData"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.ValueServer.sigma"
call "org.apache.commons.math.random.ValueServer.getNextGaussian(0)" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.getNextGaussian(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.mode"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.valuesFileURL"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.mu"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.filePointer"
call "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.ValueServer.ValueServer(1)" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.ValueServer(1)"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.mode"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.valuesFileURL"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.mu"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.sigma"
reference "org.apache.commons.math.random.ValueServer.empiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.empiricalDistribution"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.filePointer"
reference "org.apache.commons.math.random.ValueServer.randomData" "org.apache.commons.math.random.RandomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.randomData"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.DIGEST_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.REPLAY_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.UNIFORM_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.EXPONENTIAL_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.GAUSSIAN_MODE"
contain "org.apache.commons.math.random.ValueServer" "org.apache.commons.math.random.ValueServer.CONSTANT_MODE"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.UnivariateRealIntegratorImpl(2)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.TrapezoidIntegrator.f"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)" "org.apache.commons.math.analysis.TrapezoidIntegrator.s"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.clearResult(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyInterval(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.stage(3)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.maximalIterationCount"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.minimalIterationCount"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.relativeAccuracy"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.setResult(2)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.analysis.TrapezoidIntegrator.result"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealIntegratorImpl.verifyIterationCount(0)"
reference "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.maximalIterationCount"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.verifyIterationCount(0)"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.serialVersionUID"
contain "org.apache.commons.math.analysis.TrapezoidIntegrator" "org.apache.commons.math.analysis.TrapezoidIntegrator.s"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.ThreeEighthesStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistribution"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(0)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)" "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.setMedian(1)"
reference "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.CauchyDistributionImpl.getScale(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.median"
contain "org.apache.commons.math.distribution.CauchyDistributionImpl" "org.apache.commons.math.distribution.CauchyDistributionImpl.scale"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.ClassicalRungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.linear.RealMatrixPreservingVisitor" "org.apache.commons.math.linear.MatrixVisitorException"
contain "org.apache.commons.math.linear.RealMatrixPreservingVisitor" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
contain "org.apache.commons.math.linear.RealMatrixPreservingVisitor" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
contain "org.apache.commons.math.linear.RealMatrixPreservingVisitor" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
reference "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.getPolynomialFunction(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.solve(3)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.p"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.solve(4)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(4)" "org.apache.commons.math.analysis.LaguerreSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(4)" "org.apache.commons.math.analysis.LaguerreSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(4)" "org.apache.commons.math.analysis.LaguerreSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(4)" "org.apache.commons.math.analysis.LaguerreSolver.solve(3)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(4)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.setResult(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.result"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(3)" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(3)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.isSequence(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)" "org.apache.commons.math.analysis.LaguerreSolver.functionValueAccuracy"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.isRootOK(3)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.complex.Complex.add(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)" "org.apache.commons.math.analysis.LaguerreSolver.resultComputed"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.add(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.abs(0)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.resultComputed"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.iterationCount"
reference "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.analysis.LaguerreSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.analysis.LaguerreSolver.solve(2)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.solve(2)"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.serialVersionUID"
reference "org.apache.commons.math.analysis.LaguerreSolver.p" "org.apache.commons.math.analysis.PolynomialFunction"
contain "org.apache.commons.math.analysis.LaguerreSolver" "org.apache.commons.math.analysis.LaguerreSolver.p"
reference "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.setNumeratorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.getNumeratorDegreesOfFreedom(0)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.setDenominatorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistribution" "org.apache.commons.math.distribution.FDistribution.getDenominatorDegreesOfFreedom(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "double[]"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(2)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "double[].clone(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.AbstractStepInterpolator(1)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.reinitialize(2)"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.copy(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.copy(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.doCopy(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.copy(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getPreviousTime(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getCurrentTime(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedTime(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.isForward(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.isForward(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedState(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedDerivatives(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.getInterpolatedDerivatives(0)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalizeStep(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalizeStep(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.doFinalize(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalizeStep(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.doFinalize(0)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeExternal(1)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readExternal(1)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalizeStep(0)"
call "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)" "org.apache.commons.math.MathRuntimeException.createIOException(1)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.writeBaseExternal(1)"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.readBaseExternal(1)"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.previousTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentTime"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.h"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState" "double[]"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.currentState"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedTime"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState" "double[]"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives" "double[]"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.finalized"
contain "org.apache.commons.math.ode.sampling.AbstractStepInterpolator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.forward"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.equations"
call "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
reference "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.equations"
reference "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
call "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.computeSecondDerivatives(4)"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.computeDerivatives(3)"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.serialVersionUID"
reference "org.apache.commons.math.ode.FirstOrderConverter.equations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.equations"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.dimension"
reference "org.apache.commons.math.ode.FirstOrderConverter.z" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.z"
reference "org.apache.commons.math.ode.FirstOrderConverter.zDot" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.zDot"
reference "org.apache.commons.math.ode.FirstOrderConverter.zDDot" "double[]"
contain "org.apache.commons.math.ode.FirstOrderConverter" "org.apache.commons.math.ode.FirstOrderConverter.zDDot"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.doCopy(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.storeTime(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v2"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.v4"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.vectorsInitialized"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.a70"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.a72"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.a73"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.a74"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.a75"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d0"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d2"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d3"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d4"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d5"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.d6"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.serialVersionUID"
reference "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.MathException.MathException(1)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
call "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)" "org.apache.commons.math.MathException.MathException(3)"
reference "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
reference "org.apache.commons.math.FunctionEvaluationException.getArgument(0)" "org.apache.commons.math.FunctionEvaluationException.argument"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.getArgument(0)"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.serialVersionUID"
contain "org.apache.commons.math.FunctionEvaluationException" "org.apache.commons.math.FunctionEvaluationException.argument"
reference "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.apply(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.apply(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getElement(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getElement(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getValues(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.getWindowSize(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.toString(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.serialVersionUID"
reference "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
contain "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.MatrixIndexException" "org.apache.commons.math.linear.MatrixIndexException.serialVersionUID"
reference "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.TDistribution" "org.apache.commons.math.distribution.TDistribution.getDegreesOfFreedom(0)"
contain "org.apache.commons.math.random.RandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.getN(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.Sum.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.copy(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.summary.Sum.copy(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.copy(0)"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
reference "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.n"
contain "org.apache.commons.math.stat.descriptive.summary.Sum" "org.apache.commons.math.stat.descriptive.summary.Sum.value"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.copy(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
reference "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.Min.Min(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.rank.Min.Min(1)" "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.Min(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
reference "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
reference "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.clear(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.getN(0)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.getN(0)"
call "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Min.test(3)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.Min.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.Min.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.copy(0)"
reference "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Min.n"
reference "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)" "org.apache.commons.math.stat.descriptive.rank.Min.value"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.copy(2)"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.n"
contain "org.apache.commons.math.stat.descriptive.rank.Min" "org.apache.commons.math.stat.descriptive.rank.Min.value"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "double[][]"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.MatrixVisitorException"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.RealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.RealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.AbstractRealMatrix(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.copy(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.add(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.add(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.scalarAdd(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.scalarMultiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.multiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getData(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getData(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getData(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getData(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getNorm(0)" "org.apache.commons.math.linear.AbstractRealMatrix.1.{...}"
call "org.apache.commons.math.linear.AbstractRealMatrix.getNorm(0)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getFrobeniusNorm(0)" "org.apache.commons.math.linear.AbstractRealMatrix.2.{...}"
call "org.apache.commons.math.linear.AbstractRealMatrix.getFrobeniusNorm(0)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getFrobeniusNorm(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(4)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.3.{...}"
call "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(2)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(5)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(5)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(5)" "org.apache.commons.math.linear.AbstractRealMatrix.4.{...}"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(5)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(5)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.copySubMatrix(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setSubMatrix(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRow(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRowVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setRowVector(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumnVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setColumnVector(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRow(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRow(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getRow(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getRow(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRow(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRow(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRow(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setRow(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setRow(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumn(1)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumn(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getColumn(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumn(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumn(2)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumn(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.setColumn(2)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setColumn(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.multiplyEntry(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.createMatrix(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.5.{...}"
call "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.inverse(0)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.inverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.inverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.inverse(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.inverse(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getDeterminant(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getDeterminant(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.isSquare(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.isSquare(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.isSquare(0)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.isSingular(0)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.isSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.isSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.isSingular(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.isSingular(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getTrace(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getTrace(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getTrace(0)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.getTrace(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.getTrace(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.operate(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.start(6)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.visit(3)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)" "org.apache.commons.math.linear.RealMatrixPreservingVisitor.end(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(5)" "org.apache.commons.math.linear.AbstractRealMatrix.walkInRowOrder(5)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.walkInOptimizedOrder(5)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.solve(1)"
reference "org.apache.commons.math.linear.AbstractRealMatrix.luDecompose(0)" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
call "org.apache.commons.math.linear.AbstractRealMatrix.luDecompose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.luDecompose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.luDecompose(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.toString(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.toString(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.toString(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.toString(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.equals(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.hashCode(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.hashCode(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.hashCode(0)" "org.apache.commons.math.linear.AbstractRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.hashCode(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(4)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkRowIndex(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)" "org.apache.commons.math.linear.AbstractRealMatrix.checkColumnIndex(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubMatrixIndex(2)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkAdditionCompatible(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkSubtractionCompatible(1)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)" "org.apache.commons.math.linear.AbstractRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.checkMultiplicationCompatible(1)"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.serialVersionUID"
reference "org.apache.commons.math.linear.AbstractRealMatrix.lu" "org.apache.commons.math.linear.DecompositionSolver"
contain "org.apache.commons.math.linear.AbstractRealMatrix" "org.apache.commons.math.linear.AbstractRealMatrix.lu"
contain "org.apache.commons.math.random.NormalizedRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.MathException"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.setMean(1)"
reference "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.density(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.density(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.density(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.ExponentialDistributionImpl" "org.apache.commons.math.distribution.ExponentialDistributionImpl.mean"
reference "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3DFormat"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(3)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(4)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(4)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(6)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(6)"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.Vector3D(8)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.Vector3D(8)"
reference "org.apache.commons.math.geometry.Vector3D.getX(0)" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Vector3D.getY(0)" "org.apache.commons.math.geometry.Vector3D.y"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getY(0)"
reference "org.apache.commons.math.geometry.Vector3D.getZ(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.getNorm(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
reference "org.apache.commons.math.geometry.Vector3D.getNormSq(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.getNormSq(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.getNormSq(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getNormSq(0)"
reference "org.apache.commons.math.geometry.Vector3D.getAlpha(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.getAlpha(0)" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getAlpha(0)"
reference "org.apache.commons.math.geometry.Vector3D.getDelta(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.getDelta(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.getDelta(0)"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.add(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.add(1)"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.add(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.add(2)"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.subtract(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.subtract(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.subtract(2)"
call "org.apache.commons.math.geometry.Vector3D.normalize(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3D.normalize(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.geometry.Vector3D.normalize(0)" "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.normalize(0)"
call "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.orthogonal(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Vector3D.angle(2)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.angle(2)"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.negate(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.negate(0)"
reference "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)" "org.apache.commons.math.geometry.Vector3D.z"
call "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)"
reference "org.apache.commons.math.geometry.Vector3D.isNaN(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.isNaN(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.isNaN(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.isNaN(0)"
call "org.apache.commons.math.geometry.Vector3D.isInfinite(0)" "org.apache.commons.math.geometry.Vector3D.isNaN(0)"
reference "org.apache.commons.math.geometry.Vector3D.isInfinite(0)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.isInfinite(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.isInfinite(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.isInfinite(0)"
call "org.apache.commons.math.geometry.Vector3D.equals(1)" "org.apache.commons.math.geometry.Vector3D.isNaN(0)"
reference "org.apache.commons.math.geometry.Vector3D.equals(1)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.equals(1)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.equals(1)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.equals(1)"
call "org.apache.commons.math.geometry.Vector3D.hashCode(0)" "org.apache.commons.math.geometry.Vector3D.isNaN(0)"
reference "org.apache.commons.math.geometry.Vector3D.hashCode(0)" "org.apache.commons.math.geometry.Vector3D.x"
call "org.apache.commons.math.geometry.Vector3D.hashCode(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
reference "org.apache.commons.math.geometry.Vector3D.hashCode(0)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.hashCode(0)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.hashCode(0)"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.dotProduct(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.z"
reference "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.x"
call "org.apache.commons.math.geometry.Vector3D.crossProduct(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
reference "org.apache.commons.math.geometry.Vector3D.distance(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.distance(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.distance(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.distance(2)"
reference "org.apache.commons.math.geometry.Vector3D.distanceSq(2)" "org.apache.commons.math.geometry.Vector3D.x"
reference "org.apache.commons.math.geometry.Vector3D.distanceSq(2)" "org.apache.commons.math.geometry.Vector3D.y"
reference "org.apache.commons.math.geometry.Vector3D.distanceSq(2)" "org.apache.commons.math.geometry.Vector3D.z"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.distanceSq(2)"
reference "org.apache.commons.math.geometry.Vector3D.toString(0)" "org.apache.commons.math.geometry.Vector3D.DEFAULT_FORMAT"
call "org.apache.commons.math.geometry.Vector3D.toString(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.toString(0)"
call "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.ZERO"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.MINUS_I"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.MINUS_J"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.MINUS_K"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.NaN"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.POSITIVE_INFINITY"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.NEGATIVE_INFINITY"
call "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(0)"
reference "org.apache.commons.math.geometry.Vector3D.static {...}" "org.apache.commons.math.geometry.Vector3D.DEFAULT_FORMAT"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.static {...}"
reference "org.apache.commons.math.geometry.Vector3D.ZERO" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.ZERO"
reference "org.apache.commons.math.geometry.Vector3D.PLUS_I" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
reference "org.apache.commons.math.geometry.Vector3D.MINUS_I" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.MINUS_I"
reference "org.apache.commons.math.geometry.Vector3D.PLUS_J" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.Vector3D.MINUS_J" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.MINUS_J"
reference "org.apache.commons.math.geometry.Vector3D.PLUS_K" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
reference "org.apache.commons.math.geometry.Vector3D.MINUS_K" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.MINUS_K"
reference "org.apache.commons.math.geometry.Vector3D.NaN" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.NaN"
reference "org.apache.commons.math.geometry.Vector3D.POSITIVE_INFINITY" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.POSITIVE_INFINITY"
reference "org.apache.commons.math.geometry.Vector3D.NEGATIVE_INFINITY" "org.apache.commons.math.geometry.Vector3D"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.NEGATIVE_INFINITY"
reference "org.apache.commons.math.geometry.Vector3D.DEFAULT_FORMAT" "org.apache.commons.math.geometry.Vector3DFormat"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.DEFAULT_FORMAT"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.serialVersionUID"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.x"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.y"
contain "org.apache.commons.math.geometry.Vector3D" "org.apache.commons.math.geometry.Vector3D.z"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistribution"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)" "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.setNumberOfTrials(1)"
reference "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.setProbabilityOfSuccess(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getNumberOfTrials(0)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)" "org.apache.commons.math.distribution.BinomialDistributionImpl.getProbabilityOfSuccess(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.BinomialDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.numberOfTrials"
contain "org.apache.commons.math.distribution.BinomialDistributionImpl" "org.apache.commons.math.distribution.BinomialDistributionImpl.probabilityOfSuccess"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.n"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m3"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m2"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m1"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.nDev"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.nDevSq"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.clear(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.clear(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(0)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.copy(2)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(2)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.copy(2)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMoment" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.m4"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistribution"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.special.Beta"
call "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)" "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
reference "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.setDegreesOfFreedom(1)"
reference "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.TDistributionImpl.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.TDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.TDistributionImpl" "org.apache.commons.math.distribution.TDistributionImpl.degreesOfFreedom"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)" "org.apache.commons.math.distribution.AbstractDistribution.AbstractDistribution(0)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.1.{...}"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getInitialDomain(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.AbstractContinuousDistribution" "org.apache.commons.math.distribution.AbstractContinuousDistribution.serialVersionUID"
reference "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
reference "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
call "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)"
reference "org.apache.commons.math.random.GaussianRandomGenerator.generator" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.GaussianRandomGenerator" "org.apache.commons.math.random.GaussianRandomGenerator.generator"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.AbstractEstimator" "double[][]"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.Estimator"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.AbstractEstimator(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.setMaxCostEval(1)" "org.apache.commons.math.estimation.AbstractEstimator.maxCostEval"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.setMaxCostEval(1)"
reference "org.apache.commons.math.estimation.AbstractEstimator.getCostEvaluations(0)" "org.apache.commons.math.estimation.AbstractEstimator.costEvaluations"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.getCostEvaluations(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.getJacobianEvaluations(0)" "org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.getJacobianEvaluations(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.incrementJacobianEvaluationsCounter(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.jacobian"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.rows"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.measurements"
call "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.cols"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.AbstractEstimator.parameters"
call "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.incrementJacobianEvaluationsCounter(0)" "org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.incrementJacobianEvaluationsCounter(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.costEvaluations"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.maxCostEval"
call "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.cost"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.rows"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.measurements"
call "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.residuals"
call "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)" "org.apache.commons.math.estimation.AbstractEstimator.cols"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.updateResidualsAndCost(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getRMS(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getRMS(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getRMS(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.getChiSquare(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getChiSquare(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getChiSquare(1)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.getChiSquare(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.estimation.AbstractEstimator.updateJacobian(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.estimation.AbstractEstimator.jacobian"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
call "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)" "org.apache.commons.math.estimation.AbstractEstimator.getChiSquare(1)"
call "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)" "org.apache.commons.math.estimation.AbstractEstimator.getCovariances(1)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.guessParametersErrors(1)"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.costEvaluations"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations"
call "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getMeasurements(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.measurements"
call "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.EstimationProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.parameters"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.rows"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.cols"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.jacobian"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.residuals"
reference "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)" "org.apache.commons.math.estimation.AbstractEstimator.cost"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.initializeEstimate(1)"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.estimate(1)"
reference "org.apache.commons.math.estimation.AbstractEstimator.measurements" "org.apache.commons.math.estimation.WeightedMeasurement[]"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.measurements"
reference "org.apache.commons.math.estimation.AbstractEstimator.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.parameters"
reference "org.apache.commons.math.estimation.AbstractEstimator.jacobian" "double[]"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.jacobian"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.cols"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.rows"
reference "org.apache.commons.math.estimation.AbstractEstimator.residuals" "double[]"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.residuals"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.cost"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.maxCostEval"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.costEvaluations"
contain "org.apache.commons.math.estimation.AbstractEstimator" "org.apache.commons.math.estimation.AbstractEstimator.jacobianEvaluations"
reference "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(1)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(1)"
contain "org.apache.commons.math.linear.InvalidMatrixException" "org.apache.commons.math.linear.InvalidMatrixException.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "double[]"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.sampling.FixedStepHandler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.StoringStepHandler(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.this$0"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.StoringStepHandler(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.n"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.StoringStepHandler(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.restart(0)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.StoringStepHandler(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.restart(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.count"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.restart(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.finalState"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.restart(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.getFinalState(0)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.finalState"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.getFinalState(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.count"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.n"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.this$0"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousT"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.previousF"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "double[].clone(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.finalState"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.handleStep(4)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.n"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.count"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.finalState" "double[]"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.finalState"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.this$0" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.StoringStepHandler.this$0"
reference "org.apache.commons.math.linear.BigMatrixImpl" "double[][]"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.SingularMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrix"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
call "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
reference "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.copy(0)" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copy(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.add(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scalarAdd(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
call "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getData(0)" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDataAsDoubleArray(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRoundingMode(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRoundingMode(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setRoundingMode(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setRoundingMode(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getScale(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getScale(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setScale(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setScale(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
call "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(4)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getSubMatrix(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRow(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowAsDoubleArray(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumn(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnAsDoubleArray(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getEntryAsDouble(2)" "org.apache.commons.math.linear.BigMatrixImpl.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getEntryAsDouble(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
reference "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
call "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getTrace(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.operate(1)" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getDataRef(0)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
reference "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
call "org.apache.commons.math.linear.BigMatrixImpl.solve(1)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.parity"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
call "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.scale"
reference "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.toString(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
call "org.apache.commons.math.linear.BigMatrixImpl.equals(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
call "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyOut(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.data"
reference "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)" "org.apache.commons.math.linear.BigMatrixImpl.lu"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.copyIn(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.checkRowIndex(1)"
call "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.checkColumnIndex(1)"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
reference "org.apache.commons.math.linear.BigMatrixImpl.static {...}" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.static {...}"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.serialVersionUID"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.data"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.lu"
reference "org.apache.commons.math.linear.BigMatrixImpl.permutation" "int[]"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.permutation"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.parity"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.roundingMode"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.scale"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.TOO_SMALL"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
contain "org.apache.commons.math.linear.BigMatrixImpl" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
reference "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.MatrixIndexException"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.copy(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.add(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.add(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.subtract(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.subtract(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAdd(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAddToSelf(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSubtract(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSubtractToSelf(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapMultiply(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapMultiplyToSelf(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapDivide(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapDivideToSelf(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapPow(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapPowToSelf(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapExp(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapExpToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapExpm1(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapExpm1ToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLog(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLogToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLog10(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLog10ToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLog1p(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapLog1pToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCosh(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCoshToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSinh(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSinhToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapTanh(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapTanhToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCos(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCosToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSin(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSinToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapTan(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapTanToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAcos(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAcosToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAsin(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAsinToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAtan(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAtanToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapInv(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapInvToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAbs(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapAbsToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSqrt(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSqrtToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCbrt(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCbrtToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCeil(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapCeilToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapFloor(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapFloorToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapRint(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapRintToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSignum(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapSignumToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapUlp(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.mapUlpToSelf(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.ebeMultiply(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.ebeMultiply(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.ebeDivide(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.ebeDivide(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getData(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.dotProduct(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.dotProduct(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getNorm(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getL1Norm(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getLInfNorm(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getDistance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getDistance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getL1Distance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getL1Distance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getLInfDistance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getLInfDistance(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.unitVector(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.unitize(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.projection(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.projection(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.outerProduct(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.outerProduct(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.getDimension(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.append(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.append(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.append(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.get(2)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.set(2)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.set(2)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.set(2)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.set(1)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.toArray(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.isNaN(0)"
contain "org.apache.commons.math.linear.RealVector" "org.apache.commons.math.linear.RealVector.isInfinite(0)"
reference "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.FractionConversionException"
reference "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.fraction.Fraction.Fraction(1)" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.Fraction.Fraction(3)" "org.apache.commons.math.fraction.Fraction.Fraction(4)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
call "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.Fraction(4)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.Fraction.Fraction(4)" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(3)"
reference "org.apache.commons.math.fraction.Fraction.Fraction(4)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.Fraction(4)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.Fraction(4)" "org.apache.commons.math.fraction.FractionConversionException.FractionConversionException(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(4)"
call "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
reference "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.Fraction(2)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.Fraction.abs(0)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.abs(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.abs(0)"
call "org.apache.commons.math.fraction.Fraction.compareTo(1)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.compareTo(1)"
reference "org.apache.commons.math.fraction.Fraction.doubleValue(0)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.doubleValue(0)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
reference "org.apache.commons.math.fraction.Fraction.equals(1)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.equals(1)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.Fraction.floatValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.floatValue(0)"
reference "org.apache.commons.math.fraction.Fraction.getDenominator(0)" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.Fraction.getNumerator(0)" "org.apache.commons.math.fraction.Fraction.numerator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.Fraction.hashCode(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.Fraction.hashCode(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.hashCode(0)"
call "org.apache.commons.math.fraction.Fraction.intValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.intValue(0)"
call "org.apache.commons.math.fraction.Fraction.longValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.longValue(0)"
reference "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.fraction.Fraction.negate(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.denominator"
reference "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.reciprocal(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.Fraction.add(1)" "org.apache.commons.math.fraction.Fraction.addSub(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.fraction.Fraction.subtract(1)" "org.apache.commons.math.fraction.Fraction.addSub(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.subtract(1)"
reference "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.numerator"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.Fraction.addSub(2)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.addSub(2)"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.ZERO"
reference "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.fraction.Fraction.multiply(1)" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.multiply(1)"
reference "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.denominator"
call "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
call "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.Fraction.divide(1)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.divide(1)"
call "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.MathRuntimeException.createArithmeticException(2)"
reference "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.compareTo(1)"
call "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.ONE"
reference "org.apache.commons.math.fraction.Fraction.static {...}" "org.apache.commons.math.fraction.Fraction.ZERO"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.static {...}"
reference "org.apache.commons.math.fraction.Fraction.ONE" "org.apache.commons.math.fraction.Fraction"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.ONE"
reference "org.apache.commons.math.fraction.Fraction.ZERO" "org.apache.commons.math.fraction.Fraction"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.ZERO"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.serialVersionUID"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.denominator"
contain "org.apache.commons.math.fraction.Fraction" "org.apache.commons.math.fraction.Fraction.numerator"
reference "org.apache.commons.math.linear.RealMatrixChangingVisitor" "org.apache.commons.math.linear.MatrixVisitorException"
contain "org.apache.commons.math.linear.RealMatrixChangingVisitor" "org.apache.commons.math.linear.RealMatrixChangingVisitor.start(6)"
contain "org.apache.commons.math.linear.RealMatrixChangingVisitor" "org.apache.commons.math.linear.RealMatrixChangingVisitor.visit(3)"
contain "org.apache.commons.math.linear.RealMatrixChangingVisitor" "org.apache.commons.math.linear.RealMatrixChangingVisitor.end(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.distribution.TDistribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
call "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)" "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
call "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
call "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)" "org.apache.commons.math.distribution.TDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)" "org.apache.commons.math.distribution.TDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
reference "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.stat.regression.SimpleRegression.n"
call "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.setDistribution(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.serialVersionUID"
reference "org.apache.commons.math.stat.regression.SimpleRegression.distribution" "org.apache.commons.math.distribution.TDistribution"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.distribution"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumXX"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumYY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.sumXY"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.n"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.xbar"
contain "org.apache.commons.math.stat.regression.SimpleRegression" "org.apache.commons.math.stat.regression.SimpleRegression.ybar"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.UnivariateRealSolverFactory(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newInstance(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newDefaultSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBisectionSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBrentSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newNewtonSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newSecantSolver(0)"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.b"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegrator" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.b"
reference "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedU"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedB"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedV"
call "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.transformToLowerBiDiagonal(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedU"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)" "org.apache.commons.math.linear.RealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedB"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedV"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)" "org.apache.commons.math.linear.RealMatrix.addToEntry(3)"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getHouseholderVectorsRef(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getHouseholderVectorsRef(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getMainDiagonalRef(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getMainDiagonalRef(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.getSecondaryDiagonalRef(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.getSecondaryDiagonalRef(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.isUpperBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.isUpperBiDiagonal(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.transformToUpperBiDiagonal(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToLowerBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToLowerBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.transformToLowerBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.transformToLowerBiDiagonal(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.serialVersionUID"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors" "double[][]"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.householderVectors"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.main" "double[]"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.main"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.secondary" "double[]"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.secondary"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.cachedU" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedU"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.cachedB" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedB"
reference "org.apache.commons.math.linear.BiDiagonalTransformer.cachedV" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.BiDiagonalTransformer" "org.apache.commons.math.linear.BiDiagonalTransformer.cachedV"
reference "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformer.transform(1)" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.util.DefaultTransformer.transform(1)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
contain "org.apache.commons.math.util.DefaultTransformer" "org.apache.commons.math.util.DefaultTransformer.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.AbstractIntegrator"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.prototype"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.step"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.sanityChecks(5)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.c"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.isEmpty(0)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.prototype"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.stepStart"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.step"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.stepSize"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.stepHandlers"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.addEndTimeChecker(3)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.computeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.evaluateStep(1)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventTime(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stepAccepted(2)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.stop(0)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.sampling.StepHandler.handleStep(2)"
call "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)" "org.apache.commons.math.ode.events.CombinedEventsManager.reset(2)"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.b"
reference "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.prototype" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.prototype"
contain "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.step"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticB"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolator.DormandPrince54StepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.EmbeddedRungeKuttaIntegrator(10)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.getOrder(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.vecAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.scalAbsoluteTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.scalRelativeTolerance"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.estimateError(4)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.vecRelativeTolerance"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.estimateError(4)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.static {...}" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticB"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.METHOD_NAME"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticC" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticC"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticA" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticA"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticB" "double[]"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.staticB"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e1"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e3"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e4"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e5"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e6"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.e7"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve(2)" "org.apache.commons.math.analysis.MullerSolver.solve(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.solve(4)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(4)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(4)" "org.apache.commons.math.analysis.MullerSolver.verifySequence(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(4)" "org.apache.commons.math.analysis.MullerSolver.isBracketing(3)"
call "org.apache.commons.math.analysis.MullerSolver.solve(4)" "org.apache.commons.math.analysis.MullerSolver.solve(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(4)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.maximalIterationCount"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.isSequence(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.setResult(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.result"
reference "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.analysis.MullerSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.util.MathUtils.sign(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.f"
call "org.apache.commons.math.analysis.MullerSolver.solve2(2)" "org.apache.commons.math.analysis.MullerSolver.solve2(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
call "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.verifyBracketing(3)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.absoluteAccuracy"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.relativeAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.setResult(2)"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.result"
reference "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.analysis.MullerSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.MullerSolver.solve2(3)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.solve2(3)"
contain "org.apache.commons.math.analysis.MullerSolver" "org.apache.commons.math.analysis.MullerSolver.serialVersionUID"
contain "org.apache.commons.math.genetics.MutationPolicy" "org.apache.commons.math.genetics.MutationPolicy.mutate(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularMatrixException"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "double[][]"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.imagEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(3)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getEntry(1)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.imagEigenvalues"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.getInverse(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.Solver(4)"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.serialVersionUID"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.realEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.imagEigenvalues" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.imagEigenvalues"
reference "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors" "org.apache.commons.math.linear.RealVectorImpl[]"
contain "org.apache.commons.math.linear.EigenDecompositionImpl.Solver" "org.apache.commons.math.linear.EigenDecompositionImpl.Solver.eigenvectors"
reference "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.DiscreteDistribution"
reference "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.probability(1)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.IntegerDistribution" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(0)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(1)"
call "org.apache.commons.math.ConvergenceException.ConvergenceException(3)" "org.apache.commons.math.MathException.MathException(3)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.ConvergenceException(3)"
contain "org.apache.commons.math.ConvergenceException" "org.apache.commons.math.ConvergenceException.serialVersionUID"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.Product"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.StatUtils(0)"
reference "org.apache.commons.math.stat.StatUtils.sum(1)" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.sum(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtils.sum(3)" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.sum(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum(3)"
reference "org.apache.commons.math.stat.StatUtils.sumSq(1)" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.sumSq(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
reference "org.apache.commons.math.stat.StatUtils.sumSq(3)" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.sumSq(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq(3)"
reference "org.apache.commons.math.stat.StatUtils.product(1)" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.product(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.product(1)"
reference "org.apache.commons.math.stat.StatUtils.product(3)" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.product(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.product(3)"
reference "org.apache.commons.math.stat.StatUtils.sumLog(1)" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.sumLog(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
reference "org.apache.commons.math.stat.StatUtils.sumLog(3)" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.sumLog(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
reference "org.apache.commons.math.stat.StatUtils.mean(1)" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.mean(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean(1)"
reference "org.apache.commons.math.stat.StatUtils.mean(3)" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.mean(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean(3)"
reference "org.apache.commons.math.stat.StatUtils.geometricMean(1)" "org.apache.commons.math.stat.StatUtils.geometricMean"
call "org.apache.commons.math.stat.StatUtils.geometricMean(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean(1)"
reference "org.apache.commons.math.stat.StatUtils.geometricMean(3)" "org.apache.commons.math.stat.StatUtils.geometricMean"
call "org.apache.commons.math.stat.StatUtils.geometricMean(3)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean(3)"
reference "org.apache.commons.math.stat.StatUtils.variance(1)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtils.variance(3)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(3)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(3)"
reference "org.apache.commons.math.stat.StatUtils.variance(4)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(4)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(4)"
reference "org.apache.commons.math.stat.StatUtils.variance(2)" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.variance(2)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance(2)"
reference "org.apache.commons.math.stat.StatUtils.max(1)" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.max(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max(1)"
reference "org.apache.commons.math.stat.StatUtils.max(3)" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.max(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max(3)"
reference "org.apache.commons.math.stat.StatUtils.min(1)" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.min(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min(1)"
reference "org.apache.commons.math.stat.StatUtils.min(3)" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.min(3)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min(3)"
reference "org.apache.commons.math.stat.StatUtils.percentile(2)" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.percentile(2)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile(2)"
reference "org.apache.commons.math.stat.StatUtils.percentile(4)" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.percentile(4)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile(4)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
call "org.apache.commons.math.stat.StatUtils.meanDifference(2)" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sum"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sumSq"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.prod"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.sumLog"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.min"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.max"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.mean"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.variance"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.percentile"
call "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.StatUtils.static {...}" "org.apache.commons.math.stat.StatUtils.geometricMean"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.static {...}"
reference "org.apache.commons.math.stat.StatUtils.sum" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sum"
reference "org.apache.commons.math.stat.StatUtils.sumSq" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumSq"
reference "org.apache.commons.math.stat.StatUtils.prod" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.prod"
reference "org.apache.commons.math.stat.StatUtils.sumLog" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.sumLog"
reference "org.apache.commons.math.stat.StatUtils.min" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.min"
reference "org.apache.commons.math.stat.StatUtils.max" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.max"
reference "org.apache.commons.math.stat.StatUtils.mean" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.mean"
reference "org.apache.commons.math.stat.StatUtils.variance" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.variance"
reference "org.apache.commons.math.stat.StatUtils.percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.percentile"
reference "org.apache.commons.math.stat.StatUtils.geometricMean" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.StatUtils" "org.apache.commons.math.stat.StatUtils.geometricMean"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.events.CombinedEventsManager"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.events.EventState"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.AbstractIntegrator.name"
reference "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
reference "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.AbstractIntegrator.stepStart"
reference "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.AbstractIntegrator.stepSize"
call "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)" "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.AbstractIntegrator(1)"
reference "org.apache.commons.math.ode.AbstractIntegrator.getName(0)" "org.apache.commons.math.ode.AbstractIntegrator.name"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.getName(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.addStepHandler(1)" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.addStepHandler(1)"
reference "org.apache.commons.math.ode.AbstractIntegrator.getStepHandlers(0)" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.getStepHandlers(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.clearStepHandlers(0)" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.clearStepHandlers(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.AbstractIntegrator.addEventHandler(4)" "org.apache.commons.math.ode.events.CombinedEventsManager.addEventHandler(4)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.addEventHandler(4)"
reference "org.apache.commons.math.ode.AbstractIntegrator.getEventHandlers(0)" "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.AbstractIntegrator.getEventHandlers(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsHandlers(0)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.getEventHandlers(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.clearEventHandlers(0)" "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager"
call "org.apache.commons.math.ode.AbstractIntegrator.clearEventHandlers(0)" "org.apache.commons.math.ode.events.CombinedEventsManager.clearEventsHandlers(0)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.clearEventHandlers(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.requiresDenseOutput(0)" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
call "org.apache.commons.math.ode.AbstractIntegrator.requiresDenseOutput(0)" "org.apache.commons.math.ode.sampling.StepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.getCurrentStepStart(0)" "org.apache.commons.math.ode.AbstractIntegrator.stepStart"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.getCurrentStepStart(0)"
reference "org.apache.commons.math.ode.AbstractIntegrator.getCurrentSignedStepsize(0)" "org.apache.commons.math.ode.AbstractIntegrator.stepSize"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.getCurrentSignedStepsize(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.FirstOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.sanityChecks(5)" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.sanityChecks(5)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.CombinedEventsManager.CombinedEventsManager(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.CombinedEventsManager.getEventsStates(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.EventState.getEventHandler(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.EventState.getMaxCheckInterval(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.EventState.getConvergence(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.EventState.getMaxIterationCount(0)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.events.CombinedEventsManager.addEventHandler(4)"
call "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)" "org.apache.commons.math.ode.AbstractIntegrator.EndTimeChecker.EndTimeChecker(1)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.addEndTimeChecker(3)"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.serialVersionUID"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.name"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.stepHandlers"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.stepStart"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.stepSize"
reference "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager" "org.apache.commons.math.ode.events.CombinedEventsManager"
contain "org.apache.commons.math.ode.AbstractIntegrator" "org.apache.commons.math.ode.AbstractIntegrator.eventsHandlersManager"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummary" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getSum(0)"
reference "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction.derivative(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)" "org.apache.commons.math.util.ResizableDoubleArray.copy(2)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
call "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)" "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.clear(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.contract(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
call "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)" "org.apache.commons.math.util.ResizableDoubleArray.contract(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.discardExtremeElements(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.expand(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expand(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
call "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getValues(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.getInternalValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.getInternalValues(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.MathRuntimeException.createArrayIndexOutOfBoundsException(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setElement(2)"
call "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.checkContractExpand(2)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setInitialCapacity(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
call "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.expandTo(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.shouldContract(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.start(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.start(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.copy(2)"
call "org.apache.commons.math.util.ResizableDoubleArray.copy(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
call "org.apache.commons.math.util.ResizableDoubleArray.copy(0)" "org.apache.commons.math.util.ResizableDoubleArray.copy(2)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.copy(0)"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.util.ResizableDoubleArray.equals(1)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.equals(1)"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
reference "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.serialVersionUID"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.ADDITIVE_MODE"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.MULTIPLICATIVE_MODE"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.contractionCriteria"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expansionFactor"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.expansionMode"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.initialCapacity"
reference "org.apache.commons.math.util.ResizableDoubleArray.internalArray" "double[]"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.internalArray"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.numElements"
contain "org.apache.commons.math.util.ResizableDoubleArray" "org.apache.commons.math.util.ResizableDoubleArray.startIndex"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)" "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.append(1)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.append(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
reference "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.reset(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.isForward(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
reference "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(3)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
reference "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.ContinuousOutputModel.index"
call "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
call "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.locatePoint(2)"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.initialTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.finalTime"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.forward"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.index"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.steps"
contain "org.apache.commons.math.ode.ContinuousOutputModel" "org.apache.commons.math.ode.ContinuousOutputModel.serialVersionUID"
reference "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.HasDensity"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.setBeta(1)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistribution" "org.apache.commons.math.distribution.GammaDistribution.density(1)"
reference "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TTest" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
reference "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.util.CompositeFormat"
reference "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)" "org.apache.commons.math.geometry.Vector3DFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(1)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(1)"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(3)" "org.apache.commons.math.geometry.Vector3DFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(3)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(3)"
call "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.util.CompositeFormat.CompositeFormat(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.prefix"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.suffix"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.separator"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedPrefix"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSuffix"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSeparator"
reference "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)" "org.apache.commons.math.geometry.Vector3DFormat.format"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getAvailableLocales(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.getPrefix(0)" "org.apache.commons.math.geometry.Vector3DFormat.prefix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getPrefix(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.getSuffix(0)" "org.apache.commons.math.geometry.Vector3DFormat.suffix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getSuffix(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.getSeparator(0)" "org.apache.commons.math.geometry.Vector3DFormat.separator"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getSeparator(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.getFormat(0)" "org.apache.commons.math.geometry.Vector3DFormat.format"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.getInstance(0)" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(1)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.getInstance(1)" "org.apache.commons.math.geometry.Vector3DFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.geometry.Vector3DFormat.getInstance(1)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(1)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(1)"
call "org.apache.commons.math.geometry.Vector3DFormat.formatVector3D(1)" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.formatVector3D(1)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.formatVector3D(1)"
reference "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.prefix"
call "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.format"
call "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.formatDouble(4)"
reference "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.separator"
call "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
reference "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.suffix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.format(3)"
call "org.apache.commons.math.geometry.Vector3DFormat.format(3)" "org.apache.commons.math.geometry.Vector3DFormat.format(3)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.format(3)"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(1)" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(1)" "org.apache.commons.math.MathRuntimeException.createParseException(3)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.parse(1)"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.parseAndIgnoreWhitespace(2)"
reference "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedPrefix"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.parseFixedstring(3)"
reference "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.format"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.parseNumber(3)"
reference "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSeparator"
reference "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSuffix"
call "org.apache.commons.math.geometry.Vector3DFormat.parse(2)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
call "org.apache.commons.math.geometry.Vector3DFormat.parseObject(2)" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(2)"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.serialVersionUID"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.DEFAULT_PREFIX"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.DEFAULT_SUFFIX"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.DEFAULT_SEPARATOR"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.prefix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.suffix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.separator"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.trimmedPrefix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSuffix"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.trimmedSeparator"
contain "org.apache.commons.math.geometry.Vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat.format"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.AnovaStats(3)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.dfbg"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.AnovaStats(3)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.dfwg"
reference "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.AnovaStats(3)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.F"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.AnovaStats(3)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$000(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$100(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.access$200(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.dfbg"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.dfwg"
contain "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.AnovaStats.F"
reference "org.apache.commons.math.analysis.UnivariateRealInterpolator" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.analysis.UnivariateRealInterpolator" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
contain "org.apache.commons.math.genetics.Chromosome" "org.apache.commons.math.genetics.Chromosome.getFitness(0)"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.ProperFractionFormat"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.MathRuntimeException"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
reference "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
reference "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(2)"
call "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.formatFraction(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getAvailableLocales(0)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.FractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(0)" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(0)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)" "org.apache.commons.math.fraction.ProperFractionFormat.ProperFractionFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
call "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDefaultNumberFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.format(3)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.FractionFormat.format(3)"
call "org.apache.commons.math.fraction.FractionFormat.format(3)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.format(3)"
reference "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.parse(1)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(1)" "org.apache.commons.math.MathRuntimeException.createParseException(3)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionFormat.parse(2)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
call "org.apache.commons.math.fraction.FractionFormat.parseObject(2)" "org.apache.commons.math.fraction.FractionFormat.parse(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseObject(2)"
reference "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)"
reference "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseAndIgnoreWhitespace(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.parseNextCharacter(2)"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.serialVersionUID"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.denominatorFormat"
contain "org.apache.commons.math.fraction.FractionFormat" "org.apache.commons.math.fraction.FractionFormat.numeratorFormat"
reference "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
call "org.apache.commons.math.analysis.PolynomialFunction.value(1)" "org.apache.commons.math.analysis.PolynomialFunction.evaluate(2)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.degree(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
reference "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.evaluate(2)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.differentiate(1)"
reference "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
call "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.differentiate(1)"
call "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.serialVersionUID"
reference "org.apache.commons.math.analysis.PolynomialFunction.coefficients" "double[]"
contain "org.apache.commons.math.analysis.PolynomialFunction" "org.apache.commons.math.analysis.PolynomialFunction.coefficients"
reference "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.isForward(0)"
contain "org.apache.commons.math.ode.sampling.StepInterpolator" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(0)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(0)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaStepInterpolator.RungeKuttaStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.doCopy(0)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.GillStepInterpolator(1)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.doCopy(0)"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tMq"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tPq"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.interpolatedState"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.yDotK"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.currentState"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.interpolatedDerivatives"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.computeInterpolatedState(2)"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.static {...}" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tMq"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.static {...}" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tPq"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tMq"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.tPq"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolator" "org.apache.commons.math.ode.nonstiff.GillStepInterpolator.serialVersionUID"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.AbstractIntegerDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.AbstractIntegerDistribution.AbstractIntegerDistribution(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomainUpperBound(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getLowerDomain(3)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getUpperDomain(2)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setNumberOfSuccesses(1)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setPopulationSize(1)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.setSampleSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getNumberOfSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getSampleSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.getDomain(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.innerCumulativeProbability(6)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.numberOfSuccesses"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.populationSize"
contain "org.apache.commons.math.distribution.HypergeometricDistributionImpl" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.sampleSize"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(1)" "org.apache.commons.math.stat.descriptive.AbstractStorelessUnivariateStatistic.AbstractStorelessUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getN(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate(3)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.test(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
reference "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.copy(2)"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.n"
contain "org.apache.commons.math.stat.descriptive.summary.SumOfLogs" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.value"
reference "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.DimensionMismatchException.dimension1"
reference "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)" "org.apache.commons.math.DimensionMismatchException.dimension2"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
reference "org.apache.commons.math.DimensionMismatchException.getDimension1(0)" "org.apache.commons.math.DimensionMismatchException.dimension1"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
reference "org.apache.commons.math.DimensionMismatchException.getDimension2(0)" "org.apache.commons.math.DimensionMismatchException.dimension2"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.serialVersionUID"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.dimension1"
contain "org.apache.commons.math.DimensionMismatchException" "org.apache.commons.math.DimensionMismatchException.dimension2"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.{...}"
call "org.apache.commons.math.optimization.DirectSearchOptimizer.1.compare(2)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.compare(2)"
contain "org.apache.commons.math.optimization.DirectSearchOptimizer.1" "org.apache.commons.math.optimization.DirectSearchOptimizer.1.compare(2)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getQT(0)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getH(0)"
contain "org.apache.commons.math.linear.QRDecomposition" "org.apache.commons.math.linear.QRDecomposition.getSolver(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "double[]"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.RandomVectorGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.NormalizedRandomGenerator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "double[].clone(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(2)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)" "org.apache.commons.math.random.NormalizedRandomGenerator.nextNormalizedDouble(0)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator" "org.apache.commons.math.random.NormalizedRandomGenerator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.generator"
reference "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.HasDensity"
contain "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ExponentialDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ExponentialDistribution.getMean(0)"
contain "org.apache.commons.math.distribution.ExponentialDistribution" "org.apache.commons.math.distribution.ExponentialDistribution.density(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.distribution.ChiSquaredDistribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isPositive(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(3)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.distribution.ChiSquaredDistribution.cumulativeProbability(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isRectangular(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.checkArray(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isRectangular(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isPositive(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.isNonNegative(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.setDistribution(1)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution" "org.apache.commons.math.distribution.ChiSquaredDistribution"
contain "org.apache.commons.math.stat.inference.ChiSquareTestImpl" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.distribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.special.Gamma"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)" "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.inverseCumulativeProbability(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.setAlpha(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.setBeta(1)"
reference "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.density(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.density(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.density(1)" "org.apache.commons.math.special.Gamma.logGamma(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.density(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainLowerBound(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getDomainUpperBound(1)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)" "org.apache.commons.math.distribution.GammaDistributionImpl.getBeta(0)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.density(1)"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.GammaDistributionImpl" "org.apache.commons.math.distribution.GammaDistributionImpl.beta"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextHexString(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextInt(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextLong(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureHexString(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureInt(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSecureLong(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextPoisson(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextGaussian(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextExponential(1)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextUniform(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextPermutation(2)"
contain "org.apache.commons.math.random.RandomData" "org.apache.commons.math.random.RandomData.nextSample(2)"
reference "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.estimation.EstimationException.EstimationException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.estimation.EstimationException.EstimationException(2)"
contain "org.apache.commons.math.estimation.EstimationException" "org.apache.commons.math.estimation.EstimationException.serialVersionUID"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomData"
reference "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)" "org.apache.commons.math.random.RandomDataImpl.rand"
reference "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)" "org.apache.commons.math.random.RandomGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextInt(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextInt(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextLong(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextLong(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)" "org.apache.commons.math.random.RandomGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
call "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)" "org.apache.commons.math.random.RandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
reference "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.getRan(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getRan(0)"
reference "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getSecRan(0)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(1)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeed(1)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)"
reference "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.RandomDataImpl.rand"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.RandomDataImpl.reSeed(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.reSeed(0)"
reference "org.apache.commons.math.random.RandomDataImpl.setSecureAlgorithm(2)" "org.apache.commons.math.random.RandomDataImpl.secRand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.setSecureAlgorithm(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)" "org.apache.commons.math.random.RandomDataImpl.getNatural(1)"
call "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)" "org.apache.commons.math.random.RandomDataImpl.shuffle(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
call "org.apache.commons.math.random.RandomDataImpl.nextSample(2)" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.nextSample(2)"
call "org.apache.commons.math.random.RandomDataImpl.shuffle(2)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.shuffle(2)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.getNatural(1)"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.serialVersionUID"
reference "org.apache.commons.math.random.RandomDataImpl.rand" "org.apache.commons.math.random.RandomGenerator"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.rand"
contain "org.apache.commons.math.random.RandomDataImpl" "org.apache.commons.math.random.RandomDataImpl.secRand"
reference "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.AbstractContinuousDistribution"
reference "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistribution"
reference "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.special.Gamma"
reference "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.special.Beta"
call "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.AbstractContinuousDistribution(0)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.setAlpha(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.setAlpha(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.setAlpha(1)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.getAlpha(0)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.getAlpha(0)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.setBeta(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.setBeta(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.setBeta(1)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.getBeta(0)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.getBeta(0)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
call "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)" "org.apache.commons.math.special.Gamma.logGamma(1)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)"
call "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.recomputeZ(0)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
call "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)" "org.apache.commons.math.MathException.MathException(2)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)"
call "org.apache.commons.math.distribution.BetaDistributionImpl.inverseCumulativeProbability(1)" "org.apache.commons.math.distribution.AbstractContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.getInitialDomain(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.getDomainLowerBound(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.getDomainUpperBound(1)"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
reference "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
call "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(1)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(2)" "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.cumulativeProbability(2)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.density(1)"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.serialVersionUID"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.alpha"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.beta"
contain "org.apache.commons.math.distribution.BetaDistributionImpl" "org.apache.commons.math.distribution.BetaDistributionImpl.z"
reference "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.util.ContinuedFraction"
reference "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.special.Beta.1.val$b"
reference "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.special.Beta.1.val$a"
call "org.apache.commons.math.special.Beta.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.{...}"
reference "org.apache.commons.math.special.Beta.1.getB(2)" "org.apache.commons.math.special.Beta.1.val$b"
reference "org.apache.commons.math.special.Beta.1.getB(2)" "org.apache.commons.math.special.Beta.1.val$a"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.getB(2)"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.getA(2)"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.serialVersionUID"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.val$b"
contain "org.apache.commons.math.special.Beta.1" "org.apache.commons.math.special.Beta.1.val$a"
reference "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.util.ContinuedFraction"
reference "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma"
reference "org.apache.commons.math.special.Gamma.1.{...}" "org.apache.commons.math.special.Gamma.1.val$a"
call "org.apache.commons.math.special.Gamma.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.{...}"
reference "org.apache.commons.math.special.Gamma.1.getA(2)" "org.apache.commons.math.special.Gamma.1.val$a"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.getA(2)"
reference "org.apache.commons.math.special.Gamma.1.getB(2)" "org.apache.commons.math.special.Gamma.1.val$a"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.getB(2)"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.serialVersionUID"
contain "org.apache.commons.math.special.Gamma.1" "org.apache.commons.math.special.Gamma.1.val$a"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "double[]"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.b"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolator.MidpointStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)" "org.apache.commons.math.ode.nonstiff.RungeKuttaIntegrator.RungeKuttaIntegrator(6)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.static {...}" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.b"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.static {...}"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.c" "double[]"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.c"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.a" "double[][]"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.a"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.b" "double[]"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegrator" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.b"
reference "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.EstimationException"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.estimate(1)"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.getRMS(1)"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.getCovariances(1)"
contain "org.apache.commons.math.estimation.Estimator" "org.apache.commons.math.estimation.Estimator.guessParametersErrors(1)"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
reference "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.TransformerMap.map"
call "org.apache.commons.math.util.TransformerMap.TransformerMap(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.util.TransformerMap.containsClass(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
reference "org.apache.commons.math.util.TransformerMap.containsTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.getTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.putTransformer(2)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
reference "org.apache.commons.math.util.TransformerMap.removeTransformer(1)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.removeTransformer(1)"
reference "org.apache.commons.math.util.TransformerMap.clear(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.clear(0)"
reference "org.apache.commons.math.util.TransformerMap.classes(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.classes(0)"
reference "org.apache.commons.math.util.TransformerMap.transformers(0)" "org.apache.commons.math.util.TransformerMap.map"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.transformers(0)"
reference "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
call "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.NumberTransformer.transform(1)"
call "org.apache.commons.math.util.TransformerMap.transform(1)" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.transform(1)"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.serialVersionUID"
reference "org.apache.commons.math.util.TransformerMap.defaultTransformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.defaultTransformer"
contain "org.apache.commons.math.util.TransformerMap" "org.apache.commons.math.util.TransformerMap.map"
reference "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(1)" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSummary(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsq(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.toString(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.toString(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.equals(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.hashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumsqImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumsqImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumsqImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMinImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMinImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMinImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMaxImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMaxImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMaxImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumLogImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getSumLogImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumLogImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setSumLogImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeoMeanImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getGeoMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setGeoMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setGeoMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setGeoMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVarianceImpl(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.getVarianceImpl(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setVarianceImpl(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setVarianceImpl(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.setVarianceImpl(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.serialVersionUID"
reference "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.HasDensity"
reference "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.MathException"
contain "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.BetaDistribution.setAlpha(1)"
contain "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.BetaDistribution.getAlpha(0)"
contain "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.BetaDistribution.setBeta(1)"
contain "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.BetaDistribution.getBeta(0)"
contain "org.apache.commons.math.distribution.BetaDistribution" "org.apache.commons.math.distribution.BetaDistribution.density(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.UnivariateRealSolverFactory(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newDefaultSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newDefaultSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBisectionSolver(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBisectionSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newBrentSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newNewtonSolver(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newNewtonSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newSecantSolver(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.newSecantSolver(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getD(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getVT(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getImagEigenvalues(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getImagEigenvalue(1)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getEigenvector(1)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getDeterminant(0)"
contain "org.apache.commons.math.linear.EigenDecomposition" "org.apache.commons.math.linear.EigenDecomposition.getSolver(0)"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventException"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.handler"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.maxCheckInterval"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.convergence"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.maxIterationCount"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.t0"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.g0"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.g0Positive"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.pendingEvent"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.pendingEventTime"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.previousEventTime"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.increasing"
reference "org.apache.commons.math.ode.events.EventState.EventState(4)" "org.apache.commons.math.ode.events.EventState.nextAction"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.EventState(4)"
reference "org.apache.commons.math.ode.events.EventState.getEventHandler(0)" "org.apache.commons.math.ode.events.EventState.handler"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.getEventHandler(0)"
reference "org.apache.commons.math.ode.events.EventState.getMaxCheckInterval(0)" "org.apache.commons.math.ode.events.EventState.maxCheckInterval"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.getMaxCheckInterval(0)"
reference "org.apache.commons.math.ode.events.EventState.getConvergence(0)" "org.apache.commons.math.ode.events.EventState.convergence"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.getConvergence(0)"
reference "org.apache.commons.math.ode.events.EventState.getMaxIterationCount(0)" "org.apache.commons.math.ode.events.EventState.maxIterationCount"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.getMaxIterationCount(0)"
reference "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)" "org.apache.commons.math.ode.events.EventState.t0"
reference "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)" "org.apache.commons.math.ode.events.EventState.handler"
call "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)" "org.apache.commons.math.ode.events.EventHandler.g(2)"
reference "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)" "org.apache.commons.math.ode.events.EventState.g0"
reference "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)" "org.apache.commons.math.ode.events.EventState.g0Positive"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.reinitializeBegin(2)"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.t0"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.maxCheckInterval"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.g0"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.isForward(0)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.convergence"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.handler"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventHandler.g(2)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.g0Positive"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.increasing"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.1.{...}"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.analysis.BrentSolver.setAbsoluteAccuracy(1)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.maxIterationCount"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.analysis.BrentSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.analysis.BrentSolver.solve(3)"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.previousEventTime"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.pendingEventTime"
reference "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventState.pendingEvent"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.ode.events.EventState.evaluateStep(1)" "org.apache.commons.math.ode.events.EventException.EventException(1)"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.evaluateStep(1)"
reference "org.apache.commons.math.ode.events.EventState.getEventTime(0)" "org.apache.commons.math.ode.events.EventState.pendingEventTime"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.getEventTime(0)"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.t0"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.handler"
call "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventHandler.g(2)"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.g0"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.pendingEvent"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.previousEventTime"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.increasing"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.g0Positive"
call "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventHandler.eventOccurred(2)"
reference "org.apache.commons.math.ode.events.EventState.stepAccepted(2)" "org.apache.commons.math.ode.events.EventState.nextAction"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.stepAccepted(2)"
reference "org.apache.commons.math.ode.events.EventState.stop(0)" "org.apache.commons.math.ode.events.EventState.nextAction"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.stop(0)"
reference "org.apache.commons.math.ode.events.EventState.reset(2)" "org.apache.commons.math.ode.events.EventState.pendingEvent"
reference "org.apache.commons.math.ode.events.EventState.reset(2)" "org.apache.commons.math.ode.events.EventState.nextAction"
reference "org.apache.commons.math.ode.events.EventState.reset(2)" "org.apache.commons.math.ode.events.EventState.handler"
call "org.apache.commons.math.ode.events.EventState.reset(2)" "org.apache.commons.math.ode.events.EventHandler.resetState(2)"
reference "org.apache.commons.math.ode.events.EventState.reset(2)" "org.apache.commons.math.ode.events.EventState.pendingEventTime"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.reset(2)"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.access$000(1)"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.serialVersionUID"
reference "org.apache.commons.math.ode.events.EventState.handler" "org.apache.commons.math.ode.events.EventHandler"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.handler"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.maxCheckInterval"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.convergence"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.maxIterationCount"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.t0"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.g0"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.g0Positive"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.pendingEvent"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.pendingEventTime"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.previousEventTime"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.increasing"
contain "org.apache.commons.math.ode.events.EventState" "org.apache.commons.math.ode.events.EventState.nextAction"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means" "org.apache.commons.math.stat.descriptive.moment.Mean[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMean" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.means"
reference "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getMinimalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetMinimalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setRelativeAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getResult(0)"
contain "org.apache.commons.math.analysis.UnivariateRealIntegrator" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getIterationCount(0)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.events.EventException"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.ResetCheckingWrapper(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.this$0"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.ResetCheckingWrapper(1)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.ResetCheckingWrapper(1)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.eventOccurred(2)" "org.apache.commons.math.ode.events.EventHandler.eventOccurred(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.this$0"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.access$002(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.eventOccurred(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.g(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.g(2)" "org.apache.commons.math.ode.events.EventHandler.g(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.g(2)"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.resetState(2)" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler"
call "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.resetState(2)" "org.apache.commons.math.ode.events.EventHandler.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler" "org.apache.commons.math.ode.events.EventHandler"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.handler"
reference "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.this$0" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator"
contain "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper" "org.apache.commons.math.ode.nonstiff.MultistepIntegrator.ResetCheckingWrapper.this$0"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.SingularMatrixException"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "double[][]"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(3)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(3)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.isNonSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.isNonSingular(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.getDataRef(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.SingularMatrixException.SingularMatrixException(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImpl.Solver.getInverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.solve(1)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.getInverse(0)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.Solver(4)"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.serialVersionUID"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.lu"
reference "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot" "int[]"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.pivot"
contain "org.apache.commons.math.linear.LUDecompositionImpl.Solver" "org.apache.commons.math.linear.LUDecompositionImpl.Solver.singular"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.DimensionMismatchException.DimensionMismatchException(2)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.isBiasCorrected"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.clear(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums" "double[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.sums"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums" "double[]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.productsSums"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.isBiasCorrected"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.n"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.RealTransformer"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(4)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastCosineTransformer.fct(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.fct(1)"
contain "org.apache.commons.math.transform.FastCosineTransformer" "org.apache.commons.math.transform.FastCosineTransformer.serialVersionUID"
reference "org.apache.commons.math.linear.NonSquareMatrixException" "org.apache.commons.math.linear.InvalidMatrixException"
call "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
contain "org.apache.commons.math.linear.NonSquareMatrixException" "org.apache.commons.math.linear.NonSquareMatrixException.NonSquareMatrixException(2)"
contain "org.apache.commons.math.linear.NonSquareMatrixException" "org.apache.commons.math.linear.NonSquareMatrixException.serialVersionUID"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.getName(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.addStepHandler(1)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.getStepHandlers(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.clearStepHandlers(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.addEventHandler(4)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.getEventHandlers(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.getCurrentStepStart(0)"
contain "org.apache.commons.math.ode.ODEIntegrator" "org.apache.commons.math.ode.ODEIntegrator.getCurrentSignedStepsize(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetMaximalIterationCount(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetAbsoluteAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.resetFunctionValueAccuracy(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(4)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolver" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
reference "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
call "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.serialVersionUID"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.weight"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.measuredValue"
contain "org.apache.commons.math.estimation.WeightedMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement.ignored"
reference "org.apache.commons.math.distribution.DiscreteDistribution" "org.apache.commons.math.distribution.Distribution"
contain "org.apache.commons.math.distribution.DiscreteDistribution" "org.apache.commons.math.distribution.DiscreteDistribution.probability(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)" "org.apache.commons.math.MathRuntimeException.createIllegalStateException(2)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(2)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.clearResult(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.clearResult(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setAbsoluteAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setAbsoluteAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getAbsoluteAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetAbsoluteAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setMaximalIterationCount(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setMaximalIterationCount(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetMaximalIterationCount(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setRelativeAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setRelativeAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetRelativeAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setFunctionValueAccuracy(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.setFunctionValueAccuracy(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.getFunctionValueAccuracy(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyInterval(2)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifySequence(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isSequence(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifySequence(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyInterval(2)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.isBracketing(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.verifyBracketing(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.serialVersionUID"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.absoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.relativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.functionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.maximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultAbsoluteAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultRelativeAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultFunctionValueAccuracy"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.defaultMaximalIterationCount"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.resultComputed"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.result"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.iterationCount"
reference "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverImpl" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.f"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.util.ResizableDoubleArray"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.removeMostRecentValue(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.removeMostRecentValue(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.removeMostRecentValue(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(1)" "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)" "org.apache.commons.math.util.ResizableDoubleArray.clear(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getWindowSize(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)" "org.apache.commons.math.util.ResizableDoubleArray.getElements(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getValues(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSortedValues(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement(1)" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getElement(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.toString(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalValues(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.start(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.apply(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMeanImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMeanImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMeanImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMeanImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getGeometricMeanImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setGeometricMeanImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setGeometricMeanImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosisImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosisImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setKurtosisImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setKurtosisImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMaxImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMaxImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMaxImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMaxImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMinImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMinImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMinImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMinImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentileImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentileImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setPercentileImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setPercentileImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewnessImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewnessImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSkewnessImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSkewnessImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVarianceImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVarianceImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setVarianceImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setVarianceImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsqImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsqImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumsqImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumsqImpl(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumImpl(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumImpl(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumImpl(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setSumImpl(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.util.ResizableDoubleArray.copy(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.copy(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.windowSize"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA" "org.apache.commons.math.util.ResizableDoubleArray"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.eDA"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.meanImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.geometricMeanImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.kurtosisImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.maxImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.minImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.percentileImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.skewnessImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.varianceImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumsqImpl"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.sumImpl"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatistics" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.INFINITE_WINDOW"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.GLSMultipleLinearRegression(0)" "org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression.AbstractMultipleLinearRegression(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.GLSMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.validateSampleData(2)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newYSampleData(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newXSampleData(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.validateCovarianceData(2)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newCovarianceData(1)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newCovarianceData(1)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newCovarianceData(1)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.Omega"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newCovarianceData(1)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.OmegaInverse"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newCovarianceData(1)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.OmegaInverse"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.Omega"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.Y"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBeta(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateBetaVariance(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateResiduals(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.getOmegaInverse(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.X"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.calculateYVariance(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.Omega" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.Omega"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.OmegaInverse" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.OmegaInverse"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.UnivariateRealSolverImpl"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(3)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)" "org.apache.commons.math.analysis.UnivariateRealSolverImpl.UnivariateRealSolverImpl(2)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.f"
call "org.apache.commons.math.analysis.BrentSolver.solve(2)" "org.apache.commons.math.analysis.BrentSolver.solve(3)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.f"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.solve(4)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolver.solve(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(4)" "org.apache.commons.math.analysis.BrentSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(4)" "org.apache.commons.math.analysis.BrentSolver.setResult(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(4)" "org.apache.commons.math.analysis.BrentSolver.result"
call "org.apache.commons.math.analysis.BrentSolver.solve(4)" "org.apache.commons.math.analysis.BrentSolver.solve(7)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(4)"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.clearResult(0)"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.verifyInterval(2)"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.setResult(2)"
call "org.apache.commons.math.analysis.BrentSolver.solve(3)" "org.apache.commons.math.analysis.BrentSolver.solve(7)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(3)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.maximalIterationCount"
reference "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.functionValueAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.setResult(2)"
reference "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.result"
reference "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.relativeAccuracy"
reference "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.BrentSolver.absoluteAccuracy"
call "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.BrentSolver.solve(7)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.solve(7)"
contain "org.apache.commons.math.analysis.BrentSolver" "org.apache.commons.math.analysis.BrentSolver.serialVersionUID"
reference "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.MathException"
call "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)" "org.apache.commons.math.MathException.MathException(2)"
contain "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.ode.IntegratorException.IntegratorException(2)"
call "org.apache.commons.math.ode.IntegratorException.IntegratorException(1)" "org.apache.commons.math.MathException.MathException(1)"
contain "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.ode.IntegratorException.IntegratorException(1)"
contain "org.apache.commons.math.ode.IntegratorException" "org.apache.commons.math.ode.IntegratorException.serialVersionUID"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TTestImpl"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.OneWayAnovaImpl"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TTest"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.ChiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.OneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.TestUtils(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.setChiSquareTest(1)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.setChiSquareTest(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.setChiSquareTest(1)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.setChiSquareTest(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.getChiSquareTest(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.setUnknownDistributionChiSquareTest(1)" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.setUnknownDistributionChiSquareTest(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.getUnknownDistributionChiSquareTest(0)" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getUnknownDistributionChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.setOneWayAnova(1)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.setOneWayAnova(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.getOneWayAnova(0)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.getOneWayAnova(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.t(2)" "org.apache.commons.math.stat.inference.TTest.t(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(3)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.tTest(2)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquare(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(2)"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(3)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTestDataSetsComparison(3)"
reference "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaFValue(1)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
call "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaFValue(1)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaFValue(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaPValue(1)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
call "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaPValue(1)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue(1)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaPValue(1)"
reference "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaTest(2)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
call "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaTest(2)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaTest(2)"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.tTest"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
call "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.OneWayAnovaImpl(0)"
reference "org.apache.commons.math.stat.inference.TestUtils.static {...}" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.static {...}"
reference "org.apache.commons.math.stat.inference.TestUtils.tTest" "org.apache.commons.math.stat.inference.TTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.tTest"
reference "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest" "org.apache.commons.math.stat.inference.ChiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.unknownDistributionChiSquareTest"
reference "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova" "org.apache.commons.math.stat.inference.OneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtils" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnova"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
reference "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(2)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.fft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.subtract(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.complex.Complex.multiply(1)"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
reference "org.apache.commons.math.transform.FastFourierTransformer.fft(1)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.fft(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
reference "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
reference "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.transform.FastFourierTransformer.omega"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.computeOmega(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.sample(4)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.sample(4)" "org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.sample(4)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.sample(4)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.transform.FastFourierTransformer.isPowerOf2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyDataSet(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(2)" "org.apache.commons.math.MathRuntimeException.createIllegalArgumentException(2)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.verifyInterval(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.MultiDimensionalComplexMatrix(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.clone(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getDimensionSizes(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)" "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getArray(0)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.getDimensionSizes(0)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.get(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.MultiDimensionalComplexMatrix.set(2)"
call "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)" "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.mdfft(4)"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.serialVersionUID"
reference "org.apache.commons.math.transform.FastFourierTransformer.omega" "org.apache.commons.math.complex.Complex[]"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.omega"
contain "org.apache.commons.math.transform.FastFourierTransformer" "org.apache.commons.math.transform.FastFourierTransformer.omegaCount"
reference "org.apache.commons.math.distribution.ZipfDistribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.ZipfDistribution" "org.apache.commons.math.distribution.ZipfDistribution.getNumberOfElements(0)"
contain "org.apache.commons.math.distribution.ZipfDistribution" "org.apache.commons.math.distribution.ZipfDistribution.setNumberOfElements(1)"
contain "org.apache.commons.math.distribution.ZipfDistribution" "org.apache.commons.math.distribution.ZipfDistribution.getExponent(0)"
contain "org.apache.commons.math.distribution.ZipfDistribution" "org.apache.commons.math.distribution.ZipfDistribution.setExponent(1)"
reference "org.apache.commons.math.ode.sampling.FixedStepHandler" "org.apache.commons.math.ode.DerivativeException"
contain "org.apache.commons.math.ode.sampling.FixedStepHandler" "org.apache.commons.math.ode.sampling.FixedStepHandler.handleStep(4)"
reference "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest"
call "org.apache.commons.math.stat.data.LotteryTest.LotteryTest(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
contain "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.LotteryTest.LotteryTest(0)"
contain "org.apache.commons.math.stat.data.LotteryTest" "org.apache.commons.math.stat.data.LotteryTest.getResourceName(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizer"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.StepNormalizerTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.StepNormalizerTest(1)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.StepNormalizerTest(1)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.StepNormalizerTest(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.{...}"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.lastSeen"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBoundaries(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.{...}"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizer.StepNormalizer(2)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.lastSeen"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.testBeforeEnd(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.checkValue(2)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.assertTrue(1)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.checkValue(2)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.lastSeen"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.suite(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.lastSeen"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setUp(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.tearDown(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.tearDown(0)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.tearDown(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ" "org.apache.commons.math.ode.FirstOrderIntegrator"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.integ"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest" "org.apache.commons.math.ode.sampling.StepNormalizerTest.lastSeen"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.getPartial(1)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.index"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.serialVersionUID"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.this$0"
reference "org.apache.commons.math.geometry.RotationOrderTest" "org.apache.commons.math.geometry.RotationOrder"
reference "org.apache.commons.math.geometry.RotationOrderTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.geometry.RotationOrderTest" "junit.framework.TestCase"
call "org.apache.commons.math.geometry.RotationOrderTest.RotationOrderTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.geometry.RotationOrderTest" "org.apache.commons.math.geometry.RotationOrderTest.RotationOrderTest(1)"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
call "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrderTest.getFieldName(1)"
call "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrder.toString(0)"
call "org.apache.commons.math.geometry.RotationOrderTest.testName(0)" "org.apache.commons.math.geometry.RotationOrderTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.RotationOrderTest" "org.apache.commons.math.geometry.RotationOrderTest.testName(0)"
contain "org.apache.commons.math.geometry.RotationOrderTest" "org.apache.commons.math.geometry.RotationOrderTest.getFieldName(1)"
call "org.apache.commons.math.geometry.RotationOrderTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.geometry.RotationOrderTest" "org.apache.commons.math.geometry.RotationOrderTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.this$0"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.EstimatedParameterTest" "junit.framework.TestCase"
call "org.apache.commons.math.estimation.EstimatedParameterTest.EstimatedParameterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.EstimatedParameterTest(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testConstruction(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.isBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)" "org.apache.commons.math.estimation.EstimatedParameter.setBound(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testBound(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.testEstimate(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.suite(0)"
call "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)" "org.apache.commons.math.estimation.EstimatedParameterTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.EstimatedParameterTest" "org.apache.commons.math.estimation.EstimatedParameterTest.checkValue(2)"
reference "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.SinFunction.1.{...}" "org.apache.commons.math.analysis.SinFunction.1.this$0"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.{...}"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.value(1)"
reference "org.apache.commons.math.analysis.SinFunction.1.this$0" "org.apache.commons.math.analysis.SinFunction"
contain "org.apache.commons.math.analysis.SinFunction.1" "org.apache.commons.math.analysis.SinFunction.1.this$0"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.this$0"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextBoolean(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextBytes(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextFloat(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextGaussian(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextInt(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextInt(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.nextLong(0)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.setSeed(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.firstTime"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.minStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.maxStep"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.getResiduals(0)"
reference "org.apache.commons.math.util.TestBean" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.util.TestBean.TestBean(0)" "org.apache.commons.math.util.TestBean.x"
reference "org.apache.commons.math.util.TestBean.TestBean(0)" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.TestBean(0)"
reference "org.apache.commons.math.util.TestBean.getX(0)" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getX(0)"
reference "org.apache.commons.math.util.TestBean.getY(0)" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getY(0)"
reference "org.apache.commons.math.util.TestBean.setX(1)" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setX(1)"
reference "org.apache.commons.math.util.TestBean.setY(1)" "org.apache.commons.math.util.TestBean.y"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setY(1)"
call "org.apache.commons.math.util.TestBean.getZ(0)" "org.apache.commons.math.MathRuntimeException.MathRuntimeException(2)"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.getZ(0)"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.setZ(1)"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.x"
contain "org.apache.commons.math.util.TestBean" "org.apache.commons.math.util.TestBean.y"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.nbSteps"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.pb"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.DummyEquations(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.serialVersionUID"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "double[]"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrix"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "double[][]"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.DecompositionSolver"
call "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataLU"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlus2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataMinus"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataCol3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2T"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlusInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.luData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.singular"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.detData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.detData2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows02Cols13"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows31Cols31"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows23Cols00"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.normTolerance"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.d3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)" "org.apache.commons.math.linear.SparseRealMatrixTest.d5"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.SparseRealMatrixTest(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.setUp(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.suite(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertTrue(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDimensions(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.SparseRealMatrix.copy(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertTrue(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlusInv"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrix.add(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testAdd(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.SparseRealMatrix.add(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testAddFail(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrix.getNorm(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testNorm(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrix.scalarMultiply(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrix.add(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d5"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(4)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testTrace(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlus2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testOperate(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testMath209(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.normTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2T"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testTranspose(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.normTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.getData(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.d5"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataCol3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetEntry(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testExamples(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows23Cols00"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows02Cols13"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows31Cols31"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testSubMatrix(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow0"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetRowVector(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn1"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.columnToVector(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testGetColumnVector(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.columnToVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.columnToVector(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrix.copy(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrix.transpose(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrix.hashCode(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertTrue(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrix.equals(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertFalse(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.SparseRealMatrix.toString(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testToString(0)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.detData2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrix.setSubMatrix(3)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(2)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlus2"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertTrue(2)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)" "org.apache.commons.math.linear.SparseRealMatrixTest.fail(1)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)" "org.apache.commons.math.linear.SparseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.assertClose(4)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)" "org.apache.commons.math.linear.SparseRealMatrix.SparseRealMatrix(2)"
call "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)" "org.apache.commons.math.linear.SparseRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.createSparseMatrix(1)"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.id" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.id"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testData" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataLU"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlus2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataMinus"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataCol3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testData2T"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testDataPlusInv"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.luData" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.luData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.singular" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.singular"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.bigSingular"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.detData" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.detData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.detData2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testVector" "double[]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.testVector2"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subTestData"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows02Cols13"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows31Cols31"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows23Cols00"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subRow3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.subColumn3"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.entryTolerance"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.normTolerance"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.d3" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.d3"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.d4" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.SparseRealMatrixTest.d5" "double[][]"
contain "org.apache.commons.math.linear.SparseRealMatrixTest" "org.apache.commons.math.linear.SparseRealMatrixTest.d5"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.PolynomialFunctionNewtonFormTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.PolynomialFunctionNewtonFormTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonForm.PolynomialFunctionNewtonForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest" "org.apache.commons.math.analysis.PolynomialFunctionNewtonFormTest.testParameters(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "double[]"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)" "double[].clone(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.copy(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.copy(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.add(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.add(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.subtract(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAdd(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAdd(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAddToSelf(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAddToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSubtract(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSubtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSubtractToSelf(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSubtractToSelf(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapMultiply(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapMultiply(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapMultiplyToSelf(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapMultiplyToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapDivide(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapDivideToSelf(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapDivideToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapPow(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapPow(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapPowToSelf(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapPowToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExp(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExp(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpm1(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpm1(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpm1ToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapExpm1ToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLogToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLogToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog10(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog10(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog10ToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog10ToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog1p(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog1p(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog1pToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapLog1pToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCosh(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCosh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCoshToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCoshToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinh(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinhToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinhToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanh(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanhToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanhToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCos(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCos(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCosToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCosToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSin(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSin(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSinToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTan(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTan(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapTanToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAcos(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAcos(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAcosToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAcosToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAsin(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAsin(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAsinToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAsinToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAtan(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAtan(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAtanToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAtanToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapInv(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapInv(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapInvToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapInvToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAbs(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAbs(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAbsToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapAbsToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSqrt(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSqrt(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSqrtToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSqrtToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCbrt(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCbrt(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCbrtToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCbrtToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCeil(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCeil(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCeilToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapCeilToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapFloor(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapFloor(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapFloorToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapFloorToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapRint(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapRint(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapRintToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapRintToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSignum(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSignum(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSignumToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapSignumToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapUlp(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapUlp(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapUlpToSelf(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.mapUlpToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeMultiply(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeDivide(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.ebeDivide(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getData(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getData(0)" "double[].clone(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getData(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.dotProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.dotProduct(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getNorm(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getNorm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Norm(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Norm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfNorm(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfNorm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDistance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Distance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfDistance(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unitVector(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unitVector(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unitize(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unitize(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.projection(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.outerProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.outerProduct(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.outerProduct(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getEntry(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getEntry(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDimension(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.get(2)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.get(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(1)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.set(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.toArray(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.toArray(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.isNaN(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.isNaN(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.isInfinite(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.unsupported(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.isInfinite(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.serialVersionUID"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.data"
reference "org.apache.commons.math.random.RandomAdaptorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptor"
reference "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomDataTest"
call "org.apache.commons.math.random.RandomAdaptorTest.RandomAdaptorTest(1)" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.RandomAdaptorTest(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.suite(0)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptorTest.ConstantGenerator.ConstantGenerator(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.createAdaptor(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)"
call "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)" "org.apache.commons.math.random.RandomAdaptor.RandomAdaptor(1)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.testAdaptor(0)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(3)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(3)"
call "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)" "org.apache.commons.math.random.RandomAdaptorTest.assertEquals(2)"
contain "org.apache.commons.math.random.RandomAdaptorTest" "org.apache.commons.math.random.RandomAdaptorTest.checkConstant(1)"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionImpl"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "double[]"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistribution"
reference "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.HypergeometricDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.HypergeometricDistributionTest(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoFailures(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateNoSuccesses(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testDegenerateFullSample(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistribution.setPopulationSize(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.fail(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistribution.getPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testPopulationSize(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testLargeValues(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testLargeValues(0)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.HypergeometricDistributionImpl(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.probability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)" "org.apache.commons.math.distribution.HypergeometricDistributionImpl.upperCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
call "org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues(0)" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testHypergeometricDistributionProbabilities(4)"
contain "org.apache.commons.math.distribution.HypergeometricDistributionTest" "org.apache.commons.math.distribution.HypergeometricDistributionTest.testMoreLargeValues(0)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverter"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
call "org.apache.commons.math.ode.FirstOrderConverterTest.FirstOrderConverterTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.FirstOrderConverterTest(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverter.getDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.SecondOrderDifferentialEquations.getDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testDoubleDimension(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testSmallStep(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.assertTrue(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.testBigStep(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.suite(0)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.FirstOrderConverter.FirstOrderConverter(1)"
call "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest" "org.apache.commons.math.ode.FirstOrderConverterTest.integrateWithSpecifiedStep(4)"
reference "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics"
reference "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.SynchronizedSummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.SynchronizedSummaryStatisticsTest(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.createSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatistics.SynchronizedSummaryStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedSummaryStatisticsTest.createSummaryStatistics(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.OneWayAnovaImpl"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "long[]"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "double[]"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtils"
reference "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.OneWayAnova"
call "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
call "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.classA"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.classB"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.classC"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.classes"
call "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.OneWayAnovaImpl(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)" "org.apache.commons.math.stat.inference.TestUtilsTest.oneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.TestUtilsTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.setUp(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.suite(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquare(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareIndependence(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareLargeTestStatistic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquare(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.TestUtils.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testChiSquareZeroCount(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleT(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testOneSampleTTest(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHeterscedastic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtils.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testTwoSampleTHomoscedastic(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtils.t(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TestUtils.tTest(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testSmallSamples(0)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedT(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtils.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertFalse(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testPaired(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.classes"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.classA"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.classB"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.classC"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.oneWayAnova"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaFValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaPValue(1)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtils.oneWayAnovaTest(2)"
call "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)" "org.apache.commons.math.stat.inference.TestUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.testOneWayAnovaUtils(0)"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.classA" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.classA"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.classB" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.classB"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.classC" "double[]"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.classC"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.classes"
reference "org.apache.commons.math.stat.inference.TestUtilsTest.oneWayAnova" "org.apache.commons.math.stat.inference.OneWayAnova"
contain "org.apache.commons.math.stat.inference.TestUtilsTest" "org.apache.commons.math.stat.inference.TestUtilsTest.oneWayAnova"
reference "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest"
call "org.apache.commons.math.stat.data.LewTest.LewTest(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
contain "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.LewTest.LewTest(0)"
contain "org.apache.commons.math.stat.data.LewTest" "org.apache.commons.math.stat.data.LewTest.getResourceName(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
call "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.cost(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0" "org.apache.commons.math.optimization.MultiDirectionalTest"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.2" "org.apache.commons.math.optimization.MultiDirectionalTest.2.this$0"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.3" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.3" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.3.{...}" "org.apache.commons.math.optimization.MultiDirectionalTest.3.this$0"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.3" "org.apache.commons.math.optimization.MultiDirectionalTest.3.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.3.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.3.this$0"
call "org.apache.commons.math.optimization.MultiDirectionalTest.3.cost(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.3" "org.apache.commons.math.optimization.MultiDirectionalTest.3.cost(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.3.this$0" "org.apache.commons.math.optimization.MultiDirectionalTest"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.3" "org.apache.commons.math.optimization.MultiDirectionalTest.3.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.WatsonFunction" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.getResiduals(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}" "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}"
call "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)" "org.apache.commons.math.optimization.CostException.CostException(2)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)" "org.apache.commons.math.optimization.CostException.CostException(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.cost(1)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0" "org.apache.commons.math.optimization.MultiDirectionalTest"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.1" "org.apache.commons.math.optimization.MultiDirectionalTest.1.this$0"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionImpl"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistribution"
reference "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.GammaDistributionTest.GammaDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.GammaDistributionTest(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.setUp(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.setUp(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.getAlpha(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.setAlpha(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.getBeta(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistribution.setBeta(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)" "org.apache.commons.math.distribution.GammaDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testParameterAccessors(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbabilities(0)" "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testProbabilities(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValues(0)" "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testValues(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testProbability(4)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testValue(4)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.GammaDistributionTest.checkDensity(4)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testDensity(0)"
call "org.apache.commons.math.distribution.GammaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.GammaDistributionImpl.GammaDistributionImpl(2)"
call "org.apache.commons.math.distribution.GammaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.GammaDistribution.density(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.GammaDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.checkDensity(4)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.GammaDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.GammaDistributionTest" "org.apache.commons.math.distribution.GammaDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.Median"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.MedianTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.MedianTest(1)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MedianTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Median.Median(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MedianTest.median"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MedianTest.stat" "org.apache.commons.math.stat.descriptive.rank.Median"
contain "org.apache.commons.math.stat.descriptive.rank.MedianTest" "org.apache.commons.math.stat.descriptive.rank.MedianTest.stat"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.DormandPrince54StepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.DormandPrince54StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.testClone(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54StepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.stat.CertifiedDataTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.CertifiedDataTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
reference "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)" "org.apache.commons.math.stat.CertifiedDataTest.std"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.CertifiedDataTest(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.setUp(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.suite(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.assertEquals(4)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
call "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.testSummaryStatistics(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.assertEquals(4)"
reference "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
call "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.testDescriptiveStatistics(0)"
reference "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.CertifiedDataTest.mean"
reference "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.CertifiedDataTest.std"
call "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.loadStats(2)"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.mean"
contain "org.apache.commons.math.stat.CertifiedDataTest" "org.apache.commons.math.stat.CertifiedDataTest.std"
reference "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionImpl"
reference "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
call "org.apache.commons.math.distribution.ZipfDistributionTest.ZipfDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.ZipfDistributionTest(1)"
call "org.apache.commons.math.distribution.ZipfDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.ZipfDistributionImpl.ZipfDistributionImpl(2)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.ZipfDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ZipfDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ZipfDistributionTest" "org.apache.commons.math.distribution.ZipfDistributionTest.makeInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.HighamHall54IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.HighamHall54IntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testWrongDerivative(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEvents(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsErrors(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.fail(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.IntegratorException.getCause(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testEventsNoConvergence(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.fail(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testSanityChecks(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.suite(0)"
reference "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest"
call "org.apache.commons.math.complex.FrenchComplexFormatTest.FrenchComplexFormatTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.FrenchComplexFormatTest(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.complex.FrenchComplexFormatTest" "org.apache.commons.math.complex.FrenchComplexFormatTest.getLocale(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.m"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.static {...}" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne2Function" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.y"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.util.NumberTransformer.transform(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)" "org.apache.commons.math.MathException.printStackTrace(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getElement(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.clear(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.clear(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getValues(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.apply(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getTransformer(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getTransformer(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setTransformer(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setTransformer(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getWindowSize(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.windowSize"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getWindowSize(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.list"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer" "org.apache.commons.math.util.NumberTransformer"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImpl" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.transformer"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.BisectionSolverTest.BisectionSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.BisectionSolverTest(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setFunctionValueAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetFunctionValueAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setAbsoluteAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setMaximalIterationCount(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetMaximalIterationCount(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testResetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.BisectionSolver(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.solve(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.BisectionSolver.resetRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.BisectionSolverTest" "org.apache.commons.math.analysis.BisectionSolverTest.testSerialization(0)"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.MidpointStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.MidpointStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.MidpointStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaException"
reference "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.DuplicateSampleAbscissaExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.DuplicateSampleAbscissaExceptionTest(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.DuplicateSampleAbscissaException(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getCause(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertNull(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getMessage(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertTrue(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getDuplicateAbscissa(0)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertEquals(3)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaException.getMessage(1)"
call "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest" "org.apache.commons.math.DuplicateSampleAbscissaExceptionTest.testConstructor(0)"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BardFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.MinpackTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.MinpackTest" "junit.framework.TestCase"
reference "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
call "org.apache.commons.math.estimation.MinpackTest.MinpackTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.MinpackTest(1)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearFullRank(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackRosenbrok(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackHelicalValley(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackPowellSingular(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackFreudensteinRoth(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBard(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackKowalikOsborne(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackMeyer(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)" "org.apache.commons.math.estimation.MinpackTest.WatsonFunction.WatsonFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackWatson(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBox3Dimensional(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackJennrichSampson(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownDennis(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackChebyquad(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)" "org.apache.commons.math.estimation.MinpackTest.BrownAlmostLinearFunction.BrownAlmostLinearFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackBrownAlmostLinear(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne1(0)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne2Function.Osborne2Function(4)"
call "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.testMinpackOsborne2(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.assertTrue(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.assertFalse(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)"
call "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.minpackTest(2)"
call "org.apache.commons.math.estimation.MinpackTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.MinpackTest" "org.apache.commons.math.estimation.MinpackTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.1" "org.apache.commons.math.linear.DenseRealMatrixTest"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer.BarTransformer(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer.transform(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.heresBar(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer.transform(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer.serialVersionUID"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.converged(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.threshold"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.RandomDataTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.RandomDataTest" "int[]"
reference "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.RetryTestCase"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.expected"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.hex"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
reference "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.setUp(0)"
call "org.apache.commons.math.random.RandomDataTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.RandomDataTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.suite(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.assertFalse(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextIntExtremeValues(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)" "org.apache.commons.math.random.RandomDataTest.assertFalse(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextLongExtremeValues(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataImpl.nextInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextInt(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextLong(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureLong(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureInt(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.random.RandomDataTest.expected"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureInt(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataImpl.nextPoisson(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextPoisson(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataImpl.nextHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.hex"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextHex(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextHex(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.hex"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSecureHex(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextUniform(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextUniformExclusiveEndpoints(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataImpl.nextGaussian(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextGaussian(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataImpl.nextExponential(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
reference "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
call "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextExponential(0)"
reference "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeed(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeed(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataTest.assertEquals(4)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureHexString(1)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.reSeedSecure(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextLong(2)"
call "org.apache.commons.math.random.RandomDataTest.testConfig(0)" "org.apache.commons.math.random.RandomDataImpl.nextSecureLong(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testConfig(0)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataImpl.nextSample(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.findSample(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextSample(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextSample(0)"
call "org.apache.commons.math.random.RandomDataTest.findSample(2)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.findSample(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.randomData"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.findPerm(2)"
reference "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.testStatistic"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.assertTrue(2)"
call "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testNextPermutation(0)"
call "org.apache.commons.math.random.RandomDataTest.findPerm(2)" "org.apache.commons.math.random.RandomDataTest.fail(1)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.findPerm(2)"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.smallSampleSize"
reference "org.apache.commons.math.random.RandomDataTest.expected" "double[]"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.expected"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.largeSampleSize"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.hex"
reference "org.apache.commons.math.random.RandomDataTest.randomData" "org.apache.commons.math.random.RandomDataImpl"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.randomData"
reference "org.apache.commons.math.random.RandomDataTest.testStatistic" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
contain "org.apache.commons.math.random.RandomDataTest" "org.apache.commons.math.random.RandomDataTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.util.TransformerMap"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer.FooTransformer(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.BarTransformer.BarTransformer(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.MixedListUnivariateImplTest(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.setUp(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testStats(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testN0andN1Conditions(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addObject(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.Foo(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.Bar(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testSkewAndKurtosis(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(2)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.testProductAndGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.two"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.three"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.var"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.std"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.n"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.min"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.max"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers" "org.apache.commons.math.util.TransformerMap"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.transformers"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.Foo(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.heresFoo(0)"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionImpl"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistribution"
reference "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.FDistributionTest.FDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.FDistributionTest(1)"
call "org.apache.commons.math.distribution.FDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.FDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.FDistributionTest.setUp(0)" "org.apache.commons.math.distribution.FDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.setUp(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.FDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.getNumeratorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.setNumeratorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.getDenominatorDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistribution.setDenominatorDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.FDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testDfAccessors(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testLargeDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.FDistributionImpl(2)"
call "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)" "org.apache.commons.math.distribution.FDistributionImpl.setDenominatorDegreesOfFreedom(1)"
contain "org.apache.commons.math.distribution.FDistributionTest" "org.apache.commons.math.distribution.FDistributionTest.testSmallDegreesOfFreedom(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "junit.framework.TestCase.TestCase(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.UnivariateRealSolverUtilsTest(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveBadParameters(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveSin(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracyNull(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveAccuracySin(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testSolveNoRoot(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketSin(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBracketCornerSolution(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(4)"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.fail(1)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
call "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.bracket(5)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.testBadParameters(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtilsTest.sin"
reference "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.FunctionEvaluationExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.FunctionEvaluationExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.FunctionEvaluationExceptionTest(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertTrue(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationException.getArgument(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(3)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructor(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(3)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertNull(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getPattern(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(1)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(4)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getPattern(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getArguments(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(1)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorPatternArgumentsCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationException.FunctionEvaluationException(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationException.getCause(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(0)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationException.getMessage(1)"
call "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)" "org.apache.commons.math.FunctionEvaluationExceptionTest.assertTrue(1)"
contain "org.apache.commons.math.FunctionEvaluationExceptionTest" "org.apache.commons.math.FunctionEvaluationExceptionTest.testConstructorArgumentCause(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.LinearRank1ZeroColsAndRowsFunction(3)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction" "org.apache.commons.math.estimation.MinpackTest.LinearRank1ZeroColsAndRowsFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestTest"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TestUtils"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.TTestFactoryTest(1)" "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.TTestFactoryTest(1)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TTestTest.setUp(0)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TestUtils.getTTest(0)"
reference "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TTestFactoryTest.testStatistic"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.setUp(0)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TTestFactoryTest" "org.apache.commons.math.stat.inference.TTestFactoryTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.util.NumberTransformer"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer.FooTransformer(0)"
call "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer.transform(1)" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Foo.heresFoo(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer.transform(1)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.FooTransformer.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.SkewnessTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.SkewnessTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.skew"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.assertFalse(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.testNaN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.stat" "org.apache.commons.math.stat.descriptive.moment.Skewness"
contain "org.apache.commons.math.stat.descriptive.moment.SkewnessTest" "org.apache.commons.math.stat.descriptive.moment.SkewnessTest.stat"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.GammaTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.Gamma"
reference "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.special.GammaTest.GammaTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.GammaTest(1)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.Gamma.regularizedGammaP(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.Gamma.regularizedGammaQ(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)" "org.apache.commons.math.special.GammaTest.fail(1)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
call "org.apache.commons.math.special.GammaTest.testLogGamma(2)" "org.apache.commons.math.special.Gamma.logGamma(1)"
call "org.apache.commons.math.special.GammaTest.testLogGamma(2)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaNanPositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaNanPositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNan(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNan(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaNegativePositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaNegativePositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNegative(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveNegative(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaZeroPositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaZeroPositive(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveZero(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositiveZero(0)"
call "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(0)" "org.apache.commons.math.special.GammaTest.testRegularizedGamma(3)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testRegularizedGammaPositivePositive(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaNan(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaNan(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaNegative(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaNegative(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaZero(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaZero(0)"
call "org.apache.commons.math.special.GammaTest.testLogGammaPositive(0)" "org.apache.commons.math.special.GammaTest.testLogGamma(2)"
contain "org.apache.commons.math.special.GammaTest" "org.apache.commons.math.special.GammaTest.testLogGammaPositive(0)"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "double[]"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegrator"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.EulerStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.EulerStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testNoReset(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "double[].clone(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.getCurrentTime(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationAtBounds(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.EulerStepInterpolator(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.DummyEquations.DummyEquations(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.reinitialize(4)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testInterpolationInside(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.EulerStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.HighamHall54StepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.HighamHall54StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.HighamHall54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.HighamHall54Integrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.testClone(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.LinearRank1Function(5)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function" "org.apache.commons.math.estimation.MinpackTest.LinearRank1Function.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.one"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoF"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoL"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.three"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.mean"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sum"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.var"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.std"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.min"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.max"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.SummaryStatisticsTest(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.tolerance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.one"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoF"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoL"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.three"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.n"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sumSq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.var"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.std"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.one"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoF"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testProductAndGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testNaNContracts(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testGetSummary(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testGetSummary(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSummary(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertFalse(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(2)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.geoMean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeoMeanImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertTrue(1)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.mean"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMeanImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.min"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMinImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.max"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMaxImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sum"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumsq"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumsqImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.sumLog"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumLogImpl(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.variance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVarianceImpl(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumImpl(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.copy(2)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testCopy(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getSum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.tolerance"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMax(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.verifySummary(2)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setSumLogImpl(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getSumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterInjection(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.createSummaryStatistics(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.setMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.testSetterIllegalState(0)"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.one"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoF"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.twoL"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.three"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.mean"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.sum"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.var"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.std"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.n"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.min"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.max"
contain "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.SummaryStatisticsTest.tolerance"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.MidpointIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.MidpointIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegrator.MidpointIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.testStepSize(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.FirstMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.FirstMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMoment.FirstMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.mean"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.FirstMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest" "org.apache.commons.math.stat.descriptive.moment.FirstMomentTest.stat"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.StandardDeviationTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.StandardDeviationTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.std"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testNaN(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(2)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.testPopulation(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.populationStandardDeviation(1)"
reference "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.stat" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
contain "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviationTest.stat"
reference "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.Complex[]"
reference "org.apache.commons.math.complex.ComplexTest" "junit.framework.TestCase"
reference "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexUtils"
call "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.nan"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infZero"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infNaN"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfNaN"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.nanInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)" "org.apache.commons.math.complex.ComplexTest.nanZero"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.ComplexTest(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testConstructor(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConstructor(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConstructorNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbs(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbs(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbsNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAbsInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testAdd(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAdd(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAddNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.add(1)"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
call "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAddInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testConjugate(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugate(0)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugateNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.conjugate(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testConjugateInfiinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testDivide(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivide(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.neginf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.divide(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideInfinite(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.divide(1)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testDivideNaNInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testMultiply(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiply(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiplyNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.inf"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.INF"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMultiplyNaNInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNegate(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNegate(0)"
reference "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNegateNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testSubtract(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSubtract(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.subtract(1)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSubtractNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsNull(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsClass(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsSame(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsTrue(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsImaginaryDifference(0)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.Complex.equals(1)"
call "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testEqualsNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.hashCode(0)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.ComplexTest.assertFalse(1)"
call "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
reference "org.apache.commons.math.complex.ComplexTest.testHashCode(0)" "org.apache.commons.math.complex.Complex.NaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testHashCode(0)"
call "org.apache.commons.math.complex.ComplexTest.testAcos(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAcos(0)" "org.apache.commons.math.complex.Complex.acos(0)"
call "org.apache.commons.math.complex.ComplexTest.testAcos(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testAcos(0)" "org.apache.commons.math.complex.Complex.ZERO"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAcos(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.Complex.acos(0)"
call "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAcosInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAcosNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAcosNaN(0)" "org.apache.commons.math.complex.Complex.acos(0)"
call "org.apache.commons.math.complex.ComplexTest.testAcosNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAcosNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAcosNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAsin(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAsin(0)" "org.apache.commons.math.complex.Complex.asin(0)"
call "org.apache.commons.math.complex.ComplexTest.testAsin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAsin(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAsinNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAsinNaN(0)" "org.apache.commons.math.complex.Complex.asin(0)"
call "org.apache.commons.math.complex.ComplexTest.testAsinNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAsinNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAsinNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.Complex.asin(0)"
call "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAsinInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testAtan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testAtan(0)" "org.apache.commons.math.complex.Complex.atan(0)"
call "org.apache.commons.math.complex.ComplexTest.testAtan(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAtan(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.Complex.atan(0)"
call "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAtanInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.atan(0)"
call "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
reference "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)" "org.apache.commons.math.complex.Complex.I"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testAtanNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testCos(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testCos(0)" "org.apache.commons.math.complex.Complex.cos(0)"
call "org.apache.commons.math.complex.ComplexTest.testCos(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCos(0)"
reference "org.apache.commons.math.complex.ComplexTest.testCosNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testCosNaN(0)" "org.apache.commons.math.complex.Complex.cos(0)"
call "org.apache.commons.math.complex.ComplexTest.testCosNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testCosNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCosNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.Complex.cos(0)"
call "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testCosInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCosInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testCosh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testCosh(0)" "org.apache.commons.math.complex.Complex.cosh(0)"
call "org.apache.commons.math.complex.ComplexTest.testCosh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCosh(0)"
reference "org.apache.commons.math.complex.ComplexTest.testCoshNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testCoshNaN(0)" "org.apache.commons.math.complex.Complex.cosh(0)"
call "org.apache.commons.math.complex.ComplexTest.testCoshNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testCoshNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCoshNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.Complex.cosh(0)"
call "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testCoshInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.exp(0)"
call "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testExp(0)" "org.apache.commons.math.complex.Complex.negate(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testExp(0)"
reference "org.apache.commons.math.complex.ComplexTest.testExpNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testExpNaN(0)" "org.apache.commons.math.complex.Complex.exp(0)"
call "org.apache.commons.math.complex.ComplexTest.testExpNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testExpNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testExpNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.Complex.exp(0)"
call "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testExpInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testExpInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testLog(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testLog(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.ComplexTest.testLog(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testLog(0)"
reference "org.apache.commons.math.complex.ComplexTest.testLogNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testLogNaN(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.ComplexTest.testLogNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testLogNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testLogNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.inf"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.infZero"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testLogInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testLogInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testLogZero(0)" "org.apache.commons.math.complex.ComplexTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexTest.testLogZero(0)" "org.apache.commons.math.complex.Complex.ZERO"
call "org.apache.commons.math.complex.ComplexTest.testLogZero(0)" "org.apache.commons.math.complex.Complex.log(0)"
call "org.apache.commons.math.complex.ComplexTest.testLogZero(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testLogZero(0)"
call "org.apache.commons.math.complex.ComplexTest.testPow(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testPow(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testPow(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testPow(0)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testPowNaNBase(0)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testPowNaNExponent(0)"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.Complex.ONE"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testPowInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testPowInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testPowZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testPowZero(0)"
reference "org.apache.commons.math.complex.ComplexTest.testpowNull(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexTest.testpowNull(0)" "org.apache.commons.math.complex.Complex.pow(1)"
call "org.apache.commons.math.complex.ComplexTest.testpowNull(0)" "org.apache.commons.math.complex.ComplexTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testpowNull(0)"
call "org.apache.commons.math.complex.ComplexTest.testSin(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSin(0)" "org.apache.commons.math.complex.Complex.sin(0)"
call "org.apache.commons.math.complex.ComplexTest.testSin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSin(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.Complex.sin(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSinInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSinNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSinNaN(0)" "org.apache.commons.math.complex.Complex.sin(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSinNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSinh(0)" "org.apache.commons.math.complex.Complex.sinh(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSinh(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSinhNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSinhNaN(0)" "org.apache.commons.math.complex.Complex.sinh(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinhNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinhNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSinhNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.Complex.sinh(0)"
call "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSinhInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealPositive(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealPositive(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealPositive(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtRealPositive(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealZero(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtRealZero(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealNegative(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealNegative(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtRealNegative(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtRealNegative(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryZero(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryZero(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryNegative(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtImaginaryNegative(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtPolar(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.testSqrtPolar(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtPolar(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtPolar(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtPolar(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSqrtNaN(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.infNaN"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.Complex.sqrt(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.infZero"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.nanInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrtInf(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1z(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1z(0)" "org.apache.commons.math.complex.Complex.sqrt1z(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1z(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrt1z(0)"
reference "org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.Complex.sqrt1z(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testSqrt1zNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testTan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testTan(0)" "org.apache.commons.math.complex.Complex.tan(0)"
call "org.apache.commons.math.complex.ComplexTest.testTan(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTan(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testTanNaN(0)" "org.apache.commons.math.complex.Complex.tan(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.Complex.tan(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexTest.infNaN"
reference "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.complex.Complex.tan(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)" "org.apache.commons.math.complex.ComplexTest.negInfNaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanCritical(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanh(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testTanh(0)" "org.apache.commons.math.complex.Complex.tanh(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanh(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanh(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanhNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testTanhNaN(0)" "org.apache.commons.math.complex.Complex.tanh(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanhNaN(0)" "org.apache.commons.math.complex.Complex.isNaN(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanhNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertTrue(1)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanhNaN(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
call "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.Complex.tanh(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.nanZero"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanhInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)" "org.apache.commons.math.complex.ComplexTest.nanInf"
reference "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)" "org.apache.commons.math.complex.ComplexTest.pi"
call "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)" "org.apache.commons.math.complex.Complex.tanh(0)"
call "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testTanhCritical(0)"
call "org.apache.commons.math.complex.ComplexTest.testMath221(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testMath221(0)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexTest.testMath221(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testMath221(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_thirdRoot(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNthRoot_normal_fourthRoot(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_imaginaryPartEmpty(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_thirdRoot_realPartZero(0)"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.oneNaN"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.Complex.nthRoot(1)"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.Complex.NaN"
call "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.nanZero"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.nanInf"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.Complex.INF"
reference "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)" "org.apache.commons.math.complex.ComplexTest.negInfInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testNthRoot_cornercase_NAN_Inf(0)"
call "org.apache.commons.math.complex.ComplexTest.testGetArgument(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexTest.testGetArgument(0)" "org.apache.commons.math.complex.Complex.getArgument(0)"
call "org.apache.commons.math.complex.ComplexTest.testGetArgument(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testGetArgument(0)"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.infInf"
call "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.Complex.getArgument(0)"
call "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.infZero"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testGetArgumentInf(0)"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.ComplexTest.nan"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.ComplexTest.nanZero"
call "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.Complex.getArgument(0)"
call "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.ComplexTest.assertEquals(2)"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.ComplexTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.testGetArgumentNaN(0)"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.inf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.neginf"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.nan"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.pi"
reference "org.apache.commons.math.complex.ComplexTest.oneInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneInf"
reference "org.apache.commons.math.complex.ComplexTest.oneNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneNegInf"
reference "org.apache.commons.math.complex.ComplexTest.infOne" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infOne"
reference "org.apache.commons.math.complex.ComplexTest.infZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infZero"
reference "org.apache.commons.math.complex.ComplexTest.infNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infNaN"
reference "org.apache.commons.math.complex.ComplexTest.infNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexTest.infInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.infInf"
reference "org.apache.commons.math.complex.ComplexTest.negInfInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexTest.negInfZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfZero"
reference "org.apache.commons.math.complex.ComplexTest.negInfOne" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfOne"
reference "org.apache.commons.math.complex.ComplexTest.negInfNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfNaN"
reference "org.apache.commons.math.complex.ComplexTest.negInfNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexTest.oneNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.oneNaN"
reference "org.apache.commons.math.complex.ComplexTest.zeroInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.zeroInf"
reference "org.apache.commons.math.complex.ComplexTest.zeroNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.zeroNaN"
reference "org.apache.commons.math.complex.ComplexTest.nanInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.nanInf"
reference "org.apache.commons.math.complex.ComplexTest.nanNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.nanNegInf"
reference "org.apache.commons.math.complex.ComplexTest.nanZero" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexTest" "org.apache.commons.math.complex.ComplexTest.nanZero"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.SimpleEstimationProblem.SimpleEstimationProblem(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.c"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addParameter(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addPoint(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.LocalMeasurement(4)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addPoint(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addMeasurement(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addPoint(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getA(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getA(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getA(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getB(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getB(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getB(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getC(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.c"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getC(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.getC(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.c"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.partial(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.partial(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.partial(2)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.access$200(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.a"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.b"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.c" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.c"
reference "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionImpl"
reference "org.apache.commons.math.distribution.BetaDistributionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistribution"
call "org.apache.commons.math.distribution.BetaDistributionTest.BetaDistributionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionTest.BetaDistributionTest(0)"
call "org.apache.commons.math.distribution.BetaDistributionTest.testCumulative(0)" "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)"
contain "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionTest.testCumulative(0)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)" "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)" "org.apache.commons.math.distribution.BetaDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)" "org.apache.commons.math.distribution.BetaDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)" "org.apache.commons.math.distribution.BetaDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionTest.checkCumulative(4)"
call "org.apache.commons.math.distribution.BetaDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.BetaDistributionTest.checkDensity(4)"
contain "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionTest.testDensity(0)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.BetaDistributionImpl.BetaDistributionImpl(2)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.BetaDistribution.density(1)"
call "org.apache.commons.math.distribution.BetaDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.BetaDistributionTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.BetaDistributionTest" "org.apache.commons.math.distribution.BetaDistributionTest.checkDensity(4)"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.BetaTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.Beta"
reference "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.special.BetaTest.BetaTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.BetaTest(1)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.special.Beta.regularizedBeta(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)" "org.apache.commons.math.special.BetaTest.fail(1)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
call "org.apache.commons.math.special.BetaTest.testLogBeta(3)" "org.apache.commons.math.special.Beta.logBeta(2)"
call "org.apache.commons.math.special.BetaTest.testLogBeta(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaNanPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaNanPositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNanPositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNanPositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNan(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNan(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaNegativePositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaNegativePositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNegativePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveNegativePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNegative(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveNegative(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaZeroPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaZeroPositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveZeroPositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositiveZeroPositive(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveZero(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositiveZero(0)"
call "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositivePositive(0)" "org.apache.commons.math.special.BetaTest.testRegularizedBeta(4)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testRegularizedBetaPositivePositivePositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaNanPositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaNanPositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNan(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNan(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaNegativePositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaNegativePositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNegative(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveNegative(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaZeroPositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaZeroPositive(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositiveZero(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositiveZero(0)"
call "org.apache.commons.math.special.BetaTest.testLogBetaPositivePositive(0)" "org.apache.commons.math.special.BetaTest.testLogBeta(3)"
contain "org.apache.commons.math.special.BetaTest" "org.apache.commons.math.special.BetaTest.testLogBetaPositivePositive(0)"
reference "org.apache.commons.math.special.ErfTest" "junit.framework.TestCase"
reference "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.Erf"
call "org.apache.commons.math.special.ErfTest.ErfTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.ErfTest(0)"
call "org.apache.commons.math.special.ErfTest.testErf0(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf0(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf0(0)"
call "org.apache.commons.math.special.ErfTest.testErf1960(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf1960(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf1960(0)"
call "org.apache.commons.math.special.ErfTest.testErf2576(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf2576(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf2576(0)"
call "org.apache.commons.math.special.ErfTest.testErf2807(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf2807(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf2807(0)"
call "org.apache.commons.math.special.ErfTest.testErf3291(0)" "org.apache.commons.math.special.Erf.erf(1)"
call "org.apache.commons.math.special.ErfTest.testErf3291(0)" "org.apache.commons.math.special.ErfTest.assertEquals(3)"
contain "org.apache.commons.math.special.ErfTest" "org.apache.commons.math.special.ErfTest.testErf3291(0)"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.StepProblem"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.GillIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.GillIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testUnstableDerivative(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.testStepSize(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.suite(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.BisectionSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.UnivariateRealSolverFactoryImplTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.UnivariateRealSolverFactoryImplTest(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImpl.UnivariateRealSolverFactoryImpl(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.setUp(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.tearDown(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBisectionSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBisectionSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newNewtonSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewNewtonSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newBrentSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewBrentSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactory.newSecantSolver(0)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertNotNull(1)"
call "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.testNewSecantSolverValid(0)"
reference "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory" "org.apache.commons.math.analysis.UnivariateRealSolverFactory"
contain "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest" "org.apache.commons.math.analysis.UnivariateRealSolverFactoryImplTest.factory"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionImpl"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "double[]"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.MathRuntimeException"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.RetryTestCase"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.stat.descriptive.StatisticalSummary"
reference "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.file"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.EmpiricalDistributionTest(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.setUp(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.suite(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testLoad(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getN(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummary.getStandardDeviation(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testDoubleLoad(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testNext(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.fail(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testNexFail(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFine(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testGridTooFat(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testBinIndexOverflow(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testSerialization(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullDoubleArray(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullDoubleArray(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullDoubleArray(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.fail(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullDoubleArray(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullURL(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullURL(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullURL(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.fail(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullURL(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullFile(0)" "org.apache.commons.math.random.EmpiricalDistributionImpl.EmpiricalDistributionImpl(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullFile(0)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullFile(0)" "org.apache.commons.math.random.EmpiricalDistributionTest.fail(1)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.testLoadNullFile(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.isLoaded(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getBinCount(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getSampleStats(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(2)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getUpperBounds(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)" "org.apache.commons.math.random.EmpiricalDistribution.getBinStats(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.verifySame(2)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(4)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.tstGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.load(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistribution.getNextValue(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.random.EmpiricalDistributionTest.assertEquals(4)"
call "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.tstDoubleGen(1)"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2" "org.apache.commons.math.random.EmpiricalDistribution"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.empiricalDistribution2"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.file"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.url"
reference "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray" "double[]"
contain "org.apache.commons.math.random.EmpiricalDistributionTest" "org.apache.commons.math.random.EmpiricalDistributionTest.dataArray"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.MultivariateSummaryStatisticsTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.MultivariateSummaryStatisticsTest(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterInjection(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.setMeanImpl(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSetterIllegalState(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testDimension(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testDimension(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testDimension(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testDimension(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getN(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSum(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumSq(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getSumLog(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getCovariance(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getMin(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertFalse(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testNaNContracts(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.MultivariateSummaryStatistics(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.equals(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertFalse(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.StatisticalSummaryValuesTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.StatisticalSummaryValuesTest(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.setUp(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.StatisticalSummaryValues(6)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.equals(1)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertFalse(2)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.hashCode(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getN(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getSum(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMean(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMin(0)"
call "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValues.getMax(0)"
contain "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest" "org.apache.commons.math.stat.descriptive.StatisticalSummaryValuesTest.verifyEquality(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest"
call "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.SetVisitor(0)" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.SetVisitor(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.visit(3)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.SetVisitor(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.serialVersionUID"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "double[]"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "double[][]"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.MultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.OLSMultipleLinearRegressionTest(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.MultipleLinearRegressionAbstractTest(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.OLSMultipleLinearRegressionTest(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.x"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.setUp(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.setUp(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.x"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.getNumberOfRegressors(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.x"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.getNumberOfRegressors(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.getSampleSize(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.y"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.getSampleSize(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddXSampleData(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddXSampleData(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddXSampleData(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(2)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.regression"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParameters(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParametersVariance(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testPerfectFit(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateRegressionParameters(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateRegressionParametersStandardErrors(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testLongly(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateRegressionParameters(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateRegressionParametersStandardErrors(0)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testSwissFertility(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.OLSMultipleLinearRegression(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.newSampleData(3)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.calculateHat(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegression.Y"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.testHat(0)"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.y" "double[]"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.x" "double[][]"
contain "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.OLSMultipleLinearRegressionTest.x"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "double[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "junit.framework.TestCase"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LevenbergMarquardtEstimatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LevenbergMarquardtEstimatorTest(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.guessParametersErrors(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.fail(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTrivial(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testQRColumnsPermutation(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNoDependency(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testOneSet(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testTwoSets(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCovariances(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.fail(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getResidual(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testNonInversible(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testIllConditioned(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersSimple(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMoreEstimatedParametersUnsorted(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testRedundantEquations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testInconsistentEquations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testControlParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testControlParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testControlParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testControlParameters(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setInitialStepBoundFactor(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setMaxCostEval(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setCostRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setParRelativeTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.setOrthoTolerance(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.checkEstimate(7)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCovariances(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.guessParametersErrors(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFitting(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getCostEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getJacobianEvaluations(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testCircleFittingBadInit(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.QuadraticProblem(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.addPoint(3)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.LevenbergMarquardtEstimator(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimator.estimate(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.testMath199(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.suite(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.TestRandomGenerator"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.RandomDataTest"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.RandomDataTest.RandomDataTest(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.randomData"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.AbstractRandomGeneratorTest(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.suite(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.TestRandomGenerator.nextInt(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.fail(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextInt(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.TestRandomGenerator.nextLong(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextLong(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.TestRandomGenerator.nextBoolean(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextBoolean(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.smallSampleSize"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.TestRandomGenerator.nextFloat(0)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testStatistic"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.expected"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquare(2)"
call "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)" "org.apache.commons.math.random.AbstractRandomGeneratorTest.assertTrue(2)"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testNextFloat(0)"
reference "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator" "org.apache.commons.math.random.TestRandomGenerator"
contain "org.apache.commons.math.random.AbstractRandomGeneratorTest" "org.apache.commons.math.random.AbstractRandomGeneratorTest.testGenerator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.GraggBulirschStoerStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.GraggBulirschStoerStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.testClone(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.HelicalValleyFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.getResiduals(0)"
contain "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction" "org.apache.commons.math.estimation.MinpackTest.HelicalValleyFunction.twoPi"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "double[]"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformer"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.BiDiagonalTransformerTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.BiDiagonalTransformerTest(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.BiDiagonalTransformerTest(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.BiDiagonalTransformerTest(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testDimensions(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertEquals(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkdimensions(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testAEqualUSVt(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkAEqualUSVt(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUOrthogonal(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testVOrthogonal(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testBBiDiagonal(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.checkBiDiagonal(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getU(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertEquals(3)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getB(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.getV(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertTrue(1)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testMatricesValues(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.BiDiagonalTransformer(1)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformer.isUpperBiDiagonal(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertTrue(1)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)" "org.apache.commons.math.linear.BiDiagonalTransformerTest.assertFalse(1)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testUpperOrLower(0)"
call "org.apache.commons.math.linear.BiDiagonalTransformerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.suite(0)"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare" "double[][]"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testSquare"
reference "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare" "double[][]"
contain "org.apache.commons.math.linear.BiDiagonalTransformerTest" "org.apache.commons.math.linear.BiDiagonalTransformerTest.testNonSquare"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormat"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.util.CompositeFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getLocale(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)" "org.apache.commons.math.geometry.Vector3DFormat.getInstance(1)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(4)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.setUp(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleNoDecimals(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimals(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeX(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeY(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNegativeZ(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNonDefaultSetting(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)" "org.apache.commons.math.geometry.Vector3DFormat.formatVector3D(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testStaticFormatVector3D(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNan(0)" "org.apache.commons.math.geometry.Vector3D.NaN"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNan(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNan(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNan(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testNan(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3D.POSITIVE_INFINITY"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testPositiveInfinity(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3D.NEGATIVE_INFINITY"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.tesNegativeInfinity(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleNoDecimals(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseIgnoredWhitespace(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimals(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeX(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeY(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeZ(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeAll(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseZeroX(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNonDefaultSetting(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.geometry.Vector3D.NaN"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNan(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3D.POSITIVE_INFINITY"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParsePositiveInfinity(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormat.parseObject(1)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3D.NEGATIVE_INFINITY"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testParseNegativeInfinity(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertNotNull(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.geometry.Vector3DFormat.getFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testConstructorSingleFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testFormatObject(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenPrefix(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSeparator(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.geometry.Vector3DFormat.Vector3DFormat(0)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.geometry.Vector3DFormat.parse(2)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.testForgottenSuffix(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat" "org.apache.commons.math.geometry.Vector3DFormat"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormat"
reference "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare" "org.apache.commons.math.geometry.Vector3DFormat"
contain "org.apache.commons.math.geometry.Vector3DFormatAbstractTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.vector3DFormatSquare"
reference "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.DefaultTransformerTest" "junit.framework.TestCase"
call "org.apache.commons.math.util.DefaultTransformerTest.DefaultTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.DefaultTransformerTest(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformDouble(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)" "org.apache.commons.math.util.DefaultTransformerTest.fail(1)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformNull(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformInteger(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformBigDecimal(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)" "org.apache.commons.math.util.DefaultTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformString(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformer.transform(1)"
call "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)" "org.apache.commons.math.util.DefaultTransformerTest.fail(1)"
contain "org.apache.commons.math.util.DefaultTransformerTest" "org.apache.commons.math.util.DefaultTransformerTest.testTransformObject(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "double[]"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "double[][]"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecomposition"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.DecompositionSolver"
call "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "org.apache.commons.math.linear.LUDecompositionImplTest.testDataMinus"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "org.apache.commons.math.linear.LUDecompositionImplTest.luData"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "org.apache.commons.math.linear.LUDecompositionImplTest.singular"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)" "org.apache.commons.math.linear.LUDecompositionImplTest.bigSingular"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.LUDecompositionImplTest(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.suite(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecomposition.getL(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecomposition.getU(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.LUDecomposition.getP(0)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testDimensions(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testNonSquare(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testNonSquare(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testNonSquare(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.fail(1)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testNonSquare(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecomposition.getL(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecomposition.getU(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecomposition.getP(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testDataMinus"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.singular"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecomposition.getSolver(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertFalse(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertNull(1)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.bigSingular"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testPAEqualLU(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getL(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testLLowerTriangular(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getU(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testUUpperTriangular(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getP(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(2)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testPPermutation(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecomposition.getSolver(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertTrue(1)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.singular"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertFalse(1)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.bigSingular"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testSingular(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecomposition.getL(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecomposition.getU(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecomposition.getP(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecomposition.getPivot(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues1(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.luData"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecomposition.getL(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecomposition.getU(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecomposition.getP(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecomposition.getPivot(0)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.LUDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testMatricesValues2(0)"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testData" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testData"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.testDataMinus"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.luData" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.luData"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.singular" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.singular"
reference "org.apache.commons.math.linear.LUDecompositionImplTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.bigSingular"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.entryTolerance"
contain "org.apache.commons.math.linear.LUDecompositionImplTest" "org.apache.commons.math.linear.LUDecompositionImplTest.normTolerance"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.goodPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.goodPercentile(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.goodPercentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.setQuantile(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.setQuantile(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.setQuantile(1)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.goodPercentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.setQuantile(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.copy(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.percentile"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServer"
reference "org.apache.commons.math.random.ValueServerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.RetryTestCase"
call "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
call "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.random.ValueServer.ValueServer(0)"
reference "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)" "org.apache.commons.math.random.ValueServerTest.vs"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.ValueServerTest(1)"
reference "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.setUp(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.setUp(0)"
call "org.apache.commons.math.random.ValueServerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.random.ValueServerTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.suite(0)"
reference "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.computeDistribution(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.getEmpiricalDistribution(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(2)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getMean(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)" "org.apache.commons.math.random.ValueServer.computeDistribution(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testNextDigest(0)"
reference "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testNextDigestFail(0)"
reference "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testEmptyReplayFile(0)"
reference "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)" "org.apache.commons.math.random.ValueServer.computeDistribution(0)"
call "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testEmptyDigestFile(0)"
reference "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.resetReplayFile(0)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
call "org.apache.commons.math.random.ValueServerTest.testReplay(0)" "org.apache.commons.math.random.ValueServer.closeReplayFile(0)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testReplay(0)"
reference "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setMu(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getMu(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getNext(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.setSigma(1)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServer.getSigma(0)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.assertTrue(2)"
call "org.apache.commons.math.random.ValueServerTest.testModes(0)" "org.apache.commons.math.random.ValueServerTest.fail(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testModes(0)"
reference "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.setMu(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.fill(1)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(4)"
call "org.apache.commons.math.random.ValueServerTest.testFill(0)" "org.apache.commons.math.random.ValueServer.fill(1)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testFill(0)"
reference "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.vs"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.setMode(1)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.getMode(0)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.setValuesFileURL(1)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServer.getValuesFileURL(0)"
call "org.apache.commons.math.random.ValueServerTest.testProperties(0)" "org.apache.commons.math.random.ValueServerTest.assertEquals(3)"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.testProperties(0)"
reference "org.apache.commons.math.random.ValueServerTest.vs" "org.apache.commons.math.random.ValueServer"
contain "org.apache.commons.math.random.ValueServerTest" "org.apache.commons.math.random.ValueServerTest.vs"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.MeanTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.MeanTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.mean"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.MeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.testSmallSamples(0)"
reference "org.apache.commons.math.stat.descriptive.moment.MeanTest.stat" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.moment.MeanTest" "org.apache.commons.math.stat.descriptive.moment.MeanTest.stat"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "double[]"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecomposition"
call "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.QRDecompositionImplTest(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.suite(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testDimensions(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.checkDimension(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testAEqualQR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.checkAEqualQR(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testQOrthogonal(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.QRDecomposition.getQT(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.checkQOrthogonal(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.checkUpperTriangular(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testRUpperTriangular(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkUpperTriangular(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.1.{...}"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkUpperTriangular(1)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.checkUpperTriangular(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getH(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.checkTrapezoidal(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testHTrapezoidal(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkTrapezoidal(1)" "org.apache.commons.math.linear.QRDecompositionImplTest.2.{...}"
call "org.apache.commons.math.linear.QRDecompositionImplTest.checkTrapezoidal(1)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.checkTrapezoidal(1)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecomposition.getQ(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecomposition.getQT(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecomposition.getR(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecomposition.getH(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)" "org.apache.commons.math.linear.QRDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testMatricesValues(0)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)" "org.apache.commons.math.linear.QRDecompositionImplTest.3.{...}"
call "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.createTestMatrix(3)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData3x4"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3" "double[][]"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.testData4x3"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.entryTolerance"
contain "org.apache.commons.math.linear.QRDecompositionImplTest" "org.apache.commons.math.linear.QRDecompositionImplTest.normTolerance"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.buildArray(2)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setCostAccuracy(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setCostAccuracy(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setParamsAccuracy(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.setParamsAccuracy(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getN(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalStartCost(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinCost(1)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.checkTheoreticalMinParams(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
call "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackMeasurement.MinpackMeasurement(2)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getMeasurements(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getUnboundParameters(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getAllParameters(0)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getAllParameters(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getJacobian(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.getResiduals(0)"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.parameters"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalStartCost"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinCost"
reference "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.theoreticalMinParams"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.costAccuracy"
contain "org.apache.commons.math.estimation.MinpackTest.MinpackFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.paramsAccuracy"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.VarianceTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.VarianceTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.var"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.StandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.StandardDeviation.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testNaN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.setBiasCorrected(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(2)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.testPopulation(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
call "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.populationVariance(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VarianceTest.stat" "org.apache.commons.math.stat.descriptive.moment.Variance"
contain "org.apache.commons.math.stat.descriptive.moment.VarianceTest" "org.apache.commons.math.stat.descriptive.moment.VarianceTest.stat"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegression"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.MultipleLinearRegressionAbstractTest(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.setUp(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.createRegression(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.setUp(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.setUp(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.createRegression(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getNumberOfRegressors(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getSampleSize(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParameters(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParameters(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParameters(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParameters(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getNumberOfRegressors(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParameters(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateResiduals(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateResiduals(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateResiduals(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateResiduals(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getSampleSize(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateResiduals(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParametersVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParametersVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressionParametersVariance(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParametersVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getNumberOfRegressors(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressionParametersVariance(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getSampleSize(0)"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.getNumberOfRegressors(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
call "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegression.estimateRegressandVariance(0)"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.canEstimateRegressandVariance(0)"
reference "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression" "org.apache.commons.math.stat.regression.MultipleLinearRegression"
contain "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.regression"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegrator"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.RombergIntegratorTest.RombergIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.RombergIntegratorTest(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.RombergIntegrator.RombergIntegrator(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.RombergIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.RombergIntegratorTest" "org.apache.commons.math.analysis.RombergIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.FourthMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.FourthMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.fourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
contain "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest" "org.apache.commons.math.stat.descriptive.moment.FourthMomentTest.stat"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.subPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.subPercentile(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.getQuantile(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.evaluate(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.getQuantile(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.subPercentile(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.copy(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.serialVersionUID"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.CertifiedDataAbstractTest(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.setUp(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getResourceName(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.loadData(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getResourceName(0)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getMaximumAbsoluteError(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.clear(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.tearDown(0)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty(2)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getMaximumAbsoluteError(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.testCertifiedValues(0)"
call "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty(2)" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.fail(1)"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.getProperty(2)"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.descriptives"
reference "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.summaries"
contain "org.apache.commons.math.stat.data.CertifiedDataAbstractTest" "org.apache.commons.math.stat.data.CertifiedDataAbstractTest.certifiedValues"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.DormandPrince853StepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.DormandPrince853StepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.testClone(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "double[]"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.{...}" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.this$0"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.{...}" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.val$threshold"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.{...}"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.requiresDenseOutput(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "double[].clone(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedDerivatives(0)"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.val$threshold"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.val$threshold"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.this$0" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.this$0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "junit.framework.Assert"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest"
call "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.GetVisitor(0)" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.GetVisitor(0)" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.count"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.GetVisitor(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.visit(3)" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.count"
call "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.visit(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.visit(3)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.getCount(0)" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.count"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.getCount(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.GetVisitor(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.serialVersionUID"
contain "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.count"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.Product"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.ProductTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.ProductTest(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.getTolerance(0)"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.product"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.Product(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Product.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.ProductTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.testSpecialValues(0)"
reference "org.apache.commons.math.stat.descriptive.summary.ProductTest.stat" "org.apache.commons.math.stat.descriptive.summary.Product"
contain "org.apache.commons.math.stat.descriptive.summary.ProductTest" "org.apache.commons.math.stat.descriptive.summary.ProductTest.stat"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.Stop(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.g(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.eventOccurred(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.nonstiff.StepProblem.rateAfter"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.nonstiff.StepProblem.switchTime"
call "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)" "org.apache.commons.math.ode.nonstiff.StepProblem.setRate(1)"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.computeDerivatives(3)" "org.apache.commons.math.ode.nonstiff.StepProblem.rate"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.getDimension(0)"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.setRate(1)" "org.apache.commons.math.ode.nonstiff.StepProblem.rate"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.setRate(1)"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.StepProblem.rateAfter"
call "org.apache.commons.math.ode.nonstiff.StepProblem.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.StepProblem.setRate(1)"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.eventOccurred(2)"
reference "org.apache.commons.math.ode.nonstiff.StepProblem.g(2)" "org.apache.commons.math.ode.nonstiff.StepProblem.switchTime"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.g(2)"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.rate"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.rateAfter"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.switchTime"
contain "org.apache.commons.math.ode.nonstiff.StepProblem" "org.apache.commons.math.ode.nonstiff.StepProblem.serialVersionUID"
reference "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.fraction.FractionTest" "junit.framework.TestCase"
call "org.apache.commons.math.fraction.FractionTest.FractionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.FractionTest(0)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.assertFraction(3)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.fail(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructor(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testConstructor(0)"
call "org.apache.commons.math.fraction.FractionTest.testGoldenRatio(0)" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testGoldenRatio(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testGoldenRatio(0)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleConstructor(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDoubleConstructor(0)"
call "org.apache.commons.math.fraction.FractionTest.testDigitLimitConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testDigitLimitConstructor(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDigitLimitConstructor(0)"
call "org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(0)" "org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testIntegerOverflow(0)"
call "org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(1)" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
call "org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(1)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.checkIntegerOverflow(1)"
call "org.apache.commons.math.fraction.FractionTest.testEpsilonLimitConstructor(0)" "org.apache.commons.math.fraction.Fraction.Fraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testEpsilonLimitConstructor(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testEpsilonLimitConstructor(0)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.Fraction.compareTo(1)"
call "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testCompareTo(0)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.Fraction.doubleValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDoubleValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.Fraction.floatValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testFloatValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.Fraction.intValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testIntValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testIntValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.Fraction.longValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testLongValue(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testLongValue(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.Fraction.Fraction(1)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testConstructorDouble(0)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.Fraction.abs(0)"
call "org.apache.commons.math.fraction.FractionTest.testAbs(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testAbs(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testReciprocal(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testNegate(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testNegate(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.add(1)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
reference "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.ONE"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testAdd(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testAdd(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.divide(1)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
reference "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertSame(2)"
reference "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.ONE"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testDivide(0)" "org.apache.commons.math.fraction.Fraction.reciprocal(0)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testDivide(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.multiply(1)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testMultiply(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testMultiply(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.subtract(1)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.assertFraction(3)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.negate(0)"
reference "org.apache.commons.math.fraction.FractionTest.testSubtract(0)" "org.apache.commons.math.fraction.Fraction.ONE"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testSubtract(0)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertTrue(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertFalse(1)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.Fraction.hashCode(0)"
call "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.getReducedFraction(2)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.equals(1)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.assertTrue(1)"
reference "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.ZERO"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.fail(1)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)" "org.apache.commons.math.fraction.FractionTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionTest" "org.apache.commons.math.fraction.FractionTest.testGetReducedFraction(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMap"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.OpenIntToDoubleHashMapTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.OpenIntToDoubleHashMapTest(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.OpenIntToDoubleHashMapTest(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.setUp(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.setUp(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generate(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.setUp(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generate(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWith0ExpectedSize(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWith0ExpectedSize(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWith0ExpectedSize(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWithExpectedSize(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWithExpectedSize(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGetWithExpectedSize(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGet(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGet(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAndGet(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutAbsentOnExisting(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutOnExisting(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testGetFromEmpty(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertPutAndGet(3)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemove2(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveFromEmpty(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveFromEmpty(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testRemoveAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generate(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testCopy(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.generateAbsent(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertFalse(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testContainsKey(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.hasNext(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertTrue(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.key(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.containsKey(1)"
reference "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(3)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.value(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertFalse(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.fail(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testIterator(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.createFromJavaMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.iterator(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.Iterator.advance(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.fail(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testConcurrentModification(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollisions(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.OpenIntToDoubleHashMap(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.put(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.size(0)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.get(1)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.assertEquals(2)"
call "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)" "org.apache.commons.math.util.OpenIntToDoubleHashMap.remove(1)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.testPutKeysWithCollision2(0)"
contain "org.apache.commons.math.util.OpenIntToDoubleHashMapTest" "org.apache.commons.math.util.OpenIntToDoubleHashMapTest.javaMap"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.Box3DimensionalFunction(3)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction" "org.apache.commons.math.estimation.MinpackTest.Box3DimensionalFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusX(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusY(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartial(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$100(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.px"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getRadius(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.px"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.serialVersionUID"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.this$0"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMead"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.NelderMeadTest" "double[]"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.random.UniformRandomGenerator"
reference "org.apache.commons.math.optimization.NelderMeadTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.optimization.NelderMeadTest" "junit.framework.TestCase"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.random.RandomGenerator"
call "org.apache.commons.math.optimization.NelderMeadTest.NelderMeadTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.NelderMeadTest(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMeadTest.1.{...}"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMead.NelderMead(4)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMead.minimize(5)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMeadTest.fail(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.CostException.getCause(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertNull(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertNotNull(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.testCostExceptions(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.2.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.count"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.minimize(6)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.fail(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertTrue(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertEquals(3)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.getMinima(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertEquals(2)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertNotNull(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertNull(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.minimize(4)"
call "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)" "org.apache.commons.math.optimization.NelderMead.minimize(5)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.testRosenbrock(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.3.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.count"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMead.NelderMead(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMead.minimize(7)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertTrue(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.NelderMeadTest.assertEquals(3)"
call "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.getPoint(0)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.testPowell(0)"
call "org.apache.commons.math.optimization.NelderMeadTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.suite(0)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest" "org.apache.commons.math.optimization.NelderMeadTest.count"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DormandPrince54IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DormandPrince54IntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.setInitialStepSize(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testSmallLastStep(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setSafety(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMaxGrowth(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.setMinReduction(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getSafety(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMaxGrowth(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.EmbeddedRungeKuttaIntegrator.getMinReduction(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testEvents(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.VariableHandler.VariableHandler(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.testVariableSteps(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.suite(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.PolynomialSplineFunctionTest(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getKnots(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertTrue(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getN(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testConstructor(0)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.PolynomialSplineFunction(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.findKnot(2)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.assertEquals(4)"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.testValues(0)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.findKnot(2)"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.tolerance"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials" "org.apache.commons.math.analysis.PolynomialFunction[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.polynomials"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots" "double[]"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.knots"
reference "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp" "org.apache.commons.math.analysis.PolynomialFunction"
contain "org.apache.commons.math.analysis.PolynomialSplineFunctionTest" "org.apache.commons.math.analysis.PolynomialSplineFunctionTest.dp"
reference "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFraction"
reference "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest"
reference "org.apache.commons.math.util.ContinuedFractionTest.1.{...}" "org.apache.commons.math.util.ContinuedFractionTest.1.this$0"
call "org.apache.commons.math.util.ContinuedFractionTest.1.{...}" "org.apache.commons.math.util.ContinuedFraction.ContinuedFraction(0)"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.{...}"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.getA(2)"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.getB(2)"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.serialVersionUID"
reference "org.apache.commons.math.util.ContinuedFractionTest.1.this$0" "org.apache.commons.math.util.ContinuedFractionTest"
contain "org.apache.commons.math.util.ContinuedFractionTest.1" "org.apache.commons.math.util.ContinuedFractionTest.1.this$0"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.GeometricMeanTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.GeometricMeanTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.geoMean"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.GeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertFalse(1)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.moment.GeometricMean.clear(0)"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.testSpecialValues(0)"
reference "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.stat" "org.apache.commons.math.stat.descriptive.moment.GeometricMean"
contain "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest" "org.apache.commons.math.stat.descriptive.moment.GeometricMeanTest.stat"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.ConvergenceChecker"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.PointCostPair"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
reference "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.converged(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker" "org.apache.commons.math.optimization.NelderMeadTest.ValueChecker.threshold"
reference "org.apache.commons.math.RetryTestCase" "junit.framework.AssertionFailedError"
reference "org.apache.commons.math.RetryTestCase" "junit.framework.TestCase"
call "org.apache.commons.math.RetryTestCase.RetryTestCase(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.RetryTestCase(0)"
call "org.apache.commons.math.RetryTestCase.RetryTestCase(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.RetryTestCase(1)"
call "org.apache.commons.math.RetryTestCase.runTest(0)" "junit.framework.TestCase.runTest(0)"
contain "org.apache.commons.math.RetryTestCase" "org.apache.commons.math.RetryTestCase.runTest(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "double[]"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.NotPositiveDefiniteMatrixException"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.CorrelatedRandomVectorGeneratorTest(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRank(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRank(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.JDKRandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertTrue(1)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMath226(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.getRootMatrix(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(3)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testRootMatrix(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.nextVector(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.assertEquals(3)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.testMeanAndCovariance(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator.CorrelatedRandomVectorGenerator(4)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.DimensionMismatchException.getMessage(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.fail(1)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.setUp(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.tearDown(0)"
call "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.suite(0)"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean" "double[]"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.covariance"
reference "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator" "org.apache.commons.math.random.CorrelatedRandomVectorGenerator"
contain "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.CorrelatedRandomVectorGeneratorTest.generator"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolver"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.LaguerreSolverTest.LaguerreSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.LaguerreSolverTest(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.solveAll(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.complex.Complex.abs(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.LaguerreSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.TestUtils.assertContains(3)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testQuinticFunction2(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.LaguerreSolver.LaguerreSolver(0)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.LaguerreSolverTest.fail(1)"
call "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
contain "org.apache.commons.math.analysis.LaguerreSolverTest" "org.apache.commons.math.analysis.LaguerreSolverTest.testParameters(0)"
reference "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.Vector3DTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.geometry.Vector3DTest" "junit.framework.TestCase"
call "org.apache.commons.math.geometry.Vector3DTest.Vector3DTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.Vector3DTest(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
reference "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
reference "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.MINUS_K"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(4)"
reference "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(6)"
reference "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.MINUS_J"
call "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(8)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testConstructors(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testCoordinates(0)"
reference "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.ZERO"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
call "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)" "org.apache.commons.math.geometry.Vector3D.subtract(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testSubtract(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3D.add(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
call "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)" "org.apache.commons.math.geometry.Vector3D.add(2)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAdd(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testScalarProduct(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testVectorialProducts(0)"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.getAlpha(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.getDelta(0)"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAngular(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.normalize(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.add(1)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3D.angle(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)" "org.apache.commons.math.geometry.Vector3DTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAngularSeparation(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3D.normalize(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
reference "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3D.ZERO"
call "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)" "org.apache.commons.math.geometry.Vector3DTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testNormalize(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)" "org.apache.commons.math.geometry.Vector3D.orthogonal(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)" "org.apache.commons.math.geometry.Vector3DTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testOrthogonal(0)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3D.angle(2)"
call "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3D.ZERO"
reference "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)" "org.apache.commons.math.geometry.Vector3DTest.fail(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.testAngle(0)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)" "org.apache.commons.math.geometry.Vector3D.getX(0)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)" "org.apache.commons.math.geometry.Vector3DTest.assertEquals(3)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)" "org.apache.commons.math.geometry.Vector3D.getY(0)"
call "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)" "org.apache.commons.math.geometry.Vector3D.getZ(0)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.checkVector(4)"
call "org.apache.commons.math.geometry.Vector3DTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.geometry.Vector3DTest" "org.apache.commons.math.geometry.Vector3DTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54StepInterpolatorTest.1.this$0"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.Min"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.MinTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.MinTest(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.min"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.getResult(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.increment(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Min.Min(0)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Min.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MinTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.testNaNs(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MinTest.stat" "org.apache.commons.math.stat.descriptive.rank.Min"
contain "org.apache.commons.math.stat.descriptive.rank.MinTest" "org.apache.commons.math.stat.descriptive.rank.MinTest.stat"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.PolynomialFunctionLagrangeFormTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.PolynomialFunctionLagrangeFormTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testLinearFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuadraticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.getCoefficients(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeForm.PolynomialFunctionLagrangeForm(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.fail(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest" "org.apache.commons.math.analysis.PolynomialFunctionLagrangeFormTest.testParameters(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3" "double[]"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.e"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.setInitialConditions(2)"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.setFinalConditions(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.setErrorScale(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.e"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.y"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem3.clone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.clone(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.e"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem3.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.e"
reference "org.apache.commons.math.ode.nonstiff.TestProblem3.y" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblem3" "org.apache.commons.math.ode.nonstiff.TestProblem3.y"
reference "org.apache.commons.math.random.RandomAdaptorTest.1" "org.apache.commons.math.random.RandomAdaptorTest"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2" "double[]"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.nonstiff.TestProblem2.setInitialConditions(2)"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.nonstiff.TestProblem2.setFinalConditions(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.nonstiff.TestProblem2.setErrorScale(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)" "org.apache.commons.math.ode.nonstiff.TestProblem2.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(1)" "org.apache.commons.math.ode.nonstiff.TestProblem2.y"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(1)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem2.clone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.doComputeDerivatives(3)" "org.apache.commons.math.ode.nonstiff.TestProblem2.n"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem2.n"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem2.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.TestProblem2.y" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblem2" "org.apache.commons.math.ode.nonstiff.TestProblem2.y"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "double[][]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.VectorialCovarianceTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testMismatch(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testSimplistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.testBasicStats(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.setUp(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.tearDown(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points" "double[][]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovarianceTest.points"
reference "org.apache.commons.math.ode.nonstiff.TestProblem5" "org.apache.commons.math.ode.nonstiff.TestProblem1"
call "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.t0"
reference "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.t1"
call "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.setFinalConditions(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem5" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem5" "org.apache.commons.math.ode.nonstiff.TestProblem5.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4" "double[]"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.a"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.setInitialConditions(2)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.setFinalConditions(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.setErrorScale(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.nonstiff.TestProblem4.a"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)" "org.apache.commons.math.ode.nonstiff.TestProblem4.y"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.clone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.clone(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.Bounce(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.Stop.Stop(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem4.a"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem4.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.a"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.y" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4" "org.apache.commons.math.ode.nonstiff.TestProblem4.y"
reference "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformer"
reference "org.apache.commons.math.transform.FastHadamardTransformerTest" "junit.framework.TestCase"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.FastHadamardTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.FastHadamardTransformerTest(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.test8Points(0)" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.test8Points(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.test4Points(0)" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.test4Points(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.testNoIntInverse(0)" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.testNoIntInverse(0)" "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.testNoIntInverse(0)" "org.apache.commons.math.transform.FastHadamardTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.testNoIntInverse(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.test3Points(0)" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.test3Points(0)" "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.test3Points(0)" "org.apache.commons.math.transform.FastHadamardTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.test3Points(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkDoubleTransform(2)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkInverseDoubleTransform(2)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkIntTransform(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkAllTransforms(2)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.assertEquals(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkDoubleTransform(2)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkIntTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkIntTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.transform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkIntTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.assertEquals(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkIntTransform(2)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkInverseDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.FastHadamardTransformer(0)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkInverseDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastHadamardTransformerTest.checkInverseDoubleTransform(2)" "org.apache.commons.math.transform.FastHadamardTransformerTest.assertEquals(2)"
contain "org.apache.commons.math.transform.FastHadamardTransformerTest" "org.apache.commons.math.transform.FastHadamardTransformerTest.checkInverseDoubleTransform(2)"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.GaussianRandomGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.GaussianRandomGeneratorTest(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGenerator.nextNormalizedDouble(0)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.GaussianRandomGeneratorTest.assertEquals(3)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.testMeanAndStandardDeviation(0)"
call "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.GaussianRandomGeneratorTest" "org.apache.commons.math.random.GaussianRandomGeneratorTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.ThirdMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.ThirdMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment.ThirdMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.thirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.ThirdMoment"
contain "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest" "org.apache.commons.math.stat.descriptive.moment.ThirdMomentTest.stat"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.LinearFullRankFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.n"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction" "org.apache.commons.math.estimation.MinpackTest.LinearFullRankFunction.getResiduals(0)"
reference "org.apache.commons.math.TestUtils" "junit.framework.AssertionFailedError"
reference "org.apache.commons.math.TestUtils" "junit.framework.Assert"
reference "org.apache.commons.math.TestUtils" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.TestUtils" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.TestUtils(0)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(4)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.commons.math.TestUtils.assertEquals(4)" "junit.framework.Assert.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(4)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertSame(2)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertSame(2)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "junit.framework.Assert.assertEquals(2)"
call "org.apache.commons.math.TestUtils.assertEquals(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.TestUtils.checkSerializedEquality(1)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)" "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertRelativelyEquals(3)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertTrue(2)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)" "junit.framework.Assert.assertEquals(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertRelativelyEquals(4)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(4)"
call "org.apache.commons.math.TestUtils.assertContains(3)" "org.apache.commons.math.TestUtils.assertContains(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.TestUtils.assertContains(4)" "junit.framework.Assert.fail(1)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(4)"
call "org.apache.commons.math.TestUtils.assertContains(3)" "org.apache.commons.math.TestUtils.assertContains(4)"
contain "org.apache.commons.math.TestUtils" "org.apache.commons.math.TestUtils.assertContains(3)"
reference "org.apache.commons.math.linear.FrenchRealVectorFormatTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest"
call "org.apache.commons.math.linear.FrenchRealVectorFormatTest.FrenchRealVectorFormatTest(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)"
contain "org.apache.commons.math.linear.FrenchRealVectorFormatTest" "org.apache.commons.math.linear.FrenchRealVectorFormatTest.FrenchRealVectorFormatTest(0)"
contain "org.apache.commons.math.linear.FrenchRealVectorFormatTest" "org.apache.commons.math.linear.FrenchRealVectorFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.linear.FrenchRealVectorFormatTest" "org.apache.commons.math.linear.FrenchRealVectorFormatTest.getLocale(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1" "double[]"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.setInitialConditions(2)"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.setFinalConditions(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.setErrorScale(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.y"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(1)" "org.apache.commons.math.ode.nonstiff.TestProblem1.y"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(1)" "double[].clone(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblem1.clone(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.doComputeDerivatives(3)" "org.apache.commons.math.ode.nonstiff.TestProblem1.n"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.doComputeDerivatives(3)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem1.t0"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem1.n"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem1.y"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)" "org.apache.commons.math.ode.nonstiff.TestProblem1.y0"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.TestProblem1.y" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblem1" "org.apache.commons.math.ode.nonstiff.TestProblem1.y"
reference "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.util.ContinuedFractionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFraction"
call "org.apache.commons.math.util.ContinuedFractionTest.ContinuedFractionTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFractionTest.ContinuedFractionTest(1)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)" "org.apache.commons.math.util.ContinuedFractionTest.1.{...}"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)" "org.apache.commons.math.util.ContinuedFraction.evaluate(2)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)" "org.apache.commons.math.util.ContinuedFractionTest.assertEquals(3)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)" "org.apache.commons.math.util.ContinuedFractionTest.fail(1)"
contain "org.apache.commons.math.util.ContinuedFractionTest" "org.apache.commons.math.util.ContinuedFractionTest.testGoldenRatio(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.QRDecompositionImplTest"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.2" "junit.framework.Assert"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.2.{...}" "org.apache.commons.math.linear.QRDecompositionImplTest.2.this$0"
call "org.apache.commons.math.linear.QRDecompositionImplTest.2.{...}" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.QRDecompositionImplTest.2.{...}"
call "org.apache.commons.math.linear.QRDecompositionImplTest.2.visit(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.QRDecompositionImplTest.2.visit(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.QRDecompositionImplTest.2.serialVersionUID"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.2.this$0" "org.apache.commons.math.linear.QRDecompositionImplTest"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.2" "org.apache.commons.math.linear.QRDecompositionImplTest.2.this$0"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.QRDecompositionImplTest"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.1.{...}" "org.apache.commons.math.linear.QRDecompositionImplTest.1.this$0"
call "org.apache.commons.math.linear.QRDecompositionImplTest.1.{...}" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.QRDecompositionImplTest.1.{...}"
call "org.apache.commons.math.linear.QRDecompositionImplTest.1.visit(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.QRDecompositionImplTest.1.visit(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.QRDecompositionImplTest.1.serialVersionUID"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.1.this$0" "org.apache.commons.math.linear.QRDecompositionImplTest"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.1" "org.apache.commons.math.linear.QRDecompositionImplTest.1.this$0"
reference "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.DefaultTransformer"
reference "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMap"
reference "org.apache.commons.math.util.TransformerMapTest" "junit.framework.TestCase"
call "org.apache.commons.math.util.TransformerMapTest.TransformerMapTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.TransformerMapTest(0)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMap.getTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertEquals(2)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testPutTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testContainsClass(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testContainsTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.containsTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMap.removeTransformer(1)"
call "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)" "org.apache.commons.math.util.TransformerMapTest.assertFalse(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testRemoveTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.containsClass(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMap.clear(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClear(0)" "org.apache.commons.math.util.TransformerMapTest.assertFalse(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testClear(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMap.classes(0)"
call "org.apache.commons.math.util.TransformerMapTest.testClasses(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testClasses(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.DefaultTransformer.DefaultTransformer(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.TransformerMap(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.putTransformer(2)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMap.transformers(0)"
call "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)" "org.apache.commons.math.util.TransformerMapTest.assertTrue(1)"
contain "org.apache.commons.math.util.TransformerMapTest" "org.apache.commons.math.util.TransformerMapTest.testTransformers(0)"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.MatrixVisitorException"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3.{...}" "org.apache.commons.math.linear.QRDecompositionImplTest.3.this$0"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3.{...}" "org.apache.commons.math.linear.QRDecompositionImplTest.3.val$r"
call "org.apache.commons.math.linear.QRDecompositionImplTest.3.{...}" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest.3.{...}"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3.visit(3)" "org.apache.commons.math.linear.QRDecompositionImplTest.3.val$r"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest.3.visit(3)"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest.3.serialVersionUID"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest.3.val$r"
reference "org.apache.commons.math.linear.QRDecompositionImplTest.3.this$0" "org.apache.commons.math.linear.QRDecompositionImplTest"
contain "org.apache.commons.math.linear.QRDecompositionImplTest.3" "org.apache.commons.math.linear.QRDecompositionImplTest.3.this$0"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolver"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
call "org.apache.commons.math.analysis.RiddersSolverTest.RiddersSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.RiddersSolverTest(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(1)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.RiddersSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.RiddersSolver.RiddersSolver(0)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)" "org.apache.commons.math.analysis.RiddersSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.RiddersSolverTest" "org.apache.commons.math.analysis.RiddersSolverTest.testParameters(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.DP54SmallLastHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.handleStep(2)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.wasLastSeen(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.lastSeen"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.DP54SmallLastHandler.minStep"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolator"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.PolynomialSplineFunction"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.TestUtils"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.SplineInterpolatorTest(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.suite(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateTwoSegment(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinearDegenerateThreeSegment(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateLinear(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.PolynomialFunction.getCoefficients(0)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testInterpolateSin(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.SplineInterpolator.SplineInterpolator(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)" "org.apache.commons.math.analysis.SplineInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.testIllegalArguments(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
reference "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyInterpolation(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialSplineFunction.getPolynomials(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.SplineInterpolatorTest.assertEquals(3)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.verifyConsistency(2)"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.knotTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.coefficientTolerance"
contain "org.apache.commons.math.analysis.SplineInterpolatorTest" "org.apache.commons.math.analysis.SplineInterpolatorTest.interpolationTolerance"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.ClassicalRungeKuttaStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.ClassicalRungeKuttaStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.PowellSingularFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
reference "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.static {...}"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt5"
contain "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction" "org.apache.commons.math.estimation.MinpackTest.PowellSingularFunction.sqrt10"
reference "org.apache.commons.math.linear.RealMatrixImplTest.1" "org.apache.commons.math.linear.RealMatrixImplTest"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "double[]"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImpl"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecomposition"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.SingularValueDecompositionImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.SingularValueDecompositionImplTest(1)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.SingularValueDecompositionImplTest(1)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.SingularValueDecompositionImplTest(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.suite(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getSingularValues(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreRows(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getSingularValues(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMoreColumns(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getS(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getV(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testAEqualUSVt(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.SingularValueDecomposition.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.SingularValueDecomposition.getS(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.SingularValueDecomposition.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkAEqualUSVt(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testUOrthogonal(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testVOrthogonal(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getS(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues1(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getU(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getS(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecomposition.getV(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testMatricesValues2(0)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getConditionNumber(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testConditionNumber(0)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createOrthogonalMatrix(2)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createDiagonalMatrix(3)"
call "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.createTestMatrix(4)"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare" "double[][]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testSquare"
reference "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare" "double[][]"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.testNonSquare"
contain "org.apache.commons.math.linear.SingularValueDecompositionImplTest" "org.apache.commons.math.linear.SingularValueDecompositionImplTest.normTolerance"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionImpl"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistribution"
reference "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.TDistributionTest.TDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.TDistributionTest(1)"
call "org.apache.commons.math.distribution.TDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.TDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.TDistributionTest.setUp(0)" "org.apache.commons.math.distribution.TDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.setUp(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)" "org.apache.commons.math.distribution.TDistributionImpl.cumulativeProbability(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testCumulativeProbabilityAgaintStackOverflow(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionImpl.TDistributionImpl(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setTolerance(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.getCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testSmallDf(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.TDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistribution.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.TDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.TDistributionTest" "org.apache.commons.math.distribution.TDistributionTest.testDfAccessors(0)"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.ClassicalRungeKuttaIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.ClassicalRungeKuttaIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSanityChecks(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegrator.ClassicalRungeKuttaIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.testStepSize(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.AdamsBashforthIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.AdamsBashforthIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.getCoeffs(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testCoefficients(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegratorTest.suite(0)"
reference "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.InvalidMatrixExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.InvalidMatrixExceptionTest(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixException.getMessage(0)"
call "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.linear.InvalidMatrixExceptionTest" "org.apache.commons.math.linear.InvalidMatrixExceptionTest.testConstructorMessage(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestValues(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDistribution(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeDensityTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tearDown(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistribution.probability(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testDensities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyDensities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testDensities(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(4)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testFloatingPointArguments(0)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testInverseCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.fail(1)"
call "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.IntegerDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.testIllegalArguments(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDensityTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDensityTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDistribution(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getDistribution(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDistribution(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setDistribution(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestPoints(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestValues(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setInverseCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getTolerance(0)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.getTolerance(0)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setTolerance(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.setTolerance(1)"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution" "org.apache.commons.math.distribution.IntegerDistribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.tolerance"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.densityTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues" "int[]"
contain "org.apache.commons.math.distribution.IntegerDistributionAbstractTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionImpl"
reference "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
call "org.apache.commons.math.distribution.BinomialDistributionTest.BinomialDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.BinomialDistributionTest(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate0(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionImpl.BinomialDistributionImpl(2)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.BinomialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.BinomialDistributionTest" "org.apache.commons.math.distribution.BinomialDistributionTest.testDegenerate1(0)"
reference "org.apache.commons.math.linear.EigenSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenDecompositionImpl"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.EigenSolverTest" "double[][]"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl"
reference "org.apache.commons.math.linear.EigenSolverTest" "double[]"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.EigenSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenDecompositionImplTest"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.RealVectorImplTest"
reference "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.RealVector"
call "org.apache.commons.math.linear.EigenSolverTest.EigenSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.EigenSolverTest(1)"
call "org.apache.commons.math.linear.EigenSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.EigenSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.suite(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.EigenSolverTest.assertFalse(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)" "org.apache.commons.math.linear.EigenSolverTest.fail(1)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.testNonInvertible(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.EigenSolverTest.assertTrue(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)" "org.apache.commons.math.linear.EigenSolverTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.testInvertible(0)"
reference "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.EigenSolverTest.matrix"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.EigenSolverTest.fail(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.testSolveDimensionErrors(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.EigenSolverTest.assertEquals(3)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.getNorm(0)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.subtract(1)"
call "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.testSolve(0)"
reference "org.apache.commons.math.linear.EigenSolverTest.setUp(0)" "org.apache.commons.math.linear.EigenSolverTest.refValues"
call "org.apache.commons.math.linear.EigenSolverTest.setUp(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
reference "org.apache.commons.math.linear.EigenSolverTest.setUp(0)" "org.apache.commons.math.linear.EigenSolverTest.matrix"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.setUp(0)"
reference "org.apache.commons.math.linear.EigenSolverTest.tearDown(0)" "org.apache.commons.math.linear.EigenSolverTest.refValues"
reference "org.apache.commons.math.linear.EigenSolverTest.tearDown(0)" "org.apache.commons.math.linear.EigenSolverTest.matrix"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.tearDown(0)"
reference "org.apache.commons.math.linear.EigenSolverTest.refValues" "double[]"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.refValues"
reference "org.apache.commons.math.linear.EigenSolverTest.matrix" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.EigenSolverTest" "org.apache.commons.math.linear.EigenSolverTest.matrix"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestImpl"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
reference "org.apache.commons.math.stat.inference.TTestTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.TTestTest" "double[]"
reference "org.apache.commons.math.stat.inference.TTestTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTest"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "junit.framework.TestCase.TestCase(1)"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestImpl.TTestImpl(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
call "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.TTestTest(1)"
call "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
call "org.apache.commons.math.stat.inference.TTestTest.setUp(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.setUp(0)"
call "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.TTestTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.suite(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testOneSampleT(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testOneSampleTTest(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTest.tTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.fail(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHeterscedastic(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.SummaryStatistics(0)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.descriptive.SummaryStatistics.addValue(1)"
reference "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticT(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTest.homoscedasticTTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(2)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testTwoSampleTHomoscedastic(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTest.t(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)" "org.apache.commons.math.stat.inference.TTest.tTest(2)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testSmallSamples(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedT(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertEquals(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(2)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTest.pairedTTest(3)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertFalse(1)"
call "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)" "org.apache.commons.math.stat.inference.TTestTest.assertTrue(1)"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testPaired(0)"
reference "org.apache.commons.math.stat.inference.TTestTest.testStatistic" "org.apache.commons.math.stat.inference.TTest"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.testStatistic"
reference "org.apache.commons.math.stat.inference.TTestTest.tooShortObs" "double[]"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.tooShortObs"
reference "org.apache.commons.math.stat.inference.TTestTest.emptyObs" "double[]"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.emptyObs"
reference "org.apache.commons.math.stat.inference.TTestTest.emptyStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.emptyStats"
reference "org.apache.commons.math.stat.inference.TTestTest.tooShortStats" "org.apache.commons.math.stat.descriptive.SummaryStatistics"
contain "org.apache.commons.math.stat.inference.TTestTest" "org.apache.commons.math.stat.inference.TTestTest.tooShortStats"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
reference "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.UniformRandomGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.UniformRandomGeneratorTest(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGenerator.UniformRandomGenerator(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGenerator.nextNormalizedDouble(0)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.random.UniformRandomGeneratorTest.assertEquals(3)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.testMeanAndStandardDeviation(0)"
call "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.UniformRandomGeneratorTest" "org.apache.commons.math.random.UniformRandomGeneratorTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.PercentileTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.PercentileTest(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.percentile95"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testHighPercentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(0)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testPercentile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNISTExample(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.percentile5"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testArray"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.test5(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testNullEmpty(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(4)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSingleton(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.setQuantile(1)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.getQuantile(0)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.testSetQuantile(0)"
reference "org.apache.commons.math.stat.descriptive.rank.PercentileTest.stat" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.descriptive.rank.PercentileTest" "org.apache.commons.math.stat.descriptive.rank.PercentileTest.stat"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistribution"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "junit.framework.TestCase.setUp(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeDistribution(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.makeInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "junit.framework.TestCase.tearDown(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tearDown(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testInverseCumulativeProbabilities(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testInverseCumulativeProbabilities(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(4)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testConsistency(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.fail(1)"
call "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)" "org.apache.commons.math.distribution.ContinuousDistribution.inverseCumulativeProbability(1)"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.testIllegalArguments(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestPoints(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestValues(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getDistribution(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getDistribution(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setDistribution(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setDistribution(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestPoints(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestPoints(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestPoints(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestPoints(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestValues(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getInverseCumulativeTestValues(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestValues(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setInverseCumulativeTestValues(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.getTolerance(0)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setTolerance(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setTolerance(1)"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution" "org.apache.commons.math.distribution.ContinuousDistribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.distribution"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.tolerance"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.cumulativeTestValues"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestPoints"
reference "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues" "double[]"
contain "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.inverseCumulativeTestValues"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sum"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.evaluate(1)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sum"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.clear(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.clear(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.getN(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.getN(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.getResult(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sum"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.increment(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sum"
reference "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.increment(1)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.n"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.increment(1)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.incrementAll(3)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.copy(0)" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sumMean(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.copy(0)"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.serialVersionUID"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.sum"
contain "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean" "org.apache.commons.math.stat.descriptive.MultivariateSummaryStatisticsTest.sumMean.n"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.this$0"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.val$pb"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.{...}"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.eventOccurred(2)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.g(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.val$pb"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.g(2)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.g(2)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.g(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.val$pb" "org.apache.commons.math.ode.nonstiff.TestProblem1"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.val$pb"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.this$0" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.3.this$0"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.events.EventException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.this$0"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.val$pb"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.eventOccurred(2)"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.g(2)" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.val$pb"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.g(2)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.g(2)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.g(2)" "org.apache.commons.math.ode.events.EventException.EventException(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.g(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.val$pb" "org.apache.commons.math.ode.nonstiff.TestProblem1"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.val$pb"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.2.this$0"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.computeDerivatives(3)" "org.apache.commons.math.ode.DerivativeException.DerivativeException(2)"
call "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.computeDerivatives(3)" "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.HighamHall54IntegratorTest.1.this$0"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.ContinuousOutputModelTest(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testBoundaries(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testRandomAccess(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.{...}"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.append(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertEquals(3)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testModelsMerging(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertTrue(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertFalse(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.testErrorConditions(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)" "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)" "org.apache.commons.math.ode.ContinuousOutputModel.handleStep(2)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)" "org.apache.commons.math.ode.ContinuousOutputModel.append(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.checkAppendError(4)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.shift(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.buildInterpolator(3)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.checkValue(2)" "org.apache.commons.math.ode.ContinuousOutputModelTest.assertTrue(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.checkValue(2)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.suite(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54Integrator.DormandPrince54Integrator(4)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.setUp(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.tearDown(0)"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.pb"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.integ" "org.apache.commons.math.ode.FirstOrderIntegrator"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest" "org.apache.commons.math.ode.ContinuousOutputModelTest.integ"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.JDKRandomGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.GaussianRandomGenerator"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.RandomGenerator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.UncorrelatedRandomVectorGeneratorTest(1)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.VectorialCovariance(2)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.nextVector(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.increment(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialCovariance.getResult(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.assertEquals(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.testMeanAndCorrelation(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.JDKRandomGenerator.JDKRandomGenerator(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.RandomGenerator.setSeed(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.GaussianRandomGenerator.GaussianRandomGenerator(1)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator.UncorrelatedRandomVectorGenerator(3)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.setUp(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.tearDown(0)"
call "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.suite(0)"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.mean"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation" "double[]"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.standardDeviation"
reference "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator" "org.apache.commons.math.random.UncorrelatedRandomVectorGenerator"
contain "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest" "org.apache.commons.math.random.UncorrelatedRandomVectorGeneratorTest.generator"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartial(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getTheoreticalValue(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.px"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.py"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.serialVersionUID"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.this$0"
reference "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.ConvergenceExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.ConvergenceExceptionTest.ConvergenceExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.ConvergenceExceptionTest(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructor(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertNull(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getPattern(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.ConvergenceException(3)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getCause(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getPattern(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getArguments(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertEquals(2)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getMessage(0)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceExceptionTest.assertFalse(1)"
call "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.ConvergenceException.getMessage(1)"
contain "org.apache.commons.math.ConvergenceExceptionTest" "org.apache.commons.math.ConvergenceExceptionTest.testConstructorPatternArgumentsCause(0)"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectional"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "double[]"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "junit.framework.TestCase"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.ConvergenceException"
reference "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.PointCostPair"
call "org.apache.commons.math.optimization.MultiDirectionalTest.MultiDirectionalTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.MultiDirectionalTest(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.1.{...}"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(2)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectional.minimize(5)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.fail(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.CostException.getCause(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertNull(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertNotNull(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.testCostExceptions(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.2.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectional.minimize(4)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertTrue(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.testRosenbrock(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.3.{...}"
reference "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectional.MultiDirectional(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.ValueChecker.ValueChecker(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectional.minimize(5)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.MultiDirectionalTest.assertTrue(1)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)" "org.apache.commons.math.optimization.PointCostPair.getCost(0)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.testPowell(0)"
call "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.suite(0)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.access$004(1)"
contain "org.apache.commons.math.optimization.MultiDirectionalTest" "org.apache.commons.math.optimization.MultiDirectionalTest.count"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.BadStepInterpolator(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.BadStepInterpolator(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.BadStepInterpolator(2)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.BadStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.doFinalize(0)" "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.doFinalize(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.JennrichSampsonFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction" "org.apache.commons.math.estimation.MinpackTest.JennrichSampsonFunction.getResiduals(0)"
reference "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest"
call "org.apache.commons.math.complex.ComplexFormatTest.ComplexFormatTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.ComplexFormatTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.complex.ComplexFormatTest" "org.apache.commons.math.complex.ComplexFormatTest.getLocale(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.DoubleArrayAbstractTest"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.random.RandomData"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.ResizableDoubleArrayTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.ResizableDoubleArrayTest(1)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.ra"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.tearDown(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.ra"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.setUp(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testConstructors(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.setElement(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.DoubleArray.clear(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetElementArbitraryExpansion(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testAdd1000(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.clear(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(4)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getInternalLength(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArray.setNumElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testSetNumberOfElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.random.RandomData.nextInt(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacity(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.random.RandomData.nextInt(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(4)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testWithInitialCapacityAndExpansionFactor(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testDiscard(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.ResizableDoubleArray.substituteMostRecentElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testSubstitute(0)"
reference "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.da"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setContractionCriteria(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getContractionCriteria(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionFactor(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionFactor(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.fail(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.setExpansionMode(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArray.getExpansionMode(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testMutators(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.equals(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertFalse(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertTrue(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(3)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyInequality(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElement(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardFrontElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.discardMostRecentElements(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.copy(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.ResizableDoubleArray(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)" "org.apache.commons.math.util.ResizableDoubleArray.copy(0)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)" "org.apache.commons.math.util.ResizableDoubleArray.equals(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertTrue(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)" "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertEquals(2)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyEquality(2)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyInequality(2)" "org.apache.commons.math.util.ResizableDoubleArray.equals(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyInequality(2)" "org.apache.commons.math.util.ResizableDoubleArrayTest.assertFalse(1)"
call "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyInequality(2)" "org.apache.commons.math.util.ResizableDoubleArray.hashCode(0)"
contain "org.apache.commons.math.util.ResizableDoubleArrayTest" "org.apache.commons.math.util.ResizableDoubleArrayTest.verifyInequality(2)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.badPercentile(0)" "org.apache.commons.math.stat.descriptive.rank.Percentile.Percentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.badPercentile(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.percentile"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.badPercentile(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(3)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(3)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.percentile"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(1)" "org.apache.commons.math.stat.descriptive.rank.Percentile.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.badPercentile(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.copy(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.percentile" "org.apache.commons.math.stat.descriptive.rank.Percentile"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.percentile"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "double[]"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImpl"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "double[][]"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.luData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.detData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.RealMatrixImplTest(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.setUp(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.suite(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testAdd(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImpl.add(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testAddFail(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImpl.getFrobeniusNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testFrobeniusNorm(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrix.add(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.multiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testTrace(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testOperate(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testMath209(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testTranspose(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.getData(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.id"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImpl.preMultiply(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetEntry(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testExamples(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetSubMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(7)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.checkGetSubMatrix(5)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
call "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testCopySubMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(7)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.checkCopy(5)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertNotSame(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertNotSame(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnMatrix(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetRowVector(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertNotSame(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.setRowVector(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetRowVector(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.columnToVector(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumnVector(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.columnToVector(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertNotSame(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.setColumnVector(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumnVector(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.columnToVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.columnToVector(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetRow(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrix.setRow(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetRow(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.columnToArray(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testGetColumn(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.columnToArray(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrix.setColumn(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetColumn(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.columnToArray(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.checkArrays(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertFalse(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testToString(0)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(0)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImplTest.SetVisitor.SetVisitor(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.GetVisitor(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImplTest.GetVisitor.getCount(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testWalk(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.RealMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.RealMatrixImpl.RealMatrixImpl(1)"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.permuteRows(2)"
reference "org.apache.commons.math.linear.RealMatrixImplTest.id" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.id"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.RealMatrixImplTest.luData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.luData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.RealMatrixImplTest.singular" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.singular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.RealMatrixImplTest.detData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.detData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testVector" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.RealMatrixImplTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.subColumn3"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.entryTolerance"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d3" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d3"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d4" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d4"
reference "org.apache.commons.math.linear.RealMatrixImplTest.d5" "double[][]"
contain "org.apache.commons.math.linear.RealMatrixImplTest" "org.apache.commons.math.linear.RealMatrixImplTest.d5"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.RosenbrockFunction(2)"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction" "org.apache.commons.math.estimation.MinpackTest.RosenbrockFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.Sum"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.SumTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.SumTest(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.sum"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.Sum(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.Sum.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.testSpecialValues(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumTest.stat" "org.apache.commons.math.stat.descriptive.summary.Sum"
contain "org.apache.commons.math.stat.descriptive.summary.SumTest" "org.apache.commons.math.stat.descriptive.summary.SumTest.stat"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "double[]"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.NonSquareMatrixException"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "double[][]"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DecompositionSolver"
call "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataLU"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlus2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataMinus"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataCol3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2T"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlusInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.luData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.singular"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.detData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.detData2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows02Cols13"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows31Cols31"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows23Cols00"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.normTolerance"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.d3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)" "org.apache.commons.math.linear.DenseRealMatrixTest.d5"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.DenseRealMatrixTest(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.setUp(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.suite(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrix.isSquare(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertTrue(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDimensions(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.DenseRealMatrix.getData(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrix.getColumnDimension(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlusInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testAdd(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.DenseRealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testAddFail(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.getNorm(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testNorm(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrix.getFrobeniusNorm(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(4)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testFrobeniusNorm(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrix.subtract(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrix.scalarMultiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.RealMatrix.add(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.setEntry(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.add(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSeveralBlocks(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d5"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.RealMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(4)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testTrace(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlus2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.RealMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testOperate(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testOperateLarge(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testOperatePremultiplyLarge(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testMath209(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.normTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2T"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testTranspose(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.normTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.RealVectorImpl.getData(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.d5"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.RealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataCol3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(4)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetEntry(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.getInverse(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testExamples(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows23Cols00"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows02Cols13"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows31Cols31"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSubMatrix(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(7)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.checkGetSubMatrix(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getData(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.setSubMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetMatrixLarge(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows23Cols00"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows02Cols13"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows31Cols31"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testCopySubMatrix(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(7)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)" "org.apache.commons.math.linear.RealMatrix.copySubMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.checkCopy(5)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertNotSame(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.RealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowMatrix(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.setRowMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowMatrixLarge(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertNotSame(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.RealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnMatrix(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.scalarAdd(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.setColumnMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.RealMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnMatrixLarge(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRowVector(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertNotSame(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.setRowVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRowVector(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.setRowVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.getRowVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowVectorLarge(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToVector(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumnVector(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertNotSame(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealMatrix.setColumnVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumnVector(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.setColumnVector(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnVectorLarge(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.columnToVector(1)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToVector(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetRow(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertTrue(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.RealMatrix.setRow(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetRow(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.RealMatrix.setRow(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.RealMatrix.getRow(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetRowLarge(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToArray(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetColumn(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToArray(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertTrue(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.RealMatrix.setColumn(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetColumn(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.RealMatrix.setColumn(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testGetSetColumnLarge(0)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.columnToArray(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.checkArrays(2)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrix.copy(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrix.transpose(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrix.hashCode(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertTrue(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrix.equals(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertFalse(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.DenseRealMatrix.toString(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testToString(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testToString(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.detData2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.setSubMatrix(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlus2"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.SetVisitor(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.GetVisitor(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.getCount(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInRowOrder(5)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)" "org.apache.commons.math.linear.RealMatrix.walkInColumnOrder(5)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testWalk(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertTrue(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)" "org.apache.commons.math.linear.DenseRealMatrixTest.fail(1)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)" "org.apache.commons.math.linear.DenseRealMatrixTest.assertEquals(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.assertClose(3)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(2)"
call "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)" "org.apache.commons.math.linear.DenseRealMatrix.setEntry(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.createRandomMatrix(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.id" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.id"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testData" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataLU"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlus2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataMinus"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataRow1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataCol3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.preMultTest"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testData2T"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testDataPlusInv"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.luData" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.luData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.singular" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.singular"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.bigSingular"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.detData" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.detData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.detData2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testVector" "double[]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.testVector2"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subTestData"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows02Cols13"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols12"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows03Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows20Cols123"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows31Cols31"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows01Cols23"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows23Cols00"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRows00Cols33"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow0"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subRow3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn1"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.subColumn3"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.entryTolerance"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.normTolerance"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.d3" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.d3"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.d4" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.d4"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.d5" "double[][]"
contain "org.apache.commons.math.linear.DenseRealMatrixTest" "org.apache.commons.math.linear.DenseRealMatrixTest.d5"
reference "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.QuinticFunction.1.{...}" "org.apache.commons.math.analysis.QuinticFunction.1.this$0"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.{...}"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.value(1)"
reference "org.apache.commons.math.analysis.QuinticFunction.1.this$0" "org.apache.commons.math.analysis.QuinticFunction"
contain "org.apache.commons.math.analysis.QuinticFunction.1" "org.apache.commons.math.analysis.QuinticFunction.1.this$0"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.setCostAccuracy(1)"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.setParamsAccuracy(1)"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.KowalikOsborneFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.v"
reference "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction" "org.apache.commons.math.estimation.MinpackTest.KowalikOsborneFunction.y"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.SumSqTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.SumSqTest(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.SumOfSquares(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.testSpecialValues(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumSqTest.stat" "org.apache.commons.math.stat.descriptive.summary.SumOfSquares"
contain "org.apache.commons.math.stat.descriptive.summary.SumSqTest" "org.apache.commons.math.stat.descriptive.summary.SumSqTest.stat"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.mean"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.geoMean"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.var"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.std"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.skew"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.kurt"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.min"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.max"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.median"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile5"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile95"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.product"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumLog"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sum"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.secondMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.thirdMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.fourthMoment"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testEvaluation(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.copy(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testCopy(0)"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.mean"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.geoMean"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.var"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.std"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.skew"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.kurt"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.min"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.max"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.median"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile5"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.percentile95"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.product"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumLog"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.sum"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.secondMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.thirdMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.fourthMoment"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.testArray"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.pb"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.KeplerStepHandler.pb"
reference "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.Expm1Function.1.{...}" "org.apache.commons.math.analysis.Expm1Function.1.this$0"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.{...}"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.value(1)"
reference "org.apache.commons.math.analysis.Expm1Function.1.this$0" "org.apache.commons.math.analysis.Expm1Function"
contain "org.apache.commons.math.analysis.Expm1Function.1" "org.apache.commons.math.analysis.Expm1Function.1.this$0"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "double[]"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImpl"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.TriDiagonalTransformer"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "double[][]"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecomposition"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.RealVector"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.EigenDecompositionImplTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.EigenDecompositionImplTest(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.suite(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension1(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension1(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension1(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension1(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension1(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension2(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension2(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension2(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension2(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension2(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension3(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension3(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension3(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension3(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension3(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithSplit(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithSplit(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithSplit(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithSplit(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithSplit(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithoutSplit(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithoutSplit(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithoutSplit(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithoutSplit(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimension4WithoutSplit(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getMainDiagonalRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getSecondaryDiagonalRef(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testTridiagonal(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecomposition.getD(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)" "org.apache.commons.math.linear.EigenDecomposition.getVT(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.refValues"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvalues(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testBigMatrix(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.EigenDecomposition.getEigenvector(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.RealMatrix.operate(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.RealVector.mapMultiplyToSelf(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.RealVector.subtract(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.RealVector.getNorm(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testEigenvectors(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecomposition.getD(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecomposition.getVT(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testAEqualVDVt(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.getV(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testVOrthogonal(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createDiagonalMatrix(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDiagonal(0)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalue(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDiagonal(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDiagonal(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testRepeatedEigenvalue(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testRepeatedEigenvalue(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testRepeatedEigenvalue(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testRepeatedEigenvalue(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testRepeatedEigenvalue(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDistinctEigenvalues(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDistinctEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDistinctEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.testDistinctEigenvalues(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.testDistinctEigenvalues(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)" "org.apache.commons.math.linear.EigenDecomposition.getRealEigenvalues(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)" "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedValue(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenValues(3)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedValue(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)" "org.apache.commons.math.linear.EigenDecomposition.getV(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)" "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedColumn(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)" "org.apache.commons.math.linear.EigenDecompositionImplTest.assertTrue(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.checkEigenVector(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedColumn(3)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedColumn(3)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedColumn(3)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.isIncludedColumn(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.setUp(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.refValues"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.setUp(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.setUp(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.setUp(0)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.tearDown(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.refValues"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.tearDown(0)" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.tearDown(0)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createOrthogonalMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)" "org.apache.commons.math.linear.EigenDecompositionImplTest.createDiagonalMatrix(3)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.createTestMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createOrthogonalMatrix(2)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.createOrthogonalMatrix(2)"
call "org.apache.commons.math.linear.EigenDecompositionImplTest.createDiagonalMatrix(3)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.createDiagonalMatrix(3)"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.refValues" "double[]"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.refValues"
reference "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix" "org.apache.commons.math.linear.RealMatrix"
contain "org.apache.commons.math.linear.EigenDecompositionImplTest" "org.apache.commons.math.linear.EigenDecompositionImplTest.matrix"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.WeightedMeasurement[]"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.PointModel(3)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getM(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getM(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getMeasurements(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getMeasurements(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getAllParameters(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiX(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusX(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getPartialDiY(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getPartialRadiusY(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getRadius(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getX(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$000(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.access$100(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.points"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.setCostAccuracy(1)"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.setParamsAccuracy(1)"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.MeyerFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.MeyerFunction" "org.apache.commons.math.estimation.MinpackTest.MeyerFunction.y"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.maxStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.maxStep"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.firstTime"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.minStep"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.maxStep"
reference "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest"
reference "org.apache.commons.math.linear.QRSolverTest.1.{...}" "org.apache.commons.math.linear.QRSolverTest.1.this$0"
reference "org.apache.commons.math.linear.QRSolverTest.1.{...}" "org.apache.commons.math.linear.QRSolverTest.1.val$r"
call "org.apache.commons.math.linear.QRSolverTest.1.{...}" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest.1.{...}"
reference "org.apache.commons.math.linear.QRSolverTest.1.visit(3)" "org.apache.commons.math.linear.QRSolverTest.1.val$r"
contain "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest.1.visit(3)"
contain "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest.1.serialVersionUID"
contain "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest.1.val$r"
reference "org.apache.commons.math.linear.QRSolverTest.1.this$0" "org.apache.commons.math.linear.QRSolverTest"
contain "org.apache.commons.math.linear.QRSolverTest.1" "org.apache.commons.math.linear.QRSolverTest.1.this$0"
reference "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.MatrixVisitorException"
reference "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest"
reference "org.apache.commons.math.linear.QRSolverTest.2.{...}" "org.apache.commons.math.linear.QRSolverTest.2.this$0"
reference "org.apache.commons.math.linear.QRSolverTest.2.{...}" "org.apache.commons.math.linear.QRSolverTest.2.val$r"
call "org.apache.commons.math.linear.QRSolverTest.2.{...}" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest.2.{...}"
reference "org.apache.commons.math.linear.QRSolverTest.2.visit(3)" "org.apache.commons.math.linear.QRSolverTest.2.val$r"
contain "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest.2.visit(3)"
contain "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest.2.serialVersionUID"
contain "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest.2.val$r"
reference "org.apache.commons.math.linear.QRSolverTest.2.this$0" "org.apache.commons.math.linear.QRSolverTest"
contain "org.apache.commons.math.linear.QRSolverTest.2" "org.apache.commons.math.linear.QRSolverTest.2.this$0"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.KurtosisTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.KurtosisTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.kurt"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.assertFalse(1)"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.testNaN(0)"
reference "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.stat" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
contain "org.apache.commons.math.stat.descriptive.moment.KurtosisTest" "org.apache.commons.math.stat.descriptive.moment.KurtosisTest.stat"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.complex.Complex[]"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.complex.Complex[][]"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.MathException"
call "org.apache.commons.math.transform.FastFourierTransformerTest.FastFourierTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.FastFourierTransformerTest(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.transform.FastFourierTransformer.mdfft(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(2)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.test2DData(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.complex.Complex.getReal(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.complex.Complex.getImaginary(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastFourierTransformer.inversetransform(4)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformer.FastFourierTransformer(0)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformer.transform(4)"
call "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastFourierTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastFourierTransformerTest" "org.apache.commons.math.transform.FastFourierTransformerTest.testParameters(0)"
reference "org.apache.commons.math.analysis.BrentSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.SecantSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.MonitoredFunction"
reference "org.apache.commons.math.analysis.BrentSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolverUtils"
call "org.apache.commons.math.analysis.BrentSolverTest.BrentSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.BrentSolverTest(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.suite(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.SecantSolver.SecantSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolverUtils.solve(3)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testRootEndpoints(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)" "org.apache.commons.math.analysis.BrentSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testBadEndpoints(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolver.BrentSolver(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertTrue(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(4)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.fail(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)" "org.apache.commons.math.analysis.BrentSolverTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.BrentSolverTest" "org.apache.commons.math.analysis.BrentSolverTest.testInitialGuess(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "double[][]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMean"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.DimensionMismatchException"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.VectorialMeanTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.fail(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension1(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)" "org.apache.commons.math.DimensionMismatchException.getDimension2(0)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testMismatch(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testSimplistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.VectorialMean(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.increment(1)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getN(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMean.getResult(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.testBasicStats(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.setUp(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.setUp(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.tearDown(0)" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.tearDown(0)"
call "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points" "double[][]"
contain "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest" "org.apache.commons.math.stat.descriptive.moment.VectorialMeanTest.points"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionImpl"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistribution"
reference "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.NormalDistributionTest.NormalDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.NormalDistributionTest(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.setUp(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.setUp(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setDistribution(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistribution.getMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testGetMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testSetMean(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testGetStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistribution.getStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.verifyQuantiles(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)" "org.apache.commons.math.distribution.NormalDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testSetStandardDeviation(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.NormalDistributionTest.checkDensity(4)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testDensity(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.NormalDistributionImpl.NormalDistributionImpl(2)"
call "org.apache.commons.math.distribution.NormalDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.NormalDistribution.density(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.checkDensity(4)" "org.apache.commons.math.distribution.NormalDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.checkDensity(4)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.setMean(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.setStandardDeviation(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)" "org.apache.commons.math.distribution.NormalDistributionTest.assertTrue(1)"
contain "org.apache.commons.math.distribution.NormalDistributionTest" "org.apache.commons.math.distribution.NormalDistributionTest.testExtremeValues(0)"
reference "org.apache.commons.math.geometry.Vector3DFormatTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest"
call "org.apache.commons.math.geometry.Vector3DFormatTest.Vector3DFormatTest(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatTest" "org.apache.commons.math.geometry.Vector3DFormatTest.Vector3DFormatTest(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatTest" "org.apache.commons.math.geometry.Vector3DFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.geometry.Vector3DFormatTest" "org.apache.commons.math.geometry.Vector3DFormatTest.getLocale(0)"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionImpl"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
reference "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistribution"
call "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)" "org.apache.commons.math.distribution.PoissonDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.PoissonDistributionTest(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeDensityTestValues(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.normalApproximateProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testNormalApproximateProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(2)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testDegenerateInverseCumulativeProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistribution.getMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testMean(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.cumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanCumulativeProbability(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionImpl.PoissonDistributionImpl(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.setMean(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistribution.inverseCumulativeProbability(1)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)" "org.apache.commons.math.distribution.PoissonDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.testLargeMeanInverseCumulativeProbability(0)"
contain "org.apache.commons.math.distribution.PoissonDistributionTest" "org.apache.commons.math.distribution.PoissonDistributionTest.DEFAULT_TEST_POISSON_PARAMETER"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$000(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$100(2)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance" "org.apache.commons.math.estimation.WeightedMeasurementTest"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.testInstance"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.serialVersionUID"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolver"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
reference "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.analysis.NewtonSolverTest.NewtonSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.NewtonSolverTest(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getResult(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getIterationCount(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertTrue(1)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testSinZero(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testQuinticZero(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.NewtonSolver(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.solve(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolverTest.assertEquals(3)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.setRelativeAccuracy(1)"
call "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)" "org.apache.commons.math.analysis.NewtonSolver.resetRelativeAccuracy(0)"
contain "org.apache.commons.math.analysis.NewtonSolverTest" "org.apache.commons.math.analysis.NewtonSolverTest.testSerialization(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "double[]"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t1"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0"
call "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "double[].clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.TestProblemAbstract(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.n"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t0"
call "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)" "double[].clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setInitialConditions(2)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setFinalConditions(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setFinalConditions(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setErrorScale(1)" "double[].clone(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setErrorScale(1)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.setErrorScale(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.n"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t0"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t1"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getErrorScale(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getErrorScale(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getCalls(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getCalls(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.computeDerivatives(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
call "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.computeDerivatives(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.doComputeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.doComputeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.n"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.calls"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t0"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.y0"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.t1"
reference "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale" "double[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblemAbstract" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.errorScale"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.StepProblem"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.GraggBulirschStoerIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.GraggBulirschStoerIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdaptiveStepsizeIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testNullIntervalCheck(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStabilityCheck(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setStepsizeControl(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setOrderControl(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.setInterpolationControl(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testIntegratorControls(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.getMaxError(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testEvents(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.KeplerStepHandler.KeplerStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testVariableSteps(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegrator.GraggBulirschStoerIntegrator(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.testUnstableDerivative(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.suite(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors" "double[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.AbstractUnivariateStatisticTest(1)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.assertTrue(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestPositive(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.test(3)"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.assertFalse(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
call "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.fail(1)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testTestNegative(0)"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.nullArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.singletonArray"
reference "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic" "org.apache.commons.math.stat.descriptive.moment.Mean"
contain "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest" "org.apache.commons.math.stat.descriptive.AbstractUnivariateStatisticTest.testStatistic"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.UnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.deepMean(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.evaluate(3)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.copy(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.deepMean(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.copy(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.serialVersionUID"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "junit.framework.TestCase"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurement"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.WeightedMeasurementTest(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getWeight(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getMeasuredValue(0)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testConstruction(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.isIgnored(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.assertTrue(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)" "org.apache.commons.math.estimation.WeightedMeasurement.setIgnored(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testIgnored(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.MyMeasurement.MyMeasurement(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getTheoreticalValue(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getResidual(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurement.getPartial(1)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.EstimatedParameter.setEstimate(1)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.testTheory(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.suite(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.setUp(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.tearDown(0)"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)" "org.apache.commons.math.estimation.WeightedMeasurementTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.checkValue(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
call "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.theoretical(0)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.partial(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$000(1)"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.access$100(2)"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.p1" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.p1"
reference "org.apache.commons.math.estimation.WeightedMeasurementTest.p2" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.WeightedMeasurementTest" "org.apache.commons.math.estimation.WeightedMeasurementTest.p2"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestImpl"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "long[]"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "junit.framework.TestCase.TestCase(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.setUp(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.suite(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquare(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTest(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquare(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareIndependence(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.ChiSquareTestImpl(0)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestImpl.chiSquareTest(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquare(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareLargeTestStatistic(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquare(1)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareZeroCount(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertFalse(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonEqualCounts(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertEquals(4)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(3)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.assertFalse(2)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonUnEqualCounts(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest.chiSquareTestDataSetsComparison(2)"
call "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.fail(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testChiSquareDataSetsComparisonBadCounts(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic" "org.apache.commons.math.stat.inference.UnknownDistributionChiSquareTest"
contain "org.apache.commons.math.stat.inference.ChiSquareTestTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest.testStatistic"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.ThreeEighthesStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.ThreeEighthesStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.VariableStepHandler(0)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
reference "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
call "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.firstTime"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.minStep"
contain "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler" "org.apache.commons.math.ode.nonstiff.GraggBulirschStoerIntegratorTest.VariableStepHandler.maxStep"
reference "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.MatrixIndexExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.MatrixIndexExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexExceptionTest.MatrixIndexExceptionTest(0)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexException.MatrixIndexException(2)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexException.getMessage(0)"
call "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)" "org.apache.commons.math.linear.MatrixIndexExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.linear.MatrixIndexExceptionTest" "org.apache.commons.math.linear.MatrixIndexExceptionTest.testConstructorMessage(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.Fraction"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.ProperFractionFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest" "junit.framework.TestCase"
reference "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.FractionFormatTest(0)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.getLocale(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.getLocale(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormat.getProperInstance(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormat.getImproperInstance(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.setUp(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatNegative(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatZero(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproper(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.Fraction.Fraction(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormat.format(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testFormatImproperNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParse(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInteger(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalid(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseInvalidDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProper(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertNotNull(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.Fraction.getNumerator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.Fraction.getDenominator(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProperNegative(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormat.parse(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)" "org.apache.commons.math.fraction.FractionFormatTest.fail(1)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testParseProperInvalidMinus(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getNumeratorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.setNumeratorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testNumeratorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.getDenominatorFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormat.setDenominatorFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testDenominatorFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.getWholeFormat(0)"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.ProperFractionFormat.setWholeFormat(1)"
call "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)" "org.apache.commons.math.fraction.FractionFormatTest.assertEquals(2)"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.testWholeFormat(0)"
reference "org.apache.commons.math.fraction.FractionFormatTest.properFormat" "org.apache.commons.math.fraction.FractionFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.properFormat"
reference "org.apache.commons.math.fraction.FractionFormatTest.improperFormat" "org.apache.commons.math.fraction.FractionFormat"
contain "org.apache.commons.math.fraction.FractionFormatTest" "org.apache.commons.math.fraction.FractionFormatTest.improperFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.util.CompositeFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.ComplexFormatAbstractTest(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.setUp(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleNoDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeBoth(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testZeroImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testDifferentImaginaryChar(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormat.formatComplex(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testStaticFormatComplex(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNan(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPositiveInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testNegativeInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleNoDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimals(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNegativeBoth(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroReal(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseZeroImaginary(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseDifferentImaginaryChar(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParseNan(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testParsePositiveInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.util.CompositeFormat.parseObject(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testPaseNegativeInfinity(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotNull(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testConstructorSingleFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotSame(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetImaginaryFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryFormatNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetRealFormatNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.getRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNotSame(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormat.setRealFormat(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testGetRealFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterNull(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormat.setImaginaryCharacter(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testSetImaginaryCharacterEmpty(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormat.getInstance(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatNumber(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testFormatObject(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormat.ComplexFormat(0)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormat.parse(2)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(0)" "org.apache.commons.math.complex.ComplexFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.testForgottenImaginaryCharacter(0)"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat" "org.apache.commons.math.util.CompositeFormat"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormat"
reference "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ" "org.apache.commons.math.complex.ComplexFormat"
contain "org.apache.commons.math.complex.ComplexFormatAbstractTest" "org.apache.commons.math.complex.ComplexFormatAbstractTest.complexFormatJ"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest"
call "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.SetVisitor(0)" "org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor.DefaultRealMatrixChangingVisitor(0)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.SetVisitor(0)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.visit(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.SetVisitor(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.SetVisitor.serialVersionUID"
reference "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.value(1)"
call "org.apache.commons.math.analysis.Expm1Function.derivative(0)" "org.apache.commons.math.analysis.Expm1Function.1.{...}"
contain "org.apache.commons.math.analysis.Expm1Function" "org.apache.commons.math.analysis.Expm1Function.derivative(0)"
reference "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionImpl"
reference "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest"
call "org.apache.commons.math.distribution.PascalDistributionTest.PascalDistributionTest(1)" "org.apache.commons.math.distribution.IntegerDistributionAbstractTest.IntegerDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.PascalDistributionTest(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestValues(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestPoints(0)" "org.apache.commons.math.distribution.PascalDistributionTest.makeDensityTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate0(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionImpl.PascalDistributionImpl(2)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setDensityTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyDensities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)" "org.apache.commons.math.distribution.PascalDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.PascalDistributionTest" "org.apache.commons.math.distribution.PascalDistributionTest.testDegenerate1(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.WeightedMeasurement[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.Circle(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.PointModel(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.addPoint(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getM(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getMeasurements(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getMeasurements(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getAllParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiX(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getPartialDiY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getPartialRadiusY(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.PointModel.getCenterDistance(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getRadius(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getX(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$000(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.access$100(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cx"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy" "org.apache.commons.math.estimation.EstimatedParameter"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.cy"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.Circle.points"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.this$0"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.this$0"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "junit.framework.Assert"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest"
call "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.GetVisitor(0)" "org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor.DefaultRealMatrixPreservingVisitor(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.GetVisitor(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.count"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.GetVisitor(0)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.visit(3)" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.count"
call "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.visit(3)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.visit(3)"
reference "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.getCount(0)" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.count"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.getCount(0)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.GetVisitor(1)"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.serialVersionUID"
contain "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor" "org.apache.commons.math.linear.DenseRealMatrixTest.GetVisitor.count"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.this$0"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.1.this$0"
reference "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.AbstractRandomGenerator"
call "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)" "org.apache.commons.math.random.AbstractRandomGenerator.AbstractRandomGenerator(0)"
reference "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.TestRandomGenerator(0)"
call "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)" "org.apache.commons.math.random.TestRandomGenerator.clear(0)"
reference "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.setSeed(1)"
reference "org.apache.commons.math.random.TestRandomGenerator.nextDouble(0)" "org.apache.commons.math.random.TestRandomGenerator.random"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.nextDouble(0)"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.serialVersionUID"
contain "org.apache.commons.math.random.TestRandomGenerator" "org.apache.commons.math.random.TestRandomGenerator.random"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.this$0"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.ClassicalRungeKuttaIntegratorTest.2.this$0"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.Complex"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtils"
reference "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.Complex.Complex(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.ComplexUtilsTest(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.ONE"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.ZERO"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.I"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.Complex.negate(0)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)" "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2Complex(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.I"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.multiply(1)"
call "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)" "org.apache.commons.math.complex.Complex.exp(0)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.altPolar(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)" "org.apache.commons.math.complex.ComplexUtilsTest.fail(1)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexIllegalModulus(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexNaN(0)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.Complex.NaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtils.polar2Complex(2)"
call "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.TestUtils.assertSame(2)"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.testPolar2ComplexInf(0)"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.inf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInf"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.nan"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.pi"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.negInfNegInf"
reference "org.apache.commons.math.complex.ComplexUtilsTest.infNaN" "org.apache.commons.math.complex.Complex"
contain "org.apache.commons.math.complex.ComplexUtilsTest" "org.apache.commons.math.complex.ComplexUtilsTest.infNaN"
reference "org.apache.commons.math.util.MathUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.util.MathUtilsTest" "double[]"
reference "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.random.RandomDataImpl"
reference "org.apache.commons.math.util.MathUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtils"
reference "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.MathUtilsTest(1)"
call "org.apache.commons.math.util.MathUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.util.MathUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.suite(0)"
call "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.test0Choose0(0)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testAddAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(0)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLongFailure(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtils.addAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testAddAndCheckLongFailure(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(4)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficient(0)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficient(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientDouble(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtils.binomialCoefficientLog(2)"
call "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testBinomialCoefficientFail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testCosh(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testCosh(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testCosh(0)"
call "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)" "org.apache.commons.math.util.MathUtils.cosh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testCoshNaN(0)"
call "org.apache.commons.math.util.MathUtilsTest.testEquals(0)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testEquals(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testEquals(0)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(0)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(0)" "org.apache.commons.math.util.MathUtilsTest.assertFalse(1)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testArrayEquals(0)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(4)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testFactorial(0)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorial(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorialDouble(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtils.factorialLog(1)"
call "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testFactorialFail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testGcd(0)" "org.apache.commons.math.util.MathUtils.gcd(2)"
call "org.apache.commons.math.util.MathUtilsTest.testGcd(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testGcd(0)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testHash(0)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayHash(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayHash(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtilsTest.testArrayHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertFalse(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testArrayHash(0)"
call "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)" "org.apache.commons.math.random.RandomDataImpl.RandomDataImpl(0)"
call "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)" "org.apache.commons.math.random.RandomDataImpl.nextUniform(2)"
call "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)" "org.apache.commons.math.random.RandomDataImpl.nextPermutation(2)"
call "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)" "org.apache.commons.math.util.MathUtils.hash(1)"
call "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)" "org.apache.commons.math.util.MathUtilsTest.assertFalse(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testPermutedArrayHash(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorByte(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorDouble(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorInt(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testIndicatorShort(0)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtils.lcm(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLcm(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testLcm(0)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtils.log(2)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testLog(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testLog(0)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testMulAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(0)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLongFailure(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtils.mulAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testMulAndCheckLongFailure(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testNextAfter(0)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtils.nextAfter(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
call "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testNextAfterSpecialCases(0)"
call "org.apache.commons.math.util.MathUtilsTest.testScalb(0)" "org.apache.commons.math.util.MathUtils.scalb(2)"
call "org.apache.commons.math.util.MathUtilsTest.testScalb(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testScalb(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testScalb(0)"
call "org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(0)" "org.apache.commons.math.util.MathUtils.normalizeAngle(2)"
call "org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
call "org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testNormalizeAngle(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.util.MathUtilsTest.fail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testRoundDouble(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtils.round(2)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtils.round(3)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.util.MathUtilsTest.fail(0)"
call "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testRoundFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignByte(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignDouble(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignFloat(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignInt(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)" "org.apache.commons.math.util.MathUtils.indicator(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSignShort(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSinh(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSinh(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSinh(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)" "org.apache.commons.math.util.MathUtils.sinh(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)" "org.apache.commons.math.util.MathUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSinhNaN(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheck(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckErrorMessage(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(0)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.assertEquals(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(0)" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLongFailure(2)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLong(0)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtils.subAndCheck(2)"
call "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLongFailure(2)" "org.apache.commons.math.util.MathUtilsTest.fail(1)"
contain "org.apache.commons.math.util.MathUtilsTest" "org.apache.commons.math.util.MathUtilsTest.testSubAndCheckLongFailure(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.LocalMeasurement(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.this$0"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.LocalMeasurement(4)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(2)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.LocalMeasurement(4)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.x"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.LocalMeasurement(4)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.this$0"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.x"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.theoreticalValue(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.this$0"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.x"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getPartial(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.access$200(3)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.getPartial(1)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.serialVersionUID"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.x"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.this$0" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.QuadraticProblem.LocalMeasurement.this$0"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.ODEIntegrator"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.problem"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.integrator"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxValueError"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxTimeError"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastError"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.expectedStepStart"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.integrator"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.ODEIntegrator.getCurrentStepStart(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.problem"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.ODEIntegrator.getCurrentSignedStepsize(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.expectedStepStart"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxTimeError"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getErrorScale(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastError"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastTime"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxValueError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.handleStep(2)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxValueError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxTimeError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastTime"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.problem" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.problem"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxValueError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.maxTimeError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastError"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.lastTime"
reference "org.apache.commons.math.ode.nonstiff.TestProblemHandler.integrator" "org.apache.commons.math.ode.ODEIntegrator"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.integrator"
contain "org.apache.commons.math.ode.nonstiff.TestProblemHandler" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.expectedStepStart"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareTestTest"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.TestUtils"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.ChiSquareFactoryTest(1)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.ChiSquareTestTest(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.ChiSquareFactoryTest(1)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.ChiSquareTestTest.setUp(0)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.TestUtils.getUnknownDistributionChiSquareTest(0)"
reference "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.testStatistic"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.setUp(0)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.ChiSquareFactoryTest" "org.apache.commons.math.stat.inference.ChiSquareFactoryTest.suite(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "double[]"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "double[][]"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrix"
reference "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.MatrixUtils"
call "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.BigMatrixImplTest(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.setUp(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.suite(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDimensions(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testCopyFunctions(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testConstructors(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrix.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.getColumnDimension(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testAdd(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImpl.add(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testAddFail(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImpl.getNorm(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testNorm(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImpl.scalarMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrix.add(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPlusMinus(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testMultiply2(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImpl.isSingular(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testIsSingular(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImpl.inverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testInverse(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrix.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrix.solve(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.solve(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)" "org.apache.commons.math.linear.BigMatrixImpl.luDecompose(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSolve(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrix.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImpl.getDeterminant(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDeterminant(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrix.getTrace(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testTrace(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrix.scalarAdd(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testScalarAdd(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrix.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testOperate(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.BigMatrix.operate(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testMath209(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrix.inverse(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrix.transpose(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testTranspose(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asDouble(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiplyVector(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrix.preMultiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImpl.preMultiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testPremultiply(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrix.getRowAsDoubleArray(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrix.getColumnAsDoubleArray(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetVectors(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImpl.getLUMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testLUDecomposition(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getSubMatrix(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSubMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getColumnMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetColumnMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getRowMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testGetRowMatrix(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.copy(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.transpose(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.hashCode(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.equals(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertFalse(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
call "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testEqualsAndHashCode(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.toString(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(0)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testToString(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrix.getData(0)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.setSubMatrix(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(2)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.getData(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testSetSubMatrix(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrix.subtract(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrix.getNorm(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.assertTrue(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.fail(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)" "org.apache.commons.math.linear.BigMatrixImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.InvalidMatrixException.InvalidMatrixException(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.isSquare(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.splitLU(3)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImpl.getPermutation(0)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.permuteRows(2)"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrix.multiply(1)"
reference "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
call "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)" "org.apache.commons.math.linear.BigMatrixImplTest.assertClose(4)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.verifyDecomposition(2)"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataString"
reference "org.apache.commons.math.linear.BigMatrixImplTest.id" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.id"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataLU"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlus2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataMinus"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataRow1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataCol3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.preMultTest"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testData2T" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testData2T"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testDataPlusInv"
reference "org.apache.commons.math.linear.BigMatrixImplTest.luData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.luData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.luDataLUDecomposition"
reference "org.apache.commons.math.linear.BigMatrixImplTest.singular" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.singular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.bigSingular"
reference "org.apache.commons.math.linear.BigMatrixImplTest.detData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.detData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.detData2" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.detData2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testVector" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testVector"
reference "org.apache.commons.math.linear.BigMatrixImplTest.testVector2" "double[]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.testVector2"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subTestData" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subTestData"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows02Cols13"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols12"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows03Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows20Cols123"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows31Cols31"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows01Cols23"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows23Cols00"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRows00Cols33"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRow0" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRow0"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subRow3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subRow3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn1"
reference "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.subColumn3"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.entryTolerance"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.normTolerance"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d3" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d3"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d4" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d4"
reference "org.apache.commons.math.linear.BigMatrixImplTest.d5" "double[][]"
contain "org.apache.commons.math.linear.BigMatrixImplTest" "org.apache.commons.math.linear.BigMatrixImplTest.d5"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.FourthMoment"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Mean"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Variance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Skewness"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.moment.Kurtosis"
reference "org.apache.commons.math.stat.descriptive.InteractionTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.InteractionTest(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.FourthMoment(0)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.Mean(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.Variance(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.Skewness(1)"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.Kurtosis(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.FourthMoment.increment(1)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Mean.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.assertEquals(3)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Variance.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Skewness.getResult(0)"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
call "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)" "org.apache.commons.math.stat.descriptive.moment.Kurtosis.getResult(0)"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.testInteraction(0)"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.mean"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.var"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.skew"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.kurt"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.tolerance"
reference "org.apache.commons.math.stat.descriptive.InteractionTest.testArray" "double[]"
contain "org.apache.commons.math.stat.descriptive.InteractionTest" "org.apache.commons.math.stat.descriptive.InteractionTest.testArray"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.BrownDennisFunction(5)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction" "org.apache.commons.math.estimation.MinpackTest.BrownDennisFunction.getResiduals(0)"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.checkDerivativesConsistency(3)"
reference "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.Bar(0)"
contain "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar" "org.apache.commons.math.stat.descriptive.MixedListUnivariateImplTest.Bar.heresBar(0)"
reference "org.apache.commons.math.linear.QRSolverTest" "double[]"
reference "org.apache.commons.math.linear.QRSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRDecompositionImpl"
reference "org.apache.commons.math.linear.QRSolverTest" "double[][]"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.QRSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRDecomposition"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.RealVectorImplTest"
call "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)" "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)" "org.apache.commons.math.linear.QRSolverTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)" "org.apache.commons.math.linear.QRSolverTest.testData3x4"
reference "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)" "org.apache.commons.math.linear.QRSolverTest.testData4x3"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.QRSolverTest(1)"
call "org.apache.commons.math.linear.QRSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.QRSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.suite(0)"
reference "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.assertTrue(1)"
reference "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x3Singular"
call "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.assertFalse(1)"
reference "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x4"
reference "org.apache.commons.math.linear.QRSolverTest.testRank(0)" "org.apache.commons.math.linear.QRSolverTest.testData4x3"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testRank(0)"
reference "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.QRSolverTest.fail(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testSolveDimensionErrors(0)"
reference "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x3Singular"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.QRSolverTest.fail(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testSolveRankErrors(0)"
reference "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.QRDecomposition.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.QRSolverTest.assertEquals(3)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.getNorm(0)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.subtract(1)"
call "org.apache.commons.math.linear.QRSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testSolve(0)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.1.{...}"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.assertEquals(3)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testOverdetermined(0)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.QRDecompositionImpl.QRDecompositionImpl(1)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.QRDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.assertTrue(1)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.RealMatrix.getSubMatrix(4)"
call "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)" "org.apache.commons.math.linear.QRSolverTest.assertEquals(2)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testUnderdetermined(0)"
call "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(2)"
call "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)" "org.apache.commons.math.linear.QRSolverTest.2.{...}"
call "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)" "org.apache.commons.math.linear.RealMatrix.walkInOptimizedOrder(1)"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.createTestMatrix(3)"
reference "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular" "double[][]"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testData3x3NonSingular"
reference "org.apache.commons.math.linear.QRSolverTest.testData3x3Singular" "double[][]"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testData3x3Singular"
reference "org.apache.commons.math.linear.QRSolverTest.testData3x4" "double[][]"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testData3x4"
reference "org.apache.commons.math.linear.QRSolverTest.testData4x3" "double[][]"
contain "org.apache.commons.math.linear.QRSolverTest" "org.apache.commons.math.linear.QRSolverTest.testData4x3"
reference "org.apache.commons.math.linear.RealVectorFormatTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest"
call "org.apache.commons.math.linear.RealVectorFormatTest.RealVectorFormatTest(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)"
contain "org.apache.commons.math.linear.RealVectorFormatTest" "org.apache.commons.math.linear.RealVectorFormatTest.RealVectorFormatTest(0)"
contain "org.apache.commons.math.linear.RealVectorFormatTest" "org.apache.commons.math.linear.RealVectorFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.linear.RealVectorFormatTest" "org.apache.commons.math.linear.RealVectorFormatTest.getLocale(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.Osborne1Function(4)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.m"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.parameters"
call "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.m"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.static {...}" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.Osborne1Function" "org.apache.commons.math.estimation.MinpackTest.Osborne1Function.y"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolator"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.DividedDifferenceInterpolatorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.DividedDifferenceInterpolatorTest(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolator.DividedDifferenceInterpolator(0)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.testParameters(0)"
contain "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest" "org.apache.commons.math.analysis.DividedDifferenceInterpolatorTest.partialerror(2)"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.this$0"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince54IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.this$0"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.this$0"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionImpl"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistribution"
reference "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.WeibullDistributionTest.WeibullDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.WeibullDistributionTest(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.WeibullDistributionImpl.WeibullDistributionImpl(2)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.getShape(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testAlpha(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.getScale(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testBeta(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistribution.setShape(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testSetAlpha(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistribution.setScale(1)"
call "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)" "org.apache.commons.math.distribution.WeibullDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.WeibullDistributionTest" "org.apache.commons.math.distribution.WeibullDistributionTest.testSetBeta(0)"
reference "org.apache.commons.math.stat.StatUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.StatUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtils"
reference "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.mean"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.sum"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.var"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.min"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.max"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
reference "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)" "org.apache.commons.math.stat.StatUtilsTest.nan"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.StatUtilsTest(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.setUp(0)"
call "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.StatUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.suite(0)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.sum"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(4)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.var"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.mean"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.variance(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.min"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtilsTest.max"
call "org.apache.commons.math.stat.StatUtilsTest.testStats(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testStats(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtils.sum(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(4)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)" "org.apache.commons.math.stat.StatUtilsTest.assertTrue(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testArrayIndexConditions(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtils.sumSq(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtils.sumSq(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testSumSq(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtils.product(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtils.product(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testProduct(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testSumLog(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtils.mean(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMean(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMean(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtils.variance(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
call "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)" "org.apache.commons.math.stat.StatUtils.variance(4)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testVariance(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtils.max(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtilsTest.nan"
call "org.apache.commons.math.stat.StatUtilsTest.testMax(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMax(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtils.min(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
reference "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtilsTest.nan"
call "org.apache.commons.math.stat.StatUtilsTest.testMin(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testMin(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtils.percentile(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtils.percentile(4)"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.two"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.one"
reference "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testPercentile(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.meanDifference(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.sumDifference(2)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.sum(1)"
reference "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.mean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.varianceDifference(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtils.variance(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testDifferenceStats(0)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.geometricMean(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtilsTest.fail(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.sumLog(1)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtilsTest.assertEquals(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.sumLog(3)"
call "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)" "org.apache.commons.math.stat.StatUtils.geometricMean(3)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.testGeometricMean(0)"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.one"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.two"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.three"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.mean"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.sumSq"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.sum"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.var"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.min"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.max"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.tolerance"
contain "org.apache.commons.math.stat.StatUtilsTest" "org.apache.commons.math.stat.StatUtilsTest.nan"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.copy(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1" "org.apache.commons.math.ode.nonstiff.DormandPrince853StepInterpolatorTest.1.this$0"
reference "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.value(1)"
call "org.apache.commons.math.analysis.SinFunction.derivative(0)" "org.apache.commons.math.analysis.SinFunction.1.{...}"
contain "org.apache.commons.math.analysis.SinFunction" "org.apache.commons.math.analysis.SinFunction.derivative(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArray"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.stat.StatUtils"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.DoubleArrayAbstractTest(1)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(3)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArray.getElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAdd1000(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testGetValues(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.addElementRolling(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getNumElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(3)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testAddElementRolling(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArray.addElement(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArray.getElements(0)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.stat.StatUtils.min(1)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.util.DoubleArrayAbstractTest.assertEquals(4)"
call "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)" "org.apache.commons.math.stat.StatUtils.max(1)"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.testMinMax(0)"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.da" "org.apache.commons.math.util.DoubleArray"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.da"
reference "org.apache.commons.math.util.DoubleArrayAbstractTest.ra" "org.apache.commons.math.util.DoubleArray"
contain "org.apache.commons.math.util.DoubleArrayAbstractTest" "org.apache.commons.math.util.DoubleArrayAbstractTest.ra"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "double[]"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformer"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "double[][]"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.TriDiagonalTransformerTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.TriDiagonalTransformerTest(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.TriDiagonalTransformerTest(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.TriDiagonalTransformerTest(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNonSquare(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNonSquare(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNonSquare(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.fail(1)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNonSquare(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testAEqualQTQt(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testAEqualQTQt(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testAEqualQTQt(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testAEqualQTQt(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testAEqualQTQt(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkAEqualQTQt(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNoAccessBelowDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNoAccessBelowDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNoAccessBelowDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testNoAccessBelowDiagonal(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "double[].clone(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkNoAccessBelowDiagonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQOrthogonal(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testQTOrthogonal(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.transpose(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.multiply(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkOrthogonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testTTriDiagonal(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkTriDiagonal(1)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues5(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues5(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues5(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues3(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues3(0)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testMatricesValues3(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.TriDiagonalTransformer.TriDiagonalTransformer(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.TriDiagonalTransformer.getQ(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertEquals(3)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.TriDiagonalTransformer.getT(0)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)" "org.apache.commons.math.linear.TriDiagonalTransformerTest.assertTrue(1)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.checkMatricesValues(4)"
call "org.apache.commons.math.linear.TriDiagonalTransformerTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.suite(0)"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5" "double[][]"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare5"
reference "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3" "double[][]"
contain "org.apache.commons.math.linear.TriDiagonalTransformerTest" "org.apache.commons.math.linear.TriDiagonalTransformerTest.testSquare3"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquaredDistribution"
reference "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.ChiSquareDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.ChiSquareDistributionTest(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeCumulativeTestValues(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeInverseCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.makeInverseCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.setUp(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.setUp(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setTolerance(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setUp(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setDistribution(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setTolerance(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getCumulativeTestPoints(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.verifyCumulativeProbabilities(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.testSmallDf(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquaredDistribution.getDegreesOfFreedom(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquaredDistribution.setDegreesOfFreedom(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDfAccessors(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.checkDensity(3)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.testDensity(0)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.checkDensity(3)" "org.apache.commons.math.distribution.ChiSquaredDistributionImpl.ChiSquaredDistributionImpl(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.checkDensity(3)" "org.apache.commons.math.distribution.ChiSquaredDistribution.density(1)"
call "org.apache.commons.math.distribution.ChiSquareDistributionTest.checkDensity(3)" "org.apache.commons.math.distribution.ChiSquareDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.ChiSquareDistributionTest" "org.apache.commons.math.distribution.ChiSquareDistributionTest.checkDensity(3)"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.1.this$0"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformer"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
call "org.apache.commons.math.transform.FastSineTransformerTest.FastSineTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.FastSineTransformerTest(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastSineTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastSineTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformer.FastSineTransformer(0)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastSineTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastSineTransformerTest" "org.apache.commons.math.transform.FastSineTransformerTest.testParameters(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaImpl"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnova"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "junit.framework.TestCase.TestCase(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaImpl.OneWayAnovaImpl(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.emptyArray"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.OneWayAnovaTest(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.setUp(0)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.suite(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaFValue(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.assertEquals(4)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.emptyArray"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.fail(1)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaFValue(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaPValue(1)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.assertEquals(4)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaPValue(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnova.anovaTest(2)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.assertTrue(2)"
call "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)" "org.apache.commons.math.stat.inference.OneWayAnovaTest.assertFalse(2)"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testAnovaTest(0)"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic" "org.apache.commons.math.stat.inference.OneWayAnova"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.testStatistic"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.emptyArray" "double[]"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.emptyArray"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA" "double[]"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classA"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB" "double[]"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classB"
reference "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC" "double[]"
contain "org.apache.commons.math.stat.inference.OneWayAnovaTest" "org.apache.commons.math.stat.inference.OneWayAnovaTest.classC"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.1.{...}" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.this$0"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.{...}"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.computeDerivatives(3)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.getDimension(0)"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.ContinuousOutputModelTest.1.this$0" "org.apache.commons.math.ode.ContinuousOutputModelTest"
contain "org.apache.commons.math.ode.ContinuousOutputModelTest.1" "org.apache.commons.math.ode.ContinuousOutputModelTest.1.this$0"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformer"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "junit.framework.TestCase"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastFourierTransformer"
call "org.apache.commons.math.transform.FastCosineTransformerTest.FastCosineTransformerTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.FastCosineTransformerTest(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.assertEquals(3)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastFourierTransformer.scaleArray(2)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform2(1)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)" "org.apache.commons.math.transform.FastCosineTransformer.inversetransform2(1)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testAdHocData(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.assertEquals(3)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testSinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformer.FastCosineTransformer(0)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformer.transform(4)"
call "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)" "org.apache.commons.math.transform.FastCosineTransformerTest.fail(1)"
contain "org.apache.commons.math.transform.FastCosineTransformerTest" "org.apache.commons.math.transform.FastCosineTransformerTest.testParameters(0)"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolator"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.UnivariateRealInterpolator"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.NevilleInterpolatorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.NevilleInterpolatorTest(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.NevilleInterpolator.NevilleInterpolator(0)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealInterpolator.interpolate(2)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)" "org.apache.commons.math.analysis.NevilleInterpolatorTest.fail(1)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.testParameters(0)"
contain "org.apache.commons.math.analysis.NevilleInterpolatorTest" "org.apache.commons.math.analysis.NevilleInterpolatorTest.partialerror(2)"
reference "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainException"
reference "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.ArgumentOutsideDomainExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.ArgumentOutsideDomainExceptionTest(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.ArgumentOutsideDomainException(3)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getCause(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertNull(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getMessage(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertTrue(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getArgument(0)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertEquals(3)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainException.getMessage(1)"
call "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.ArgumentOutsideDomainExceptionTest" "org.apache.commons.math.ArgumentOutsideDomainExceptionTest.testConstructor(0)"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.this$0"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.MidpointIntegratorTest.2.this$0"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.StepProblem"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.sampling.DummyStepHandler"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.DormandPrince853IntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.DormandPrince853IntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNullIntervalCheck(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testMinStep(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getCalls(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testIncreasingTolerance(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getEventHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.clearEventHandlers(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testEvents(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getCalls(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.VariableHandler.VariableHandler(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testVariableSteps(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.clone(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.sampling.DummyStepHandler.getInstance(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getCalls(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.InterpolatingStepHandler.InterpolatingStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testNoDenseOutput(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.StepProblem.StepProblem(3)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853Integrator.DormandPrince853Integrator(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.testUnstableDerivative(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegrator"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.EulerIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.EulerIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegrator.EulerIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.testStepSize(0)"
call "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest" "org.apache.commons.math.ode.nonstiff.EulerIntegratorTest.suite(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.Max"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.MaxTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.MaxTest(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.max"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.getResult(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.increment(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.testSpecialValues(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Max.Max(0)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.Max.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)" "org.apache.commons.math.stat.descriptive.rank.MaxTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.testNaNs(0)"
reference "org.apache.commons.math.stat.descriptive.rank.MaxTest.stat" "org.apache.commons.math.stat.descriptive.rank.Max"
contain "org.apache.commons.math.stat.descriptive.rank.MaxTest" "org.apache.commons.math.stat.descriptive.rank.MaxTest.stat"
reference "org.apache.commons.math.linear.RealVectorImplTest" "double[]"
reference "org.apache.commons.math.linear.RealVectorImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl"
reference "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.MatrixIndexException"
reference "org.apache.commons.math.linear.RealVectorImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVector"
reference "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealMatrix"
call "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.ma1"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec2"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec3"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec4"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec_null"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.dvec1"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.mat1"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.entryTolerance"
reference "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)" "org.apache.commons.math.linear.RealVectorImplTest.normTolerance"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorImplTest(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.suite(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec4"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.fail(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.dvec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertNotSame(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(2)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testConstructors(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec2"
reference "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec4"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVector.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVector.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.append(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.copy(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.data"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertNotSame(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.toArray(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.get(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.fail(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.getEntry(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.set(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertNotSame(2)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testDataInOut(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapAdd(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.normTolerance"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.copy(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapAddToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapSubtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapSubtractToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapMultiplyToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapDivideToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapPow(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapPowToSelf(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapExp(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapExpToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapExpm1(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapExpm1ToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapLog(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapLogToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapLog10(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapLog10ToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapLog1p(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapLog1pToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapCosh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapCoshToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapSinh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapSinhToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapTanh(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapTanhToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapCos(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapCosToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapSin(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapSinToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapTan(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapTanToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapAcos(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapAcosToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapAsin(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapAsinToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapAtan(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapAtanToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapInv(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapInvToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapAbs(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapAbsToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapSqrt(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapSqrtToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapCbrt(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapCbrtToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapCeil(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapCeilToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapFloor(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapFloorToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapRint(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapRintToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapSignum(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapSignumToSelf(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapUlp(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)" "org.apache.commons.math.linear.RealVector.mapUlpToSelf(0)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testMapFunctions(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec2"
reference "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec_null"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getNorm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(3)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getL1Norm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getLInfNorm(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getL1Distance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getLInfDistance(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.getData(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.normTolerance"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertClose(4)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.add(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVector.getData(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.ebeMultiply(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.ebeDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.dotProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.outerProduct(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.unitVector(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.mapDivide(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImplTest.fail(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.copy(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.unitize(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)" "org.apache.commons.math.linear.RealVectorImpl.projection(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testBasicFunctions(0)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImplTest.vec4"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImpl.toString(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertTrue(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImplTest.fail(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)" "org.apache.commons.math.linear.RealVectorImpl.checkVectorDimensions(1)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testMisc(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImpl.isNaN(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertFalse(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImpl.set(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertTrue(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImpl.isInfinite(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertNotSame(2)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImpl.hashCode(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.testPredicates(0)"
call "org.apache.commons.math.linear.RealVectorImplTest.assertClose(4)" "org.apache.commons.math.linear.RealVectorImplTest.fail(1)"
call "org.apache.commons.math.linear.RealVectorImplTest.assertClose(4)" "org.apache.commons.math.linear.RealVectorImplTest.assertEquals(4)"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.assertClose(4)"
reference "org.apache.commons.math.linear.RealVectorImplTest.ma1" "double[][]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.ma1"
reference "org.apache.commons.math.linear.RealVectorImplTest.vec1" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.vec1"
reference "org.apache.commons.math.linear.RealVectorImplTest.vec2" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.vec2"
reference "org.apache.commons.math.linear.RealVectorImplTest.vec3" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.vec3"
reference "org.apache.commons.math.linear.RealVectorImplTest.vec4" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.vec4"
reference "org.apache.commons.math.linear.RealVectorImplTest.vec_null" "double[]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.vec_null"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.dvec1"
reference "org.apache.commons.math.linear.RealVectorImplTest.mat1" "double[][]"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.mat1"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.entryTolerance"
contain "org.apache.commons.math.linear.RealVectorImplTest" "org.apache.commons.math.linear.RealVectorImplTest.normTolerance"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.buildChebyquadArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.buildChebyquadArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.ChebyquadFunction(6)"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.n"
reference "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction" "org.apache.commons.math.estimation.MinpackTest.ChebyquadFunction.getResiduals(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.ListUnivariateImplTest(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.setUp(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testStats(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testN0andN1Conditions(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSkewness(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getKurtosis(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSkewAndKurtosis(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.addValue(1)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.getGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testProductAndGeometricMean(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImpl.ListUnivariateImpl(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getN(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.assertEquals(4)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSum(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getSumsq(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getVariance(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getStandardDeviation(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMin(0)"
reference "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMax(0)"
call "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.testSerialization(0)"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.one"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.two"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.three"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.mean"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sumSq"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.sum"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.var"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.std"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.n"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.min"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.max"
contain "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest" "org.apache.commons.math.stat.descriptive.ListUnivariateImplTest.tolerance"
reference "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededException"
reference "org.apache.commons.math.MaxIterationsExceededExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.MaxIterationsExceededExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededExceptionTest.MaxIterationsExceededExceptionTest(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getCause(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertTrue(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededExceptionTest.testSimpleConstructor(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.MaxIterationsExceededException(3)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getCause(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertNotNull(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertTrue(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMaxIterations(0)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededException.getMessage(1)"
call "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)" "org.apache.commons.math.MaxIterationsExceededExceptionTest.assertFalse(1)"
contain "org.apache.commons.math.MaxIterationsExceededExceptionTest" "org.apache.commons.math.MaxIterationsExceededExceptionTest.testComplexConstructor(0)"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.deepMean.deepMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setMeanImpl(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testSetterInjection(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getPercentile(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.goodPercentile.goodPercentile(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setPercentileImpl(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.subPercentile.subPercentile(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.badPercentile.badPercentile(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.fail(1)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testPercentileSetter(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testRemoval(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.DescriptiveStatistics(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testRemoval(0)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.testRemoval(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.setWindowSize(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.clear(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.addValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.getMean(0)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.util.MathUtils.equals(2)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.replaceMostRecentValue(1)"
call "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)" "org.apache.commons.math.stat.descriptive.DescriptiveStatistics.removeMostRecentValue(0)"
contain "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.checkremoval(5)"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "double[]"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "double[][]"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.DenseRealMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.BigMatrixImpl"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.BigMatrixImplTest"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.BigMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.MatrixUtilsTest(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.setUp(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.suite(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImplTest.asBigDecimal(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowRealMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.row"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRowBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateRowBigMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnRealMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.DenseRealMatrix.DenseRealMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnRealMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.col"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createColumnBigMatrix(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.BigMatrixImpl.BigMatrixImpl(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.fail(1)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateColumnBigMatrix(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.RealMatrix.getEntry(2)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(3)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityMatrix(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateIdentityMatrix(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getRowDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrix.getEntry(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ONE"
call "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.MatrixUtilsTest.assertEquals(2)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)" "org.apache.commons.math.linear.BigMatrixImpl.ZERO"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createBigIdentityMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtilsTest.checkIdentityBigMatrix(1)"
call "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)" "org.apache.commons.math.linear.MatrixUtils.createRealIdentityMatrix(1)"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testCreateBigIdentityMatrix(0)"
reference "org.apache.commons.math.linear.MatrixUtilsTest.testData" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.testData"
reference "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.nullMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.row" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.row"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigRow"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringRow"
reference "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.rowMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigRowMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringRowMatrix"
reference "org.apache.commons.math.linear.MatrixUtilsTest.col" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.col"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigCol"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringCol"
reference "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray" "double[]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.nullDoubleArray"
reference "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix" "double[][]"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.colMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.bigColMatrix"
contain "org.apache.commons.math.linear.MatrixUtilsTest" "org.apache.commons.math.linear.MatrixUtilsTest.stringColMatrix"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.FixedStepHandler"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.{...}" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.{...}" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.firstCall"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.{...}"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.firstCall"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.checkValue(2)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.handleStep(4)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.serialVersionUID"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.firstCall"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.this$0" "org.apache.commons.math.ode.sampling.StepNormalizerTest"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.1" "org.apache.commons.math.ode.sampling.StepNormalizerTest.1.this$0"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.Rotation"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.Vector3D"
reference "org.apache.commons.math.geometry.RotationTest" "double[]"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.NotARotationMatrixException"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationOrder"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.CardanEulerSingularityException"
reference "org.apache.commons.math.geometry.RotationTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.geometry.RotationTest" "junit.framework.TestCase"
reference "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.util.MathUtils"
call "org.apache.commons.math.geometry.RotationTest.RotationTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.RotationTest(1)"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.IDENTITY"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testIdentity(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testIdentity(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
reference "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)" "org.apache.commons.math.geometry.Rotation.IDENTITY"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testAxisAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Rotation.revert(0)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.RotationTest.checkRotation(5)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.RotationTest.assertEquals(3)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
call "org.apache.commons.math.geometry.RotationTest.testRevert(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testRevert(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.scalarMultiply(1)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.negate(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.Vector3D.ZERO"
call "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testVectorOnePair(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.MINUS_I"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.negate(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.getAxis(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.dotProduct(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.MINUS_K"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.checkRotation(5)"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.crossProduct(2)"
reference "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.Vector3D.ZERO"
call "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testVectorTwoPairs(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.checkRotation(5)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_I"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_J"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.getMatrix(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.assertTrue(1)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.Rotation.getAngle(0)"
call "org.apache.commons.math.geometry.RotationTest.testMatrix(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testMatrix(0)"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.Rotation.getAngles(1)"
call "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationTest.testAngles(0)" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testAngles(0)"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.XYZ"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.XZY"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.YXZ"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.YZX"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.ZXY"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.ZYX"
call "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.Rotation.Rotation(4)"
call "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.Rotation.getAngles(1)"
call "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationTest.fail(1)"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.XYX"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.XZX"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.YXY"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.YZY"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.ZXZ"
reference "org.apache.commons.math.geometry.RotationTest.testSingularities(0)" "org.apache.commons.math.geometry.RotationOrder.ZYZ"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testSingularities(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ0(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ1(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ2(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.getQ3(0)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)" "org.apache.commons.math.geometry.RotationTest.checkRotation(5)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testQuaternion(0)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testCompose(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testCompose(0)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testComposeInverse(0)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Vector3D.Vector3D(3)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.Rotation(2)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.applyTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.applyInverseTo(1)"
call "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
reference "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Rotation.IDENTITY"
reference "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)" "org.apache.commons.math.geometry.Vector3D.PLUS_K"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.testApplyInverseTo(0)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.subtract(1)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.Vector3D.getNorm(0)"
call "org.apache.commons.math.geometry.RotationTest.checkVector(2)" "org.apache.commons.math.geometry.RotationTest.assertTrue(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.checkVector(2)"
call "org.apache.commons.math.geometry.RotationTest.checkAngle(2)" "org.apache.commons.math.util.MathUtils.normalizeAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.checkAngle(2)" "org.apache.commons.math.geometry.RotationTest.assertEquals(3)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.checkAngle(2)"
call "org.apache.commons.math.geometry.RotationTest.checkRotation(5)" "org.apache.commons.math.geometry.Rotation.Rotation(5)"
call "org.apache.commons.math.geometry.RotationTest.checkRotation(5)" "org.apache.commons.math.geometry.Rotation.distance(2)"
call "org.apache.commons.math.geometry.RotationTest.checkRotation(5)" "org.apache.commons.math.geometry.RotationTest.assertEquals(3)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.checkRotation(5)"
call "org.apache.commons.math.geometry.RotationTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.geometry.RotationTest" "org.apache.commons.math.geometry.RotationTest.suite(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.FixedStepHandler"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.{...}" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.this$0"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.{...}" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.val$range"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.{...}"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.this$0"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.setLastSeen(1)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.pb"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.val$range"
call "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)" "org.apache.commons.math.ode.sampling.StepNormalizerTest.checkValue(2)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.handleStep(4)"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.serialVersionUID"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.val$range"
reference "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.this$0" "org.apache.commons.math.ode.sampling.StepNormalizerTest"
contain "org.apache.commons.math.ode.sampling.StepNormalizerTest.2" "org.apache.commons.math.ode.sampling.StepNormalizerTest.2.this$0"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.WeightedMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.WeightedMeasurement.WeightedMeasurement(3)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.setIgnored(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getTheoreticalValue(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getTheoreticalValue(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getPartial(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.factors"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getPartial(1)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getParameters(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.factors" "double[]"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.factors"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters" "org.apache.commons.math.estimation.EstimatedParameter[]"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.parameters"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.serialVersionUID"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.DummyStepInterpolatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.DummyStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testNoReset(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.getInterpolatedState(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testFixedState(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.getInterpolatedState(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.BadStepInterpolator.BadStepInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)" "org.apache.commons.math.ode.sampling.AbstractStepInterpolator.shift(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.fail(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testImpossibleSerialization(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.ErrorGeneratingInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.storeTime(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.shift(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.fail(1)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.testSerializationError(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "double[]"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueDecompositionImpl"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "double[][]"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.RealVectorImplTest"
reference "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.RealVector"
call "org.apache.commons.math.linear.SingularValueSolverTest.SingularValueSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.SingularValueSolverTest.SingularValueSolverTest(1)" "org.apache.commons.math.linear.SingularValueSolverTest.testSquare"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.SingularValueSolverTest(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.suite(0)"
reference "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.SingularValueSolverTest.testSquare"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.SingularValueSolverTest.fail(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.testSolveDimensionErrors(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.SingularValueSolverTest.fail(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.testSolveSingularityErrors(0)"
reference "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.SingularValueSolverTest.testSquare"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.SingularValueSolverTest.assertEquals(3)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.getNorm(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.subtract(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.testSolve(0)"
reference "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueSolverTest.testSquare"
call "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.SingularValueDecompositionImpl(1)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueDecompositionImpl.getConditionNumber(0)"
call "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)" "org.apache.commons.math.linear.SingularValueSolverTest.assertEquals(3)"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.testConditionNumber(0)"
reference "org.apache.commons.math.linear.SingularValueSolverTest.testSquare" "double[][]"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.testSquare"
contain "org.apache.commons.math.linear.SingularValueSolverTest" "org.apache.commons.math.linear.SingularValueSolverTest.normTolerance"
reference "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.{...}" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
call "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.cost(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.2.this$0" "org.apache.commons.math.optimization.NelderMeadTest"
contain "org.apache.commons.math.optimization.NelderMeadTest.2" "org.apache.commons.math.optimization.NelderMeadTest.2.this$0"
reference "org.apache.commons.math.optimization.NelderMeadTest.3" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.NelderMeadTest.3" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.3.{...}" "org.apache.commons.math.optimization.NelderMeadTest.3.this$0"
contain "org.apache.commons.math.optimization.NelderMeadTest.3" "org.apache.commons.math.optimization.NelderMeadTest.3.{...}"
reference "org.apache.commons.math.optimization.NelderMeadTest.3.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.3.this$0"
call "org.apache.commons.math.optimization.NelderMeadTest.3.cost(1)" "org.apache.commons.math.optimization.NelderMeadTest.access$004(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.3" "org.apache.commons.math.optimization.NelderMeadTest.3.cost(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.3.this$0" "org.apache.commons.math.optimization.NelderMeadTest"
contain "org.apache.commons.math.optimization.NelderMeadTest.3" "org.apache.commons.math.optimization.NelderMeadTest.3.this$0"
reference "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.CostException"
reference "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.CostFunction"
reference "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest"
reference "org.apache.commons.math.optimization.NelderMeadTest.1.{...}" "org.apache.commons.math.optimization.NelderMeadTest.1.this$0"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.{...}"
call "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)" "org.apache.commons.math.optimization.CostException.CostException(2)"
call "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)" "org.apache.commons.math.optimization.CostException.CostException(1)"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.cost(1)"
reference "org.apache.commons.math.optimization.NelderMeadTest.1.this$0" "org.apache.commons.math.optimization.NelderMeadTest"
contain "org.apache.commons.math.optimization.NelderMeadTest.1" "org.apache.commons.math.optimization.NelderMeadTest.1.this$0"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolator"
reference "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.ErrorGeneratingInterpolator(0)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(0)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.ErrorGeneratingInterpolator(0)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.ErrorGeneratingInterpolator(2)" "org.apache.commons.math.ode.sampling.DummyStepInterpolator.DummyStepInterpolator(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.ErrorGeneratingInterpolator(2)"
call "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.computeInterpolatedState(2)" "org.apache.commons.math.ode.DerivativeException.DerivativeException(1)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.computeInterpolatedState(2)"
contain "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator" "org.apache.commons.math.ode.sampling.DummyStepInterpolatorTest.ErrorGeneratingInterpolator.serialVersionUID"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionImpl"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistribution"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ContinuousDistribution"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.ExponentialDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.ExponentialDistributionTest(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.verifyCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ContinuousDistribution.cumulativeProbability(2)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testCumulativeProbability2(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.ExponentialDistributionImpl.ExponentialDistributionImpl(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.ExponentialDistribution.density(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(2)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testDensity(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testDensity(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistribution.getMean(0)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.assertEquals(3)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistribution.setMean(1)"
call "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)" "org.apache.commons.math.distribution.ExponentialDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.ExponentialDistributionTest" "org.apache.commons.math.distribution.ExponentialDistributionTest.testMeanAccessors(0)"
reference "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics"
reference "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.SynchronizedDescriptiveStatisticsTest(1)" "org.apache.commons.math.stat.descriptive.DescriptiveStatisticsTest.DescriptiveStatisticsTest(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.SynchronizedDescriptiveStatisticsTest(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.createDescriptiveStatistics(0)" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatistics.SynchronizedDescriptiveStatistics(0)"
contain "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest" "org.apache.commons.math.stat.descriptive.SynchronizedDescriptiveStatisticsTest.createDescriptiveStatistics(0)"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolver"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.Expm1Function"
reference "org.apache.commons.math.analysis.MullerSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.UnivariateRealSolver"
call "org.apache.commons.math.analysis.MullerSolverTest.MullerSolverTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.MullerSolverTest(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(1)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(2)"
call "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testDeprecated2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testSinFunction2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testQuinticFunction2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.Expm1Function.Expm1Function(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.getAbsoluteAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolver.solve2(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)" "org.apache.commons.math.analysis.MullerSolverTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testExpm1Function2(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.MullerSolver.MullerSolver(0)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealSolver.solve(3)"
call "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)" "org.apache.commons.math.analysis.MullerSolverTest.fail(1)"
contain "org.apache.commons.math.analysis.MullerSolverTest" "org.apache.commons.math.analysis.MullerSolverTest.testParameters(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.events.EventHandler"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.Bounce(0)" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.Bounce(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.g(2)" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.g(2)"
reference "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.eventOccurred(2)" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.sign"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.eventOccurred(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.resetState(2)"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce" "org.apache.commons.math.ode.nonstiff.TestProblem4.Bounce.sign"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.SimpleEstimationProblem"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.SimpleEstimationProblem.SimpleEstimationProblem(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.addMeasurement(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.getParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.addParameter(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "double[]"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.UnivariateStatisticAbstractTest.UnivariateStatisticAbstractTest(1)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getN(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(2)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testIncrementation(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.TestUtils.checkSerializedEquality(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testSerialization(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(2)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testEqualsAndHashCode(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testMomentSmallSamples(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.getResult(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.evaluate(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getTolerance(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertEquals(3)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.clear(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.increment(1)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testConsistency(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testArray"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.incrementAll(3)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatistic.copy(0)"
call "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.assertTrue(1)"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.testCopyConsistency(0)"
reference "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples" "double[][]"
contain "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.smallSamples"
reference "org.apache.commons.math.geometry.FrenchVector3DFormatTest" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest"
call "org.apache.commons.math.geometry.FrenchVector3DFormatTest.FrenchVector3DFormatTest(0)" "org.apache.commons.math.geometry.Vector3DFormatAbstractTest.Vector3DFormatAbstractTest(0)"
contain "org.apache.commons.math.geometry.FrenchVector3DFormatTest" "org.apache.commons.math.geometry.FrenchVector3DFormatTest.FrenchVector3DFormatTest(0)"
contain "org.apache.commons.math.geometry.FrenchVector3DFormatTest" "org.apache.commons.math.geometry.FrenchVector3DFormatTest.getDecimalCharacter(0)"
contain "org.apache.commons.math.geometry.FrenchVector3DFormatTest" "org.apache.commons.math.geometry.FrenchVector3DFormatTest.getLocale(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.buildArray(2)"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.BardFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.m"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.m"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.getResiduals(0)"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.static {...}" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.static {...}"
reference "org.apache.commons.math.estimation.MinpackTest.BardFunction.y" "double[]"
contain "org.apache.commons.math.estimation.MinpackTest.BardFunction" "org.apache.commons.math.estimation.MinpackTest.BardFunction.y"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegrator"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.SimpsonIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.SimpsonIntegratorTest(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SimpsonIntegrator.SimpsonIntegrator(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SimpsonIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.SimpsonIntegratorTest" "org.apache.commons.math.analysis.SimpsonIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.SinFunction"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegrator"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.QuinticFunction"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.UnivariateRealIntegrator"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.TrapezoidIntegratorTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.TrapezoidIntegratorTest(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testSinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.getRelativeAccuracy(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testQuinticFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.SinFunction.SinFunction(0)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.TrapezoidIntegrator.TrapezoidIntegrator(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.integrate(2)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.fail(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMinimalIterationCount(1)"
call "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)" "org.apache.commons.math.analysis.UnivariateRealIntegrator.setMaximalIterationCount(1)"
contain "org.apache.commons.math.analysis.TrapezoidIntegratorTest" "org.apache.commons.math.analysis.TrapezoidIntegratorTest.testParameters(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblem2"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblem4"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblem5"
contain "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.TestProblemFactory(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.pool"
contain "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblem2.TestProblem2(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblem4.TestProblem4(0)"
call "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.pool"
contain "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.static {...}"
reference "org.apache.commons.math.ode.nonstiff.TestProblemFactory.pool" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract[]"
contain "org.apache.commons.math.ode.nonstiff.TestProblemFactory" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.pool"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.reset(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.pb"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.AdamsMoultonIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.AdamsMoultonIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getPredictorCoeffs(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.AdamsBashforthIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsBashforthIntegrator.getCoeffs(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testPredictorCoefficients(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.getCorrectorCoeffs(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testCorrectorCoefficients(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegrator.AdamsMoultonIntegrator(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest" "org.apache.commons.math.ode.nonstiff.AdamsMoultonIntegratorTest.suite(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "double[]"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegression"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest" "junit.framework.TestCase"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeSingle"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.SimpleRegressionTest(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.setUp(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.suite(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNorris(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testCorr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getIntercept(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getMeanSquareError(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getR(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRegressionSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getTotalSumSquares(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.predict(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testNaNs(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.clear(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getRSquare(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testClear(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.fail(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testInference(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfect(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(3)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlope(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testPerfectNegative(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRandom(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSumSquaredErrors(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertTrue(1)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testSSENonNegative(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveXY(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeSingle"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveSingle(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(4)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getInterceptStdErr(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSignificance(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getSlopeConfidenceInterval(0)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiple(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromEmpty(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(2)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveObsFromSingle(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultipleToEmpty(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.SimpleRegression(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.addData(2)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.removeData(1)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegression.getN(0)"
call "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)" "org.apache.commons.math.stat.regression.SimpleRegressionTest.assertEquals(2)"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.testRemoveMultiplePastEmpty(0)"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.data" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.data"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.corrData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeSingle" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeSingle"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeMultiple"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeX"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.removeY"
reference "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2" "double[][]"
contain "org.apache.commons.math.stat.regression.SimpleRegressionTest" "org.apache.commons.math.stat.regression.SimpleRegressionTest.infData2"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "double[]"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "double[][]"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.GLSMultipleLinearRegressionTest(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.MultipleLinearRegressionAbstractTest(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.GLSMultipleLinearRegressionTest(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.x"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.omega"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.setUp(0)" "org.apache.commons.math.stat.regression.MultipleLinearRegressionAbstractTest.setUp(0)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.setUp(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddXSampleData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddXSampleData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddXSampleData(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullYSampleData(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddSampleDataWithSizeMismatch(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullCovarianceData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullCovarianceData(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddNullCovarianceData(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataWithSampleSizeMismatch(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataWithSampleSizeMismatch(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataWithSampleSizeMismatch(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataThatIsNotSquare(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataThatIsNotSquare(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.cannotAddCovarianceDataThatIsNotSquare(0)"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.GLSMultipleLinearRegression(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.x"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.omega"
call "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegression.newSampleData(3)"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.createRegression(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.getNumberOfRegressors(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.x"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.getNumberOfRegressors(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.getSampleSize(0)" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.y"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.getSampleSize(0)"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.y" "double[]"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.y"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.x" "double[][]"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.x"
reference "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.omega" "double[][]"
contain "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest" "org.apache.commons.math.stat.regression.GLSMultipleLinearRegressionTest.omega"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem1"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.IntegratorException"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemHandler"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem5"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "junit.framework.TestCase"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.TestProblemFactory"
reference "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.FirstOrderIntegrator"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.ThreeEighthesIntegratorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.ThreeEighthesIntegratorTest(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.fail(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDimensionCheck(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemFactory.getProblems(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.clone(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getEventsHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addEventHandler(4)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemAbstract.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testDecreasingSteps(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testSmallStep(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.TestProblem1(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblem1.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBigStep(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.TestProblem5(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.TestProblemHandler(2)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblem5.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getLastError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalValueError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.TestProblemHandler.getMaximalTimeError(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(3)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.getName(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.assertEquals(2)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testBackward(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.KeplerHandler.KeplerHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testKepler(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegrator.ThreeEighthesIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.2.{...}"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)" "org.apache.commons.math.ode.FirstOrderIntegrator.integrate(5)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.testStepSize(0)"
call "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest" "org.apache.commons.math.ode.nonstiff.ThreeEighthesIntegratorTest.suite(0)"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GillIntegrator"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.ContinuousOutputModel"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.IntegratorException"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.GillStepInterpolatorTest(1)" "org.apache.commons.math.ode.nonstiff.StepInterpolatorAbstractTest.StepInterpolatorAbstractTest(1)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.GillStepInterpolatorTest(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.checkDerivativesConsistency(3)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testDerivativesConsistency(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.TestProblem3(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getFinalTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.GillIntegrator(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.ContinuousOutputModel(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.addStepHandler(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getInitialState(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.getDimension(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.integrate(5)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GillIntegrator.getStepHandlers(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.assertTrue(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.ContinuousOutputModel.getInterpolatedState(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.testSerialization(0)"
call "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest" "org.apache.commons.math.ode.nonstiff.GillStepInterpolatorTest.suite(0)"
reference "org.apache.commons.math.linear.LUSolverTest" "double[]"
reference "org.apache.commons.math.linear.LUSolverTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUDecompositionImpl"
reference "org.apache.commons.math.linear.LUSolverTest" "double[][]"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.InvalidMatrixException"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.LUSolverTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.MatrixUtils"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.DecompositionSolver"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.RealMatrix"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.RealVectorImplTest"
reference "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.RealVector"
call "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)" "org.apache.commons.math.linear.LUSolverTest.testData"
reference "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)" "org.apache.commons.math.linear.LUSolverTest.luData"
reference "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)" "org.apache.commons.math.linear.LUSolverTest.singular"
reference "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)" "org.apache.commons.math.linear.LUSolverTest.bigSingular"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.LUSolverTest(1)"
call "org.apache.commons.math.linear.LUSolverTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.linear.LUSolverTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.suite(0)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(2)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.LUSolverTest.assertFalse(1)"
call "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)" "org.apache.commons.math.linear.LUSolverTest.assertTrue(1)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testThreshold(0)"
reference "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUSolverTest.testData"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.DecompositionSolver.isNonSingular(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUSolverTest.assertTrue(1)"
reference "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUSolverTest.singular"
call "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUSolverTest.assertFalse(1)"
reference "org.apache.commons.math.linear.LUSolverTest.testSingular(0)" "org.apache.commons.math.linear.LUSolverTest.bigSingular"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testSingular(0)"
reference "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.LUSolverTest.testData"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.LUSolverTest.fail(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testSolveDimensionErrors(0)"
reference "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.LUSolverTest.singular"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.LUSolverTest.fail(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testSolveSingularityErrors(0)"
reference "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.LUSolverTest.testData"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.LUDecompositionImpl.getSolver(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.subtract(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getNorm(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.LUSolverTest.assertEquals(3)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnDimension(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumn(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealMatrix.getColumnVector(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImpl.subtract(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.getNorm(0)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.DecompositionSolver.solve(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVector.subtract(1)"
call "org.apache.commons.math.linear.LUSolverTest.testSolve(0)" "org.apache.commons.math.linear.RealVectorImplTest.RealVectorTestImpl.RealVectorTestImpl(1)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testSolve(0)"
reference "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.testData"
call "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.MatrixUtils.createRealMatrix(1)"
call "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.getDeterminant(1)"
call "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.assertEquals(3)"
reference "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.luData"
reference "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.singular"
reference "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)" "org.apache.commons.math.linear.LUSolverTest.bigSingular"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testDeterminant(0)"
call "org.apache.commons.math.linear.LUSolverTest.getDeterminant(1)" "org.apache.commons.math.linear.LUDecompositionImpl.LUDecompositionImpl(1)"
call "org.apache.commons.math.linear.LUSolverTest.getDeterminant(1)" "org.apache.commons.math.linear.LUDecompositionImpl.getDeterminant(0)"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.getDeterminant(1)"
reference "org.apache.commons.math.linear.LUSolverTest.testData" "double[][]"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.testData"
reference "org.apache.commons.math.linear.LUSolverTest.luData" "double[][]"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.luData"
reference "org.apache.commons.math.linear.LUSolverTest.singular" "double[][]"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.singular"
reference "org.apache.commons.math.linear.LUSolverTest.bigSingular" "double[][]"
contain "org.apache.commons.math.linear.LUSolverTest" "org.apache.commons.math.linear.LUSolverTest.bigSingular"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimatedParameter[]"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.EstimationProblem"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.LinearProblem(1)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getMeasurements(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getMeasurements(0)"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getUnboundParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
call "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement.getParameters(0)"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.getAllParameters(0)"
reference "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearMeasurement[]"
contain "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem" "org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest.LinearProblem.measurements"
reference "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationException"
reference "org.apache.commons.math.MathConfigurationExceptionTest" "junit.framework.TestCase"
call "org.apache.commons.math.MathConfigurationExceptionTest.MathConfigurationExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.MathConfigurationExceptionTest(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructor(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getPattern(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(3)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getCause(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getPattern(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getArguments(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getMessage(0)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathConfigurationException.getMessage(1)"
contain "org.apache.commons.math.MathConfigurationExceptionTest" "org.apache.commons.math.MathConfigurationExceptionTest.testConstructorPatternArgumentsCause(0)"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimator"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.EstimationException"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "double[]"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "junit.framework.TestCase"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.GaussNewtonEstimatorTest(1)" "junit.framework.TestCase.TestCase(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.GaussNewtonEstimatorTest(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTrivial(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testQRColumnsPermutation(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNoDependency(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testOneSet(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testTwoSets(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testNonInversible(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testIllConditioned(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersSimple(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMoreEstimatedParametersUnsorted(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.getAllParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testRedundantEquations(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertTrue(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testInconsistentEquations(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.EstimatedParameter.EstimatedParameter(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearMeasurement.LinearMeasurement(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.LinearProblem(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertTrue(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getCovariances(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.LinearProblem.getUnboundParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.EstimatedParameter.getName(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.guessParametersErrors(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testBoundParameters(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testMaxIterations(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.getRMS(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getM(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.assertEquals(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getRadius(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getX(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.getY(0)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFitting(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.Circle(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.Circle.addPoint(2)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.GaussNewtonEstimator(3)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.GaussNewtonEstimator.estimate(1)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.fail(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.testCircleFittingBadInit(0)"
call "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
contain "org.apache.commons.math.estimation.GaussNewtonEstimatorTest" "org.apache.commons.math.estimation.GaussNewtonEstimatorTest.suite(0)"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathConfigurationException"
reference "org.apache.commons.math.MathExceptionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.MathExceptionTest.MathExceptionTest(0)" "junit.framework.TestCase.TestCase(0)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.MathExceptionTest(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.MathException(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathException.getMessage(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructor(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructor(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.MathException(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertNull(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorPatternArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathException.MathException(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getCause(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getPattern(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getArguments(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getMessage(0)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathExceptionTest.assertFalse(1)"
call "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)" "org.apache.commons.math.MathException.getMessage(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testConstructorPatternArgumentsCause(0)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathExceptionTest.assertTrue(1)"
call "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testPrintStackTrace(0)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathConfigurationException.MathConfigurationException(2)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathException.MathException(3)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.TestUtils.serializeAndRecover(1)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathException.printStackTrace(1)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.assertEquals(2)"
call "org.apache.commons.math.MathExceptionTest.testSerialization(0)" "org.apache.commons.math.MathExceptionTest.assertTrue(1)"
contain "org.apache.commons.math.MathExceptionTest" "org.apache.commons.math.MathExceptionTest.testSerialization(0)"
reference "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.UnivariateRealFunction"
reference "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.FunctionEvaluationException"
reference "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)" "org.apache.commons.math.analysis.MonitoredFunction.f"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.MonitoredFunction(1)"
reference "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.setCallsCount(1)"
reference "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.getCallsCount(0)"
reference "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.MonitoredFunction.f"
call "org.apache.commons.math.analysis.MonitoredFunction.value(1)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.value(1)"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.callsCount"
reference "org.apache.commons.math.analysis.MonitoredFunction.f" "org.apache.commons.math.analysis.UnivariateRealFunction"
contain "org.apache.commons.math.analysis.MonitoredFunction" "org.apache.commons.math.analysis.MonitoredFunction.f"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionImpl"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistribution"
reference "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest"
call "org.apache.commons.math.distribution.CauchyDistributionTest.CauchyDistributionTest(1)" "org.apache.commons.math.distribution.ContinuousDistributionAbstractTest.ContinuousDistributionAbstractTest(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.CauchyDistributionTest(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.makeDistribution(0)" "org.apache.commons.math.distribution.CauchyDistributionImpl.CauchyDistributionImpl(2)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeDistribution(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeCumulativeTestPoints(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.makeCumulativeTestValues(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.setInverseCumulativeTestPoints(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.setInverseCumulativeTestValues(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.verifyInverseCumulativeProbabilities(0)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testInverseCumulativeProbabilityExtremes(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistribution.setMedian(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistribution.getMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testMedian(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.getScale(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.assertEquals(3)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testScale(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.getDistribution(0)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistribution.setScale(1)"
call "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)" "org.apache.commons.math.distribution.CauchyDistributionTest.fail(1)"
contain "org.apache.commons.math.distribution.CauchyDistributionTest" "org.apache.commons.math.distribution.CauchyDistributionTest.testSetScale(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunction"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "junit.framework.TestCase"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.MathException"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.UnivariateRealFunction"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.PolynomialFunctionTest(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testConstants(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.polynomialDerivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testLinear(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuadratic(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunction.degree(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(2)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testQuintic(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.PolynomialFunction.PolynomialFunction(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.PolynomialFunction.derivative(0)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.UnivariateRealFunction.value(1)"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.PolynomialFunction.value(1)"
reference "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
call "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)" "org.apache.commons.math.analysis.PolynomialFunctionTest.assertEquals(3)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.testfirstDerivativeComparison(0)"
contain "org.apache.commons.math.analysis.PolynomialFunctionTest" "org.apache.commons.math.analysis.PolynomialFunctionTest.tolerance"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.SecondOrderDifferentialEquations"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.Equations(2)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.getDimension(0)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.getDimension(0)"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
reference "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.computeSecondDerivatives(4)"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.n"
contain "org.apache.commons.math.ode.FirstOrderConverterTest.Equations" "org.apache.commons.math.ode.FirstOrderConverterTest.Equations.omega2"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "double[]"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.EstimatedParameter"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)" "org.apache.commons.math.estimation.MinpackTest.MinpackFunction.MinpackFunction(5)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.FreudensteinRothFunction(4)"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getJacobian(0)"
reference "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.parameters"
call "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)" "org.apache.commons.math.estimation.EstimatedParameter.getEstimate(0)"
contain "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction" "org.apache.commons.math.estimation.MinpackTest.FreudensteinRothFunction.getResiduals(0)"
reference "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction"
reference "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.FunctionEvaluationException"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.QuinticFunction(0)"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.value(1)"
call "org.apache.commons.math.analysis.QuinticFunction.derivative(0)" "org.apache.commons.math.analysis.QuinticFunction.1.{...}"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.derivative(0)"
contain "org.apache.commons.math.analysis.QuinticFunction" "org.apache.commons.math.analysis.QuinticFunction.serialVersionUID"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.SumLogTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.SumLogTest(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.suite(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.sumLog"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.expectedValue(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.SumOfLogs(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.getResult(0)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertTrue(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.increment(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertFalse(1)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.assertEquals(3)"
call "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs.clear(0)"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.testSpecialValues(0)"
reference "org.apache.commons.math.stat.descriptive.summary.SumLogTest.stat" "org.apache.commons.math.stat.descriptive.summary.SumOfLogs"
contain "org.apache.commons.math.stat.descriptive.summary.SumLogTest" "org.apache.commons.math.stat.descriptive.summary.SumLogTest.stat"
reference "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.Frequency"
reference "org.apache.commons.math.stat.FrequencyTest" "junit.framework.TestSuite"
reference "org.apache.commons.math.stat.FrequencyTest" "junit.framework.TestCase"
reference "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.TestUtils"
call "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "junit.framework.TestCase.TestCase(1)"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.oneL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.threeL"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.oneI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.twoI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.threeI"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
reference "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)" "org.apache.commons.math.stat.FrequencyTest.f"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.FrequencyTest(1)"
call "org.apache.commons.math.stat.FrequencyTest.setUp(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
reference "org.apache.commons.math.stat.FrequencyTest.setUp(0)" "org.apache.commons.math.stat.FrequencyTest.f"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.setUp(0)"
call "org.apache.commons.math.stat.FrequencyTest.suite(0)" "junit.framework.TestSuite.TestSuite(1)"
call "org.apache.commons.math.stat.FrequencyTest.suite(0)" "junit.framework.TestSuite.setName(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.suite(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.clear(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.Frequency(0)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.Frequency(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(2)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.TestUtils.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testCounts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testCounts(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.f"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.twoI"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.threeL"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.threeI"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testPcts(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testPcts(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.fail(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testAdd(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testAdd(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getSumFreq(0)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumFreq(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.FrequencyTest.assertTrue(2)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testEmptyTable(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.f"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.oneL"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.twoL"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.oneI"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.twoI"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.Frequency.toString(0)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.assertNotNull(1)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.assertNull(1)"
call "org.apache.commons.math.stat.FrequencyTest.testToString(0)" "org.apache.commons.math.stat.FrequencyTest.fail(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testToString(0)"
reference "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.f"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.addValue(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(3)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCount(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
reference "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.tolerance"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertEquals(4)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.getCumPct(1)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.Frequency.valuesIterator(0)"
call "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)" "org.apache.commons.math.stat.FrequencyTest.assertTrue(1)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.testIntegerValues(0)"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.oneL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.twoL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.threeL"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.oneI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.twoI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.threeI"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.tolerance"
reference "org.apache.commons.math.stat.FrequencyTest.f" "org.apache.commons.math.stat.Frequency"
contain "org.apache.commons.math.stat.FrequencyTest" "org.apache.commons.math.stat.FrequencyTest.f"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest"
call "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.SecondMomentTest(1)" "org.apache.commons.math.stat.descriptive.StorelessUnivariateStatisticAbstractTest.StorelessUnivariateStatisticAbstractTest(1)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.SecondMomentTest(1)"
call "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.getUnivariateStatistic(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMoment.SecondMoment(0)"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.getUnivariateStatistic(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.expectedValue(0)" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.secondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.expectedValue(0)"
reference "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.stat" "org.apache.commons.math.stat.descriptive.moment.SecondMoment"
contain "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest" "org.apache.commons.math.stat.descriptive.moment.SecondMomentTest.stat"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.{...}" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.this$0"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.{...}"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.handleStep(2)" "junit.framework.Assert.assertEquals(3)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.requiresDenseOutput(0)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.this$0" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.1.this$0"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormat"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorImpl"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "junit.framework.TestCase"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.util.CompositeFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)" "junit.framework.TestCase.TestCase(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.RealVectorFormatAbstractTest(0)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getLocale(0)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)" "org.apache.commons.math.linear.RealVectorFormat.getInstance(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(4)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.setUp(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleNoDecimals(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimals(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeX(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeY(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNegativeZ(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNonDefaultSetting(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getLocale(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorFormat.formatRealVector(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testStaticFormatRealVectorImpl(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNan(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNan(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNan(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNan(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testNan(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testPositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testPositiveInfinity(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.tesNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.tesNegativeInfinity(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleNoDecimals(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseIgnoredWhitespace(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimals(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseSimpleWithDecimalsTrunc(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeX(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeY(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeZ(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeAll(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseZeroX(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.getDecimalCharacter(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNonDefaultSetting(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNan(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParsePositiveInfinity(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorImpl.RealVectorImpl(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNegativeInfinity(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNoComponents(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNoComponents(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNoComponents(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(1)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseNoComponents(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseManyComponents(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseManyComponents(0)" "org.apache.commons.math.linear.RealVectorFormat.parseObject(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseManyComponents(0)" "org.apache.commons.math.linear.RealVectorImpl.getDimension(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseManyComponents(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testParseManyComponents(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertNotNull(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.linear.RealVectorFormat.getFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testConstructorSingleFormat(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testConstructorSingleFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.util.CompositeFormat.format(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testFormatObject(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.fail(0)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testFormatObject(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenPrefix(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenPrefix(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSeparator(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSeparator(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.linear.RealVectorFormat.RealVectorFormat(0)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.linear.RealVectorFormat.parse(2)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertNull(1)"
call "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSuffix(0)" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.assertEquals(2)"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.testForgottenSuffix(0)"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat" "org.apache.commons.math.linear.RealVectorFormat"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormat"
reference "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare" "org.apache.commons.math.linear.RealVectorFormat"
contain "org.apache.commons.math.linear.RealVectorFormatAbstractTest" "org.apache.commons.math.linear.RealVectorFormatAbstractTest.realVectorFormatSquare"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepHandler"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.DerivativeException"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.sampling.StepInterpolator"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.TestProblem3"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "junit.framework.Assert"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.reset(0)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.KeplerHandler(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.requiresDenseOutput(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.reset(0)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.maxError"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.reset(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getPreviousTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getCurrentTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.setInterpolatedTime(1)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedState(0)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.pb"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.sampling.StepInterpolator.getInterpolatedTime(0)"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.TestProblem3.computeTheoreticalState(1)"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.maxError"
call "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)" "junit.framework.Assert.assertTrue(1)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.handleStep(2)"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.serialVersionUID"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.nbSteps"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.maxError"
reference "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.pb" "org.apache.commons.math.ode.nonstiff.TestProblem3"
contain "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler" "org.apache.commons.math.ode.nonstiff.DormandPrince853IntegratorTest.KeplerHandler.pb"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.FirstOrderDifferentialEquations"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.{...}" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.this$0"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.{...}"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.computeDerivatives(3)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.getDimension(0)"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.serialVersionUID"
reference "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.this$0" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest"
contain "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2" "org.apache.commons.math.ode.nonstiff.GillIntegratorTest.2.this$0"
